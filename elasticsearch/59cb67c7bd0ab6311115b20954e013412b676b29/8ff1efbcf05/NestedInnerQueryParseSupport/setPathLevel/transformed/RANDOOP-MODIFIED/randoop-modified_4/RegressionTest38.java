import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest38 {

    public static boolean debug = false;

    @Test
    public void test19001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19001");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Query query5 = null;
        nestedInnerQueryParseSupport1.innerFilter = query5;
        org.apache.lucene.search.Filter filter7 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.filterParsed;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter11 = nestedInnerQueryParseSupport1.getparentFilter();
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.apache.lucene.search.Query query14 = nestedInnerQueryParseSupport1.innerFilter;
        java.lang.String str15 = nestedInnerQueryParseSupport1.path;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(filter7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter11);
        org.junit.Assert.assertNull(query14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test19002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19002");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.apache.lucene.search.Query query8 = nestedInnerQueryParseSupport1.getInnerFilter();
        java.lang.String str9 = nestedInnerQueryParseSupport1.getPath();
        org.apache.lucene.search.Filter filter10 = null;
        nestedInnerQueryParseSupport1.childFilter = filter10;
        org.apache.lucene.search.Query query12 = nestedInnerQueryParseSupport1.innerFilter;
        org.apache.lucene.search.Filter filter13 = null;
        nestedInnerQueryParseSupport1.childFilter = filter13;
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = null;
        nestedInnerQueryParseSupport1.source = bytesReference15;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.apache.lucene.search.Filter filter19 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter19);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(query8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(query12);
    }

    @Test
    public void test19003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19003");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.apache.lucene.search.Query query5 = nestedInnerQueryParseSupport1.innerFilter;
        org.apache.lucene.search.Query query6 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.index.query.QueryParseContext queryParseContext7 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        nestedInnerQueryParseSupport1.path = "nested";
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(query5);
        org.junit.Assert.assertNull(query6);
        org.junit.Assert.assertNull(queryParseContext7);
    }

    @Test
    public void test19004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19004");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.source = bytesReference6;
        nestedInnerQueryParseSupport1.setfilterFound(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper10;
        org.apache.lucene.search.Filter filter12 = nestedInnerQueryParseSupport1.getchildFilter();
        boolean boolean13 = nestedInnerQueryParseSupport1.filterFound;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(filter12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test19005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19005");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter4;
        org.apache.lucene.search.Filter filter6 = null;
        nestedInnerQueryParseSupport1.childFilter = filter6;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter8;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        boolean boolean15 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean16 = nestedInnerQueryParseSupport1.filterFound;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(objectMapper14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test19006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19006");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query4 = null;
        nestedInnerQueryParseSupport1.innerFilter = query4;
        nestedInnerQueryParseSupport1.path = "";
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.elasticsearch.common.bytes.BytesReference bytesReference10 = nestedInnerQueryParseSupport1.getsource();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.apache.lucene.search.Filter filter13 = nestedInnerQueryParseSupport1.childFilter;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter16 = nestedInnerQueryParseSupport1.parentFilter;
        nestedInnerQueryParseSupport1.setfilterFound(true);
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter21 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter21);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(bytesReference10);
        org.junit.Assert.assertNull(objectMapper11);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertNull(filter13);
        org.junit.Assert.assertNull(bitDocIdSetFilter16);
    }

    @Test
    public void test19007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19007");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        org.apache.lucene.search.Query query10 = null;
        nestedInnerQueryParseSupport1.innerFilter = query10;
        boolean boolean12 = nestedInnerQueryParseSupport1.getqueryParsed();
        nestedInnerQueryParseSupport1.queryFound = true;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(objectMapper15);
    }

    @Test
    public void test19008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19008");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.apache.lucene.search.Query query5 = nestedInnerQueryParseSupport1.innerFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter6 = nestedInnerQueryParseSupport1.parentFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper7 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper7;
        org.elasticsearch.index.query.QueryParseContext queryParseContext9 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.path = "";
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Query query13 = nestedInnerQueryParseSupport1.innerQuery;
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean16 = nestedInnerQueryParseSupport1.getqueryFound();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(query5);
        org.junit.Assert.assertNull(bitDocIdSetFilter6);
        org.junit.Assert.assertNull(queryParseContext9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(query13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test19009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19009");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        java.lang.String str3 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        boolean boolean6 = nestedInnerQueryParseSupport1.getfilterFound();
        nestedInnerQueryParseSupport1.path = "nested";
        org.elasticsearch.common.bytes.BytesReference bytesReference9 = nestedInnerQueryParseSupport1.source;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper10;
        org.apache.lucene.search.Query query12 = nestedInnerQueryParseSupport1.innerFilter;
        org.apache.lucene.search.Query query13 = null;
        nestedInnerQueryParseSupport1.innerQuery = query13;
        java.lang.String str15 = nestedInnerQueryParseSupport1.getPath();
        boolean boolean16 = nestedInnerQueryParseSupport1.getfilterFound();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(bytesReference9);
        org.junit.Assert.assertNull(query12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "nested" + "'", str15, "nested");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test19010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19010");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        nestedInnerQueryParseSupport1.path = "object";
        java.lang.String str10 = nestedInnerQueryParseSupport1.getPath();
        boolean boolean11 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query13 = nestedInnerQueryParseSupport1.innerFilter;
        org.apache.lucene.search.Query query14 = nestedInnerQueryParseSupport1.innerFilter;
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "object" + "'", str10, "object");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertNull(query13);
        org.junit.Assert.assertNull(query14);
    }

    @Test
    public void test19011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19011");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter8;
        org.elasticsearch.common.bytes.BytesReference bytesReference10 = null;
        nestedInnerQueryParseSupport1.source = bytesReference10;
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference12);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter14;
        boolean boolean16 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean17 = nestedInnerQueryParseSupport1.queryParsed;
        java.lang.String str18 = nestedInnerQueryParseSupport1.getPath();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test19012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19012");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        org.apache.lucene.search.Query query9 = nestedInnerQueryParseSupport1.innerFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter10);
        java.lang.String str12 = nestedInnerQueryParseSupport1.getPath();
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = nestedInnerQueryParseSupport1.getsource();
        nestedInnerQueryParseSupport1.path = "";
        org.apache.lucene.search.Query query16 = nestedInnerQueryParseSupport1.innerFilter;
        boolean boolean17 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper18;
        boolean boolean20 = nestedInnerQueryParseSupport1.filterFound;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(query9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(bytesReference13);
        org.junit.Assert.assertNull(query16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test19013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19013");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Query query13 = null;
        nestedInnerQueryParseSupport1.innerQuery = query13;
        boolean boolean15 = nestedInnerQueryParseSupport1.queryParsed;
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.apache.lucene.search.Query query18 = null;
        nestedInnerQueryParseSupport1.innerFilter = query18;
        org.apache.lucene.search.Filter filter20 = nestedInnerQueryParseSupport1.childFilter;
        org.apache.lucene.search.Filter filter21 = nestedInnerQueryParseSupport1.childFilter;
        boolean boolean22 = nestedInnerQueryParseSupport1.filterFound();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(filter20);
        org.junit.Assert.assertNull(filter21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test19014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19014");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter9 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean11 = nestedInnerQueryParseSupport1.filterFound;
        nestedInnerQueryParseSupport1.queryFound = false;
        boolean boolean14 = nestedInnerQueryParseSupport1.getqueryFound();
        boolean boolean15 = nestedInnerQueryParseSupport1.filterFound;
        nestedInnerQueryParseSupport1.path = "object";
        org.apache.lucene.search.Query query18 = null;
        nestedInnerQueryParseSupport1.innerFilter = query18;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper8);
        org.junit.Assert.assertNull(bitDocIdSetFilter9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test19015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19015");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper2 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper2;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter4;
        org.apache.lucene.search.Filter filter6 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.Filter filter7 = nestedInnerQueryParseSupport1.getchildFilter();
        boolean boolean8 = nestedInnerQueryParseSupport1.filterParsed;
        java.lang.String str9 = nestedInnerQueryParseSupport1.getPath();
        org.junit.Assert.assertNull(filter6);
        org.junit.Assert.assertNull(filter7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test19016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19016");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter11 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter11);
        boolean boolean13 = nestedInnerQueryParseSupport1.getfilterFound();
        boolean boolean14 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter15 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter16 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter16);
        org.apache.lucene.search.Query query18 = null;
        nestedInnerQueryParseSupport1.innerFilter = query18;
        org.apache.lucene.search.Filter filter20 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter20);
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        boolean boolean24 = nestedInnerQueryParseSupport1.filterParsed;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter15);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test19017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19017");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        nestedInnerQueryParseSupport1.path = "object";
        java.lang.String str10 = nestedInnerQueryParseSupport1.getPath();
        boolean boolean11 = nestedInnerQueryParseSupport1.getfilterParsed();
        nestedInnerQueryParseSupport1.setfilterFound(false);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper14;
        nestedInnerQueryParseSupport1.filterFound = false;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "object" + "'", str10, "object");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test19018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19018");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        boolean boolean4 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper5 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(objectMapper5);
    }

    @Test
    public void test19019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19019");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.path = "nested";
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound;
        nestedInnerQueryParseSupport1.path = "object";
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter13);
        org.apache.lucene.search.Query query15 = nestedInnerQueryParseSupport1.innerQuery;
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Query query18 = nestedInnerQueryParseSupport1.innerFilter;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        boolean boolean21 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.Filter filter22 = null;
        nestedInnerQueryParseSupport1.childFilter = filter22;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(query15);
        org.junit.Assert.assertNull(query18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test19020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19020");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = true;
        boolean boolean5 = nestedInnerQueryParseSupport1.filterFound;
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean10 = nestedInnerQueryParseSupport1.getfilterParsed();
        java.lang.String str11 = nestedInnerQueryParseSupport1.getPath();
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = nestedInnerQueryParseSupport1.source;
        // The following exception was thrown during execution in test generation
        try {
// flaky:             nestedInnerQueryParseSupport1.query();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bytesReference12);
    }

    @Test
    public void test19021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19021");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter12 = nestedInnerQueryParseSupport1.parentFilter;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(objectMapper11);
        org.junit.Assert.assertNull(bitDocIdSetFilter12);
    }

    @Test
    public void test19022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19022");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound();
        nestedInnerQueryParseSupport1.filterParsed = false;
        nestedInnerQueryParseSupport1.path = "";
        org.apache.lucene.search.Query query19 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.index.query.QueryParseContext queryParseContext20 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.query();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(query19);
        org.junit.Assert.assertNull(queryParseContext20);
    }

    @Test
    public void test19023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19023");
        org.elasticsearch.index.mapper.object.ObjectMapper.Nested nested0 = org.elasticsearch.index.mapper.object.ObjectMapper.Nested.NO;
        boolean boolean1 = nested0.isNested();
        boolean boolean2 = nested0.isNested();
        boolean boolean3 = nested0.isNested();
        boolean boolean4 = nested0.isIncludeInParent();
        boolean boolean5 = nested0.isIncludeInParent();
        boolean boolean6 = nested0.isIncludeInRoot();
        boolean boolean7 = nested0.isIncludeInParent();
        boolean boolean8 = nested0.isNested();
        boolean boolean9 = nested0.isIncludeInParent();
        boolean boolean10 = nested0.isIncludeInParent();
        boolean boolean11 = nested0.isIncludeInRoot();
        boolean boolean12 = nested0.isNested();
        org.junit.Assert.assertNotNull(nested0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test19024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19024");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Query query5 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper6 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.elasticsearch.index.query.QueryParseContext queryParseContext7 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean8 = nestedInnerQueryParseSupport1.filterParsed;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter9 = nestedInnerQueryParseSupport1.getparentFilter();
        org.apache.lucene.search.Filter filter10 = nestedInnerQueryParseSupport1.childFilter;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(query5);
        org.junit.Assert.assertNull(objectMapper6);
        org.junit.Assert.assertNull(queryParseContext7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter9);
        org.junit.Assert.assertNull(filter10);
    }

    @Test
    public void test19025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19025");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound();
        nestedInnerQueryParseSupport1.path = "";
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = nestedInnerQueryParseSupport1.source;
        nestedInnerQueryParseSupport1.path = "object";
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        org.apache.lucene.search.Query query18 = nestedInnerQueryParseSupport1.innerFilter;
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(bytesReference13);
        org.junit.Assert.assertNull(query18);
    }

    @Test
    public void test19026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19026");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.index.query.QueryParseContext queryParseContext4 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.Query query5 = nestedInnerQueryParseSupport1.innerFilter;
        org.apache.lucene.search.Query query6 = null;
        nestedInnerQueryParseSupport1.innerFilter = query6;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.filterParsed;
        org.elasticsearch.common.bytes.BytesReference bytesReference10 = null;
        nestedInnerQueryParseSupport1.source = bytesReference10;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(queryParseContext4);
        org.junit.Assert.assertNull(query5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test19027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19027");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        nestedInnerQueryParseSupport1.filterFound = true;
        java.lang.String str12 = nestedInnerQueryParseSupport1.getPath();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.parentFilter;
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.resetPathLevel();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
    }

    @Test
    public void test19028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19028");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = nestedInnerQueryParseSupport1.getparentFilter();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter11 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter11;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter15 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter15);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean19 = nestedInnerQueryParseSupport1.filterFound;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter10);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test19029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19029");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryParsed;
        java.lang.String str11 = nestedInnerQueryParseSupport1.path;
        org.apache.lucene.search.Filter filter12 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter12);
        nestedInnerQueryParseSupport1.queryFound = true;
        nestedInnerQueryParseSupport1.filterFound = false;
        boolean boolean18 = nestedInnerQueryParseSupport1.getfilterFound();
        org.apache.lucene.search.Filter filter19 = nestedInnerQueryParseSupport1.childFilter;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(filter19);
    }

    @Test
    public void test19030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19030");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter3 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound;
        java.lang.String str5 = nestedInnerQueryParseSupport1.path;
        boolean boolean6 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.apache.lucene.search.Filter filter7 = nestedInnerQueryParseSupport1.childFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter8;
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.Query query15 = null;
        nestedInnerQueryParseSupport1.innerQuery = query15;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(filter7);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertNull(objectMapper13);
        org.junit.Assert.assertNull(bitDocIdSetFilter14);
    }

    @Test
    public void test19031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19031");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        org.elasticsearch.common.bytes.BytesReference bytesReference10 = nestedInnerQueryParseSupport1.getsource();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter11 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter11);
        org.elasticsearch.index.query.QueryParseContext queryParseContext13 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean14 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bytesReference10);
        org.junit.Assert.assertNull(queryParseContext13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test19032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19032");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter3 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter3;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper5 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper5;
        org.apache.lucene.search.Filter filter7 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.Query query8 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper10;
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        org.elasticsearch.common.bytes.BytesReference bytesReference14 = nestedInnerQueryParseSupport1.getsource();
        org.apache.lucene.search.Filter filter15 = nestedInnerQueryParseSupport1.childFilter;
        java.lang.Class<?> wildcardClass16 = nestedInnerQueryParseSupport1.getClass();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertNull(filter7);
        org.junit.Assert.assertNull(query8);
        org.junit.Assert.assertNull(objectMapper9);
        org.junit.Assert.assertNull(bytesReference14);
        org.junit.Assert.assertNull(filter15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test19033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19033");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        boolean boolean3 = nestedInnerQueryParseSupport1.queryParsed;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper4 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        boolean boolean5 = nestedInnerQueryParseSupport1.queryFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.source = bytesReference6;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference9 = nestedInnerQueryParseSupport1.source;
        org.apache.lucene.search.Query query10 = nestedInnerQueryParseSupport1.innerFilter;
        nestedInnerQueryParseSupport1.path = "nested";
        org.apache.lucene.search.Filter filter13 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter13);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(bytesReference9);
        org.junit.Assert.assertNull(query10);
    }

    @Test
    public void test19034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19034");
        org.elasticsearch.index.mapper.object.ObjectMapper.Nested nested2 = org.elasticsearch.index.mapper.object.ObjectMapper.Nested.newNested(false, false);
        boolean boolean3 = nested2.isNested();
        boolean boolean4 = nested2.isIncludeInParent();
        boolean boolean5 = nested2.isNested();
        boolean boolean6 = nested2.isNested();
        boolean boolean7 = nested2.isNested();
        boolean boolean8 = nested2.isIncludeInRoot();
        boolean boolean9 = nested2.isIncludeInRoot();
        org.junit.Assert.assertNotNull(nested2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test19035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19035");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = true;
        boolean boolean5 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper6 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.apache.lucene.search.Filter filter7 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.Filter filter8 = nestedInnerQueryParseSupport1.getchildFilter();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper9;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter11 = nestedInnerQueryParseSupport1.getparentFilter();
        org.apache.lucene.search.Filter filter12 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter12);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.index.query.QueryParseContext queryParseContext15 = nestedInnerQueryParseSupport1.parseContext;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(objectMapper6);
        org.junit.Assert.assertNull(filter7);
        org.junit.Assert.assertNull(filter8);
        org.junit.Assert.assertNull(bitDocIdSetFilter11);
        org.junit.Assert.assertNull(objectMapper14);
        org.junit.Assert.assertNull(queryParseContext15);
    }

    @Test
    public void test19036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19036");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        java.lang.String str3 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        nestedInnerQueryParseSupport1.setfilterFound(true);
        org.apache.lucene.search.Filter filter9 = nestedInnerQueryParseSupport1.getchildFilter();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(filter9);
    }

    @Test
    public void test19037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19037");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterFound();
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Filter filter12 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter12);
        nestedInnerQueryParseSupport1.setfilterFound(false);
        org.elasticsearch.common.bytes.BytesReference bytesReference16 = nestedInnerQueryParseSupport1.getsource();
        nestedInnerQueryParseSupport1.setfilterFound(true);
        org.apache.lucene.search.Filter filter19 = null;
        nestedInnerQueryParseSupport1.childFilter = filter19;
        nestedInnerQueryParseSupport1.setfilterFound(true);
        org.elasticsearch.common.bytes.BytesReference bytesReference23 = nestedInnerQueryParseSupport1.getsource();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper24 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper24;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(objectMapper11);
        org.junit.Assert.assertNull(bytesReference16);
        org.junit.Assert.assertNull(bytesReference23);
    }

    @Test
    public void test19038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19038");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.elasticsearch.index.query.QueryParseContext queryParseContext12 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        boolean boolean14 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter15 = nestedInnerQueryParseSupport1.parentFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper16 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.apache.lucene.search.Filter filter17 = nestedInnerQueryParseSupport1.getchildFilter();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(queryParseContext12);
        org.junit.Assert.assertNull(objectMapper13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter15);
        org.junit.Assert.assertNull(objectMapper16);
        org.junit.Assert.assertNull(filter17);
    }

    @Test
    public void test19039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19039");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        org.apache.lucene.search.Query query3 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper4 = nestedInnerQueryParseSupport1.parentObjectMapper;
        boolean boolean5 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper6 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query7 = nestedInnerQueryParseSupport1.innerQuery;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = nestedInnerQueryParseSupport1.getparentFilter();
        org.elasticsearch.common.bytes.BytesReference bytesReference9 = null;
        nestedInnerQueryParseSupport1.source = bytesReference9;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper11;
        org.apache.lucene.search.Query query13 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper14;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertNull(query3);
        org.junit.Assert.assertNull(objectMapper4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(objectMapper6);
        org.junit.Assert.assertNull(query7);
        org.junit.Assert.assertNull(bitDocIdSetFilter8);
        org.junit.Assert.assertNull(query13);
    }

    @Test
    public void test19040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19040");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter8;
        nestedInnerQueryParseSupport1.queryFound = true;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.elasticsearch.common.bytes.BytesReference bytesReference16 = nestedInnerQueryParseSupport1.source;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper17 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.apache.lucene.search.Filter filter18 = nestedInnerQueryParseSupport1.childFilter;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bytesReference16);
        org.junit.Assert.assertNull(objectMapper17);
        org.junit.Assert.assertNull(filter18);
    }

    @Test
    public void test19041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19041");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.apache.lucene.search.Filter filter11 = null;
        nestedInnerQueryParseSupport1.childFilter = filter11;
        org.apache.lucene.search.Query query13 = nestedInnerQueryParseSupport1.innerFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter14;
        org.apache.lucene.search.Query query16 = null;
        nestedInnerQueryParseSupport1.innerFilter = query16;
        java.lang.String str18 = nestedInnerQueryParseSupport1.path;
        boolean boolean19 = nestedInnerQueryParseSupport1.getqueryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter20 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter20;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(query13);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test19042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19042");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.index.query.QueryParseContext queryParseContext4 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean5 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = nestedInnerQueryParseSupport1.getsource();
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter11 = nestedInnerQueryParseSupport1.parentFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = nestedInnerQueryParseSupport1.getsource();
        // The following exception was thrown during execution in test generation
        try {
// flaky:             nestedInnerQueryParseSupport1.filter();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(queryParseContext4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(bytesReference6);
        org.junit.Assert.assertNull(bitDocIdSetFilter11);
        org.junit.Assert.assertNull(bytesReference12);
    }

    @Test
    public void test19043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19043");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter2 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter2);
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        boolean boolean6 = nestedInnerQueryParseSupport1.getfilterParsed();
        nestedInnerQueryParseSupport1.path = "object";
        org.apache.lucene.search.Filter filter9 = nestedInnerQueryParseSupport1.childFilter;
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(filter9);
    }

    @Test
    public void test19044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19044");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.path = "nested";
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound;
        nestedInnerQueryParseSupport1.path = "object";
        org.apache.lucene.search.Query query13 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.common.bytes.BytesReference bytesReference14 = null;
        nestedInnerQueryParseSupport1.source = bytesReference14;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(query13);
    }

    @Test
    public void test19045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19045");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound();
        org.apache.lucene.search.Query query11 = nestedInnerQueryParseSupport1.innerQuery;
        java.lang.String str12 = nestedInnerQueryParseSupport1.getPath();
        org.apache.lucene.search.Filter filter13 = null;
        nestedInnerQueryParseSupport1.childFilter = filter13;
        org.apache.lucene.search.Query query15 = nestedInnerQueryParseSupport1.innerFilter;
        boolean boolean16 = nestedInnerQueryParseSupport1.queryFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter17 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter17);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter19 = nestedInnerQueryParseSupport1.getparentFilter();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(query11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(query15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter19);
    }

    @Test
    public void test19046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19046");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean4 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean5 = nestedInnerQueryParseSupport1.filterParsed;
        org.apache.lucene.search.Query query6 = nestedInnerQueryParseSupport1.innerFilter;
        boolean boolean7 = nestedInnerQueryParseSupport1.getfilterFound();
        org.apache.lucene.search.Filter filter8 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter8);
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(query6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test19047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19047");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean11 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference12);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter15 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter15;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper17 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.apache.lucene.search.Filter filter18 = null;
        nestedInnerQueryParseSupport1.childFilter = filter18;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter20 = nestedInnerQueryParseSupport1.parentFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper21 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(objectMapper14);
        org.junit.Assert.assertNull(objectMapper17);
        org.junit.Assert.assertNull(bitDocIdSetFilter20);
        org.junit.Assert.assertNull(objectMapper21);
    }

    @Test
    public void test19048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19048");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.apache.lucene.search.Filter filter8 = nestedInnerQueryParseSupport1.childFilter;
        org.apache.lucene.search.Query query9 = null;
        nestedInnerQueryParseSupport1.innerQuery = query9;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter11 = nestedInnerQueryParseSupport1.parentFilter;
        nestedInnerQueryParseSupport1.path = "nested";
        org.apache.lucene.search.Query query14 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper15;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter17 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter17);
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.elasticsearch.common.bytes.BytesReference bytesReference21 = null;
        nestedInnerQueryParseSupport1.source = bytesReference21;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(filter8);
        org.junit.Assert.assertNull(bitDocIdSetFilter11);
        org.junit.Assert.assertNull(query14);
    }

    @Test
    public void test19049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19049");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        boolean boolean3 = nestedInnerQueryParseSupport1.queryParsed;
        nestedInnerQueryParseSupport1.setfilterFound(false);
        org.elasticsearch.index.query.QueryParseContext queryParseContext6 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(queryParseContext6);
    }

    @Test
    public void test19050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19050");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        nestedInnerQueryParseSupport1.filterParsed = true;
        java.lang.String str11 = nestedInnerQueryParseSupport1.getPath();
        org.apache.lucene.search.Query query12 = nestedInnerQueryParseSupport1.innerFilter;
        java.lang.String str13 = nestedInnerQueryParseSupport1.getPath();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        org.apache.lucene.search.Query query15 = nestedInnerQueryParseSupport1.innerFilter;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(query12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(objectMapper14);
        org.junit.Assert.assertNull(query15);
    }

    @Test
    public void test19051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19051");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        org.apache.lucene.search.Filter filter8 = null;
        nestedInnerQueryParseSupport1.childFilter = filter8;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        nestedInnerQueryParseSupport1.path = "nested";
        org.apache.lucene.search.Query query15 = null;
        nestedInnerQueryParseSupport1.innerFilter = query15;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter17 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.Filter filter18 = nestedInnerQueryParseSupport1.childFilter;
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.setPath("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter17);
        org.junit.Assert.assertNull(filter18);
    }

    @Test
    public void test19052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19052");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.apache.lucene.search.Query query8 = nestedInnerQueryParseSupport1.getInnerFilter();
        java.lang.String str9 = nestedInnerQueryParseSupport1.getPath();
        org.elasticsearch.common.bytes.BytesReference bytesReference10 = null;
        nestedInnerQueryParseSupport1.source = bytesReference10;
        boolean boolean12 = nestedInnerQueryParseSupport1.getqueryFound();
        org.apache.lucene.search.Filter filter13 = nestedInnerQueryParseSupport1.childFilter;
        org.apache.lucene.search.Filter filter14 = null;
        nestedInnerQueryParseSupport1.childFilter = filter14;
        org.apache.lucene.search.Query query16 = null;
        nestedInnerQueryParseSupport1.innerQuery = query16;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(query8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(filter13);
    }

    @Test
    public void test19053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19053");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        java.lang.String str3 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.queryFound = false;
        org.apache.lucene.search.Query query6 = nestedInnerQueryParseSupport1.innerFilter;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound();
        boolean boolean8 = nestedInnerQueryParseSupport1.getqueryFound();
        org.apache.lucene.search.Query query9 = nestedInnerQueryParseSupport1.innerFilter;
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference11 = nestedInnerQueryParseSupport1.getsource();
        org.apache.lucene.search.Query query12 = null;
        nestedInnerQueryParseSupport1.innerFilter = query12;
        boolean boolean14 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = nestedInnerQueryParseSupport1.getsource();
        boolean boolean16 = nestedInnerQueryParseSupport1.getqueryParsed();
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(query6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(query9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(bytesReference11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(bytesReference15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test19054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19054");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound();
        nestedInnerQueryParseSupport1.filterParsed = false;
        nestedInnerQueryParseSupport1.path = "";
        org.apache.lucene.search.Query query19 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.index.query.QueryParseContext queryParseContext20 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean21 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter22 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter22);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper24 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper24;
        boolean boolean26 = nestedInnerQueryParseSupport1.filterFound();
        boolean boolean27 = nestedInnerQueryParseSupport1.filterFound;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(query19);
        org.junit.Assert.assertNull(queryParseContext20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test19055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19055");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = nestedInnerQueryParseSupport1.getsource();
        org.apache.lucene.search.Query query9 = nestedInnerQueryParseSupport1.innerQuery;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = nestedInnerQueryParseSupport1.getparentFilter();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter11 = nestedInnerQueryParseSupport1.parentFilter;
        org.elasticsearch.index.query.QueryParseContext queryParseContext12 = nestedInnerQueryParseSupport1.parseContext;
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = nestedInnerQueryParseSupport1.source;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean15 = nestedInnerQueryParseSupport1.queryFound;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bytesReference8);
        org.junit.Assert.assertNull(query9);
        org.junit.Assert.assertNull(bitDocIdSetFilter10);
        org.junit.Assert.assertNull(bitDocIdSetFilter11);
        org.junit.Assert.assertNull(queryParseContext12);
        org.junit.Assert.assertNull(bytesReference13);
        org.junit.Assert.assertNull(bitDocIdSetFilter14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test19056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19056");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.apache.lucene.search.Query query5 = nestedInnerQueryParseSupport1.innerQuery;
        boolean boolean6 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.apache.lucene.search.Filter filter7 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter7);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter9 = nestedInnerQueryParseSupport1.getparentFilter();
        nestedInnerQueryParseSupport1.queryFound = true;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(query5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNull(bitDocIdSetFilter9);
    }

    @Test
    public void test19057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19057");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Filter filter11 = null;
        nestedInnerQueryParseSupport1.childFilter = filter11;
        nestedInnerQueryParseSupport1.filterFound = true;
        nestedInnerQueryParseSupport1.queryParsed = false;
        boolean boolean17 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean18 = nestedInnerQueryParseSupport1.getfilterParsed();
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.setPath("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test19058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19058");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper5 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper5;
        org.apache.lucene.search.Filter filter7 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter7);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper9;
        boolean boolean11 = nestedInnerQueryParseSupport1.getqueryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter12 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter12;
        boolean boolean14 = nestedInnerQueryParseSupport1.queryParsed;
        nestedInnerQueryParseSupport1.queryParsed = true;
        nestedInnerQueryParseSupport1.setfilterFound(false);
        org.elasticsearch.common.bytes.BytesReference bytesReference19 = null;
        nestedInnerQueryParseSupport1.source = bytesReference19;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test19059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19059");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Filter filter12 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.parentFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter15 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter15;
        org.apache.lucene.search.Query query17 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper18;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper20 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper20;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(filter12);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
        org.junit.Assert.assertNull(objectMapper14);
        org.junit.Assert.assertNull(query17);
    }

    @Test
    public void test19060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19060");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.parseContext;
        org.apache.lucene.search.Query query3 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper4 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        boolean boolean5 = nestedInnerQueryParseSupport1.filterParsed;
        nestedInnerQueryParseSupport1.queryFound = true;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(query3);
        org.junit.Assert.assertNull(objectMapper4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test19061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19061");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryParsed;
        nestedInnerQueryParseSupport1.path = "object";
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        boolean boolean14 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference15);
        org.apache.lucene.search.Query query17 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = nestedInnerQueryParseSupport1.parentObjectMapper;
        boolean boolean19 = nestedInnerQueryParseSupport1.filterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper20 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper20;
        org.elasticsearch.index.query.QueryParseContext queryParseContext22 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper23 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper23;
        nestedInnerQueryParseSupport1.setfilterFound(true);
        boolean boolean27 = nestedInnerQueryParseSupport1.queryParsed;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(objectMapper13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(query17);
        org.junit.Assert.assertNull(objectMapper18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(queryParseContext22);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test19062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19062");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = nestedInnerQueryParseSupport1.source;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        nestedInnerQueryParseSupport1.setfilterFound(true);
        boolean boolean17 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        java.lang.String str19 = nestedInnerQueryParseSupport1.path;
        org.apache.lucene.search.Query query20 = null;
        nestedInnerQueryParseSupport1.innerQuery = query20;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter22 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter22;
        org.apache.lucene.search.Query query24 = nestedInnerQueryParseSupport1.getInnerQuery();
        boolean boolean25 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bytesReference12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(objectMapper18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(query24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test19063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19063");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = null;
        nestedInnerQueryParseSupport1.source = bytesReference13;
        org.apache.lucene.search.Filter filter15 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter15);
        boolean boolean17 = nestedInnerQueryParseSupport1.filterParsed;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test19064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19064");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter8;
        org.elasticsearch.common.bytes.BytesReference bytesReference10 = null;
        nestedInnerQueryParseSupport1.source = bytesReference10;
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference12);
        org.apache.lucene.search.Filter filter14 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter14);
        org.apache.lucene.search.Query query16 = nestedInnerQueryParseSupport1.innerQuery;
        org.apache.lucene.search.Query query17 = null;
        nestedInnerQueryParseSupport1.innerQuery = query17;
        org.apache.lucene.search.Filter filter19 = nestedInnerQueryParseSupport1.childFilter;
        org.apache.lucene.search.Filter filter20 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter20);
        org.elasticsearch.common.bytes.BytesReference bytesReference22 = nestedInnerQueryParseSupport1.source;
        java.lang.String str23 = nestedInnerQueryParseSupport1.path;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(query16);
        org.junit.Assert.assertNull(filter19);
        org.junit.Assert.assertNull(bytesReference22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test19065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19065");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        nestedInnerQueryParseSupport1.path = "nested";
        org.elasticsearch.common.bytes.BytesReference bytesReference11 = null;
        nestedInnerQueryParseSupport1.source = bytesReference11;
        boolean boolean13 = nestedInnerQueryParseSupport1.queryParsed;
        org.elasticsearch.common.bytes.BytesReference bytesReference14 = null;
        nestedInnerQueryParseSupport1.source = bytesReference14;
        boolean boolean16 = nestedInnerQueryParseSupport1.queryFound();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test19066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19066");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound();
        nestedInnerQueryParseSupport1.setfilterFound(false);
        boolean boolean7 = nestedInnerQueryParseSupport1.getfilterFound();
        nestedInnerQueryParseSupport1.path = "nested";
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper10;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.parentObjectMapper;
        nestedInnerQueryParseSupport1.queryFound = true;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(objectMapper12);
    }

    @Test
    public void test19067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19067");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound();
        nestedInnerQueryParseSupport1.setfilterFound(false);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter7 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter7);
        org.elasticsearch.index.query.QueryParseContext queryParseContext9 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = nestedInnerQueryParseSupport1.getparentFilter();
        org.elasticsearch.common.bytes.BytesReference bytesReference11 = null;
        nestedInnerQueryParseSupport1.source = bytesReference11;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = nestedInnerQueryParseSupport1.parentObjectMapper;
        boolean boolean14 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean15 = nestedInnerQueryParseSupport1.filterFound;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(queryParseContext9);
        org.junit.Assert.assertNull(bitDocIdSetFilter10);
        org.junit.Assert.assertNull(objectMapper13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test19068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19068");
        org.elasticsearch.index.mapper.object.ObjectMapper.Nested nested2 = org.elasticsearch.index.mapper.object.ObjectMapper.Nested.newNested(true, false);
        boolean boolean3 = nested2.isNested();
        boolean boolean4 = nested2.isIncludeInParent();
        boolean boolean5 = nested2.isIncludeInRoot();
        boolean boolean6 = nested2.isIncludeInRoot();
        boolean boolean7 = nested2.isNested();
        boolean boolean8 = nested2.isIncludeInParent();
        boolean boolean9 = nested2.isIncludeInParent();
        boolean boolean10 = nested2.isIncludeInRoot();
        boolean boolean11 = nested2.isIncludeInParent();
        boolean boolean12 = nested2.isNested();
        boolean boolean13 = nested2.isNested();
        boolean boolean14 = nested2.isIncludeInRoot();
        boolean boolean15 = nested2.isIncludeInRoot();
        org.junit.Assert.assertNotNull(nested2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test19069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19069");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.filterFound = false;
        nestedInnerQueryParseSupport1.setfilterFound(true);
        boolean boolean15 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean16 = nestedInnerQueryParseSupport1.getfilterParsed();
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.apache.lucene.search.Filter filter19 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter19);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter21 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter21;
        org.elasticsearch.common.bytes.BytesReference bytesReference23 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference23);
        boolean boolean25 = nestedInnerQueryParseSupport1.getqueryFound();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test19070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19070");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound();
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper17 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        org.elasticsearch.index.query.QueryParseContext queryParseContext18 = nestedInnerQueryParseSupport1.parseContext;
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        org.elasticsearch.common.bytes.BytesReference bytesReference21 = nestedInnerQueryParseSupport1.getsource();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(objectMapper17);
        org.junit.Assert.assertNull(queryParseContext18);
        org.junit.Assert.assertNull(bytesReference21);
    }

    @Test
    public void test19071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19071");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        nestedInnerQueryParseSupport1.filterFound = false;
        nestedInnerQueryParseSupport1.path = "object";
        org.apache.lucene.search.Query query17 = null;
        nestedInnerQueryParseSupport1.innerQuery = query17;
        nestedInnerQueryParseSupport1.queryFound = false;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper23 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper23;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper12);
    }

    @Test
    public void test19072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19072");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        nestedInnerQueryParseSupport1.filterParsed = false;
        nestedInnerQueryParseSupport1.path = "nested";
        org.apache.lucene.search.Query query14 = null;
        nestedInnerQueryParseSupport1.innerQuery = query14;
        boolean boolean16 = nestedInnerQueryParseSupport1.queryFound();
        boolean boolean17 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter18 = nestedInnerQueryParseSupport1.getparentFilter();
        nestedInnerQueryParseSupport1.queryParsed = true;
        nestedInnerQueryParseSupport1.queryParsed = true;
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter18);
    }

    @Test
    public void test19073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19073");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter10;
        org.apache.lucene.search.Query query12 = nestedInnerQueryParseSupport1.innerFilter;
        boolean boolean13 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = nestedInnerQueryParseSupport1.getparentFilter();
        org.elasticsearch.index.query.QueryParseContext queryParseContext15 = nestedInnerQueryParseSupport1.getparseContext();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(query12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter14);
        org.junit.Assert.assertNull(queryParseContext15);
    }

    @Test
    public void test19074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19074");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter8;
        org.apache.lucene.search.Query query10 = null;
        nestedInnerQueryParseSupport1.innerFilter = query10;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter12 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter12);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Filter filter15 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.Query query16 = nestedInnerQueryParseSupport1.innerFilter;
        boolean boolean17 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.queryFound = true;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper14);
        org.junit.Assert.assertNull(filter15);
        org.junit.Assert.assertNull(query16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test19075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19075");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = nestedInnerQueryParseSupport1.source;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter16 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter16);
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        nestedInnerQueryParseSupport1.queryParsed = false;
        nestedInnerQueryParseSupport1.filterFound = false;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(objectMapper13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(bytesReference15);
    }

    @Test
    public void test19076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19076");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper9;
        org.apache.lucene.search.Filter filter11 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter11);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper13;
        org.apache.lucene.search.Query query15 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference16 = null;
        nestedInnerQueryParseSupport1.source = bytesReference16;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper19 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper19;
        boolean boolean21 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter22 = nestedInnerQueryParseSupport1.parentFilter;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(query15);
        org.junit.Assert.assertNull(objectMapper18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter22);
    }

    @Test
    public void test19077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19077");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference12);
        boolean boolean14 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.apache.lucene.search.Query query16 = null;
        nestedInnerQueryParseSupport1.innerFilter = query16;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(objectMapper15);
    }

    @Test
    public void test19078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19078");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        java.lang.String str3 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.queryFound = false;
        boolean boolean6 = nestedInnerQueryParseSupport1.filterFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference7 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference7);
        boolean boolean9 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Query query10 = null;
        nestedInnerQueryParseSupport1.innerQuery = query10;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(objectMapper12);
    }

    @Test
    public void test19079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19079");
        org.elasticsearch.index.mapper.object.ObjectMapper.Nested nested0 = org.elasticsearch.index.mapper.object.ObjectMapper.Nested.NO;
        boolean boolean1 = nested0.isIncludeInParent();
        boolean boolean2 = nested0.isNested();
        boolean boolean3 = nested0.isNested();
        boolean boolean4 = nested0.isNested();
        boolean boolean5 = nested0.isIncludeInParent();
        boolean boolean6 = nested0.isNested();
        boolean boolean7 = nested0.isIncludeInParent();
        boolean boolean8 = nested0.isIncludeInRoot();
        boolean boolean9 = nested0.isIncludeInRoot();
        boolean boolean10 = nested0.isIncludeInRoot();
        org.junit.Assert.assertNotNull(nested0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test19080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19080");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound();
        nestedInnerQueryParseSupport1.setfilterFound(false);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter7 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter7);
        org.elasticsearch.index.query.QueryParseContext queryParseContext9 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = nestedInnerQueryParseSupport1.getparentFilter();
        org.elasticsearch.common.bytes.BytesReference bytesReference11 = null;
        nestedInnerQueryParseSupport1.source = bytesReference11;
        boolean boolean13 = nestedInnerQueryParseSupport1.getqueryParsed();
        boolean boolean14 = nestedInnerQueryParseSupport1.queryFound;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(queryParseContext9);
        org.junit.Assert.assertNull(bitDocIdSetFilter10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(objectMapper15);
    }

    @Test
    public void test19081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19081");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        nestedInnerQueryParseSupport1.path = "nested";
        boolean boolean11 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = nestedInnerQueryParseSupport1.getsource();
        org.elasticsearch.index.query.QueryParseContext queryParseContext16 = nestedInnerQueryParseSupport1.parseContext;
        org.elasticsearch.common.bytes.BytesReference bytesReference17 = nestedInnerQueryParseSupport1.getsource();
        java.lang.String str18 = nestedInnerQueryParseSupport1.getPath();
        org.apache.lucene.search.Filter filter19 = nestedInnerQueryParseSupport1.childFilter;
        boolean boolean20 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter21 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter21);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bytesReference15);
        org.junit.Assert.assertNull(queryParseContext16);
        org.junit.Assert.assertNull(bytesReference17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "nested" + "'", str18, "nested");
        org.junit.Assert.assertNull(filter19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test19082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19082");
        org.elasticsearch.index.mapper.object.ObjectMapper.Nested nested2 = org.elasticsearch.index.mapper.object.ObjectMapper.Nested.newNested(true, false);
        boolean boolean3 = nested2.isNested();
        boolean boolean4 = nested2.isIncludeInParent();
        boolean boolean5 = nested2.isIncludeInRoot();
        boolean boolean6 = nested2.isIncludeInRoot();
        boolean boolean7 = nested2.isNested();
        boolean boolean8 = nested2.isIncludeInParent();
        boolean boolean9 = nested2.isIncludeInParent();
        boolean boolean10 = nested2.isIncludeInParent();
        boolean boolean11 = nested2.isIncludeInRoot();
        boolean boolean12 = nested2.isIncludeInParent();
        boolean boolean13 = nested2.isIncludeInParent();
        org.junit.Assert.assertNotNull(nested2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test19083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19083");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter8;
        org.apache.lucene.search.Query query10 = null;
        nestedInnerQueryParseSupport1.innerFilter = query10;
        java.lang.String str12 = nestedInnerQueryParseSupport1.getPath();
        boolean boolean13 = nestedInnerQueryParseSupport1.queryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = nestedInnerQueryParseSupport1.parentObjectMapper;
        nestedInnerQueryParseSupport1.setfilterFound(true);
        org.apache.lucene.search.Filter filter17 = nestedInnerQueryParseSupport1.childFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        boolean boolean19 = nestedInnerQueryParseSupport1.getfilterFound();
        java.lang.Class<?> wildcardClass20 = nestedInnerQueryParseSupport1.getClass();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(objectMapper14);
        org.junit.Assert.assertNull(filter17);
        org.junit.Assert.assertNull(objectMapper18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test19084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19084");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Query query5 = nestedInnerQueryParseSupport1.innerFilter;
        nestedInnerQueryParseSupport1.path = "object";
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter8);
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound();
        org.apache.lucene.search.Query query11 = nestedInnerQueryParseSupport1.innerQuery;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter12 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean13 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = nestedInnerQueryParseSupport1.parentFilter;
        java.lang.String str15 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.queryParsed = false;
        boolean boolean18 = nestedInnerQueryParseSupport1.getqueryFound();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(query5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(query11);
        org.junit.Assert.assertNull(bitDocIdSetFilter12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "object" + "'", str15, "object");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test19085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19085");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper5 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper5;
        org.apache.lucene.search.Filter filter7 = nestedInnerQueryParseSupport1.childFilter;
        nestedInnerQueryParseSupport1.queryParsed = true;
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.apache.lucene.search.Query query12 = nestedInnerQueryParseSupport1.innerQuery;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(filter7);
        org.junit.Assert.assertNull(query12);
    }

    @Test
    public void test19086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19086");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        java.lang.String str3 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        boolean boolean6 = nestedInnerQueryParseSupport1.getfilterFound();
        nestedInnerQueryParseSupport1.setfilterFound(false);
        org.apache.lucene.search.Filter filter9 = null;
        nestedInnerQueryParseSupport1.childFilter = filter9;
        org.apache.lucene.search.Query query11 = null;
        nestedInnerQueryParseSupport1.innerFilter = query11;
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = nestedInnerQueryParseSupport1.source;
        boolean boolean14 = nestedInnerQueryParseSupport1.queryParsed;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(bytesReference13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test19087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19087");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Query query5 = null;
        nestedInnerQueryParseSupport1.innerFilter = query5;
        org.apache.lucene.search.Filter filter7 = nestedInnerQueryParseSupport1.getchildFilter();
        boolean boolean8 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference9 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference9);
        boolean boolean11 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean12 = nestedInnerQueryParseSupport1.getqueryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.getparentFilter();
        org.apache.lucene.search.Filter filter14 = nestedInnerQueryParseSupport1.getchildFilter();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper16 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(filter7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
        org.junit.Assert.assertNull(filter14);
        org.junit.Assert.assertNull(objectMapper15);
        org.junit.Assert.assertNull(objectMapper16);
    }

    @Test
    public void test19088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19088");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.path = "nested";
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter15 = nestedInnerQueryParseSupport1.parentFilter;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(objectMapper11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter15);
    }

    @Test
    public void test19089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19089");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        java.lang.String str3 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.queryFound = false;
        org.apache.lucene.search.Query query6 = nestedInnerQueryParseSupport1.innerFilter;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound();
        boolean boolean8 = nestedInnerQueryParseSupport1.getqueryFound();
        org.apache.lucene.search.Query query9 = nestedInnerQueryParseSupport1.innerFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = nestedInnerQueryParseSupport1.getparentFilter();
        boolean boolean11 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean12 = nestedInnerQueryParseSupport1.getqueryParsed();
        nestedInnerQueryParseSupport1.queryFound = true;
        boolean boolean15 = nestedInnerQueryParseSupport1.getqueryFound();
        boolean boolean16 = nestedInnerQueryParseSupport1.queryFound();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(query6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(query9);
        org.junit.Assert.assertNull(bitDocIdSetFilter10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test19090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19090");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.apache.lucene.search.Query query8 = nestedInnerQueryParseSupport1.getInnerFilter();
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.apache.lucene.search.Filter filter11 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.Filter filter12 = null;
        nestedInnerQueryParseSupport1.childFilter = filter12;
        org.elasticsearch.common.bytes.BytesReference bytesReference14 = nestedInnerQueryParseSupport1.getsource();
        boolean boolean15 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter16 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter16);
        org.apache.lucene.search.Query query18 = null;
        nestedInnerQueryParseSupport1.innerQuery = query18;
        org.elasticsearch.index.query.QueryParseContext queryParseContext20 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.common.bytes.BytesReference bytesReference21 = nestedInnerQueryParseSupport1.source;
        org.apache.lucene.search.Query query22 = nestedInnerQueryParseSupport1.getInnerFilter();
        org.apache.lucene.search.Filter filter23 = nestedInnerQueryParseSupport1.getchildFilter();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(query8);
        org.junit.Assert.assertNull(filter11);
        org.junit.Assert.assertNull(bytesReference14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(queryParseContext20);
        org.junit.Assert.assertNull(bytesReference21);
        org.junit.Assert.assertNull(query22);
        org.junit.Assert.assertNull(filter23);
    }

    @Test
    public void test19091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19091");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper9;
        org.apache.lucene.search.Filter filter11 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter11);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper13;
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.Filter filter17 = null;
        nestedInnerQueryParseSupport1.childFilter = filter17;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper19 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper19;
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.Filter filter23 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter23);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test19092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19092");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        nestedInnerQueryParseSupport1.path = "nested";
        boolean boolean11 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        nestedInnerQueryParseSupport1.queryParsed = false;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        boolean boolean17 = nestedInnerQueryParseSupport1.getqueryParsed();
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter20 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter20);
        org.apache.lucene.search.Query query22 = null;
        nestedInnerQueryParseSupport1.innerQuery = query22;
        org.apache.lucene.search.Query query24 = null;
        nestedInnerQueryParseSupport1.innerQuery = query24;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test19093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19093");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        boolean boolean8 = nestedInnerQueryParseSupport1.filterFound;
        java.lang.String str9 = nestedInnerQueryParseSupport1.path;
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.common.bytes.BytesReference bytesReference11 = nestedInnerQueryParseSupport1.getsource();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.elasticsearch.index.query.QueryParseContext queryParseContext13 = nestedInnerQueryParseSupport1.parseContext;
        org.apache.lucene.search.Filter filter14 = null;
        nestedInnerQueryParseSupport1.childFilter = filter14;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter16 = nestedInnerQueryParseSupport1.getparentFilter();
        java.lang.Class<?> wildcardClass17 = nestedInnerQueryParseSupport1.getClass();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(bytesReference11);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertNull(queryParseContext13);
        org.junit.Assert.assertNull(bitDocIdSetFilter16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test19094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19094");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.Filter filter12 = nestedInnerQueryParseSupport1.childFilter;
        boolean boolean13 = nestedInnerQueryParseSupport1.getfilterFound();
        boolean boolean14 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = nestedInnerQueryParseSupport1.source;
        org.apache.lucene.search.Filter filter16 = nestedInnerQueryParseSupport1.getchildFilter();
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(filter12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(bytesReference15);
        org.junit.Assert.assertNull(filter16);
    }

    @Test
    public void test19095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19095");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.source = bytesReference8;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = nestedInnerQueryParseSupport1.parentObjectMapper;
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper13;
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = null;
        nestedInnerQueryParseSupport1.source = bytesReference15;
        org.apache.lucene.search.Filter filter17 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter17);
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.elasticsearch.common.bytes.BytesReference bytesReference23 = null;
        nestedInnerQueryParseSupport1.source = bytesReference23;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(objectMapper10);
    }

    @Test
    public void test19096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19096");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.elasticsearch.common.bytes.BytesReference bytesReference5 = null;
        nestedInnerQueryParseSupport1.source = bytesReference5;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper7 = nestedInnerQueryParseSupport1.parentObjectMapper;
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter10);
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(objectMapper7);
    }

    @Test
    public void test19097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19097");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        nestedInnerQueryParseSupport1.path = "nested";
        java.lang.String str11 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.queryParsed = false;
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.apache.lucene.search.Filter filter16 = nestedInnerQueryParseSupport1.getchildFilter();
        java.lang.String str17 = nestedInnerQueryParseSupport1.path;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "nested" + "'", str11, "nested");
        org.junit.Assert.assertNull(filter16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "nested" + "'", str17, "nested");
    }

    @Test
    public void test19098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19098");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.Filter filter12 = nestedInnerQueryParseSupport1.childFilter;
        java.lang.String str13 = nestedInnerQueryParseSupport1.getPath();
        boolean boolean14 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        org.apache.lucene.search.Filter filter16 = null;
        nestedInnerQueryParseSupport1.childFilter = filter16;
        java.lang.Class<?> wildcardClass18 = nestedInnerQueryParseSupport1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(filter12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(objectMapper15);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test19099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19099");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        org.apache.lucene.search.Query query9 = nestedInnerQueryParseSupport1.innerFilter;
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound;
        nestedInnerQueryParseSupport1.path = "hi!";
        nestedInnerQueryParseSupport1.filterParsed = true;
        java.lang.String str15 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.filterParsed = true;
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper20 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter21 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter21);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(query9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(objectMapper20);
    }

    @Test
    public void test19100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19100");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        org.apache.lucene.search.Query query3 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper4 = nestedInnerQueryParseSupport1.parentObjectMapper;
        boolean boolean5 = nestedInnerQueryParseSupport1.queryFound;
        org.apache.lucene.search.Filter filter6 = nestedInnerQueryParseSupport1.getchildFilter();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper7 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        nestedInnerQueryParseSupport1.path = "";
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertNull(query3);
        org.junit.Assert.assertNull(objectMapper4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(filter6);
        org.junit.Assert.assertNull(objectMapper7);
    }

    @Test
    public void test19101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19101");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound();
        nestedInnerQueryParseSupport1.setfilterFound(false);
        org.apache.lucene.search.Filter filter7 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter7);
        org.apache.lucene.search.Query query9 = nestedInnerQueryParseSupport1.innerQuery;
        nestedInnerQueryParseSupport1.queryFound = false;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper12;
        boolean boolean14 = nestedInnerQueryParseSupport1.getqueryFound();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(query9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test19102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19102");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter5 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter5);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter7 = nestedInnerQueryParseSupport1.getparentFilter();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = nestedInnerQueryParseSupport1.getparentFilter();
        nestedInnerQueryParseSupport1.setfilterFound(false);
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter13;
        org.apache.lucene.search.Query query15 = nestedInnerQueryParseSupport1.getInnerQuery();
        boolean boolean16 = nestedInnerQueryParseSupport1.filterFound;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter7);
        org.junit.Assert.assertNull(bitDocIdSetFilter8);
        org.junit.Assert.assertNull(query15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test19103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19103");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound();
        boolean boolean5 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.apache.lucene.search.Query query6 = null;
        nestedInnerQueryParseSupport1.innerQuery = query6;
        org.apache.lucene.search.Filter filter8 = null;
        nestedInnerQueryParseSupport1.childFilter = filter8;
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test19104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19104");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Query query12 = null;
        nestedInnerQueryParseSupport1.innerQuery = query12;
        boolean boolean14 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Filter filter15 = null;
        nestedInnerQueryParseSupport1.childFilter = filter15;
        org.elasticsearch.common.bytes.BytesReference bytesReference17 = null;
        nestedInnerQueryParseSupport1.source = bytesReference17;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test19105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19105");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Query query12 = null;
        nestedInnerQueryParseSupport1.innerQuery = query12;
        org.elasticsearch.index.query.QueryParseContext queryParseContext14 = nestedInnerQueryParseSupport1.parseContext;
        org.apache.lucene.search.Filter filter15 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter15);
        nestedInnerQueryParseSupport1.setqueryFound(true);
        nestedInnerQueryParseSupport1.path = "hi!";
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper21 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter22 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter22;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper24 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(queryParseContext14);
        org.junit.Assert.assertNull(objectMapper21);
        org.junit.Assert.assertNull(objectMapper24);
    }

    @Test
    public void test19106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19106");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.index.query.QueryParseContext queryParseContext4 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean5 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper6 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter9 = nestedInnerQueryParseSupport1.getparentFilter();
        org.apache.lucene.search.Filter filter10 = null;
        nestedInnerQueryParseSupport1.childFilter = filter10;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(queryParseContext4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(objectMapper6);
        org.junit.Assert.assertNull(bitDocIdSetFilter9);
    }

    @Test
    public void test19107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19107");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound();
        org.apache.lucene.search.Query query15 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference16 = null;
        nestedInnerQueryParseSupport1.source = bytesReference16;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter18 = nestedInnerQueryParseSupport1.getparentFilter();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper19 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.elasticsearch.index.query.QueryParseContext queryParseContext20 = nestedInnerQueryParseSupport1.parseContext;
        org.apache.lucene.search.Query query21 = null;
        nestedInnerQueryParseSupport1.innerFilter = query21;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(query15);
        org.junit.Assert.assertNull(bitDocIdSetFilter18);
        org.junit.Assert.assertNull(objectMapper19);
        org.junit.Assert.assertNull(queryParseContext20);
    }

    @Test
    public void test19108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19108");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterFound();
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound();
        boolean boolean11 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.parentObjectMapper;
        boolean boolean13 = nestedInnerQueryParseSupport1.filterParsed;
        org.apache.lucene.search.Filter filter14 = null;
        nestedInnerQueryParseSupport1.childFilter = filter14;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter16 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter16;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test19109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19109");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean11 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference12);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        nestedInnerQueryParseSupport1.path = "hi!";
        org.apache.lucene.search.Query query17 = null;
        nestedInnerQueryParseSupport1.innerFilter = query17;
        nestedInnerQueryParseSupport1.queryFound = false;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter21 = nestedInnerQueryParseSupport1.getparentFilter();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(objectMapper14);
        org.junit.Assert.assertNull(bitDocIdSetFilter21);
    }

    @Test
    public void test19110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19110");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.filterFound = false;
        nestedInnerQueryParseSupport1.setfilterFound(true);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter15 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter15;
        boolean boolean17 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter18 = nestedInnerQueryParseSupport1.getparentFilter();
        org.elasticsearch.common.bytes.BytesReference bytesReference19 = null;
        nestedInnerQueryParseSupport1.source = bytesReference19;
        nestedInnerQueryParseSupport1.queryFound = false;
        nestedInnerQueryParseSupport1.filterFound = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(bitDocIdSetFilter18);
    }

    @Test
    public void test19111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19111");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.path = "nested";
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        nestedInnerQueryParseSupport1.queryFound = true;
        org.apache.lucene.search.Query query14 = nestedInnerQueryParseSupport1.innerFilter;
        boolean boolean15 = nestedInnerQueryParseSupport1.getqueryParsed();
        boolean boolean16 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Query query17 = nestedInnerQueryParseSupport1.getInnerFilter();
        boolean boolean18 = nestedInnerQueryParseSupport1.getqueryParsed();
        boolean boolean19 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(query14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(query17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test19112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19112");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound();
        boolean boolean11 = nestedInnerQueryParseSupport1.queryParsed;
        java.lang.String str12 = nestedInnerQueryParseSupport1.getPath();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.getparentFilter();
        org.apache.lucene.search.Filter filter14 = nestedInnerQueryParseSupport1.childFilter;
        nestedInnerQueryParseSupport1.setqueryFound(false);
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.setPathLevel();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
        org.junit.Assert.assertNull(filter14);
    }

    @Test
    public void test19113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19113");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        org.elasticsearch.index.query.QueryParseContext queryParseContext10 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean11 = nestedInnerQueryParseSupport1.filterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper13;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(queryParseContext10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(objectMapper12);
    }

    @Test
    public void test19114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19114");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = nestedInnerQueryParseSupport1.source;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter15 = nestedInnerQueryParseSupport1.getparentFilter();
        nestedInnerQueryParseSupport1.filterParsed = false;
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bytesReference12);
        org.junit.Assert.assertNull(bitDocIdSetFilter15);
    }

    @Test
    public void test19115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19115");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        nestedInnerQueryParseSupport1.queryFound = false;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = nestedInnerQueryParseSupport1.source;
        boolean boolean14 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = null;
        nestedInnerQueryParseSupport1.source = bytesReference15;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertNull(bytesReference13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test19116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19116");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.apache.lucene.search.Query query4 = nestedInnerQueryParseSupport1.innerQuery;
        boolean boolean5 = nestedInnerQueryParseSupport1.queryFound();
        nestedInnerQueryParseSupport1.setfilterFound(true);
        nestedInnerQueryParseSupport1.path = "nested";
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.Query query11 = nestedInnerQueryParseSupport1.getInnerQuery();
        org.elasticsearch.index.query.QueryParseContext queryParseContext12 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.Filter filter13 = null;
        nestedInnerQueryParseSupport1.childFilter = filter13;
        org.junit.Assert.assertNull(query4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(query11);
        org.junit.Assert.assertNull(queryParseContext12);
    }

    @Test
    public void test19117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19117");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        org.apache.lucene.search.Query query3 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper4 = nestedInnerQueryParseSupport1.parentObjectMapper;
        boolean boolean5 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.apache.lucene.search.Query query8 = nestedInnerQueryParseSupport1.innerFilter;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertNull(query3);
        org.junit.Assert.assertNull(objectMapper4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(query8);
    }

    @Test
    public void test19118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19118");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.path = "nested";
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter11 = nestedInnerQueryParseSupport1.parentFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper12;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper15;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter11);
        org.junit.Assert.assertNull(objectMapper14);
    }

    @Test
    public void test19119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19119");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query4 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference5 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference5);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter7 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter7);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper9;
        org.elasticsearch.common.bytes.BytesReference bytesReference11 = nestedInnerQueryParseSupport1.source;
        nestedInnerQueryParseSupport1.path = "";
        nestedInnerQueryParseSupport1.queryParsed = true;
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(query4);
        org.junit.Assert.assertNull(bytesReference11);
    }

    @Test
    public void test19120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19120");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        nestedInnerQueryParseSupport1.filterParsed = true;
        boolean boolean11 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter12 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter12;
        org.apache.lucene.search.Filter filter14 = nestedInnerQueryParseSupport1.childFilter;
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.apache.lucene.search.Filter filter17 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter17);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(filter14);
    }

    @Test
    public void test19121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19121");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        nestedInnerQueryParseSupport1.filterParsed = false;
        nestedInnerQueryParseSupport1.path = "nested";
        org.apache.lucene.search.Query query14 = null;
        nestedInnerQueryParseSupport1.innerFilter = query14;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper18;
        boolean boolean20 = nestedInnerQueryParseSupport1.getfilterFound();
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.apache.lucene.search.Query query23 = null;
        nestedInnerQueryParseSupport1.innerFilter = query23;
        nestedInnerQueryParseSupport1.queryFound = true;
        boolean boolean27 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference28 = nestedInnerQueryParseSupport1.source;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter29 = nestedInnerQueryParseSupport1.getparentFilter();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.lucene.search.Query query30 = nestedInnerQueryParseSupport1.getInnerQuery();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(bytesReference28);
        org.junit.Assert.assertNull(bitDocIdSetFilter29);
    }

    @Test
    public void test19122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19122");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = nestedInnerQueryParseSupport1.getsource();
        org.apache.lucene.search.Filter filter5 = nestedInnerQueryParseSupport1.getchildFilter();
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.source = bytesReference6;
        org.apache.lucene.search.Filter filter8 = nestedInnerQueryParseSupport1.childFilter;
        org.elasticsearch.index.query.QueryParseContext queryParseContext9 = nestedInnerQueryParseSupport1.getparseContext();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(bytesReference4);
        org.junit.Assert.assertNull(filter5);
        org.junit.Assert.assertNull(filter8);
        org.junit.Assert.assertNull(queryParseContext9);
    }

    @Test
    public void test19123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19123");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterFound();
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound();
        boolean boolean11 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean12 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference13);
        org.elasticsearch.index.query.QueryParseContext queryParseContext15 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.Filter filter16 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter16);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.elasticsearch.index.query.QueryParseContext queryParseContext19 = nestedInnerQueryParseSupport1.parseContext;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(queryParseContext15);
        org.junit.Assert.assertNull(objectMapper18);
        org.junit.Assert.assertNull(queryParseContext19);
    }

    @Test
    public void test19124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19124");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = nestedInnerQueryParseSupport1.getsource();
        boolean boolean7 = nestedInnerQueryParseSupport1.filterParsed;
        nestedInnerQueryParseSupport1.setqueryFound(false);
        nestedInnerQueryParseSupport1.path = "nested";
        org.apache.lucene.search.Query query12 = null;
        nestedInnerQueryParseSupport1.innerQuery = query12;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter16 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter16;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter20 = nestedInnerQueryParseSupport1.getparentFilter();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(bytesReference6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter20);
    }

    @Test
    public void test19125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19125");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter4;
        org.apache.lucene.search.Filter filter6 = null;
        nestedInnerQueryParseSupport1.childFilter = filter6;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter8;
        org.apache.lucene.search.Query query10 = null;
        nestedInnerQueryParseSupport1.innerQuery = query10;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper12;
        org.apache.lucene.search.Filter filter14 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.Query query15 = nestedInnerQueryParseSupport1.innerQuery;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(filter14);
        org.junit.Assert.assertNull(query15);
    }

    @Test
    public void test19126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19126");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.index.query.QueryParseContext queryParseContext4 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean5 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = nestedInnerQueryParseSupport1.getsource();
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.parseContext;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(queryParseContext4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(bytesReference6);
        org.junit.Assert.assertNull(queryParseContext11);
    }

    @Test
    public void test19127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19127");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter9 = nestedInnerQueryParseSupport1.parentFilter;
        org.elasticsearch.index.query.QueryParseContext queryParseContext10 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter11 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.Query query12 = null;
        nestedInnerQueryParseSupport1.innerQuery = query12;
        boolean boolean14 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = nestedInnerQueryParseSupport1.getsource();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter16 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter16);
        org.apache.lucene.search.Query query18 = null;
        nestedInnerQueryParseSupport1.innerFilter = query18;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.apache.lucene.search.Filter filter22 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter22);
        org.apache.lucene.search.Query query24 = nestedInnerQueryParseSupport1.innerQuery;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter25 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter25;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.lucene.search.Query query27 = nestedInnerQueryParseSupport1.getInnerQuery();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper8);
        org.junit.Assert.assertNull(bitDocIdSetFilter9);
        org.junit.Assert.assertNull(queryParseContext10);
        org.junit.Assert.assertNull(bitDocIdSetFilter11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(bytesReference15);
        org.junit.Assert.assertNull(query24);
    }

    @Test
    public void test19128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19128");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.Query query4 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.index.query.QueryParseContext queryParseContext5 = nestedInnerQueryParseSupport1.parseContext;
        java.lang.String str6 = nestedInnerQueryParseSupport1.getPath();
        nestedInnerQueryParseSupport1.path = "hi!";
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(query4);
        org.junit.Assert.assertNull(queryParseContext5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test19129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19129");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterFound();
        org.apache.lucene.search.Filter filter10 = nestedInnerQueryParseSupport1.childFilter;
        org.apache.lucene.search.Query query11 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = nestedInnerQueryParseSupport1.source;
        org.apache.lucene.search.Filter filter13 = nestedInnerQueryParseSupport1.childFilter;
        java.lang.String str14 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.filterFound = false;
        org.elasticsearch.common.bytes.BytesReference bytesReference17 = null;
        nestedInnerQueryParseSupport1.source = bytesReference17;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(filter10);
        org.junit.Assert.assertNull(query11);
        org.junit.Assert.assertNull(bytesReference12);
        org.junit.Assert.assertNull(filter13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test19130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19130");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter3 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound;
        java.lang.String str5 = nestedInnerQueryParseSupport1.path;
        org.apache.lucene.search.Filter filter6 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter6);
        org.apache.lucene.search.Query query8 = nestedInnerQueryParseSupport1.innerQuery;
        boolean boolean9 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean10 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean11 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper12;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(query8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test19131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19131");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound();
        nestedInnerQueryParseSupport1.setfilterFound(false);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter7 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter7);
        org.apache.lucene.search.Filter filter9 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter9);
        boolean boolean11 = nestedInnerQueryParseSupport1.filterParsed;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        boolean boolean13 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter14);
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test19132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19132");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter3 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter3;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter5 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter5);
        org.junit.Assert.assertNull(bytesReference2);
    }

    @Test
    public void test19133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19133");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter3 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean4 = nestedInnerQueryParseSupport1.filterFound();
        boolean boolean5 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean6 = nestedInnerQueryParseSupport1.getqueryFound();
        nestedInnerQueryParseSupport1.filterFound = true;
        java.lang.String str9 = nestedInnerQueryParseSupport1.path;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        boolean boolean11 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean12 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter13);
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        java.lang.String str19 = nestedInnerQueryParseSupport1.path;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(objectMapper10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test19134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19134");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper5 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper5;
        org.apache.lucene.search.Query query7 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper9;
        boolean boolean11 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = nestedInnerQueryParseSupport1.source;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertNull(query7);
        org.junit.Assert.assertNull(objectMapper8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertNull(bytesReference13);
    }

    @Test
    public void test19135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19135");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound();
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        boolean boolean7 = nestedInnerQueryParseSupport1.filterParsed;
        org.apache.lucene.search.Query query8 = nestedInnerQueryParseSupport1.innerQuery;
        boolean boolean9 = nestedInnerQueryParseSupport1.getqueryFound();
        java.lang.String str10 = nestedInnerQueryParseSupport1.getPath();
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(query8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test19136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19136");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryParsed;
        org.elasticsearch.common.bytes.BytesReference bytesReference11 = nestedInnerQueryParseSupport1.getsource();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        boolean boolean13 = nestedInnerQueryParseSupport1.queryParsed;
        org.elasticsearch.common.bytes.BytesReference bytesReference14 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference14);
        org.elasticsearch.common.bytes.BytesReference bytesReference16 = null;
        nestedInnerQueryParseSupport1.source = bytesReference16;
        org.apache.lucene.search.Query query18 = nestedInnerQueryParseSupport1.innerQuery;
        boolean boolean19 = nestedInnerQueryParseSupport1.queryFound();
        boolean boolean20 = nestedInnerQueryParseSupport1.queryFound;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(bytesReference11);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(query18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test19137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19137");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.apache.lucene.search.Query query8 = nestedInnerQueryParseSupport1.getInnerFilter();
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.apache.lucene.search.Filter filter11 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.Filter filter12 = nestedInnerQueryParseSupport1.getchildFilter();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper13;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper15;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(query8);
        org.junit.Assert.assertNull(filter11);
        org.junit.Assert.assertNull(filter12);
    }

    @Test
    public void test19138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19138");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Query query12 = null;
        nestedInnerQueryParseSupport1.innerQuery = query12;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = nestedInnerQueryParseSupport1.getparentFilter();
        boolean boolean15 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper16 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.apache.lucene.search.Filter filter17 = nestedInnerQueryParseSupport1.getchildFilter();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.lucene.search.Query query18 = nestedInnerQueryParseSupport1.getInnerQuery();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(objectMapper16);
        org.junit.Assert.assertNull(filter17);
    }

    @Test
    public void test19139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19139");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query4 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference5 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference5);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter7 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter7);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper9;
        nestedInnerQueryParseSupport1.setfilterFound(true);
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = nestedInnerQueryParseSupport1.source;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(query4);
        org.junit.Assert.assertNull(bytesReference13);
    }

    @Test
    public void test19140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19140");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.apache.lucene.search.Query query8 = nestedInnerQueryParseSupport1.getInnerFilter();
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.apache.lucene.search.Filter filter11 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.Filter filter12 = null;
        nestedInnerQueryParseSupport1.childFilter = filter12;
        org.elasticsearch.index.query.QueryParseContext queryParseContext14 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.queryFound = true;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(query8);
        org.junit.Assert.assertNull(filter11);
        org.junit.Assert.assertNull(queryParseContext14);
    }

    @Test
    public void test19141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19141");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterFound();
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound();
        boolean boolean11 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        org.apache.lucene.search.Filter filter14 = null;
        nestedInnerQueryParseSupport1.childFilter = filter14;
        nestedInnerQueryParseSupport1.setqueryFound(false);
        nestedInnerQueryParseSupport1.queryFound = true;
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.resetPathLevel();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertNull(objectMapper13);
    }

    @Test
    public void test19142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19142");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryParsed;
        nestedInnerQueryParseSupport1.path = "object";
        org.apache.lucene.search.Filter filter13 = null;
        nestedInnerQueryParseSupport1.childFilter = filter13;
        boolean boolean15 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean16 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.setfilterFound(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test19143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19143");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        nestedInnerQueryParseSupport1.filterParsed = true;
        java.lang.String str11 = nestedInnerQueryParseSupport1.getPath();
        org.apache.lucene.search.Query query12 = nestedInnerQueryParseSupport1.innerFilter;
        java.lang.String str13 = nestedInnerQueryParseSupport1.getPath();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper14;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter16 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter16;
        boolean boolean18 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.apache.lucene.search.Filter filter19 = nestedInnerQueryParseSupport1.childFilter;
        org.elasticsearch.index.query.QueryParseContext queryParseContext20 = nestedInnerQueryParseSupport1.parseContext;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(query12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(filter19);
        org.junit.Assert.assertNull(queryParseContext20);
    }

    @Test
    public void test19144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19144");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        nestedInnerQueryParseSupport1.queryFound = false;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter14;
        org.apache.lucene.search.Query query16 = nestedInnerQueryParseSupport1.innerFilter;
        nestedInnerQueryParseSupport1.setfilterFound(false);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(query16);
    }

    @Test
    public void test19145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19145");
        org.elasticsearch.index.mapper.object.ObjectMapper.Nested nested0 = org.elasticsearch.index.mapper.object.ObjectMapper.Nested.NO;
        boolean boolean1 = nested0.isIncludeInRoot();
        boolean boolean2 = nested0.isIncludeInRoot();
        boolean boolean3 = nested0.isIncludeInParent();
        boolean boolean4 = nested0.isIncludeInParent();
        boolean boolean5 = nested0.isNested();
        boolean boolean6 = nested0.isNested();
        org.junit.Assert.assertNotNull(nested0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test19146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19146");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound();
        nestedInnerQueryParseSupport1.path = "";
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = nestedInnerQueryParseSupport1.source;
        org.apache.lucene.search.Filter filter14 = nestedInnerQueryParseSupport1.childFilter;
        org.apache.lucene.search.Query query15 = nestedInnerQueryParseSupport1.innerQuery;
        boolean boolean16 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.apache.lucene.search.Filter filter17 = nestedInnerQueryParseSupport1.childFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper18;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter20 = nestedInnerQueryParseSupport1.parentFilter;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.lucene.search.Query query21 = nestedInnerQueryParseSupport1.getInnerQuery();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(bytesReference13);
        org.junit.Assert.assertNull(filter14);
        org.junit.Assert.assertNull(query15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(filter17);
        org.junit.Assert.assertNull(bitDocIdSetFilter20);
    }

    @Test
    public void test19147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19147");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query4 = null;
        nestedInnerQueryParseSupport1.innerFilter = query4;
        nestedInnerQueryParseSupport1.path = "";
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.queryFound();
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter11 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean12 = nestedInnerQueryParseSupport1.filterParsed;
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = nestedInnerQueryParseSupport1.getsource();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter14);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bytesReference13);
    }

    @Test
    public void test19148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19148");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.index.query.QueryParseContext queryParseContext4 = nestedInnerQueryParseSupport1.parseContext;
        org.apache.lucene.search.Query query5 = nestedInnerQueryParseSupport1.innerQuery;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter9 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter9;
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.parseContext;
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = nestedInnerQueryParseSupport1.source;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(queryParseContext4);
        org.junit.Assert.assertNull(query5);
        org.junit.Assert.assertNull(bitDocIdSetFilter8);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertNull(bytesReference12);
        org.junit.Assert.assertNull(objectMapper13);
    }

    @Test
    public void test19149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19149");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        boolean boolean3 = nestedInnerQueryParseSupport1.queryParsed;
        nestedInnerQueryParseSupport1.path = "object";
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.apache.lucene.search.Query query8 = nestedInnerQueryParseSupport1.getInnerQuery();
        org.elasticsearch.index.query.QueryParseContext queryParseContext9 = nestedInnerQueryParseSupport1.getparseContext();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(query8);
        org.junit.Assert.assertNull(queryParseContext9);
    }

    @Test
    public void test19150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19150");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound();
        boolean boolean15 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean16 = nestedInnerQueryParseSupport1.queryParsed;
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.setPathLevel();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test19151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19151");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Query query13 = null;
        nestedInnerQueryParseSupport1.innerQuery = query13;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.apache.lucene.search.Query query18 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper19 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper19;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(objectMapper15);
        org.junit.Assert.assertNull(query18);
    }

    @Test
    public void test19152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19152");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = true;
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter7 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = nestedInnerQueryParseSupport1.parentFilter;
        nestedInnerQueryParseSupport1.setqueryFound(false);
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Filter filter13 = nestedInnerQueryParseSupport1.childFilter;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter7);
        org.junit.Assert.assertNull(bitDocIdSetFilter8);
        org.junit.Assert.assertNull(filter13);
    }

    @Test
    public void test19153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19153");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.apache.lucene.search.Query query5 = nestedInnerQueryParseSupport1.getInnerFilter();
        nestedInnerQueryParseSupport1.filterFound = false;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.index.query.QueryParseContext queryParseContext10 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.Filter filter11 = nestedInnerQueryParseSupport1.getchildFilter();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(query5);
        org.junit.Assert.assertNull(queryParseContext10);
        org.junit.Assert.assertNull(filter11);
    }

    @Test
    public void test19154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19154");
        org.elasticsearch.index.mapper.object.ObjectMapper.Nested nested2 = org.elasticsearch.index.mapper.object.ObjectMapper.Nested.newNested(true, false);
        boolean boolean3 = nested2.isNested();
        boolean boolean4 = nested2.isIncludeInParent();
        boolean boolean5 = nested2.isIncludeInRoot();
        boolean boolean6 = nested2.isNested();
        boolean boolean7 = nested2.isNested();
        boolean boolean8 = nested2.isNested();
        boolean boolean9 = nested2.isNested();
        boolean boolean10 = nested2.isIncludeInRoot();
        boolean boolean11 = nested2.isNested();
        org.junit.Assert.assertNotNull(nested2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test19155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19155");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference13);
        boolean boolean15 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Filter filter16 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter17 = nestedInnerQueryParseSupport1.getparentFilter();
        org.apache.lucene.search.Query query18 = nestedInnerQueryParseSupport1.innerFilter;
        boolean boolean19 = nestedInnerQueryParseSupport1.queryParsed;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter20 = nestedInnerQueryParseSupport1.getparentFilter();
        org.apache.lucene.search.Query query21 = nestedInnerQueryParseSupport1.innerQuery;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(filter16);
        org.junit.Assert.assertNull(bitDocIdSetFilter17);
        org.junit.Assert.assertNull(query18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter20);
        org.junit.Assert.assertNull(query21);
    }

    @Test
    public void test19156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19156");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        nestedInnerQueryParseSupport1.queryFound = false;
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = nestedInnerQueryParseSupport1.getsource();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.getparentFilter();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bytesReference12);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
    }

    @Test
    public void test19157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19157");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound();
        nestedInnerQueryParseSupport1.setfilterFound(false);
        boolean boolean7 = nestedInnerQueryParseSupport1.getfilterFound();
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter10;
        org.apache.lucene.search.Query query12 = nestedInnerQueryParseSupport1.innerFilter;
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(query12);
        org.junit.Assert.assertNull(objectMapper15);
    }

    @Test
    public void test19158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19158");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        java.lang.String str3 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.queryFound = false;
        boolean boolean6 = nestedInnerQueryParseSupport1.filterFound();
        boolean boolean7 = nestedInnerQueryParseSupport1.getqueryFound();
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test19159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19159");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.apache.lucene.search.Query query5 = nestedInnerQueryParseSupport1.getInnerFilter();
        nestedInnerQueryParseSupport1.filterFound = false;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.apache.lucene.search.Query query10 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper11;
        org.apache.lucene.search.Query query13 = null;
        nestedInnerQueryParseSupport1.innerQuery = query13;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(query5);
        org.junit.Assert.assertNull(query10);
    }

    @Test
    public void test19160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19160");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.Query query4 = nestedInnerQueryParseSupport1.innerFilter;
        nestedInnerQueryParseSupport1.filterParsed = true;
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(query4);
    }

    @Test
    public void test19161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19161");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter5 = nestedInnerQueryParseSupport1.getparentFilter();
        nestedInnerQueryParseSupport1.filterFound = true;
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper10;
        boolean boolean12 = nestedInnerQueryParseSupport1.filterParsed;
        boolean boolean13 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.Query query15 = null;
        nestedInnerQueryParseSupport1.innerQuery = query15;
        boolean boolean17 = nestedInnerQueryParseSupport1.filterFound();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test19162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19162");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper2 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper2;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter4;
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.filterFound();
        nestedInnerQueryParseSupport1.setfilterFound(true);
        java.lang.Class<?> wildcardClass10 = nestedInnerQueryParseSupport1.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test19163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19163");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper9;
        org.elasticsearch.common.bytes.BytesReference bytesReference11 = null;
        nestedInnerQueryParseSupport1.source = bytesReference11;
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = null;
        nestedInnerQueryParseSupport1.source = bytesReference13;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        nestedInnerQueryParseSupport1.filterParsed = false;
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(objectMapper15);
    }

    @Test
    public void test19164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19164");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryParsed;
        nestedInnerQueryParseSupport1.path = "object";
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.apache.lucene.search.Filter filter14 = nestedInnerQueryParseSupport1.childFilter;
        boolean boolean15 = nestedInnerQueryParseSupport1.filterFound();
        boolean boolean16 = nestedInnerQueryParseSupport1.getfilterFound();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(objectMapper13);
        org.junit.Assert.assertNull(filter14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test19165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19165");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter2 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter2);
        org.apache.lucene.search.Query query4 = nestedInnerQueryParseSupport1.innerQuery;
        boolean boolean5 = nestedInnerQueryParseSupport1.queryFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter6 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter6;
        java.lang.String str8 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.junit.Assert.assertNull(query4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(objectMapper11);
    }

    @Test
    public void test19166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19166");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Query query13 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.common.bytes.BytesReference bytesReference14 = null;
        nestedInnerQueryParseSupport1.source = bytesReference14;
        org.apache.lucene.search.Filter filter16 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.Filter filter17 = nestedInnerQueryParseSupport1.childFilter;
        org.apache.lucene.search.Query query18 = nestedInnerQueryParseSupport1.innerFilter;
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter21 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter21;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper23 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper23;
        org.apache.lucene.search.Filter filter25 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter25);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(query13);
        org.junit.Assert.assertNull(filter16);
        org.junit.Assert.assertNull(filter17);
        org.junit.Assert.assertNull(query18);
    }

    @Test
    public void test19167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19167");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter8;
        org.elasticsearch.common.bytes.BytesReference bytesReference10 = null;
        nestedInnerQueryParseSupport1.source = bytesReference10;
        boolean boolean12 = nestedInnerQueryParseSupport1.filterFound();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test19168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19168");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Query query13 = null;
        nestedInnerQueryParseSupport1.innerQuery = query13;
        boolean boolean15 = nestedInnerQueryParseSupport1.queryParsed;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper16 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        boolean boolean17 = nestedInnerQueryParseSupport1.queryFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference18 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference18);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter20 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter20;
        org.apache.lucene.search.Filter filter22 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter22);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper24 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper24;
        java.lang.String str26 = nestedInnerQueryParseSupport1.path;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(objectMapper16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test19169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19169");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query4 = null;
        nestedInnerQueryParseSupport1.innerFilter = query4;
        nestedInnerQueryParseSupport1.path = "";
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.elasticsearch.common.bytes.BytesReference bytesReference10 = nestedInnerQueryParseSupport1.getsource();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.apache.lucene.search.Filter filter13 = nestedInnerQueryParseSupport1.childFilter;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.query();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(bytesReference10);
        org.junit.Assert.assertNull(objectMapper11);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertNull(filter13);
    }

    @Test
    public void test19170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19170");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterFound();
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound();
        boolean boolean11 = nestedInnerQueryParseSupport1.getfilterFound();
        nestedInnerQueryParseSupport1.setqueryFound(true);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test19171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19171");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        nestedInnerQueryParseSupport1.filterParsed = false;
        nestedInnerQueryParseSupport1.filterFound = false;
        org.apache.lucene.search.Filter filter12 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter12);
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        boolean boolean16 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(objectMapper15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test19172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19172");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.filterFound = false;
        java.lang.String str13 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.filterFound = false;
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.elasticsearch.common.bytes.BytesReference bytesReference18 = null;
        nestedInnerQueryParseSupport1.source = bytesReference18;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test19173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19173");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound();
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.elasticsearch.index.query.QueryParseContext queryParseContext17 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean18 = nestedInnerQueryParseSupport1.getfilterFound();
        nestedInnerQueryParseSupport1.setqueryFound(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper21 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.apache.lucene.search.Filter filter22 = nestedInnerQueryParseSupport1.childFilter;
        nestedInnerQueryParseSupport1.filterFound = false;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(queryParseContext17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(objectMapper21);
        org.junit.Assert.assertNull(filter22);
    }

    @Test
    public void test19174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19174");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter11 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter11);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.parentFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference14 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference14);
        org.elasticsearch.index.query.QueryParseContext queryParseContext16 = nestedInnerQueryParseSupport1.parseContext;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter17 = nestedInnerQueryParseSupport1.getparentFilter();
        org.apache.lucene.search.Query query18 = null;
        nestedInnerQueryParseSupport1.innerQuery = query18;
        boolean boolean20 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper21 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(objectMapper8);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
        org.junit.Assert.assertNull(queryParseContext16);
        org.junit.Assert.assertNull(bitDocIdSetFilter17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(objectMapper21);
    }

    @Test
    public void test19175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19175");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.apache.lucene.search.Query query4 = nestedInnerQueryParseSupport1.innerQuery;
        boolean boolean5 = nestedInnerQueryParseSupport1.getfilterFound();
        boolean boolean6 = nestedInnerQueryParseSupport1.filterParsed;
        org.apache.lucene.search.Query query7 = nestedInnerQueryParseSupport1.getInnerQuery();
        nestedInnerQueryParseSupport1.path = "nested";
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter10);
        org.junit.Assert.assertNull(query4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(query7);
    }

    @Test
    public void test19176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19176");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter3 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean4 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter5 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter5;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter7 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter7);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper9;
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        org.apache.lucene.search.Query query13 = nestedInnerQueryParseSupport1.innerFilter;
        boolean boolean14 = nestedInnerQueryParseSupport1.getqueryParsed();
        boolean boolean15 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper16 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(query13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(objectMapper16);
    }

    @Test
    public void test19177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19177");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.apache.lucene.search.Query query8 = nestedInnerQueryParseSupport1.getInnerFilter();
        java.lang.String str9 = nestedInnerQueryParseSupport1.getPath();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter10);
        org.elasticsearch.index.query.QueryParseContext queryParseContext12 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.Filter filter13 = nestedInnerQueryParseSupport1.childFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = nestedInnerQueryParseSupport1.getparentFilter();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(query8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(queryParseContext12);
        org.junit.Assert.assertNull(filter13);
        org.junit.Assert.assertNull(bitDocIdSetFilter14);
    }

    @Test
    public void test19178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19178");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.queryFound;
        java.lang.String str10 = nestedInnerQueryParseSupport1.getPath();
        nestedInnerQueryParseSupport1.queryFound = true;
        org.apache.lucene.search.Query query13 = nestedInnerQueryParseSupport1.innerFilter;
        java.lang.Class<?> wildcardClass14 = nestedInnerQueryParseSupport1.getClass();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(query13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test19179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19179");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.path = "nested";
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound;
        nestedInnerQueryParseSupport1.path = "object";
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter13);
        org.apache.lucene.search.Query query15 = nestedInnerQueryParseSupport1.innerQuery;
        org.apache.lucene.search.Query query16 = nestedInnerQueryParseSupport1.innerQuery;
        org.apache.lucene.search.Filter filter17 = nestedInnerQueryParseSupport1.getchildFilter();
        nestedInnerQueryParseSupport1.queryFound = true;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(query15);
        org.junit.Assert.assertNull(query16);
        org.junit.Assert.assertNull(filter17);
    }

    @Test
    public void test19180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19180");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper2 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper2;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter4;
        boolean boolean6 = nestedInnerQueryParseSupport1.filterFound();
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        nestedInnerQueryParseSupport1.setfilterFound(false);
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test19181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19181");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound();
        boolean boolean15 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean16 = nestedInnerQueryParseSupport1.queryParsed;
        nestedInnerQueryParseSupport1.path = "";
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper19 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper19;
        java.lang.String str21 = nestedInnerQueryParseSupport1.path;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test19182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19182");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.index.query.QueryParseContext queryParseContext4 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean5 = nestedInnerQueryParseSupport1.getfilterFound();
        org.apache.lucene.search.Filter filter6 = null;
        nestedInnerQueryParseSupport1.childFilter = filter6;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        boolean boolean10 = nestedInnerQueryParseSupport1.queryParsed;
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(queryParseContext4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test19183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19183");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.index.query.QueryParseContext queryParseContext4 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter5 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter6 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean7 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter12 = nestedInnerQueryParseSupport1.getparentFilter();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(queryParseContext4);
        org.junit.Assert.assertNull(bitDocIdSetFilter5);
        org.junit.Assert.assertNull(bitDocIdSetFilter6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter12);
    }

    @Test
    public void test19184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19184");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        boolean boolean3 = nestedInnerQueryParseSupport1.queryParsed;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper4 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper5 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper5;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper7 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.source = bytesReference8;
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        boolean boolean11 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.query.QueryParseContext queryParseContext12 = nestedInnerQueryParseSupport1.parseContext;
        org.apache.lucene.search.Query query13 = nestedInnerQueryParseSupport1.innerFilter;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper4);
        org.junit.Assert.assertNull(objectMapper7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(queryParseContext12);
        org.junit.Assert.assertNull(query13);
    }

    @Test
    public void test19185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19185");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper13;
        nestedInnerQueryParseSupport1.queryParsed = false;
        boolean boolean17 = nestedInnerQueryParseSupport1.getfilterFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter18 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter18);
        java.lang.String str20 = nestedInnerQueryParseSupport1.path;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test19186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19186");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.elasticsearch.index.query.QueryParseContext queryParseContext8 = nestedInnerQueryParseSupport1.parseContext;
        java.lang.String str9 = nestedInnerQueryParseSupport1.getPath();
        boolean boolean10 = nestedInnerQueryParseSupport1.getfilterFound();
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(queryParseContext8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test19187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19187");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = nestedInnerQueryParseSupport1.getsource();
        boolean boolean9 = nestedInnerQueryParseSupport1.filterFound();
        org.apache.lucene.search.Filter filter10 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter10);
        nestedInnerQueryParseSupport1.queryParsed = true;
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.resetPathLevel();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bytesReference8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test19188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19188");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.filterFound = false;
        java.lang.String str13 = nestedInnerQueryParseSupport1.path;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = null;
        nestedInnerQueryParseSupport1.source = bytesReference15;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(objectMapper14);
    }

    @Test
    public void test19189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19189");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = false;
        java.lang.String str5 = nestedInnerQueryParseSupport1.getPath();
        nestedInnerQueryParseSupport1.setfilterFound(true);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter8;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.lucene.search.Query query11 = nestedInnerQueryParseSupport1.getInnerQuery();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(objectMapper10);
    }

    @Test
    public void test19190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19190");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound();
        org.apache.lucene.search.Query query15 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference16 = null;
        nestedInnerQueryParseSupport1.source = bytesReference16;
        boolean boolean18 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper19 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper19;
        java.lang.String str21 = nestedInnerQueryParseSupport1.path;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter22 = nestedInnerQueryParseSupport1.getparentFilter();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper23 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        boolean boolean24 = nestedInnerQueryParseSupport1.queryFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference25 = null;
        nestedInnerQueryParseSupport1.source = bytesReference25;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter27 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter27);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper29 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(query15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(bitDocIdSetFilter22);
        org.junit.Assert.assertNull(objectMapper23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(objectMapper29);
    }

    @Test
    public void test19191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19191");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        nestedInnerQueryParseSupport1.filterParsed = false;
        nestedInnerQueryParseSupport1.path = "nested";
        java.lang.String str14 = nestedInnerQueryParseSupport1.getPath();
        org.apache.lucene.search.Filter filter15 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter15);
        nestedInnerQueryParseSupport1.queryFound = true;
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "nested" + "'", str14, "nested");
    }

    @Test
    public void test19192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19192");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter9 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter9;
        java.lang.String str11 = nestedInnerQueryParseSupport1.getPath();
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.setPathLevel();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test19193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19193");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Filter filter12 = nestedInnerQueryParseSupport1.getchildFilter();
        nestedInnerQueryParseSupport1.queryFound = true;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper15;
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.setPath("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(filter12);
    }

    @Test
    public void test19194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19194");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean9 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Query query10 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference11 = nestedInnerQueryParseSupport1.source;
        boolean boolean12 = nestedInnerQueryParseSupport1.filterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        nestedInnerQueryParseSupport1.setfilterFound(true);
        org.elasticsearch.index.query.QueryParseContext queryParseContext16 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.Filter filter17 = null;
        nestedInnerQueryParseSupport1.childFilter = filter17;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(query10);
        org.junit.Assert.assertNull(bytesReference11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(objectMapper13);
        org.junit.Assert.assertNull(queryParseContext16);
    }

    @Test
    public void test19195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19195");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Query query13 = null;
        nestedInnerQueryParseSupport1.innerQuery = query13;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        java.lang.String str18 = nestedInnerQueryParseSupport1.path;
        org.apache.lucene.search.Query query19 = nestedInnerQueryParseSupport1.innerFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter20 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter21 = nestedInnerQueryParseSupport1.parentFilter;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(objectMapper15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(query19);
        org.junit.Assert.assertNull(bitDocIdSetFilter20);
        org.junit.Assert.assertNull(bitDocIdSetFilter21);
    }

    @Test
    public void test19196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19196");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        java.lang.String str3 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.source = bytesReference6;
        org.elasticsearch.index.query.QueryParseContext queryParseContext8 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterFound();
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass12 = objectMapper11.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(queryParseContext8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(objectMapper11);
    }

    @Test
    public void test19197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19197");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        org.apache.lucene.search.Query query9 = nestedInnerQueryParseSupport1.innerFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter10);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter12 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean13 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean14 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter17 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter17;
        org.apache.lucene.search.Filter filter19 = null;
        nestedInnerQueryParseSupport1.childFilter = filter19;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(query9);
        org.junit.Assert.assertNull(bitDocIdSetFilter12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test19198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19198");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.index.query.QueryParseContext queryParseContext4 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.common.bytes.BytesReference bytesReference5 = nestedInnerQueryParseSupport1.getsource();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper6 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        nestedInnerQueryParseSupport1.path = "";
        boolean boolean9 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(queryParseContext4);
        org.junit.Assert.assertNull(bytesReference5);
        org.junit.Assert.assertNull(objectMapper6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test19199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19199");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.path = "nested";
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound;
        nestedInnerQueryParseSupport1.path = "object";
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter13);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter15 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean16 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper17 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        boolean boolean18 = nestedInnerQueryParseSupport1.getqueryFound();
        nestedInnerQueryParseSupport1.queryFound = false;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(objectMapper17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test19200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19200");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.path = "nested";
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.apache.lucene.search.Filter filter12 = nestedInnerQueryParseSupport1.getchildFilter();
        nestedInnerQueryParseSupport1.queryParsed = false;
        java.lang.String str15 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.queryFound = false;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference19 = nestedInnerQueryParseSupport1.getsource();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(filter12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "nested" + "'", str15, "nested");
        org.junit.Assert.assertNull(objectMapper18);
        org.junit.Assert.assertNull(bytesReference19);
    }

    @Test
    public void test19201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19201");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.source = bytesReference8;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = nestedInnerQueryParseSupport1.parentObjectMapper;
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper13;
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = null;
        nestedInnerQueryParseSupport1.source = bytesReference15;
        org.apache.lucene.search.Filter filter17 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter17);
        java.lang.String str19 = nestedInnerQueryParseSupport1.getPath();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter20 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.Filter filter21 = null;
        nestedInnerQueryParseSupport1.childFilter = filter21;
        org.elasticsearch.common.bytes.BytesReference bytesReference23 = null;
        nestedInnerQueryParseSupport1.source = bytesReference23;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(objectMapper10);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(bitDocIdSetFilter20);
    }

    @Test
    public void test19202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19202");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = nestedInnerQueryParseSupport1.getsource();
        org.apache.lucene.search.Filter filter5 = nestedInnerQueryParseSupport1.getchildFilter();
        nestedInnerQueryParseSupport1.filterFound = true;
        org.elasticsearch.index.query.QueryParseContext queryParseContext8 = nestedInnerQueryParseSupport1.parseContext;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(bytesReference4);
        org.junit.Assert.assertNull(filter5);
        org.junit.Assert.assertNull(queryParseContext8);
    }

    @Test
    public void test19203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19203");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryParsed;
        nestedInnerQueryParseSupport1.path = "object";
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        boolean boolean14 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference15);
        org.apache.lucene.search.Query query17 = nestedInnerQueryParseSupport1.innerFilter;
        nestedInnerQueryParseSupport1.path = "object";
        org.apache.lucene.search.Filter filter20 = nestedInnerQueryParseSupport1.getchildFilter();
        boolean boolean21 = nestedInnerQueryParseSupport1.filterFound();
        nestedInnerQueryParseSupport1.setfilterFound(true);
        nestedInnerQueryParseSupport1.setqueryFound(true);
        org.apache.lucene.search.Query query26 = null;
        nestedInnerQueryParseSupport1.innerQuery = query26;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(objectMapper13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(query17);
        org.junit.Assert.assertNull(filter20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test19204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19204");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.filterFound = false;
        nestedInnerQueryParseSupport1.setfilterFound(true);
        boolean boolean15 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter16 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter16;
        org.elasticsearch.common.bytes.BytesReference bytesReference18 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference18);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter20 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter20);
        nestedInnerQueryParseSupport1.path = "nested";
        org.elasticsearch.common.bytes.BytesReference bytesReference24 = null;
        nestedInnerQueryParseSupport1.source = bytesReference24;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test19205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19205");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.path = "nested";
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound;
        nestedInnerQueryParseSupport1.path = "object";
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter13);
        org.apache.lucene.search.Query query15 = nestedInnerQueryParseSupport1.innerQuery;
        org.apache.lucene.search.Query query16 = nestedInnerQueryParseSupport1.innerQuery;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter17 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter17;
        org.apache.lucene.search.Filter filter19 = nestedInnerQueryParseSupport1.childFilter;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(query15);
        org.junit.Assert.assertNull(query16);
        org.junit.Assert.assertNull(filter19);
    }

    @Test
    public void test19206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19206");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.apache.lucene.search.Query query5 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.source = bytesReference6;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound();
        boolean boolean9 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(query5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test19207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19207");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean11 = nestedInnerQueryParseSupport1.getfilterFound();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        nestedInnerQueryParseSupport1.filterFound = true;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test19208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19208");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter9 = nestedInnerQueryParseSupport1.parentFilter;
        org.elasticsearch.index.query.QueryParseContext queryParseContext10 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter11 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.Query query12 = null;
        nestedInnerQueryParseSupport1.innerQuery = query12;
        boolean boolean14 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = nestedInnerQueryParseSupport1.getsource();
        org.apache.lucene.search.Query query16 = nestedInnerQueryParseSupport1.innerFilter;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper8);
        org.junit.Assert.assertNull(bitDocIdSetFilter9);
        org.junit.Assert.assertNull(queryParseContext10);
        org.junit.Assert.assertNull(bitDocIdSetFilter11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(bytesReference15);
        org.junit.Assert.assertNull(query16);
    }

    @Test
    public void test19209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19209");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        java.lang.String str3 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.source = bytesReference6;
        org.apache.lucene.search.Filter filter8 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.Query query9 = null;
        nestedInnerQueryParseSupport1.innerFilter = query9;
        boolean boolean11 = nestedInnerQueryParseSupport1.queryFound();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(filter8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test19210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19210");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        org.apache.lucene.search.Filter filter6 = nestedInnerQueryParseSupport1.childFilter;
        org.apache.lucene.search.Query query7 = null;
        nestedInnerQueryParseSupport1.innerFilter = query7;
        boolean boolean9 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext10 = nestedInnerQueryParseSupport1.parseContext;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(filter6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(queryParseContext10);
    }

    @Test
    public void test19211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19211");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryParsed;
        nestedInnerQueryParseSupport1.path = "object";
        nestedInnerQueryParseSupport1.queryParsed = false;
        boolean boolean15 = nestedInnerQueryParseSupport1.queryParsed;
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.setPathLevel();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test19212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19212");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter2 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter2);
        org.apache.lucene.search.Query query4 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.common.bytes.BytesReference bytesReference5 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference5);
        nestedInnerQueryParseSupport1.filterFound = false;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.index.query.QueryParseContext queryParseContext10 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.setfilterFound(false);
        boolean boolean13 = nestedInnerQueryParseSupport1.getqueryFound();
        boolean boolean14 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.junit.Assert.assertNull(query4);
        org.junit.Assert.assertNull(objectMapper9);
        org.junit.Assert.assertNull(queryParseContext10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test19213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19213");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.source = bytesReference8;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference13);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper10);
        org.junit.Assert.assertNull(objectMapper11);
        org.junit.Assert.assertNull(objectMapper12);
    }

    @Test
    public void test19214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19214");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        nestedInnerQueryParseSupport1.filterParsed = false;
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter12 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter12);
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper17 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper17;
        boolean boolean19 = nestedInnerQueryParseSupport1.queryFound;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test19215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19215");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.index.query.QueryParseContext queryParseContext4 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.Query query5 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper6 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        java.lang.String str9 = nestedInnerQueryParseSupport1.path;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(queryParseContext4);
        org.junit.Assert.assertNull(query5);
        org.junit.Assert.assertNull(objectMapper6);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test19216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19216");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.apache.lucene.search.Query query5 = nestedInnerQueryParseSupport1.getInnerFilter();
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference9 = nestedInnerQueryParseSupport1.source;
        org.elasticsearch.common.bytes.BytesReference bytesReference10 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference10);
        org.apache.lucene.search.Query query12 = null;
        nestedInnerQueryParseSupport1.innerQuery = query12;
        org.elasticsearch.common.bytes.BytesReference bytesReference14 = null;
        nestedInnerQueryParseSupport1.source = bytesReference14;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(query5);
        org.junit.Assert.assertNull(objectMapper8);
        org.junit.Assert.assertNull(bytesReference9);
    }

    @Test
    public void test19217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19217");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Query query13 = null;
        nestedInnerQueryParseSupport1.innerQuery = query13;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        java.lang.String str18 = nestedInnerQueryParseSupport1.path;
        org.apache.lucene.search.Filter filter19 = null;
        nestedInnerQueryParseSupport1.childFilter = filter19;
        org.apache.lucene.search.Query query21 = null;
        nestedInnerQueryParseSupport1.innerQuery = query21;
        org.apache.lucene.search.Query query23 = nestedInnerQueryParseSupport1.getInnerFilter();
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(objectMapper15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(query23);
    }

    @Test
    public void test19218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19218");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Query query5 = nestedInnerQueryParseSupport1.innerFilter;
        nestedInnerQueryParseSupport1.path = "object";
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        org.elasticsearch.common.bytes.BytesReference bytesReference10 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference10);
        org.apache.lucene.search.Filter filter12 = nestedInnerQueryParseSupport1.getchildFilter();
        nestedInnerQueryParseSupport1.filterFound = false;
        boolean boolean15 = nestedInnerQueryParseSupport1.filterFound();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(query5);
        org.junit.Assert.assertNull(filter12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test19219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19219");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Filter filter12 = nestedInnerQueryParseSupport1.childFilter;
        java.lang.String str13 = nestedInnerQueryParseSupport1.getPath();
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(filter12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test19220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19220");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper5 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper5;
        org.apache.lucene.search.Filter filter7 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter7);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper9;
        org.apache.lucene.search.Query query11 = nestedInnerQueryParseSupport1.getInnerFilter();
        boolean boolean12 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = nestedInnerQueryParseSupport1.getsource();
        org.apache.lucene.search.Query query14 = nestedInnerQueryParseSupport1.innerQuery;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(query11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bytesReference13);
        org.junit.Assert.assertNull(query14);
    }

    @Test
    public void test19221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19221");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryParsed;
        nestedInnerQueryParseSupport1.path = "object";
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        boolean boolean14 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference15);
        org.apache.lucene.search.Query query17 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference18 = nestedInnerQueryParseSupport1.source;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper19 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper19;
        boolean boolean21 = nestedInnerQueryParseSupport1.filterParsed;
        java.lang.String str22 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.filterFound = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(objectMapper13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(query17);
        org.junit.Assert.assertNull(bytesReference18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "object" + "'", str22, "object");
    }

    @Test
    public void test19222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19222");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        org.apache.lucene.search.Filter filter8 = null;
        nestedInnerQueryParseSupport1.childFilter = filter8;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        nestedInnerQueryParseSupport1.path = "nested";
        org.apache.lucene.search.Query query15 = null;
        nestedInnerQueryParseSupport1.innerFilter = query15;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter17 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.Filter filter18 = nestedInnerQueryParseSupport1.childFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference19 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference19);
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter17);
        org.junit.Assert.assertNull(filter18);
    }

    @Test
    public void test19223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19223");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean11 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference12);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        nestedInnerQueryParseSupport1.path = "hi!";
        org.apache.lucene.search.Query query17 = null;
        nestedInnerQueryParseSupport1.innerFilter = query17;
        java.lang.String str19 = nestedInnerQueryParseSupport1.getPath();
        nestedInnerQueryParseSupport1.filterFound = false;
        java.lang.String str22 = nestedInnerQueryParseSupport1.getPath();
        org.apache.lucene.search.Filter filter23 = nestedInnerQueryParseSupport1.getchildFilter();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(objectMapper14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNull(filter23);
    }

    @Test
    public void test19224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19224");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        java.lang.String str8 = nestedInnerQueryParseSupport1.path;
        boolean boolean9 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Query query10 = nestedInnerQueryParseSupport1.innerFilter;
        boolean boolean11 = nestedInnerQueryParseSupport1.filterParsed;
        org.apache.lucene.search.Filter filter12 = null;
        nestedInnerQueryParseSupport1.childFilter = filter12;
        boolean boolean14 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = null;
        nestedInnerQueryParseSupport1.source = bytesReference15;
        nestedInnerQueryParseSupport1.path = "hi!";
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.setPathLevel();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(query10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test19225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19225");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        nestedInnerQueryParseSupport1.filterParsed = false;
        nestedInnerQueryParseSupport1.path = "nested";
        org.apache.lucene.search.Query query14 = null;
        nestedInnerQueryParseSupport1.innerQuery = query14;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter16 = nestedInnerQueryParseSupport1.parentFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference17 = nestedInnerQueryParseSupport1.source;
        boolean boolean18 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Filter filter19 = null;
        nestedInnerQueryParseSupport1.childFilter = filter19;
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.query();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(bitDocIdSetFilter16);
        org.junit.Assert.assertNull(bytesReference17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test19226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19226");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.elasticsearch.index.query.QueryParseContext queryParseContext10 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean11 = nestedInnerQueryParseSupport1.getfilterParsed();
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.setPath("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(objectMapper9);
        org.junit.Assert.assertNull(queryParseContext10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test19227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19227");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.index.query.QueryParseContext queryParseContext4 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean5 = nestedInnerQueryParseSupport1.getfilterFound();
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(queryParseContext4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test19228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19228");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = nestedInnerQueryParseSupport1.source;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        nestedInnerQueryParseSupport1.setfilterFound(true);
        boolean boolean17 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        java.lang.String str19 = nestedInnerQueryParseSupport1.path;
        org.apache.lucene.search.Query query20 = null;
        nestedInnerQueryParseSupport1.innerQuery = query20;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter22 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter22;
        org.apache.lucene.search.Query query24 = nestedInnerQueryParseSupport1.getInnerQuery();
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.setPath("object");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bytesReference12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(objectMapper18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(query24);
    }

    @Test
    public void test19229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19229");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        org.apache.lucene.search.Query query3 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper4 = nestedInnerQueryParseSupport1.parentObjectMapper;
        boolean boolean5 = nestedInnerQueryParseSupport1.getfilterFound();
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        org.apache.lucene.search.Query query7 = null;
        nestedInnerQueryParseSupport1.innerFilter = query7;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertNull(query3);
        org.junit.Assert.assertNull(objectMapper4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test19230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19230");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Filter filter12 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.parentFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter15 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter15;
        org.apache.lucene.search.Query query17 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper18;
        org.elasticsearch.index.query.QueryParseContext queryParseContext20 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(filter12);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
        org.junit.Assert.assertNull(objectMapper14);
        org.junit.Assert.assertNull(query17);
        org.junit.Assert.assertNull(queryParseContext20);
    }

    @Test
    public void test19231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19231");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.apache.lucene.search.Query query4 = nestedInnerQueryParseSupport1.innerQuery;
        boolean boolean5 = nestedInnerQueryParseSupport1.queryFound();
        nestedInnerQueryParseSupport1.setfilterFound(true);
        nestedInnerQueryParseSupport1.path = "object";
        org.apache.lucene.search.Filter filter10 = nestedInnerQueryParseSupport1.getchildFilter();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound;
        org.elasticsearch.index.query.QueryParseContext queryParseContext13 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.Query query14 = null;
        nestedInnerQueryParseSupport1.innerFilter = query14;
        nestedInnerQueryParseSupport1.queryFound = false;
        org.apache.lucene.search.Query query18 = null;
        nestedInnerQueryParseSupport1.innerQuery = query18;
        org.junit.Assert.assertNull(query4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(filter10);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(queryParseContext13);
    }

    @Test
    public void test19232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19232");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter3 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound;
        java.lang.String str5 = nestedInnerQueryParseSupport1.path;
        org.apache.lucene.search.Filter filter6 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter6);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean10 = nestedInnerQueryParseSupport1.getfilterFound();
        nestedInnerQueryParseSupport1.filterFound = false;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test19233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19233");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.apache.lucene.search.Filter filter11 = null;
        nestedInnerQueryParseSupport1.childFilter = filter11;
        org.apache.lucene.search.Query query13 = nestedInnerQueryParseSupport1.innerFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter14;
        org.apache.lucene.search.Query query16 = null;
        nestedInnerQueryParseSupport1.innerFilter = query16;
        org.apache.lucene.search.Query query18 = null;
        nestedInnerQueryParseSupport1.innerFilter = query18;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        org.apache.lucene.search.Filter filter22 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter22);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.apache.lucene.search.Filter filter26 = null;
        nestedInnerQueryParseSupport1.childFilter = filter26;
        org.apache.lucene.search.Query query28 = null;
        nestedInnerQueryParseSupport1.innerFilter = query28;
        java.lang.String str30 = nestedInnerQueryParseSupport1.getPath();
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(query13);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test19234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19234");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        nestedInnerQueryParseSupport1.filterParsed = true;
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = nestedInnerQueryParseSupport1.source;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        org.apache.lucene.search.Filter filter18 = nestedInnerQueryParseSupport1.childFilter;
        org.apache.lucene.search.Query query19 = null;
        nestedInnerQueryParseSupport1.innerFilter = query19;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(bytesReference15);
        org.junit.Assert.assertNull(filter18);
    }

    @Test
    public void test19235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19235");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter2 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter2);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper4 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Filter filter5 = null;
        nestedInnerQueryParseSupport1.childFilter = filter5;
        boolean boolean7 = nestedInnerQueryParseSupport1.filterFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = nestedInnerQueryParseSupport1.parentFilter;
        nestedInnerQueryParseSupport1.queryFound = true;
        boolean boolean11 = nestedInnerQueryParseSupport1.filterFound();
        nestedInnerQueryParseSupport1.path = "object";
        org.apache.lucene.search.Filter filter14 = null;
        nestedInnerQueryParseSupport1.childFilter = filter14;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter16 = nestedInnerQueryParseSupport1.getparentFilter();
        org.apache.lucene.search.Filter filter17 = null;
        nestedInnerQueryParseSupport1.childFilter = filter17;
        boolean boolean19 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.index.query.QueryParseContext queryParseContext20 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper21 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper22 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.junit.Assert.assertNull(objectMapper4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(queryParseContext20);
        org.junit.Assert.assertNull(objectMapper21);
        org.junit.Assert.assertNull(objectMapper22);
    }

    @Test
    public void test19236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19236");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.apache.lucene.search.Query query4 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper5 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        java.lang.String str8 = nestedInnerQueryParseSupport1.getPath();
        boolean boolean9 = nestedInnerQueryParseSupport1.getqueryParsed();
        nestedInnerQueryParseSupport1.setfilterFound(true);
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = nestedInnerQueryParseSupport1.getsource();
        org.junit.Assert.assertNull(query4);
        org.junit.Assert.assertNull(objectMapper5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bytesReference13);
    }

    @Test
    public void test19237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19237");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.apache.lucene.search.Query query9 = null;
        nestedInnerQueryParseSupport1.innerFilter = query9;
        org.apache.lucene.search.Filter filter11 = nestedInnerQueryParseSupport1.getchildFilter();
        boolean boolean12 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(objectMapper8);
        org.junit.Assert.assertNull(filter11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test19238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19238");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter2 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter2);
        org.apache.lucene.search.Query query4 = nestedInnerQueryParseSupport1.innerQuery;
        nestedInnerQueryParseSupport1.queryFound = true;
        org.elasticsearch.index.query.QueryParseContext queryParseContext7 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerQuery = query8;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.elasticsearch.common.bytes.BytesReference bytesReference11 = nestedInnerQueryParseSupport1.source;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.lucene.search.Query query12 = nestedInnerQueryParseSupport1.getInnerFilter();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(query4);
        org.junit.Assert.assertNull(queryParseContext7);
        org.junit.Assert.assertNull(objectMapper10);
        org.junit.Assert.assertNull(bytesReference11);
    }

    @Test
    public void test19239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19239");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter5 = nestedInnerQueryParseSupport1.getparentFilter();
        nestedInnerQueryParseSupport1.filterFound = true;
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper10;
        boolean boolean12 = nestedInnerQueryParseSupport1.filterParsed;
        boolean boolean13 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference14 = null;
        nestedInnerQueryParseSupport1.source = bytesReference14;
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper18;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter5);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test19240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19240");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        org.apache.lucene.search.Query query9 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference10 = nestedInnerQueryParseSupport1.source;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(query9);
        org.junit.Assert.assertNull(bytesReference10);
        org.junit.Assert.assertNull(objectMapper11);
    }

    @Test
    public void test19241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19241");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Query query5 = null;
        nestedInnerQueryParseSupport1.innerFilter = query5;
        org.apache.lucene.search.Filter filter7 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        nestedInnerQueryParseSupport1.path = "nested";
        boolean boolean12 = nestedInnerQueryParseSupport1.getfilterParsed();
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.Query query15 = nestedInnerQueryParseSupport1.innerQuery;
        org.apache.lucene.search.Query query16 = nestedInnerQueryParseSupport1.innerQuery;
        boolean boolean17 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(filter7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(query15);
        org.junit.Assert.assertNull(query16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test19242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19242");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        java.lang.String str3 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.queryFound = false;
        java.lang.String str6 = nestedInnerQueryParseSupport1.getPath();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper7 = nestedInnerQueryParseSupport1.parentObjectMapper;
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(objectMapper7);
    }

    @Test
    public void test19243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19243");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        nestedInnerQueryParseSupport1.filterFound = true;
        org.elasticsearch.common.bytes.BytesReference bytesReference5 = nestedInnerQueryParseSupport1.getsource();
        org.elasticsearch.index.query.QueryParseContext queryParseContext6 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean7 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.apache.lucene.search.Filter filter8 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.Query query9 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(bytesReference5);
        org.junit.Assert.assertNull(queryParseContext6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(filter8);
        org.junit.Assert.assertNull(query9);
        org.junit.Assert.assertNull(objectMapper10);
    }

    @Test
    public void test19244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19244");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Query query5 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        boolean boolean8 = nestedInnerQueryParseSupport1.filterFound;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.lucene.search.Query query9 = nestedInnerQueryParseSupport1.getInnerFilter();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(query5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test19245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19245");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound();
        org.apache.lucene.search.Query query11 = nestedInnerQueryParseSupport1.innerQuery;
        org.apache.lucene.search.Filter filter12 = null;
        nestedInnerQueryParseSupport1.childFilter = filter12;
        java.lang.String str14 = nestedInnerQueryParseSupport1.path;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter15 = nestedInnerQueryParseSupport1.parentFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference16 = nestedInnerQueryParseSupport1.source;
        org.elasticsearch.common.bytes.BytesReference bytesReference17 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference17);
        nestedInnerQueryParseSupport1.filterFound = true;
        nestedInnerQueryParseSupport1.queryFound = false;
        org.elasticsearch.index.query.QueryParseContext queryParseContext23 = nestedInnerQueryParseSupport1.parseContext;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(query11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(bitDocIdSetFilter15);
        org.junit.Assert.assertNull(bytesReference16);
        org.junit.Assert.assertNull(queryParseContext23);
    }

    @Test
    public void test19246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19246");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper9;
        org.apache.lucene.search.Filter filter11 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter11);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper13;
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.Filter filter17 = null;
        nestedInnerQueryParseSupport1.childFilter = filter17;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper19 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper19;
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper23 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper23;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test19247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19247");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound();
        org.apache.lucene.search.Query query11 = nestedInnerQueryParseSupport1.innerQuery;
        java.lang.String str12 = nestedInnerQueryParseSupport1.getPath();
        org.elasticsearch.index.query.QueryParseContext queryParseContext13 = nestedInnerQueryParseSupport1.parseContext;
        org.elasticsearch.index.query.QueryParseContext queryParseContext14 = nestedInnerQueryParseSupport1.parseContext;
        nestedInnerQueryParseSupport1.setfilterFound(true);
        nestedInnerQueryParseSupport1.path = "object";
        nestedInnerQueryParseSupport1.path = "";
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(query11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(queryParseContext13);
        org.junit.Assert.assertNull(queryParseContext14);
    }

    @Test
    public void test19248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19248");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryParsed;
        org.elasticsearch.common.bytes.BytesReference bytesReference11 = nestedInnerQueryParseSupport1.getsource();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        boolean boolean13 = nestedInnerQueryParseSupport1.queryParsed;
        java.lang.String str14 = nestedInnerQueryParseSupport1.getPath();
        boolean boolean15 = nestedInnerQueryParseSupport1.filterParsed;
        boolean boolean16 = nestedInnerQueryParseSupport1.filterParsed;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(bytesReference11);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test19249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19249");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        nestedInnerQueryParseSupport1.filterParsed = true;
        java.lang.String str11 = nestedInnerQueryParseSupport1.getPath();
        org.apache.lucene.search.Query query12 = nestedInnerQueryParseSupport1.innerFilter;
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.apache.lucene.search.Filter filter15 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter15);
        boolean boolean17 = nestedInnerQueryParseSupport1.queryFound;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper18;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(query12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test19250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19250");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter3 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean4 = nestedInnerQueryParseSupport1.filterFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference5 = nestedInnerQueryParseSupport1.getsource();
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        org.elasticsearch.common.bytes.BytesReference bytesReference7 = nestedInnerQueryParseSupport1.getsource();
        nestedInnerQueryParseSupport1.setfilterFound(false);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        boolean boolean11 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(bytesReference5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(bytesReference7);
        org.junit.Assert.assertNull(objectMapper10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(objectMapper12);
    }

    @Test
    public void test19251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19251");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        nestedInnerQueryParseSupport1.filterParsed = false;
        nestedInnerQueryParseSupport1.queryParsed = false;
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        org.apache.lucene.search.Filter filter16 = nestedInnerQueryParseSupport1.childFilter;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(filter16);
    }

    @Test
    public void test19252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19252");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.source = bytesReference6;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test19253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19253");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.apache.lucene.search.Query query8 = nestedInnerQueryParseSupport1.getInnerFilter();
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.apache.lucene.search.Filter filter11 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.Filter filter12 = nestedInnerQueryParseSupport1.getchildFilter();
        boolean boolean13 = nestedInnerQueryParseSupport1.filterParsed;
        boolean boolean14 = nestedInnerQueryParseSupport1.getqueryParsed();
        boolean boolean15 = nestedInnerQueryParseSupport1.getqueryFound();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(query8);
        org.junit.Assert.assertNull(filter11);
        org.junit.Assert.assertNull(filter12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test19254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19254");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.source = bytesReference8;
        org.apache.lucene.search.Query query10 = null;
        nestedInnerQueryParseSupport1.innerFilter = query10;
        org.elasticsearch.index.query.QueryParseContext queryParseContext12 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean13 = nestedInnerQueryParseSupport1.queryFound;
        // The following exception was thrown during execution in test generation
        try {
// flaky:             nestedInnerQueryParseSupport1.filter();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(queryParseContext12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test19255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19255");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query4 = null;
        nestedInnerQueryParseSupport1.innerFilter = query4;
        nestedInnerQueryParseSupport1.path = "";
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.queryFound();
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter11 = nestedInnerQueryParseSupport1.parentFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = null;
        nestedInnerQueryParseSupport1.source = bytesReference12;
        org.apache.lucene.search.Filter filter14 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter14);
        org.apache.lucene.search.Filter filter16 = nestedInnerQueryParseSupport1.childFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference17 = null;
        nestedInnerQueryParseSupport1.source = bytesReference17;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter19 = nestedInnerQueryParseSupport1.parentFilter;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter11);
        org.junit.Assert.assertNull(filter16);
        org.junit.Assert.assertNull(bitDocIdSetFilter19);
    }

    @Test
    public void test19256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19256");
        org.elasticsearch.index.mapper.object.ObjectMapper.Nested nested2 = org.elasticsearch.index.mapper.object.ObjectMapper.Nested.newNested(true, false);
        boolean boolean3 = nested2.isNested();
        boolean boolean4 = nested2.isIncludeInParent();
        boolean boolean5 = nested2.isIncludeInRoot();
        boolean boolean6 = nested2.isIncludeInRoot();
        boolean boolean7 = nested2.isIncludeInParent();
        boolean boolean8 = nested2.isIncludeInParent();
        boolean boolean9 = nested2.isIncludeInParent();
        boolean boolean10 = nested2.isIncludeInParent();
        org.junit.Assert.assertNotNull(nested2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test19257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19257");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Query query5 = null;
        nestedInnerQueryParseSupport1.innerFilter = query5;
        org.apache.lucene.search.Filter filter7 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        nestedInnerQueryParseSupport1.path = "nested";
        boolean boolean12 = nestedInnerQueryParseSupport1.getfilterParsed();
        nestedInnerQueryParseSupport1.filterParsed = false;
        java.lang.String str15 = nestedInnerQueryParseSupport1.path;
        org.elasticsearch.common.bytes.BytesReference bytesReference16 = null;
        nestedInnerQueryParseSupport1.source = bytesReference16;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper21 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper21;
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.setPathLevel();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(filter7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "nested" + "'", str15, "nested");
        org.junit.Assert.assertNull(objectMapper18);
    }

    @Test
    public void test19258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19258");
        org.elasticsearch.index.mapper.object.ObjectMapper.Nested nested0 = org.elasticsearch.index.mapper.object.ObjectMapper.Nested.NO;
        boolean boolean1 = nested0.isIncludeInParent();
        boolean boolean2 = nested0.isIncludeInParent();
        boolean boolean3 = nested0.isIncludeInRoot();
        boolean boolean4 = nested0.isNested();
        boolean boolean5 = nested0.isIncludeInRoot();
        boolean boolean6 = nested0.isIncludeInRoot();
        boolean boolean7 = nested0.isIncludeInParent();
        boolean boolean8 = nested0.isIncludeInParent();
        org.junit.Assert.assertNotNull(nested0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test19259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19259");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper9;
        org.elasticsearch.common.bytes.BytesReference bytesReference11 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference11);
        boolean boolean13 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext14 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter15 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter15);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(queryParseContext14);
    }

    @Test
    public void test19260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19260");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Query query12 = null;
        nestedInnerQueryParseSupport1.innerQuery = query12;
        boolean boolean14 = nestedInnerQueryParseSupport1.queryFound();
        nestedInnerQueryParseSupport1.filterFound = true;
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.apache.lucene.search.Query query19 = null;
        nestedInnerQueryParseSupport1.innerFilter = query19;
        java.lang.String str21 = nestedInnerQueryParseSupport1.getPath();
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        nestedInnerQueryParseSupport1.filterParsed = true;
        java.lang.String str26 = nestedInnerQueryParseSupport1.getPath();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test19261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19261");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query4 = null;
        nestedInnerQueryParseSupport1.innerFilter = query4;
        nestedInnerQueryParseSupport1.path = "";
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.queryFound();
        nestedInnerQueryParseSupport1.path = "object";
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter12 = nestedInnerQueryParseSupport1.getparentFilter();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter12);
    }

    @Test
    public void test19262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19262");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter3 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter5 = nestedInnerQueryParseSupport1.getparentFilter();
        boolean boolean6 = nestedInnerQueryParseSupport1.filterFound();
        boolean boolean7 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean8 = nestedInnerQueryParseSupport1.filterFound();
        org.apache.lucene.search.Query query9 = nestedInnerQueryParseSupport1.innerQuery;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(query9);
    }

    @Test
    public void test19263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19263");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        nestedInnerQueryParseSupport1.filterFound = false;
        nestedInnerQueryParseSupport1.path = "object";
        nestedInnerQueryParseSupport1.filterFound = true;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper19 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper19;
        org.elasticsearch.index.query.QueryParseContext queryParseContext21 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean22 = nestedInnerQueryParseSupport1.queryFound;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertNull(queryParseContext21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test19264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19264");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.apache.lucene.search.Filter filter11 = null;
        nestedInnerQueryParseSupport1.childFilter = filter11;
        org.apache.lucene.search.Query query13 = nestedInnerQueryParseSupport1.innerFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter14;
        org.apache.lucene.search.Query query16 = null;
        nestedInnerQueryParseSupport1.innerFilter = query16;
        org.apache.lucene.search.Query query18 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.index.query.QueryParseContext queryParseContext19 = nestedInnerQueryParseSupport1.parseContext;
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter22 = nestedInnerQueryParseSupport1.getparentFilter();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(query13);
        org.junit.Assert.assertNull(query18);
        org.junit.Assert.assertNull(queryParseContext19);
        org.junit.Assert.assertNull(bitDocIdSetFilter22);
    }

    @Test
    public void test19265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19265");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter8;
        org.apache.lucene.search.Filter filter10 = nestedInnerQueryParseSupport1.childFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper11;
        boolean boolean13 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound();
        boolean boolean15 = nestedInnerQueryParseSupport1.getqueryFound();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(filter10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test19266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19266");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        boolean boolean3 = nestedInnerQueryParseSupport1.queryParsed;
        nestedInnerQueryParseSupport1.path = "object";
        org.apache.lucene.search.Filter filter6 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter6);
        nestedInnerQueryParseSupport1.setqueryFound(true);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter10);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.parentObjectMapper;
        nestedInnerQueryParseSupport1.queryFound = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper12);
    }

    @Test
    public void test19267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19267");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.parentFilter;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        org.apache.lucene.search.Filter filter16 = nestedInnerQueryParseSupport1.childFilter;
        // The following exception was thrown during execution in test generation
        try {
// flaky:             nestedInnerQueryParseSupport1.filter();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
        org.junit.Assert.assertNull(filter16);
    }

    @Test
    public void test19268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19268");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference9 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference9);
        org.apache.lucene.search.Query query11 = null;
        nestedInnerQueryParseSupport1.innerQuery = query11;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        boolean boolean14 = nestedInnerQueryParseSupport1.getfilterFound();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper8);
        org.junit.Assert.assertNull(objectMapper13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test19269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19269");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query4 = nestedInnerQueryParseSupport1.innerFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter5 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter5);
        org.apache.lucene.search.Query query7 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = nestedInnerQueryParseSupport1.getsource();
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter10);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter12 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.parentFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        boolean boolean15 = nestedInnerQueryParseSupport1.getfilterFound();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(query4);
        org.junit.Assert.assertNull(query7);
        org.junit.Assert.assertNull(bytesReference8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter12);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
        org.junit.Assert.assertNull(objectMapper14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test19270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19270");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.path = "nested";
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Filter filter9 = null;
        nestedInnerQueryParseSupport1.childFilter = filter9;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper11;
        nestedInnerQueryParseSupport1.path = "";
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper8);
        org.junit.Assert.assertNull(objectMapper15);
    }

    @Test
    public void test19271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19271");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter5 = nestedInnerQueryParseSupport1.getparentFilter();
        org.apache.lucene.search.Query query6 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper7 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        nestedInnerQueryParseSupport1.queryParsed = true;
        boolean boolean11 = nestedInnerQueryParseSupport1.getqueryParsed();
        boolean boolean12 = nestedInnerQueryParseSupport1.filterFound();
        org.apache.lucene.search.Filter filter13 = nestedInnerQueryParseSupport1.getchildFilter();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter5);
        org.junit.Assert.assertNull(query6);
        org.junit.Assert.assertNull(objectMapper7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(filter13);
    }

    @Test
    public void test19272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19272");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper13;
        nestedInnerQueryParseSupport1.path = "hi!";
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Filter filter19 = nestedInnerQueryParseSupport1.getchildFilter();
        boolean boolean20 = nestedInnerQueryParseSupport1.queryFound();
        nestedInnerQueryParseSupport1.setqueryFound(true);
        boolean boolean23 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.common.bytes.BytesReference bytesReference24 = nestedInnerQueryParseSupport1.getsource();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter25 = nestedInnerQueryParseSupport1.parentFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference26 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference26);
        boolean boolean28 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(filter19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(bytesReference24);
        org.junit.Assert.assertNull(bitDocIdSetFilter25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test19273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19273");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.apache.lucene.search.Query query4 = nestedInnerQueryParseSupport1.innerQuery;
        boolean boolean5 = nestedInnerQueryParseSupport1.queryFound();
        nestedInnerQueryParseSupport1.setfilterFound(true);
        nestedInnerQueryParseSupport1.path = "object";
        org.apache.lucene.search.Filter filter10 = nestedInnerQueryParseSupport1.getchildFilter();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound;
        org.elasticsearch.index.query.QueryParseContext queryParseContext13 = nestedInnerQueryParseSupport1.getparseContext();
        java.lang.String str14 = nestedInnerQueryParseSupport1.getPath();
        nestedInnerQueryParseSupport1.path = "";
        org.junit.Assert.assertNull(query4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(filter10);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(queryParseContext13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "object" + "'", str14, "object");
    }

    @Test
    public void test19274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19274");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query4 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference5 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference5);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter7 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter7);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter9 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.Filter filter10 = null;
        nestedInnerQueryParseSupport1.childFilter = filter10;
        org.apache.lucene.search.Query query12 = nestedInnerQueryParseSupport1.innerFilter;
        org.apache.lucene.search.Filter filter13 = nestedInnerQueryParseSupport1.childFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter14);
        boolean boolean16 = nestedInnerQueryParseSupport1.filterFound();
        java.lang.String str17 = nestedInnerQueryParseSupport1.path;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter18 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter18;
        org.apache.lucene.search.Filter filter20 = nestedInnerQueryParseSupport1.childFilter;
        org.elasticsearch.index.query.QueryParseContext queryParseContext21 = nestedInnerQueryParseSupport1.parseContext;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(query4);
        org.junit.Assert.assertNull(bitDocIdSetFilter9);
        org.junit.Assert.assertNull(query12);
        org.junit.Assert.assertNull(filter13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(filter20);
        org.junit.Assert.assertNull(queryParseContext21);
    }

    @Test
    public void test19275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19275");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter3 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound;
        java.lang.String str5 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.filterFound = false;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerQuery = query8;
        org.elasticsearch.common.bytes.BytesReference bytesReference10 = null;
        nestedInnerQueryParseSupport1.source = bytesReference10;
        java.lang.String str12 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test19276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19276");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.filterFound = false;
        boolean boolean13 = nestedInnerQueryParseSupport1.getqueryFound();
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound();
        boolean boolean15 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter16 = nestedInnerQueryParseSupport1.getparentFilter();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper17 = nestedInnerQueryParseSupport1.parentObjectMapper;
        boolean boolean18 = nestedInnerQueryParseSupport1.queryParsed;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper19 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper19;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter16);
        org.junit.Assert.assertNull(objectMapper17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test19277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19277");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter11 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter11);
        boolean boolean13 = nestedInnerQueryParseSupport1.getfilterFound();
        boolean boolean14 = nestedInnerQueryParseSupport1.getfilterFound();
        org.apache.lucene.search.Query query15 = nestedInnerQueryParseSupport1.innerQuery;
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(query15);
    }

    @Test
    public void test19278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19278");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter5 = nestedInnerQueryParseSupport1.getparentFilter();
        org.apache.lucene.search.Query query6 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper7 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        nestedInnerQueryParseSupport1.setfilterFound(true);
        boolean boolean14 = nestedInnerQueryParseSupport1.getqueryFound();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter5);
        org.junit.Assert.assertNull(query6);
        org.junit.Assert.assertNull(objectMapper7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(objectMapper11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test19279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19279");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter11 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter11);
        boolean boolean13 = nestedInnerQueryParseSupport1.getfilterFound();
        boolean boolean14 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter15 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter16 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter16);
        org.apache.lucene.search.Query query18 = null;
        nestedInnerQueryParseSupport1.innerFilter = query18;
        org.apache.lucene.search.Filter filter20 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter20);
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        boolean boolean24 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper25 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter15);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(objectMapper25);
    }

    @Test
    public void test19280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19280");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        nestedInnerQueryParseSupport1.path = "nested";
        org.elasticsearch.common.bytes.BytesReference bytesReference11 = null;
        nestedInnerQueryParseSupport1.source = bytesReference11;
        boolean boolean13 = nestedInnerQueryParseSupport1.queryParsed;
        org.elasticsearch.common.bytes.BytesReference bytesReference14 = null;
        nestedInnerQueryParseSupport1.source = bytesReference14;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper16 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper16;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test19281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19281");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper9;
        boolean boolean11 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper12;
        nestedInnerQueryParseSupport1.setqueryFound(false);
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.resetPathLevel();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test19282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19282");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.elasticsearch.common.bytes.BytesReference bytesReference5 = null;
        nestedInnerQueryParseSupport1.source = bytesReference5;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper7 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper7;
        boolean boolean9 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.Filter filter10 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter10);
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test19283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19283");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.index.query.QueryParseContext queryParseContext4 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter5 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter6 = nestedInnerQueryParseSupport1.parentFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference7 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference7);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper9;
        nestedInnerQueryParseSupport1.setfilterFound(false);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(queryParseContext4);
        org.junit.Assert.assertNull(bitDocIdSetFilter5);
        org.junit.Assert.assertNull(bitDocIdSetFilter6);
    }

    @Test
    public void test19284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19284");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        nestedInnerQueryParseSupport1.queryFound = false;
        org.apache.lucene.search.Query query12 = null;
        nestedInnerQueryParseSupport1.innerFilter = query12;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = nestedInnerQueryParseSupport1.getparentFilter();
        boolean boolean15 = nestedInnerQueryParseSupport1.filterFound;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test19285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19285");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = true;
        boolean boolean5 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper6 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.apache.lucene.search.Filter filter7 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.Filter filter8 = nestedInnerQueryParseSupport1.getchildFilter();
        boolean boolean9 = nestedInnerQueryParseSupport1.filterParsed;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        nestedInnerQueryParseSupport1.path = "nested";
        org.apache.lucene.search.Filter filter13 = null;
        nestedInnerQueryParseSupport1.childFilter = filter13;
        boolean boolean15 = nestedInnerQueryParseSupport1.getfilterParsed();
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.query();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(objectMapper6);
        org.junit.Assert.assertNull(filter7);
        org.junit.Assert.assertNull(filter8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(objectMapper10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test19286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19286");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = nestedInnerQueryParseSupport1.source;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter15 = nestedInnerQueryParseSupport1.getparentFilter();
        org.elasticsearch.common.bytes.BytesReference bytesReference16 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference16);
        org.elasticsearch.index.query.QueryParseContext queryParseContext18 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.Filter filter19 = null;
        nestedInnerQueryParseSupport1.childFilter = filter19;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bytesReference12);
        org.junit.Assert.assertNull(bitDocIdSetFilter15);
        org.junit.Assert.assertNull(queryParseContext18);
    }

    @Test
    public void test19287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19287");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query4 = null;
        nestedInnerQueryParseSupport1.innerFilter = query4;
        nestedInnerQueryParseSupport1.path = "";
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.queryFound();
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.setqueryFound(false);
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        boolean boolean16 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(objectMapper15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test19288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19288");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        org.apache.lucene.search.Query query9 = nestedInnerQueryParseSupport1.innerFilter;
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter12 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter12;
        nestedInnerQueryParseSupport1.filterParsed = false;
        nestedInnerQueryParseSupport1.filterFound = false;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter18 = nestedInnerQueryParseSupport1.parentFilter;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(query9);
        org.junit.Assert.assertNull(bitDocIdSetFilter18);
    }

    @Test
    public void test19289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19289");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound;
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper12;
        // The following exception was thrown during execution in test generation
        try {
// flaky:             nestedInnerQueryParseSupport1.filter();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
    }

    @Test
    public void test19290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19290");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query4 = null;
        nestedInnerQueryParseSupport1.innerFilter = query4;
        nestedInnerQueryParseSupport1.filterFound = false;
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        org.elasticsearch.common.bytes.BytesReference bytesReference10 = nestedInnerQueryParseSupport1.getsource();
        org.apache.lucene.search.Filter filter11 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter11);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter13;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(bytesReference10);
    }

    @Test
    public void test19291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19291");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper10;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper12;
        org.apache.lucene.search.Query query14 = null;
        nestedInnerQueryParseSupport1.innerFilter = query14;
        org.elasticsearch.index.query.QueryParseContext queryParseContext16 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter19 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter19;
        boolean boolean21 = nestedInnerQueryParseSupport1.filterFound;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(queryParseContext16);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test19292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19292");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Query query13 = null;
        nestedInnerQueryParseSupport1.innerQuery = query13;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        java.lang.String str18 = nestedInnerQueryParseSupport1.path;
        // The following exception was thrown during execution in test generation
        try {
// flaky:             nestedInnerQueryParseSupport1.filter();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(objectMapper15);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test19293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19293");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        nestedInnerQueryParseSupport1.path = "object";
        java.lang.String str10 = nestedInnerQueryParseSupport1.getPath();
        boolean boolean11 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query13 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper14;
        boolean boolean16 = nestedInnerQueryParseSupport1.filterFound;
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper19 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper19;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        org.elasticsearch.common.bytes.BytesReference bytesReference23 = nestedInnerQueryParseSupport1.getsource();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "object" + "'", str10, "object");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertNull(query13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(bytesReference23);
    }

    @Test
    public void test19294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19294");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.getqueryFound();
        org.apache.lucene.search.Filter filter13 = nestedInnerQueryParseSupport1.getchildFilter();
        boolean boolean14 = nestedInnerQueryParseSupport1.queryParsed;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper15;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(filter13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test19295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19295");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.filterFound = false;
        nestedInnerQueryParseSupport1.setfilterFound(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        boolean boolean16 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean17 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference18 = null;
        nestedInnerQueryParseSupport1.source = bytesReference18;
        nestedInnerQueryParseSupport1.queryParsed = true;
        boolean boolean22 = nestedInnerQueryParseSupport1.queryFound;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(objectMapper15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test19296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19296");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.index.query.QueryParseContext queryParseContext4 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.common.bytes.BytesReference bytesReference5 = nestedInnerQueryParseSupport1.getsource();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper6 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        boolean boolean7 = nestedInnerQueryParseSupport1.getfilterParsed();
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.elasticsearch.index.query.QueryParseContext queryParseContext10 = nestedInnerQueryParseSupport1.parseContext;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.lucene.search.Query query11 = nestedInnerQueryParseSupport1.getInnerFilter();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(queryParseContext4);
        org.junit.Assert.assertNull(bytesReference5);
        org.junit.Assert.assertNull(objectMapper6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(queryParseContext10);
    }

    @Test
    public void test19297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19297");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter8;
        org.apache.lucene.search.Filter filter10 = nestedInnerQueryParseSupport1.childFilter;
        java.lang.String str11 = nestedInnerQueryParseSupport1.path;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter12 = nestedInnerQueryParseSupport1.parentFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper13;
        boolean boolean15 = nestedInnerQueryParseSupport1.filterFound();
        org.elasticsearch.index.query.QueryParseContext queryParseContext16 = nestedInnerQueryParseSupport1.parseContext;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(filter10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bitDocIdSetFilter12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(queryParseContext16);
    }

    @Test
    public void test19298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19298");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query4 = null;
        nestedInnerQueryParseSupport1.innerFilter = query4;
        nestedInnerQueryParseSupport1.path = "";
        nestedInnerQueryParseSupport1.queryParsed = true;
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        java.lang.String str11 = nestedInnerQueryParseSupport1.getPath();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.lucene.search.Query query12 = nestedInnerQueryParseSupport1.getInnerFilter();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test19299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19299");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound();
        boolean boolean5 = nestedInnerQueryParseSupport1.getfilterParsed();
        nestedInnerQueryParseSupport1.path = "object";
        org.apache.lucene.search.Filter filter8 = nestedInnerQueryParseSupport1.getchildFilter();
        boolean boolean9 = nestedInnerQueryParseSupport1.filterParsed;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(filter8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test19300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19300");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.filterFound = false;
        boolean boolean13 = nestedInnerQueryParseSupport1.getqueryFound();
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound();
        boolean boolean15 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter16 = nestedInnerQueryParseSupport1.getparentFilter();
        nestedInnerQueryParseSupport1.setqueryFound(false);
        java.lang.String str19 = nestedInnerQueryParseSupport1.getPath();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter16);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test19301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19301");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter3 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean4 = nestedInnerQueryParseSupport1.filterFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference5 = nestedInnerQueryParseSupport1.getsource();
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        org.elasticsearch.common.bytes.BytesReference bytesReference7 = nestedInnerQueryParseSupport1.getsource();
        nestedInnerQueryParseSupport1.setfilterFound(false);
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.getparentFilter();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(bytesReference5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(bytesReference7);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
    }

    @Test
    public void test19302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19302");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter15 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter15);
        boolean boolean17 = nestedInnerQueryParseSupport1.getfilterFound();
        org.apache.lucene.search.Filter filter18 = null;
        nestedInnerQueryParseSupport1.childFilter = filter18;
        boolean boolean20 = nestedInnerQueryParseSupport1.queryParsed;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test19303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19303");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        boolean boolean3 = nestedInnerQueryParseSupport1.queryParsed;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper4 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference5 = null;
        nestedInnerQueryParseSupport1.source = bytesReference5;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper7 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper7;
        boolean boolean9 = nestedInnerQueryParseSupport1.filterParsed;
        org.elasticsearch.index.query.QueryParseContext queryParseContext10 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        org.apache.lucene.search.Query query12 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = nestedInnerQueryParseSupport1.getsource();
        org.apache.lucene.search.Query query14 = nestedInnerQueryParseSupport1.innerQuery;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(queryParseContext10);
        org.junit.Assert.assertNull(objectMapper11);
        org.junit.Assert.assertNull(query12);
        org.junit.Assert.assertNull(bytesReference13);
        org.junit.Assert.assertNull(query14);
    }

    @Test
    public void test19304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19304");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Filter filter12 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.parentFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference15);
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.elasticsearch.index.query.QueryParseContext queryParseContext19 = nestedInnerQueryParseSupport1.parseContext;
        nestedInnerQueryParseSupport1.setfilterFound(true);
        boolean boolean22 = nestedInnerQueryParseSupport1.filterFound();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(filter12);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
        org.junit.Assert.assertNull(objectMapper14);
        org.junit.Assert.assertNull(queryParseContext19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test19305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19305");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query4 = null;
        nestedInnerQueryParseSupport1.innerFilter = query4;
        nestedInnerQueryParseSupport1.path = "";
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.elasticsearch.common.bytes.BytesReference bytesReference10 = nestedInnerQueryParseSupport1.getsource();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.Filter filter15 = null;
        nestedInnerQueryParseSupport1.childFilter = filter15;
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.setPathLevel();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(bytesReference10);
        org.junit.Assert.assertNull(objectMapper11);
        org.junit.Assert.assertNull(objectMapper12);
    }

    @Test
    public void test19306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19306");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = nestedInnerQueryParseSupport1.source;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        nestedInnerQueryParseSupport1.setfilterFound(true);
        boolean boolean17 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.apache.lucene.search.Query query19 = nestedInnerQueryParseSupport1.innerQuery;
        boolean boolean20 = nestedInnerQueryParseSupport1.queryFound;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bytesReference12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(objectMapper18);
        org.junit.Assert.assertNull(query19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test19307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19307");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper5 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper5;
        org.apache.lucene.search.Query query7 = nestedInnerQueryParseSupport1.innerFilter;
        org.apache.lucene.search.Filter filter8 = nestedInnerQueryParseSupport1.getchildFilter();
        boolean boolean9 = nestedInnerQueryParseSupport1.filterFound();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertNull(query7);
        org.junit.Assert.assertNull(filter8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test19308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19308");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        nestedInnerQueryParseSupport1.filterFound = true;
        nestedInnerQueryParseSupport1.path = "hi!";
        java.lang.String str7 = nestedInnerQueryParseSupport1.getPath();
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.filterFound();
        org.apache.lucene.search.Filter filter10 = nestedInnerQueryParseSupport1.getchildFilter();
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.query();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(filter10);
    }

    @Test
    public void test19309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19309");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        nestedInnerQueryParseSupport1.filterParsed = false;
        nestedInnerQueryParseSupport1.path = "nested";
        nestedInnerQueryParseSupport1.setqueryFound(false);
        nestedInnerQueryParseSupport1.setfilterFound(false);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter19 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter19);
        boolean boolean21 = nestedInnerQueryParseSupport1.getfilterFound();
        nestedInnerQueryParseSupport1.queryParsed = true;
        boolean boolean24 = nestedInnerQueryParseSupport1.filterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper25 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper25;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(objectMapper18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test19310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19310");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter10);
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        nestedInnerQueryParseSupport1.queryFound = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(objectMapper8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test19311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19311");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean4 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean5 = nestedInnerQueryParseSupport1.getqueryFound();
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = nestedInnerQueryParseSupport1.getsource();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(bytesReference8);
    }

    @Test
    public void test19312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19312");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.source = bytesReference8;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = nestedInnerQueryParseSupport1.parentObjectMapper;
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        nestedInnerQueryParseSupport1.path = "object";
        boolean boolean15 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Query query16 = null;
        nestedInnerQueryParseSupport1.innerFilter = query16;
        nestedInnerQueryParseSupport1.queryFound = false;
        boolean boolean20 = nestedInnerQueryParseSupport1.getfilterFound();
        boolean boolean21 = nestedInnerQueryParseSupport1.filterParsed;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(objectMapper10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test19313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19313");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query4 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference5 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference5);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter7 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter7);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter9 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.Filter filter10 = nestedInnerQueryParseSupport1.getchildFilter();
        boolean boolean11 = nestedInnerQueryParseSupport1.filterFound();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        java.lang.String str13 = nestedInnerQueryParseSupport1.path;
        boolean boolean14 = nestedInnerQueryParseSupport1.queryFound();
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.setPath("nested");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(query4);
        org.junit.Assert.assertNull(bitDocIdSetFilter9);
        org.junit.Assert.assertNull(filter10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test19314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19314");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter2 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter2);
        org.apache.lucene.search.Query query4 = nestedInnerQueryParseSupport1.innerQuery;
        boolean boolean5 = nestedInnerQueryParseSupport1.queryFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter6 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.Filter filter7 = null;
        nestedInnerQueryParseSupport1.childFilter = filter7;
        nestedInnerQueryParseSupport1.path = "nested";
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.Filter filter12 = null;
        nestedInnerQueryParseSupport1.childFilter = filter12;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter14;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper16 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper16;
        boolean boolean18 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.Query query19 = nestedInnerQueryParseSupport1.innerFilter;
        boolean boolean20 = nestedInnerQueryParseSupport1.queryFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference21 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference21);
        org.junit.Assert.assertNull(query4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter6);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(query19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test19315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19315");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        java.lang.String str3 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.queryFound = false;
        nestedInnerQueryParseSupport1.filterFound = false;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper8;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        java.lang.String str11 = nestedInnerQueryParseSupport1.path;
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = nestedInnerQueryParseSupport1.source;
        boolean boolean13 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(objectMapper10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bytesReference12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(objectMapper14);
    }

    @Test
    public void test19316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19316");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper13;
        boolean boolean15 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean16 = nestedInnerQueryParseSupport1.getqueryFound();
        nestedInnerQueryParseSupport1.setfilterFound(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper19 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper20 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(objectMapper19);
        org.junit.Assert.assertNull(objectMapper20);
    }

    @Test
    public void test19317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19317");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper5 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper5;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper8;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper12;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test19318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19318");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper13;
        boolean boolean15 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.apache.lucene.search.Filter filter16 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter16);
        boolean boolean18 = nestedInnerQueryParseSupport1.getfilterFound();
        nestedInnerQueryParseSupport1.queryFound = true;
        org.elasticsearch.index.query.QueryParseContext queryParseContext21 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.index.query.QueryParseContext queryParseContext22 = nestedInnerQueryParseSupport1.parseContext;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(queryParseContext21);
        org.junit.Assert.assertNull(queryParseContext22);
    }

    @Test
    public void test19319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19319");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter8;
        org.apache.lucene.search.Filter filter10 = nestedInnerQueryParseSupport1.childFilter;
        java.lang.String str11 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.queryFound = true;
        org.apache.lucene.search.Query query14 = nestedInnerQueryParseSupport1.innerQuery;
        nestedInnerQueryParseSupport1.queryFound = false;
        org.elasticsearch.common.bytes.BytesReference bytesReference17 = nestedInnerQueryParseSupport1.getsource();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(filter10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(query14);
        org.junit.Assert.assertNull(bytesReference17);
    }

    @Test
    public void test19320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19320");
        org.elasticsearch.index.mapper.object.ObjectMapper.Nested nested0 = org.elasticsearch.index.mapper.object.ObjectMapper.Nested.NO;
        boolean boolean1 = nested0.isIncludeInParent();
        boolean boolean2 = nested0.isIncludeInRoot();
        boolean boolean3 = nested0.isNested();
        boolean boolean4 = nested0.isNested();
        boolean boolean5 = nested0.isIncludeInParent();
        boolean boolean6 = nested0.isIncludeInRoot();
        boolean boolean7 = nested0.isIncludeInParent();
        boolean boolean8 = nested0.isIncludeInRoot();
        boolean boolean9 = nested0.isIncludeInRoot();
        boolean boolean10 = nested0.isIncludeInParent();
        org.junit.Assert.assertNotNull(nested0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test19321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19321");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Query query13 = nestedInnerQueryParseSupport1.innerQuery;
        boolean boolean14 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.apache.lucene.search.Query query15 = null;
        nestedInnerQueryParseSupport1.innerFilter = query15;
        nestedInnerQueryParseSupport1.setfilterFound(true);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(query13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test19322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19322");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.filterFound = false;
        nestedInnerQueryParseSupport1.setfilterFound(true);
        boolean boolean15 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean16 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext17 = nestedInnerQueryParseSupport1.parseContext;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        boolean boolean19 = nestedInnerQueryParseSupport1.filterParsed;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper20 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.apache.lucene.search.Filter filter21 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter21);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(queryParseContext17);
        org.junit.Assert.assertNull(objectMapper18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(objectMapper20);
    }

    @Test
    public void test19323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19323");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.path = "nested";
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        nestedInnerQueryParseSupport1.filterFound = false;
        org.apache.lucene.search.Query query15 = null;
        nestedInnerQueryParseSupport1.innerFilter = query15;
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        java.lang.String str19 = nestedInnerQueryParseSupport1.path;
        boolean boolean20 = nestedInnerQueryParseSupport1.filterFound;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "nested" + "'", str19, "nested");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test19324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19324");
        org.elasticsearch.index.mapper.object.ObjectMapper.Nested nested0 = org.elasticsearch.index.mapper.object.ObjectMapper.Nested.NO;
        boolean boolean1 = nested0.isNested();
        boolean boolean2 = nested0.isNested();
        boolean boolean3 = nested0.isNested();
        boolean boolean4 = nested0.isIncludeInParent();
        boolean boolean5 = nested0.isIncludeInParent();
        boolean boolean6 = nested0.isIncludeInRoot();
        boolean boolean7 = nested0.isIncludeInParent();
        boolean boolean8 = nested0.isIncludeInParent();
        boolean boolean9 = nested0.isNested();
        boolean boolean10 = nested0.isIncludeInRoot();
        boolean boolean11 = nested0.isNested();
        boolean boolean12 = nested0.isIncludeInParent();
        boolean boolean13 = nested0.isIncludeInParent();
        org.junit.Assert.assertNotNull(nested0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test19325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19325");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        nestedInnerQueryParseSupport1.filterParsed = false;
        nestedInnerQueryParseSupport1.queryParsed = false;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        org.apache.lucene.search.Query query16 = null;
        nestedInnerQueryParseSupport1.innerQuery = query16;
        org.elasticsearch.index.query.QueryParseContext queryParseContext18 = nestedInnerQueryParseSupport1.parseContext;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(queryParseContext18);
    }

    @Test
    public void test19326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19326");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        java.lang.String str3 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        org.apache.lucene.search.Filter filter7 = nestedInnerQueryParseSupport1.getchildFilter();
        boolean boolean8 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(filter7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test19327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19327");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.filterFound = false;
        boolean boolean13 = nestedInnerQueryParseSupport1.getqueryFound();
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound();
        boolean boolean15 = nestedInnerQueryParseSupport1.queryFound();
        boolean boolean16 = nestedInnerQueryParseSupport1.getfilterParsed();
        nestedInnerQueryParseSupport1.filterFound = true;
        boolean boolean19 = nestedInnerQueryParseSupport1.queryFound();
        boolean boolean20 = nestedInnerQueryParseSupport1.getqueryFound();
        java.lang.String str21 = nestedInnerQueryParseSupport1.getPath();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test19328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19328");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterFound();
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound();
        boolean boolean11 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Filter filter13 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter13);
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = null;
        nestedInnerQueryParseSupport1.source = bytesReference15;
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        boolean boolean19 = nestedInnerQueryParseSupport1.filterFound();
        boolean boolean20 = nestedInnerQueryParseSupport1.queryParsed;
        java.lang.String str21 = nestedInnerQueryParseSupport1.getPath();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test19329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19329");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.source = bytesReference6;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.elasticsearch.common.bytes.BytesReference bytesReference11 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference11);
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference13);
        nestedInnerQueryParseSupport1.setfilterFound(false);
        java.lang.String str17 = nestedInnerQueryParseSupport1.path;
        boolean boolean18 = nestedInnerQueryParseSupport1.getqueryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter19 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter19;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper8);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test19330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19330");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter3 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound;
        java.lang.String str5 = nestedInnerQueryParseSupport1.path;
        boolean boolean6 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean7 = nestedInnerQueryParseSupport1.queryParsed;
        org.apache.lucene.search.Query query8 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference9 = nestedInnerQueryParseSupport1.source;
        org.elasticsearch.index.query.QueryParseContext queryParseContext10 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper11;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(query8);
        org.junit.Assert.assertNull(bytesReference9);
        org.junit.Assert.assertNull(queryParseContext10);
    }

    @Test
    public void test19331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19331");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter4;
        org.apache.lucene.search.Filter filter6 = null;
        nestedInnerQueryParseSupport1.childFilter = filter6;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean11 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.Filter filter12 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter12);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper14;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test19332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19332");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.apache.lucene.search.Query query10 = nestedInnerQueryParseSupport1.getInnerFilter();
        org.apache.lucene.search.Query query11 = nestedInnerQueryParseSupport1.getInnerFilter();
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference12);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        nestedInnerQueryParseSupport1.filterFound = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(objectMapper8);
        org.junit.Assert.assertNull(objectMapper9);
        org.junit.Assert.assertNull(query10);
        org.junit.Assert.assertNull(query11);
        org.junit.Assert.assertNull(objectMapper14);
    }

    @Test
    public void test19333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19333");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryParsed;
        java.lang.String str11 = nestedInnerQueryParseSupport1.path;
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = null;
        nestedInnerQueryParseSupport1.source = bytesReference12;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        boolean boolean15 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.common.bytes.BytesReference bytesReference16 = nestedInnerQueryParseSupport1.getsource();
        org.elasticsearch.index.query.QueryParseContext queryParseContext17 = nestedInnerQueryParseSupport1.parseContext;
        java.lang.String str18 = nestedInnerQueryParseSupport1.path;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(objectMapper14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(bytesReference16);
        org.junit.Assert.assertNull(queryParseContext17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test19334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19334");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference9 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference9);
        nestedInnerQueryParseSupport1.queryFound = false;
        org.elasticsearch.index.query.QueryParseContext queryParseContext13 = nestedInnerQueryParseSupport1.parseContext;
        org.elasticsearch.common.bytes.BytesReference bytesReference14 = null;
        nestedInnerQueryParseSupport1.source = bytesReference14;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter16 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter16;
        org.apache.lucene.search.Query query18 = null;
        nestedInnerQueryParseSupport1.innerFilter = query18;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper8);
        org.junit.Assert.assertNull(queryParseContext13);
    }

    @Test
    public void test19335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19335");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        boolean boolean3 = nestedInnerQueryParseSupport1.queryParsed;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper4 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference5 = null;
        nestedInnerQueryParseSupport1.source = bytesReference5;
        boolean boolean7 = nestedInnerQueryParseSupport1.filterParsed;
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test19336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19336");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.index.query.QueryParseContext queryParseContext4 = nestedInnerQueryParseSupport1.parseContext;
        org.apache.lucene.search.Query query5 = nestedInnerQueryParseSupport1.innerQuery;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        java.lang.String str8 = nestedInnerQueryParseSupport1.path;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryFound();
        org.apache.lucene.search.Filter filter11 = null;
        nestedInnerQueryParseSupport1.childFilter = filter11;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.getparentFilter();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(queryParseContext4);
        org.junit.Assert.assertNull(query5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
    }

    @Test
    public void test19337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19337");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper9;
        org.apache.lucene.search.Filter filter11 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter11);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper13;
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.Filter filter17 = null;
        nestedInnerQueryParseSupport1.childFilter = filter17;
        org.apache.lucene.search.Filter filter19 = nestedInnerQueryParseSupport1.getchildFilter();
        boolean boolean20 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper21 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        nestedInnerQueryParseSupport1.queryParsed = true;
        java.lang.Class<?> wildcardClass24 = nestedInnerQueryParseSupport1.getClass();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(filter19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(objectMapper21);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test19338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19338");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        nestedInnerQueryParseSupport1.filterParsed = true;
        boolean boolean11 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter12 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter12;
        org.apache.lucene.search.Filter filter14 = nestedInnerQueryParseSupport1.childFilter;
        boolean boolean15 = nestedInnerQueryParseSupport1.queryParsed;
        nestedInnerQueryParseSupport1.path = "object";
        org.elasticsearch.index.query.QueryParseContext queryParseContext18 = nestedInnerQueryParseSupport1.getparseContext();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(filter14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(queryParseContext18);
    }

    @Test
    public void test19339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19339");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.apache.lucene.search.Filter filter8 = nestedInnerQueryParseSupport1.childFilter;
        org.apache.lucene.search.Query query9 = null;
        nestedInnerQueryParseSupport1.innerQuery = query9;
        boolean boolean11 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Query query12 = null;
        nestedInnerQueryParseSupport1.innerFilter = query12;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(filter8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(objectMapper14);
        org.junit.Assert.assertNull(objectMapper15);
    }

    @Test
    public void test19340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19340");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        org.elasticsearch.index.query.QueryParseContext queryParseContext3 = nestedInnerQueryParseSupport1.parseContext;
        org.apache.lucene.search.Query query4 = null;
        nestedInnerQueryParseSupport1.innerFilter = query4;
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        java.lang.String str8 = nestedInnerQueryParseSupport1.getPath();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter9 = nestedInnerQueryParseSupport1.getparentFilter();
        org.elasticsearch.common.bytes.BytesReference bytesReference10 = nestedInnerQueryParseSupport1.source;
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.setPath("object");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertNull(queryParseContext3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(bitDocIdSetFilter9);
        org.junit.Assert.assertNull(bytesReference10);
    }

    @Test
    public void test19341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19341");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter4);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter6 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter6;
        java.lang.String str8 = nestedInnerQueryParseSupport1.getPath();
        org.elasticsearch.common.bytes.BytesReference bytesReference9 = nestedInnerQueryParseSupport1.getsource();
        org.elasticsearch.common.bytes.BytesReference bytesReference10 = nestedInnerQueryParseSupport1.getsource();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(bytesReference9);
        org.junit.Assert.assertNull(bytesReference10);
    }

    @Test
    public void test19342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19342");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.path = "nested";
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.apache.lucene.search.Filter filter12 = nestedInnerQueryParseSupport1.getchildFilter();
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.apache.lucene.search.Query query15 = nestedInnerQueryParseSupport1.getInnerFilter();
        java.lang.String str16 = nestedInnerQueryParseSupport1.getPath();
        boolean boolean17 = nestedInnerQueryParseSupport1.queryParsed;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(filter12);
        org.junit.Assert.assertNull(query15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "nested" + "'", str16, "nested");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test19343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19343");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound();
        boolean boolean5 = nestedInnerQueryParseSupport1.getfilterParsed();
        nestedInnerQueryParseSupport1.path = "object";
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper8;
        java.lang.String str10 = nestedInnerQueryParseSupport1.getPath();
        org.apache.lucene.search.Query query11 = nestedInnerQueryParseSupport1.innerFilter;
        boolean boolean12 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "object" + "'", str10, "object");
        org.junit.Assert.assertNull(query11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test19344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19344");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        nestedInnerQueryParseSupport1.path = "nested";
        java.lang.String str12 = nestedInnerQueryParseSupport1.getPath();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = nestedInnerQueryParseSupport1.parentObjectMapper;
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "nested" + "'", str12, "nested");
        org.junit.Assert.assertNull(objectMapper13);
    }

    @Test
    public void test19345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19345");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter3 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound;
        java.lang.String str5 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.filterFound = false;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerQuery = query8;
        nestedInnerQueryParseSupport1.path = "";
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference12);
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test19346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19346");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean10 = nestedInnerQueryParseSupport1.getfilterFound();
        org.apache.lucene.search.Query query11 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.parentObjectMapper;
        boolean boolean13 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean14 = nestedInnerQueryParseSupport1.queryParsed;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter15 = nestedInnerQueryParseSupport1.parentFilter;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(query11);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter15);
    }

    @Test
    public void test19347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19347");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter5 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter5);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter7 = nestedInnerQueryParseSupport1.getparentFilter();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = nestedInnerQueryParseSupport1.getparentFilter();
        nestedInnerQueryParseSupport1.setfilterFound(false);
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        boolean boolean13 = nestedInnerQueryParseSupport1.filterParsed;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = nestedInnerQueryParseSupport1.getparentFilter();
        boolean boolean15 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter7);
        org.junit.Assert.assertNull(bitDocIdSetFilter8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test19348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19348");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter3 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean4 = nestedInnerQueryParseSupport1.filterFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference5 = nestedInnerQueryParseSupport1.getsource();
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        org.elasticsearch.common.bytes.BytesReference bytesReference7 = nestedInnerQueryParseSupport1.getsource();
        nestedInnerQueryParseSupport1.setfilterFound(false);
        org.apache.lucene.search.Filter filter10 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.Filter filter11 = nestedInnerQueryParseSupport1.childFilter;
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        nestedInnerQueryParseSupport1.setfilterFound(false);
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(bytesReference5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(bytesReference7);
        org.junit.Assert.assertNull(filter10);
        org.junit.Assert.assertNull(filter11);
    }

    @Test
    public void test19349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19349");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter10);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter12 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter12;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper14;
        nestedInnerQueryParseSupport1.filterParsed = false;
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.apache.lucene.search.Filter filter20 = null;
        nestedInnerQueryParseSupport1.childFilter = filter20;
        boolean boolean22 = nestedInnerQueryParseSupport1.getfilterParsed();
        nestedInnerQueryParseSupport1.queryFound = false;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test19350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19350");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query4 = null;
        nestedInnerQueryParseSupport1.innerFilter = query4;
        nestedInnerQueryParseSupport1.path = "";
        nestedInnerQueryParseSupport1.queryParsed = true;
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        boolean boolean11 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test19351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19351");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.index.query.QueryParseContext queryParseContext4 = nestedInnerQueryParseSupport1.parseContext;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper5 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper6 = nestedInnerQueryParseSupport1.parentObjectMapper;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        org.apache.lucene.search.Query query8 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(queryParseContext4);
        org.junit.Assert.assertNull(objectMapper5);
        org.junit.Assert.assertNull(objectMapper6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(query8);
        org.junit.Assert.assertNull(objectMapper9);
    }

    @Test
    public void test19352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19352");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.elasticsearch.index.query.QueryParseContext queryParseContext12 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter14);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper16 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper17 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query18 = null;
        nestedInnerQueryParseSupport1.innerFilter = query18;
        org.apache.lucene.search.Query query20 = null;
        nestedInnerQueryParseSupport1.innerFilter = query20;
        boolean boolean22 = nestedInnerQueryParseSupport1.filterParsed;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(queryParseContext12);
        org.junit.Assert.assertNull(objectMapper13);
        org.junit.Assert.assertNull(objectMapper16);
        org.junit.Assert.assertNull(objectMapper17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test19353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19353");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter10);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter12 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter12;
        java.lang.String str14 = nestedInnerQueryParseSupport1.getPath();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper15;
        org.elasticsearch.common.bytes.BytesReference bytesReference17 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference17);
        org.apache.lucene.search.Query query19 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.index.query.QueryParseContext queryParseContext20 = nestedInnerQueryParseSupport1.parseContext;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(query19);
        org.junit.Assert.assertNull(queryParseContext20);
    }

    @Test
    public void test19354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19354");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = true;
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter7 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = nestedInnerQueryParseSupport1.parentFilter;
        nestedInnerQueryParseSupport1.setqueryFound(false);
        nestedInnerQueryParseSupport1.filterFound = true;
        boolean boolean13 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        boolean boolean16 = nestedInnerQueryParseSupport1.filterParsed;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter7);
        org.junit.Assert.assertNull(bitDocIdSetFilter8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test19355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19355");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = nestedInnerQueryParseSupport1.getparentFilter();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter11 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter11;
        org.apache.lucene.search.Query query13 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.index.query.QueryParseContext queryParseContext14 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.Filter filter15 = null;
        nestedInnerQueryParseSupport1.childFilter = filter15;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter17 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter17;
        org.apache.lucene.search.Filter filter19 = null;
        nestedInnerQueryParseSupport1.childFilter = filter19;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper21 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.elasticsearch.index.query.QueryParseContext queryParseContext22 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean23 = nestedInnerQueryParseSupport1.queryFound;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter10);
        org.junit.Assert.assertNull(query13);
        org.junit.Assert.assertNull(queryParseContext14);
        org.junit.Assert.assertNull(objectMapper21);
        org.junit.Assert.assertNull(queryParseContext22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test19356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19356");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean4 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean5 = nestedInnerQueryParseSupport1.filterFound();
        boolean boolean6 = nestedInnerQueryParseSupport1.queryFound;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper7 = nestedInnerQueryParseSupport1.parentObjectMapper;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(objectMapper7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test19357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19357");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper13;
        boolean boolean15 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.apache.lucene.search.Filter filter16 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter16);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(objectMapper18);
    }

    @Test
    public void test19358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19358");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        boolean boolean3 = nestedInnerQueryParseSupport1.queryParsed;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper4 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper5 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper5;
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.elasticsearch.common.bytes.BytesReference bytesReference9 = null;
        nestedInnerQueryParseSupport1.source = bytesReference9;
        boolean boolean11 = nestedInnerQueryParseSupport1.filterFound;
        nestedInnerQueryParseSupport1.setfilterFound(true);
        java.lang.Class<?> wildcardClass14 = nestedInnerQueryParseSupport1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper4);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test19359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19359");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.source = bytesReference8;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = nestedInnerQueryParseSupport1.parentObjectMapper;
        nestedInnerQueryParseSupport1.queryFound = true;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = nestedInnerQueryParseSupport1.parentObjectMapper;
        nestedInnerQueryParseSupport1.queryParsed = true;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.apache.lucene.search.Query query18 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.common.bytes.BytesReference bytesReference19 = nestedInnerQueryParseSupport1.getsource();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(objectMapper10);
        org.junit.Assert.assertNull(objectMapper13);
        org.junit.Assert.assertNull(query18);
        org.junit.Assert.assertNull(bytesReference19);
    }

    @Test
    public void test19360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19360");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        org.elasticsearch.common.bytes.BytesReference bytesReference10 = nestedInnerQueryParseSupport1.getsource();
        nestedInnerQueryParseSupport1.filterFound = false;
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter15 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter15;
        org.apache.lucene.search.Filter filter17 = nestedInnerQueryParseSupport1.childFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter19 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter20 = nestedInnerQueryParseSupport1.parentFilter;
        org.elasticsearch.index.query.QueryParseContext queryParseContext21 = nestedInnerQueryParseSupport1.parseContext;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bytesReference10);
        org.junit.Assert.assertNull(filter17);
        org.junit.Assert.assertNull(objectMapper18);
        org.junit.Assert.assertNull(bitDocIdSetFilter19);
        org.junit.Assert.assertNull(bitDocIdSetFilter20);
        org.junit.Assert.assertNull(queryParseContext21);
    }

    @Test
    public void test19361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19361");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper2 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper2;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter4;
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        org.elasticsearch.common.bytes.BytesReference bytesReference7 = null;
        nestedInnerQueryParseSupport1.source = bytesReference7;
        org.elasticsearch.common.bytes.BytesReference bytesReference9 = nestedInnerQueryParseSupport1.source;
        nestedInnerQueryParseSupport1.setfilterFound(true);
        // The following exception was thrown during execution in test generation
        try {
// flaky:             nestedInnerQueryParseSupport1.filter();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(bytesReference9);
    }

    @Test
    public void test19362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19362");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.path = "nested";
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        nestedInnerQueryParseSupport1.filterFound = false;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper15;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper17 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.lucene.search.Query query18 = nestedInnerQueryParseSupport1.getInnerQuery();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertNull(objectMapper17);
    }

    @Test
    public void test19363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19363");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = true;
        boolean boolean5 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper6 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.apache.lucene.search.Query query7 = null;
        nestedInnerQueryParseSupport1.innerFilter = query7;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryFound();
        org.apache.lucene.search.Query query11 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.index.query.QueryParseContext queryParseContext12 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.queryFound = true;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(objectMapper6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(query11);
        org.junit.Assert.assertNull(queryParseContext12);
    }

    @Test
    public void test19364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19364");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.source = bytesReference8;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = nestedInnerQueryParseSupport1.parentObjectMapper;
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper13;
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = null;
        nestedInnerQueryParseSupport1.source = bytesReference15;
        boolean boolean17 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        boolean boolean19 = nestedInnerQueryParseSupport1.filterParsed;
        org.apache.lucene.search.Filter filter20 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter20);
        boolean boolean22 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.Filter filter23 = nestedInnerQueryParseSupport1.childFilter;
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(objectMapper10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(objectMapper18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(filter23);
    }

    @Test
    public void test19365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19365");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        nestedInnerQueryParseSupport1.path = "object";
        java.lang.String str10 = nestedInnerQueryParseSupport1.getPath();
        boolean boolean11 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query13 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper14;
        boolean boolean16 = nestedInnerQueryParseSupport1.filterFound;
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "object" + "'", str10, "object");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertNull(query13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test19366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19366");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter4);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter6 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter6;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference9 = nestedInnerQueryParseSupport1.getsource();
        nestedInnerQueryParseSupport1.filterFound = true;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper8);
        org.junit.Assert.assertNull(bytesReference9);
    }

    @Test
    public void test19367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19367");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.path = "nested";
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        nestedInnerQueryParseSupport1.filterFound = false;
        org.apache.lucene.search.Query query15 = null;
        nestedInnerQueryParseSupport1.innerQuery = query15;
        org.apache.lucene.search.Query query17 = nestedInnerQueryParseSupport1.innerFilter;
        boolean boolean18 = nestedInnerQueryParseSupport1.filterFound();
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.elasticsearch.common.bytes.BytesReference bytesReference21 = null;
        nestedInnerQueryParseSupport1.source = bytesReference21;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertNull(query17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test19368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19368");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper13;
        boolean boolean15 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.apache.lucene.search.Filter filter16 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter16);
        org.elasticsearch.common.bytes.BytesReference bytesReference18 = nestedInnerQueryParseSupport1.source;
        boolean boolean19 = nestedInnerQueryParseSupport1.queryParsed;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper20 = nestedInnerQueryParseSupport1.parentObjectMapper;
        boolean boolean21 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.apache.lucene.search.Filter filter22 = nestedInnerQueryParseSupport1.childFilter;
        // The following exception was thrown during execution in test generation
        try {
// flaky:             nestedInnerQueryParseSupport1.filter();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(bytesReference18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(objectMapper20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(filter22);
    }

    @Test
    public void test19369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19369");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter2 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter2);
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter6 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter6);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper8;
    }

    @Test
    public void test19370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19370");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterFound();
        org.apache.lucene.search.Filter filter10 = nestedInnerQueryParseSupport1.childFilter;
        org.apache.lucene.search.Query query11 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = nestedInnerQueryParseSupport1.source;
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = null;
        nestedInnerQueryParseSupport1.source = bytesReference13;
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean17 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference18 = nestedInnerQueryParseSupport1.getsource();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper19 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        boolean boolean20 = nestedInnerQueryParseSupport1.queryParsed;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(filter10);
        org.junit.Assert.assertNull(query11);
        org.junit.Assert.assertNull(bytesReference12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(bytesReference18);
        org.junit.Assert.assertNull(objectMapper19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test19371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19371");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.apache.lucene.search.Filter filter8 = nestedInnerQueryParseSupport1.childFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference9 = nestedInnerQueryParseSupport1.getsource();
        org.elasticsearch.index.query.QueryParseContext queryParseContext10 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper11;
        org.apache.lucene.search.Query query13 = null;
        nestedInnerQueryParseSupport1.innerFilter = query13;
        boolean boolean15 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext16 = nestedInnerQueryParseSupport1.parseContext;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper17 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter18 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter18);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(filter8);
        org.junit.Assert.assertNull(bytesReference9);
        org.junit.Assert.assertNull(queryParseContext10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(queryParseContext16);
        org.junit.Assert.assertNull(objectMapper17);
    }

    @Test
    public void test19372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19372");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        org.apache.lucene.search.Query query3 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper4 = nestedInnerQueryParseSupport1.parentObjectMapper;
        boolean boolean5 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.queryParsed = false;
        nestedInnerQueryParseSupport1.queryFound = false;
        boolean boolean10 = nestedInnerQueryParseSupport1.getfilterFound();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertNull(query3);
        org.junit.Assert.assertNull(objectMapper4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test19373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19373");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter5 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter5);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter7 = nestedInnerQueryParseSupport1.getparentFilter();
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.resetPathLevel();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter7);
    }

    @Test
    public void test19374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19374");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.elasticsearch.index.query.QueryParseContext queryParseContext8 = nestedInnerQueryParseSupport1.parseContext;
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        java.lang.String str11 = nestedInnerQueryParseSupport1.path;
        boolean boolean12 = nestedInnerQueryParseSupport1.queryParsed;
        nestedInnerQueryParseSupport1.queryFound = false;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(queryParseContext8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test19375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19375");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference12);
        org.elasticsearch.index.query.QueryParseContext queryParseContext14 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.index.query.QueryParseContext queryParseContext15 = nestedInnerQueryParseSupport1.parseContext;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper16 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        boolean boolean17 = nestedInnerQueryParseSupport1.getqueryFound();
        nestedInnerQueryParseSupport1.setfilterFound(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(queryParseContext14);
        org.junit.Assert.assertNull(queryParseContext15);
        org.junit.Assert.assertNull(objectMapper16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test19376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19376");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = nestedInnerQueryParseSupport1.getsource();
        org.apache.lucene.search.Filter filter16 = nestedInnerQueryParseSupport1.childFilter;
        org.elasticsearch.index.query.QueryParseContext queryParseContext17 = nestedInnerQueryParseSupport1.parseContext;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(bytesReference15);
        org.junit.Assert.assertNull(filter16);
        org.junit.Assert.assertNull(queryParseContext17);
    }

    @Test
    public void test19377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19377");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.Filter filter3 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter3);
        java.lang.String str5 = nestedInnerQueryParseSupport1.path;
        boolean boolean6 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference7 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference7);
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test19378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19378");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound();
        boolean boolean15 = nestedInnerQueryParseSupport1.getqueryParsed();
        boolean boolean16 = nestedInnerQueryParseSupport1.getfilterFound();
        boolean boolean17 = nestedInnerQueryParseSupport1.filterParsed;
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test19379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19379");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = nestedInnerQueryParseSupport1.source;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter15 = nestedInnerQueryParseSupport1.getparentFilter();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper16 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.apache.lucene.search.Query query17 = nestedInnerQueryParseSupport1.getInnerQuery();
        org.apache.lucene.search.Filter filter18 = nestedInnerQueryParseSupport1.getchildFilter();
        boolean boolean19 = nestedInnerQueryParseSupport1.filterFound();
        org.elasticsearch.index.query.QueryParseContext queryParseContext20 = nestedInnerQueryParseSupport1.parseContext;
        org.apache.lucene.search.Query query21 = nestedInnerQueryParseSupport1.innerFilter;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bytesReference12);
        org.junit.Assert.assertNull(bitDocIdSetFilter15);
        org.junit.Assert.assertNull(objectMapper16);
        org.junit.Assert.assertNull(query17);
        org.junit.Assert.assertNull(filter18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(queryParseContext20);
        org.junit.Assert.assertNull(query21);
    }

    @Test
    public void test19380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19380");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Query query5 = null;
        nestedInnerQueryParseSupport1.innerFilter = query5;
        org.apache.lucene.search.Filter filter7 = nestedInnerQueryParseSupport1.getchildFilter();
        boolean boolean8 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference9 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference9);
        boolean boolean11 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean12 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper13;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        nestedInnerQueryParseSupport1.filterFound = true;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(filter7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(objectMapper15);
    }

    @Test
    public void test19381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19381");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        org.apache.lucene.search.Query query9 = nestedInnerQueryParseSupport1.innerFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter10);
        java.lang.String str12 = nestedInnerQueryParseSupport1.getPath();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.getparentFilter();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = nestedInnerQueryParseSupport1.getparentFilter();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper15;
        org.elasticsearch.common.bytes.BytesReference bytesReference17 = nestedInnerQueryParseSupport1.source;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        nestedInnerQueryParseSupport1.queryFound = false;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(query9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
        org.junit.Assert.assertNull(bitDocIdSetFilter14);
        org.junit.Assert.assertNull(bytesReference17);
        org.junit.Assert.assertNull(objectMapper18);
    }

    @Test
    public void test19382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19382");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryParsed;
        org.elasticsearch.common.bytes.BytesReference bytesReference11 = nestedInnerQueryParseSupport1.getsource();
        nestedInnerQueryParseSupport1.setqueryFound(false);
        java.lang.String str14 = nestedInnerQueryParseSupport1.path;
        org.elasticsearch.index.query.QueryParseContext queryParseContext15 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.path = "hi!";
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(bytesReference11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(queryParseContext15);
    }

    @Test
    public void test19383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19383");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound();
        nestedInnerQueryParseSupport1.path = "";
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = nestedInnerQueryParseSupport1.source;
        org.apache.lucene.search.Filter filter14 = nestedInnerQueryParseSupport1.childFilter;
        org.apache.lucene.search.Query query15 = nestedInnerQueryParseSupport1.innerQuery;
        boolean boolean16 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.common.bytes.BytesReference bytesReference17 = nestedInnerQueryParseSupport1.getsource();
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter20 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter20);
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.setPathLevel();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(bytesReference13);
        org.junit.Assert.assertNull(filter14);
        org.junit.Assert.assertNull(query15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(bytesReference17);
    }

    @Test
    public void test19384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19384");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        java.lang.String str3 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        nestedInnerQueryParseSupport1.setfilterFound(true);
        org.apache.lucene.search.Query query9 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.common.bytes.BytesReference bytesReference10 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference10);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper12;
        org.elasticsearch.index.query.QueryParseContext queryParseContext14 = nestedInnerQueryParseSupport1.getparseContext();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(query9);
        org.junit.Assert.assertNull(queryParseContext14);
    }

    @Test
    public void test19385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19385");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference13);
        boolean boolean15 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Filter filter16 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.Query query17 = nestedInnerQueryParseSupport1.getInnerFilter();
        boolean boolean18 = nestedInnerQueryParseSupport1.getfilterFound();
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.apache.lucene.search.Query query21 = nestedInnerQueryParseSupport1.getInnerFilter();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(filter16);
        org.junit.Assert.assertNull(query17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(query21);
    }

    @Test
    public void test19386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19386");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = nestedInnerQueryParseSupport1.getsource();
        nestedInnerQueryParseSupport1.queryFound = false;
        nestedInnerQueryParseSupport1.queryFound = false;
        org.apache.lucene.search.Query query9 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference10 = null;
        nestedInnerQueryParseSupport1.source = bytesReference10;
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper13;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(bytesReference4);
        org.junit.Assert.assertNull(query9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test19387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19387");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound();
        nestedInnerQueryParseSupport1.setfilterFound(false);
        org.apache.lucene.search.Filter filter7 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter7);
        org.apache.lucene.search.Filter filter9 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.Filter filter10 = nestedInnerQueryParseSupport1.getchildFilter();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.index.query.QueryParseContext queryParseContext12 = nestedInnerQueryParseSupport1.parseContext;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper14;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(filter9);
        org.junit.Assert.assertNull(filter10);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertNull(queryParseContext12);
        org.junit.Assert.assertNull(objectMapper13);
    }

    @Test
    public void test19388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19388");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter2 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter2);
        org.apache.lucene.search.Query query4 = nestedInnerQueryParseSupport1.innerQuery;
        boolean boolean5 = nestedInnerQueryParseSupport1.queryFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter6 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.Filter filter7 = null;
        nestedInnerQueryParseSupport1.childFilter = filter7;
        nestedInnerQueryParseSupport1.path = "nested";
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound;
        org.elasticsearch.index.query.QueryParseContext queryParseContext13 = nestedInnerQueryParseSupport1.parseContext;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.apache.lucene.search.Filter filter15 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter15);
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.junit.Assert.assertNull(query4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter6);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(queryParseContext13);
        org.junit.Assert.assertNull(objectMapper14);
    }

    @Test
    public void test19389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19389");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        org.apache.lucene.search.Query query10 = nestedInnerQueryParseSupport1.innerFilter;
        java.lang.String str11 = nestedInnerQueryParseSupport1.path;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter12 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter12);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(query10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test19390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19390");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter2 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter2);
        org.apache.lucene.search.Query query4 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.common.bytes.BytesReference bytesReference5 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference5);
        nestedInnerQueryParseSupport1.filterFound = false;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = nestedInnerQueryParseSupport1.parentFilter;
        nestedInnerQueryParseSupport1.queryFound = false;
        boolean boolean13 = nestedInnerQueryParseSupport1.queryParsed;
        // The following exception was thrown during execution in test generation
        try {
// flaky:             nestedInnerQueryParseSupport1.query();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(query4);
        org.junit.Assert.assertNull(objectMapper9);
        org.junit.Assert.assertNull(bitDocIdSetFilter10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test19391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19391");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter4;
        org.apache.lucene.search.Query query6 = null;
        nestedInnerQueryParseSupport1.innerQuery = query6;
        java.lang.String str8 = nestedInnerQueryParseSupport1.getPath();
        nestedInnerQueryParseSupport1.setfilterFound(false);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter11 = nestedInnerQueryParseSupport1.getparentFilter();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(bitDocIdSetFilter11);
        org.junit.Assert.assertNull(objectMapper12);
    }

    @Test
    public void test19392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19392");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.apache.lucene.search.Filter filter11 = null;
        nestedInnerQueryParseSupport1.childFilter = filter11;
        org.apache.lucene.search.Query query13 = nestedInnerQueryParseSupport1.innerFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter14;
        org.apache.lucene.search.Query query16 = null;
        nestedInnerQueryParseSupport1.innerFilter = query16;
        org.apache.lucene.search.Query query18 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.index.query.QueryParseContext queryParseContext19 = nestedInnerQueryParseSupport1.parseContext;
        org.apache.lucene.search.Filter filter20 = nestedInnerQueryParseSupport1.childFilter;
        org.apache.lucene.search.Filter filter21 = nestedInnerQueryParseSupport1.childFilter;
        boolean boolean22 = nestedInnerQueryParseSupport1.filterFound;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(query13);
        org.junit.Assert.assertNull(query18);
        org.junit.Assert.assertNull(queryParseContext19);
        org.junit.Assert.assertNull(filter20);
        org.junit.Assert.assertNull(filter21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test19393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19393");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.source = bytesReference8;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = nestedInnerQueryParseSupport1.parentObjectMapper;
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper13;
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = null;
        nestedInnerQueryParseSupport1.source = bytesReference15;
        org.apache.lucene.search.Filter filter17 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter17);
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        nestedInnerQueryParseSupport1.setqueryFound(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(objectMapper10);
    }

    @Test
    public void test19394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19394");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Query query13 = null;
        nestedInnerQueryParseSupport1.innerQuery = query13;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper15;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper17 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(objectMapper17);
    }

    @Test
    public void test19395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19395");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        java.lang.String str3 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.queryFound = false;
        org.apache.lucene.search.Query query6 = nestedInnerQueryParseSupport1.innerFilter;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound();
        boolean boolean8 = nestedInnerQueryParseSupport1.getqueryFound();
        org.apache.lucene.search.Query query9 = nestedInnerQueryParseSupport1.innerFilter;
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference11 = nestedInnerQueryParseSupport1.getsource();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter12 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter12);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.apache.lucene.search.Query query15 = nestedInnerQueryParseSupport1.innerQuery;
        org.apache.lucene.search.Query query16 = null;
        nestedInnerQueryParseSupport1.innerQuery = query16;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(query6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(query9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(bytesReference11);
        org.junit.Assert.assertNull(objectMapper14);
        org.junit.Assert.assertNull(query15);
    }

    @Test
    public void test19396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19396");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = nestedInnerQueryParseSupport1.getparentFilter();
        java.lang.String str11 = nestedInnerQueryParseSupport1.getPath();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter12 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.Query query13 = null;
        nestedInnerQueryParseSupport1.innerFilter = query13;
        boolean boolean15 = nestedInnerQueryParseSupport1.queryFound;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper16 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper16;
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter20 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter20;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(bitDocIdSetFilter12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test19397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19397");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        nestedInnerQueryParseSupport1.filterFound = true;
        nestedInnerQueryParseSupport1.filterParsed = true;
        boolean boolean7 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(objectMapper9);
    }

    @Test
    public void test19398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19398");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter2 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter2);
        org.apache.lucene.search.Query query4 = nestedInnerQueryParseSupport1.innerQuery;
        nestedInnerQueryParseSupport1.queryFound = true;
        org.elasticsearch.index.query.QueryParseContext queryParseContext7 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerQuery = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.junit.Assert.assertNull(query4);
        org.junit.Assert.assertNull(queryParseContext7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test19399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19399");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = nestedInnerQueryParseSupport1.getparentFilter();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter11 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter11;
        org.apache.lucene.search.Query query13 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.index.query.QueryParseContext queryParseContext14 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean15 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference16 = nestedInnerQueryParseSupport1.getsource();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter10);
        org.junit.Assert.assertNull(query13);
        org.junit.Assert.assertNull(queryParseContext14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(bytesReference16);
    }

    @Test
    public void test19400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19400");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterParsed;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        boolean boolean6 = nestedInnerQueryParseSupport1.filterParsed;
        org.apache.lucene.search.Filter filter7 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter7);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter9 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter9;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter11 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter11;
        org.apache.lucene.search.Filter filter13 = nestedInnerQueryParseSupport1.childFilter;
        org.elasticsearch.index.query.QueryParseContext queryParseContext14 = nestedInnerQueryParseSupport1.getparseContext();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(filter13);
        org.junit.Assert.assertNull(queryParseContext14);
    }

    @Test
    public void test19401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19401");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryParsed;
        java.lang.String str11 = nestedInnerQueryParseSupport1.path;
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = null;
        nestedInnerQueryParseSupport1.source = bytesReference12;
        boolean boolean14 = nestedInnerQueryParseSupport1.getqueryParsed();
        boolean boolean15 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.query.QueryParseContext queryParseContext16 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter17 = nestedInnerQueryParseSupport1.getparentFilter();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(queryParseContext16);
        org.junit.Assert.assertNull(bitDocIdSetFilter17);
    }

    @Test
    public void test19402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19402");
        org.elasticsearch.index.mapper.object.ObjectMapper.Nested nested2 = org.elasticsearch.index.mapper.object.ObjectMapper.Nested.newNested(false, false);
        boolean boolean3 = nested2.isIncludeInRoot();
        boolean boolean4 = nested2.isNested();
        boolean boolean5 = nested2.isIncludeInParent();
        boolean boolean6 = nested2.isIncludeInRoot();
        boolean boolean7 = nested2.isNested();
        org.junit.Assert.assertNotNull(nested2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test19403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19403");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.elasticsearch.common.bytes.BytesReference bytesReference5 = null;
        nestedInnerQueryParseSupport1.source = bytesReference5;
        org.apache.lucene.search.Query query7 = nestedInnerQueryParseSupport1.innerQuery;
        org.apache.lucene.search.Filter filter8 = nestedInnerQueryParseSupport1.childFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter9 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.queryFound = true;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(query7);
        org.junit.Assert.assertNull(filter8);
        org.junit.Assert.assertNull(bitDocIdSetFilter9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test19404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19404");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.apache.lucene.search.Query query8 = nestedInnerQueryParseSupport1.getInnerFilter();
        java.lang.String str9 = nestedInnerQueryParseSupport1.getPath();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter10);
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.apache.lucene.search.Filter filter14 = nestedInnerQueryParseSupport1.getchildFilter();
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = nestedInnerQueryParseSupport1.source;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(query8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(filter14);
        org.junit.Assert.assertNull(bytesReference15);
    }

    @Test
    public void test19405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19405");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.source = bytesReference8;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper11;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.getparentFilter();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(objectMapper10);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
    }

    @Test
    public void test19406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19406");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryParsed;
        nestedInnerQueryParseSupport1.path = "object";
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper15;
        boolean boolean17 = nestedInnerQueryParseSupport1.filterFound();
        java.lang.String str18 = nestedInnerQueryParseSupport1.path;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter19 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter19);
        boolean boolean21 = nestedInnerQueryParseSupport1.queryParsed;
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.elasticsearch.index.query.QueryParseContext queryParseContext24 = nestedInnerQueryParseSupport1.parseContext;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "object" + "'", str18, "object");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(queryParseContext24);
    }

    @Test
    public void test19407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19407");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound();
        nestedInnerQueryParseSupport1.path = "";
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = nestedInnerQueryParseSupport1.source;
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound();
        boolean boolean15 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference16 = null;
        nestedInnerQueryParseSupport1.source = bytesReference16;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        org.elasticsearch.index.query.QueryParseContext queryParseContext22 = nestedInnerQueryParseSupport1.parseContext;
        java.lang.String str23 = nestedInnerQueryParseSupport1.getPath();
        nestedInnerQueryParseSupport1.setfilterFound(false);
        java.lang.Class<?> wildcardClass26 = nestedInnerQueryParseSupport1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(bytesReference13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(queryParseContext22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test19408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19408");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = nestedInnerQueryParseSupport1.source;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter16 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter16);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        nestedInnerQueryParseSupport1.filterParsed = false;
        // The following exception was thrown during execution in test generation
        try {
// flaky:             nestedInnerQueryParseSupport1.filter();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(objectMapper13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(bytesReference15);
        org.junit.Assert.assertNull(objectMapper18);
    }

    @Test
    public void test19409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19409");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound();
        nestedInnerQueryParseSupport1.setfilterFound(false);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter7 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter7);
        org.elasticsearch.index.query.QueryParseContext queryParseContext9 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        org.apache.lucene.search.Query query11 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper12;
        boolean boolean14 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter15 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter15;
        nestedInnerQueryParseSupport1.path = "hi!";
        org.apache.lucene.search.Filter filter19 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter19);
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(queryParseContext9);
        org.junit.Assert.assertNull(objectMapper10);
        org.junit.Assert.assertNull(query11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test19410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19410");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter3 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound;
        java.lang.String str5 = nestedInnerQueryParseSupport1.path;
        boolean boolean6 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean7 = nestedInnerQueryParseSupport1.queryParsed;
        org.apache.lucene.search.Query query8 = nestedInnerQueryParseSupport1.innerFilter;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Filter filter11 = nestedInnerQueryParseSupport1.getchildFilter();
        nestedInnerQueryParseSupport1.path = "";
        nestedInnerQueryParseSupport1.queryFound = true;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper16 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        boolean boolean17 = nestedInnerQueryParseSupport1.queryParsed;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(query8);
        org.junit.Assert.assertNull(filter11);
        org.junit.Assert.assertNull(objectMapper16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test19411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19411");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryParsed;
        java.lang.String str11 = nestedInnerQueryParseSupport1.path;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        boolean boolean13 = nestedInnerQueryParseSupport1.filterParsed;
        java.lang.String str14 = nestedInnerQueryParseSupport1.path;
        org.apache.lucene.search.Query query15 = null;
        nestedInnerQueryParseSupport1.innerQuery = query15;
        org.elasticsearch.common.bytes.BytesReference bytesReference17 = null;
        nestedInnerQueryParseSupport1.source = bytesReference17;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test19412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19412");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = nestedInnerQueryParseSupport1.getparentFilter();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter11 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter11;
        org.apache.lucene.search.Query query13 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.index.query.QueryParseContext queryParseContext14 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.Filter filter15 = null;
        nestedInnerQueryParseSupport1.childFilter = filter15;
        boolean boolean17 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.setfilterFound(true);
        boolean boolean20 = nestedInnerQueryParseSupport1.getqueryParsed();
        nestedInnerQueryParseSupport1.path = "object";
        boolean boolean23 = nestedInnerQueryParseSupport1.getqueryFound();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter10);
        org.junit.Assert.assertNull(query13);
        org.junit.Assert.assertNull(queryParseContext14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test19413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19413");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query4 = null;
        nestedInnerQueryParseSupport1.innerFilter = query4;
        nestedInnerQueryParseSupport1.filterFound = false;
        org.apache.lucene.search.Query query8 = nestedInnerQueryParseSupport1.innerQuery;
        nestedInnerQueryParseSupport1.queryParsed = false;
        nestedInnerQueryParseSupport1.queryFound = false;
        nestedInnerQueryParseSupport1.path = "nested";
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(query8);
    }

    @Test
    public void test19414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19414");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        org.apache.lucene.search.Query query3 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper4 = nestedInnerQueryParseSupport1.parentObjectMapper;
        boolean boolean5 = nestedInnerQueryParseSupport1.queryFound;
        org.apache.lucene.search.Filter filter6 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.Filter filter7 = nestedInnerQueryParseSupport1.getchildFilter();
        org.elasticsearch.index.query.QueryParseContext queryParseContext8 = nestedInnerQueryParseSupport1.getparseContext();
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.resetPathLevel();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertNull(query3);
        org.junit.Assert.assertNull(objectMapper4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(filter6);
        org.junit.Assert.assertNull(filter7);
        org.junit.Assert.assertNull(queryParseContext8);
    }

    @Test
    public void test19415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19415");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        boolean boolean3 = nestedInnerQueryParseSupport1.queryParsed;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper4 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper5 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper5;
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.apache.lucene.search.Query query9 = nestedInnerQueryParseSupport1.getInnerQuery();
        org.elasticsearch.common.bytes.BytesReference bytesReference10 = nestedInnerQueryParseSupport1.source;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper4);
        org.junit.Assert.assertNull(query9);
        org.junit.Assert.assertNull(bytesReference10);
    }

    @Test
    public void test19416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19416");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        nestedInnerQueryParseSupport1.filterParsed = true;
        boolean boolean11 = nestedInnerQueryParseSupport1.queryFound();
        nestedInnerQueryParseSupport1.queryFound = true;
        org.elasticsearch.common.bytes.BytesReference bytesReference14 = nestedInnerQueryParseSupport1.source;
        boolean boolean15 = nestedInnerQueryParseSupport1.getfilterFound();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(bytesReference14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test19417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19417");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter4);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter6 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter6;
        java.lang.String str8 = nestedInnerQueryParseSupport1.path;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        org.elasticsearch.common.bytes.BytesReference bytesReference10 = null;
        nestedInnerQueryParseSupport1.source = bytesReference10;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(objectMapper9);
        org.junit.Assert.assertNull(objectMapper12);
    }

    @Test
    public void test19418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19418");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter8;
        org.apache.lucene.search.Filter filter10 = nestedInnerQueryParseSupport1.childFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper11;
        boolean boolean13 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter15 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter15;
        org.elasticsearch.common.bytes.BytesReference bytesReference17 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference17);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(filter10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test19419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19419");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query4 = null;
        nestedInnerQueryParseSupport1.innerFilter = query4;
        nestedInnerQueryParseSupport1.filterFound = false;
        org.apache.lucene.search.Query query8 = nestedInnerQueryParseSupport1.innerQuery;
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper11;
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(query8);
    }

    @Test
    public void test19420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19420");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter3 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound;
        java.lang.String str5 = nestedInnerQueryParseSupport1.path;
        boolean boolean6 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean7 = nestedInnerQueryParseSupport1.queryParsed;
        org.apache.lucene.search.Query query8 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference9 = nestedInnerQueryParseSupport1.source;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Query query13 = nestedInnerQueryParseSupport1.innerFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.Filter filter15 = nestedInnerQueryParseSupport1.childFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper16 = nestedInnerQueryParseSupport1.parentObjectMapper;
        java.lang.String str17 = nestedInnerQueryParseSupport1.path;
        boolean boolean18 = nestedInnerQueryParseSupport1.getqueryFound();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(query8);
        org.junit.Assert.assertNull(bytesReference9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(query13);
        org.junit.Assert.assertNull(bitDocIdSetFilter14);
        org.junit.Assert.assertNull(filter15);
        org.junit.Assert.assertNull(objectMapper16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test19421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19421");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Filter filter12 = nestedInnerQueryParseSupport1.getchildFilter();
        boolean boolean13 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean14 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(filter12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test19422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19422");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterParsed;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        boolean boolean6 = nestedInnerQueryParseSupport1.filterParsed;
        org.apache.lucene.search.Filter filter7 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter7);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter9 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter9;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(objectMapper11);
    }

    @Test
    public void test19423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19423");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.index.query.QueryParseContext queryParseContext12 = nestedInnerQueryParseSupport1.parseContext;
        org.apache.lucene.search.Filter filter13 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter13);
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(objectMapper11);
        org.junit.Assert.assertNull(queryParseContext12);
    }

    @Test
    public void test19424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19424");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper9;
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean12 = nestedInnerQueryParseSupport1.getfilterFound();
        boolean boolean13 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter14);
        org.apache.lucene.search.Query query16 = null;
        nestedInnerQueryParseSupport1.innerFilter = query16;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper18;
        boolean boolean20 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test19425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19425");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        org.apache.lucene.search.Query query3 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper4 = nestedInnerQueryParseSupport1.parentObjectMapper;
        boolean boolean5 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper6 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query7 = nestedInnerQueryParseSupport1.innerQuery;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = nestedInnerQueryParseSupport1.getparentFilter();
        nestedInnerQueryParseSupport1.setqueryFound(true);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter11 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.Filter filter12 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.parentFilter;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertNull(query3);
        org.junit.Assert.assertNull(objectMapper4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(objectMapper6);
        org.junit.Assert.assertNull(query7);
        org.junit.Assert.assertNull(bitDocIdSetFilter8);
        org.junit.Assert.assertNull(bitDocIdSetFilter11);
        org.junit.Assert.assertNull(filter12);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
    }

    @Test
    public void test19426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19426");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter3 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean4 = nestedInnerQueryParseSupport1.filterFound();
        org.apache.lucene.search.Query query5 = null;
        nestedInnerQueryParseSupport1.innerQuery = query5;
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.setPathLevel();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test19427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19427");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = nestedInnerQueryParseSupport1.source;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        nestedInnerQueryParseSupport1.setfilterFound(true);
        boolean boolean17 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        java.lang.String str19 = nestedInnerQueryParseSupport1.path;
        org.apache.lucene.search.Query query20 = null;
        nestedInnerQueryParseSupport1.innerQuery = query20;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter22 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter22;
        org.apache.lucene.search.Query query24 = nestedInnerQueryParseSupport1.getInnerQuery();
        boolean boolean25 = nestedInnerQueryParseSupport1.queryFound;
        org.apache.lucene.search.Query query26 = nestedInnerQueryParseSupport1.innerQuery;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bytesReference12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(objectMapper18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(query24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(query26);
    }

    @Test
    public void test19428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19428");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Query query5 = nestedInnerQueryParseSupport1.innerFilter;
        nestedInnerQueryParseSupport1.path = "object";
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter8);
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(query5);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(objectMapper11);
    }

    @Test
    public void test19429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19429");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.source = bytesReference8;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = nestedInnerQueryParseSupport1.parentObjectMapper;
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        nestedInnerQueryParseSupport1.path = "object";
        boolean boolean15 = nestedInnerQueryParseSupport1.queryFound;
        org.apache.lucene.search.Query query16 = nestedInnerQueryParseSupport1.innerFilter;
        org.apache.lucene.search.Query query17 = nestedInnerQueryParseSupport1.innerQuery;
        boolean boolean18 = nestedInnerQueryParseSupport1.queryFound();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(objectMapper10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(query16);
        org.junit.Assert.assertNull(query17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test19430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19430");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Query query5 = null;
        nestedInnerQueryParseSupport1.innerFilter = query5;
        org.apache.lucene.search.Filter filter7 = nestedInnerQueryParseSupport1.getchildFilter();
        boolean boolean8 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference9 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference9);
        nestedInnerQueryParseSupport1.filterFound = false;
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = nestedInnerQueryParseSupport1.getsource();
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.Filter filter15 = nestedInnerQueryParseSupport1.childFilter;
        org.elasticsearch.index.query.QueryParseContext queryParseContext16 = nestedInnerQueryParseSupport1.getparseContext();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(filter7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(bytesReference13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(filter15);
        org.junit.Assert.assertNull(queryParseContext16);
    }

    @Test
    public void test19431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19431");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = nestedInnerQueryParseSupport1.getparentFilter();
        org.apache.lucene.search.Filter filter11 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.Query query12 = null;
        nestedInnerQueryParseSupport1.innerQuery = query12;
        org.apache.lucene.search.Filter filter14 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.Filter filter15 = null;
        nestedInnerQueryParseSupport1.childFilter = filter15;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter10);
        org.junit.Assert.assertNull(filter11);
        org.junit.Assert.assertNull(filter14);
    }

    @Test
    public void test19432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19432");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.Filter filter12 = nestedInnerQueryParseSupport1.childFilter;
        java.lang.String str13 = nestedInnerQueryParseSupport1.getPath();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = nestedInnerQueryParseSupport1.parentFilter;
        java.lang.String str15 = nestedInnerQueryParseSupport1.getPath();
        boolean boolean16 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(filter12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(bitDocIdSetFilter14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test19433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19433");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter2 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter2);
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter6 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = nestedInnerQueryParseSupport1.source;
        org.apache.lucene.search.Filter filter9 = null;
        nestedInnerQueryParseSupport1.childFilter = filter9;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper11;
        org.junit.Assert.assertNull(bytesReference8);
    }

    @Test
    public void test19434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19434");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query4 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference5 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference5);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter7 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter7);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter9 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.Filter filter10 = nestedInnerQueryParseSupport1.getchildFilter();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryParsed;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.getparentFilter();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = nestedInnerQueryParseSupport1.parentFilter;
        java.lang.String str15 = nestedInnerQueryParseSupport1.getPath();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(query4);
        org.junit.Assert.assertNull(bitDocIdSetFilter9);
        org.junit.Assert.assertNull(filter10);
        org.junit.Assert.assertNull(objectMapper11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
        org.junit.Assert.assertNull(bitDocIdSetFilter14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test19435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19435");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference13);
        boolean boolean15 = nestedInnerQueryParseSupport1.queryFound();
        boolean boolean16 = nestedInnerQueryParseSupport1.filterFound();
        org.apache.lucene.search.Filter filter17 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter17);
        boolean boolean19 = nestedInnerQueryParseSupport1.getfilterFound();
        nestedInnerQueryParseSupport1.path = "nested";
        // The following exception was thrown during execution in test generation
        try {
            org.apache.lucene.search.Query query22 = nestedInnerQueryParseSupport1.getInnerQuery();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test19436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19436");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.apache.lucene.search.Query query4 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper5 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.apache.lucene.search.Filter filter6 = nestedInnerQueryParseSupport1.childFilter;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper7 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.elasticsearch.index.query.QueryParseContext queryParseContext8 = nestedInnerQueryParseSupport1.parseContext;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.apache.lucene.search.Query query10 = nestedInnerQueryParseSupport1.innerQuery;
        java.lang.String str11 = nestedInnerQueryParseSupport1.path;
        org.apache.lucene.search.Query query12 = nestedInnerQueryParseSupport1.getInnerQuery();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.getparentFilter();
        org.junit.Assert.assertNull(query4);
        org.junit.Assert.assertNull(objectMapper5);
        org.junit.Assert.assertNull(filter6);
        org.junit.Assert.assertNull(objectMapper7);
        org.junit.Assert.assertNull(queryParseContext8);
        org.junit.Assert.assertNull(objectMapper9);
        org.junit.Assert.assertNull(query10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(query12);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
    }

    @Test
    public void test19437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19437");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter8;
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        nestedInnerQueryParseSupport1.setqueryFound(true);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean15 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper16 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(objectMapper16);
    }

    @Test
    public void test19438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19438");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = nestedInnerQueryParseSupport1.source;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        nestedInnerQueryParseSupport1.setfilterFound(true);
        boolean boolean17 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        java.lang.String str19 = nestedInnerQueryParseSupport1.getPath();
        nestedInnerQueryParseSupport1.setqueryFound(true);
        org.elasticsearch.common.bytes.BytesReference bytesReference22 = nestedInnerQueryParseSupport1.getsource();
        org.apache.lucene.search.Filter filter23 = nestedInnerQueryParseSupport1.getchildFilter();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bytesReference12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(objectMapper18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(bytesReference22);
        org.junit.Assert.assertNull(filter23);
    }

    @Test
    public void test19439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19439");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query4 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference5 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference5);
        nestedInnerQueryParseSupport1.filterFound = false;
        java.lang.String str9 = nestedInnerQueryParseSupport1.getPath();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = nestedInnerQueryParseSupport1.getparentFilter();
        org.apache.lucene.search.Query query11 = nestedInnerQueryParseSupport1.innerQuery;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(query4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(bitDocIdSetFilter10);
        org.junit.Assert.assertNull(query11);
    }

    @Test
    public void test19440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19440");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        org.apache.lucene.search.Query query9 = nestedInnerQueryParseSupport1.innerFilter;
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        nestedInnerQueryParseSupport1.setfilterFound(true);
        nestedInnerQueryParseSupport1.queryFound = true;
        org.apache.lucene.search.Query query16 = null;
        nestedInnerQueryParseSupport1.innerFilter = query16;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(query9);
    }

    @Test
    public void test19441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19441");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.queryParsed = false;
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.source = bytesReference8;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = nestedInnerQueryParseSupport1.parentObjectMapper;
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper13;
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = null;
        nestedInnerQueryParseSupport1.source = bytesReference15;
        org.apache.lucene.search.Filter filter17 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter17);
        java.lang.String str19 = nestedInnerQueryParseSupport1.getPath();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter20 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean21 = nestedInnerQueryParseSupport1.filterFound();
        boolean boolean22 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.index.query.QueryParseContext queryParseContext23 = nestedInnerQueryParseSupport1.getparseContext();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(objectMapper10);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(bitDocIdSetFilter20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(queryParseContext23);
    }

    @Test
    public void test19442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19442");
        org.elasticsearch.index.mapper.object.ObjectMapper.Nested nested0 = org.elasticsearch.index.mapper.object.ObjectMapper.Defaults.NESTED;
        boolean boolean1 = nested0.isIncludeInRoot();
        boolean boolean2 = nested0.isIncludeInParent();
        boolean boolean3 = nested0.isIncludeInParent();
        boolean boolean4 = nested0.isIncludeInParent();
        boolean boolean5 = nested0.isIncludeInParent();
        org.junit.Assert.assertNotNull(nested0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test19443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19443");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper5 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper5;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper8;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.parentObjectMapper;
        boolean boolean13 = nestedInnerQueryParseSupport1.getfilterParsed();
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.resetPathLevel();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test19444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19444");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.filterFound = false;
        nestedInnerQueryParseSupport1.setfilterFound(true);
        boolean boolean15 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean16 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean17 = nestedInnerQueryParseSupport1.queryParsed;
        org.elasticsearch.common.bytes.BytesReference bytesReference18 = nestedInnerQueryParseSupport1.getsource();
        org.apache.lucene.search.Filter filter19 = null;
        nestedInnerQueryParseSupport1.childFilter = filter19;
        org.elasticsearch.index.query.QueryParseContext queryParseContext21 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.Filter filter22 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter22);
        org.apache.lucene.search.Filter filter24 = null;
        nestedInnerQueryParseSupport1.childFilter = filter24;
        org.elasticsearch.common.bytes.BytesReference bytesReference26 = nestedInnerQueryParseSupport1.source;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(bytesReference18);
        org.junit.Assert.assertNull(queryParseContext21);
        org.junit.Assert.assertNull(bytesReference26);
    }

    @Test
    public void test19445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19445");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound();
        nestedInnerQueryParseSupport1.path = "";
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = nestedInnerQueryParseSupport1.source;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper16 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.elasticsearch.index.query.QueryParseContext queryParseContext17 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean18 = nestedInnerQueryParseSupport1.filterParsed;
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        nestedInnerQueryParseSupport1.queryParsed = false;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        java.lang.String str25 = nestedInnerQueryParseSupport1.path;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper26 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper26;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(bytesReference13);
        org.junit.Assert.assertNull(objectMapper16);
        org.junit.Assert.assertNull(queryParseContext17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test19446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19446");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        nestedInnerQueryParseSupport1.filterFound = true;
        nestedInnerQueryParseSupport1.filterParsed = true;
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.elasticsearch.common.bytes.BytesReference bytesReference9 = nestedInnerQueryParseSupport1.getsource();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper10 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper10;
        boolean boolean12 = nestedInnerQueryParseSupport1.getqueryParsed();
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(bytesReference9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test19447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19447");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter3 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound;
        java.lang.String str5 = nestedInnerQueryParseSupport1.path;
        boolean boolean6 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean7 = nestedInnerQueryParseSupport1.queryParsed;
        org.apache.lucene.search.Query query8 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference9 = nestedInnerQueryParseSupport1.source;
        org.elasticsearch.index.query.QueryParseContext queryParseContext10 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean11 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext12 = nestedInnerQueryParseSupport1.getparseContext();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(query8);
        org.junit.Assert.assertNull(bytesReference9);
        org.junit.Assert.assertNull(queryParseContext10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(queryParseContext12);
    }

    @Test
    public void test19448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19448");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.path = "nested";
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.apache.lucene.search.Filter filter12 = nestedInnerQueryParseSupport1.getchildFilter();
        nestedInnerQueryParseSupport1.queryParsed = false;
        java.lang.String str15 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.queryFound = false;
        boolean boolean18 = nestedInnerQueryParseSupport1.filterFound;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(filter12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "nested" + "'", str15, "nested");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test19449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19449");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter3 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound;
        java.lang.String str5 = nestedInnerQueryParseSupport1.path;
        org.elasticsearch.index.query.QueryParseContext queryParseContext6 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.Filter filter7 = nestedInnerQueryParseSupport1.childFilter;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryParsed;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(queryParseContext6);
        org.junit.Assert.assertNull(filter7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test19450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19450");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query4 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference5 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference5);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter7 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter7);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter9 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.Filter filter10 = nestedInnerQueryParseSupport1.getchildFilter();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryParsed;
        java.lang.Class<?> wildcardClass13 = nestedInnerQueryParseSupport1.getClass();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(query4);
        org.junit.Assert.assertNull(bitDocIdSetFilter9);
        org.junit.Assert.assertNull(filter10);
        org.junit.Assert.assertNull(objectMapper11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test19451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19451");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        nestedInnerQueryParseSupport1.filterFound = true;
        nestedInnerQueryParseSupport1.path = "hi!";
        java.lang.String str7 = nestedInnerQueryParseSupport1.getPath();
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.filterFound();
        org.elasticsearch.index.query.QueryParseContext queryParseContext10 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean11 = nestedInnerQueryParseSupport1.filterParsed;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(queryParseContext10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test19452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19452");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter4;
        org.apache.lucene.search.Filter filter6 = null;
        nestedInnerQueryParseSupport1.childFilter = filter6;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter8;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean13 = nestedInnerQueryParseSupport1.queryParsed;
        nestedInnerQueryParseSupport1.path = "object";
        boolean boolean16 = nestedInnerQueryParseSupport1.getqueryFound();
        org.apache.lucene.search.Query query17 = nestedInnerQueryParseSupport1.getInnerQuery();
        boolean boolean18 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Query query19 = null;
        nestedInnerQueryParseSupport1.innerFilter = query19;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(query17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test19453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19453");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.path = "nested";
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        org.apache.lucene.search.Filter filter14 = nestedInnerQueryParseSupport1.getchildFilter();
        nestedInnerQueryParseSupport1.setqueryFound(false);
        boolean boolean17 = nestedInnerQueryParseSupport1.queryFound();
        org.elasticsearch.index.query.QueryParseContext queryParseContext18 = nestedInnerQueryParseSupport1.parseContext;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(objectMapper11);
        org.junit.Assert.assertNull(filter14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(queryParseContext18);
    }

    @Test
    public void test19454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19454");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Query query5 = null;
        nestedInnerQueryParseSupport1.innerFilter = query5;
        org.apache.lucene.search.Filter filter7 = nestedInnerQueryParseSupport1.getchildFilter();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = nestedInnerQueryParseSupport1.getparentFilter();
        org.elasticsearch.common.bytes.BytesReference bytesReference9 = null;
        nestedInnerQueryParseSupport1.source = bytesReference9;
        boolean boolean11 = nestedInnerQueryParseSupport1.queryFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference12);
        boolean boolean14 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter15 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter15);
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(filter7);
        org.junit.Assert.assertNull(bitDocIdSetFilter8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test19455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19455");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = nestedInnerQueryParseSupport1.source;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.apache.lucene.search.Filter filter14 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter14);
        boolean boolean16 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Filter filter17 = nestedInnerQueryParseSupport1.getchildFilter();
        // The following exception was thrown during execution in test generation
        try {
// flaky:             nestedInnerQueryParseSupport1.filter();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bytesReference12);
        org.junit.Assert.assertNull(objectMapper13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(filter17);
    }

    @Test
    public void test19456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19456");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound();
        nestedInnerQueryParseSupport1.path = "";
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper13;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference16 = null;
        nestedInnerQueryParseSupport1.source = bytesReference16;
        org.apache.lucene.search.Query query18 = null;
        nestedInnerQueryParseSupport1.innerQuery = query18;
        // The following exception was thrown during execution in test generation
        try {
            nestedInnerQueryParseSupport1.setPathLevel();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(objectMapper15);
    }

    @Test
    public void test19457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19457");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        nestedInnerQueryParseSupport1.path = "nested";
        boolean boolean11 = nestedInnerQueryParseSupport1.queryFound;
        org.apache.lucene.search.Query query12 = nestedInnerQueryParseSupport1.innerQuery;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.lucene.search.Query query13 = nestedInnerQueryParseSupport1.getInnerQuery();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper8);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(query12);
    }

    @Test
    public void test19458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19458");
        org.elasticsearch.index.mapper.object.ObjectMapper.Nested nested0 = org.elasticsearch.index.mapper.object.ObjectMapper.Nested.NO;
        boolean boolean1 = nested0.isIncludeInParent();
        boolean boolean2 = nested0.isIncludeInRoot();
        boolean boolean3 = nested0.isIncludeInParent();
        boolean boolean4 = nested0.isIncludeInParent();
        boolean boolean5 = nested0.isIncludeInRoot();
        boolean boolean6 = nested0.isNested();
        boolean boolean7 = nested0.isIncludeInParent();
        boolean boolean8 = nested0.isNested();
        boolean boolean9 = nested0.isIncludeInRoot();
        org.junit.Assert.assertNotNull(nested0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test19459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19459");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter2 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter2);
        org.apache.lucene.search.Query query4 = null;
        nestedInnerQueryParseSupport1.innerFilter = query4;
        boolean boolean6 = nestedInnerQueryParseSupport1.filterFound;
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test19460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19460");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound();
        nestedInnerQueryParseSupport1.path = "";
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = nestedInnerQueryParseSupport1.source;
        org.apache.lucene.search.Filter filter14 = nestedInnerQueryParseSupport1.childFilter;
        org.apache.lucene.search.Query query15 = nestedInnerQueryParseSupport1.innerQuery;
        boolean boolean16 = nestedInnerQueryParseSupport1.getqueryFound();
        org.apache.lucene.search.Query query17 = nestedInnerQueryParseSupport1.innerQuery;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(bytesReference13);
        org.junit.Assert.assertNull(filter14);
        org.junit.Assert.assertNull(query15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(query17);
    }

    @Test
    public void test19461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19461");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = nestedInnerQueryParseSupport1.source;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        nestedInnerQueryParseSupport1.setfilterFound(true);
        boolean boolean17 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        boolean boolean19 = nestedInnerQueryParseSupport1.queryParsed;
        java.lang.String str20 = nestedInnerQueryParseSupport1.getPath();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper21 = nestedInnerQueryParseSupport1.parentObjectMapper;
        boolean boolean22 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean23 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bytesReference12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(objectMapper18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(objectMapper21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test19462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19462");
        org.elasticsearch.index.mapper.object.ObjectMapper.Nested nested2 = org.elasticsearch.index.mapper.object.ObjectMapper.Nested.newNested(true, true);
        boolean boolean3 = nested2.isIncludeInRoot();
        boolean boolean4 = nested2.isIncludeInParent();
        boolean boolean5 = nested2.isIncludeInParent();
        boolean boolean6 = nested2.isIncludeInParent();
        org.junit.Assert.assertNotNull(nested2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test19463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19463");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterFound();
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound();
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.Query query14 = nestedInnerQueryParseSupport1.getInnerFilter();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        java.lang.String str16 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        org.apache.lucene.search.Query query19 = nestedInnerQueryParseSupport1.getInnerFilter();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
        org.junit.Assert.assertNull(query14);
        org.junit.Assert.assertNull(objectMapper15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(query19);
    }

    @Test
    public void test19464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19464");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.elasticsearch.index.query.QueryParseContext queryParseContext5 = nestedInnerQueryParseSupport1.parseContext;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = nestedInnerQueryParseSupport1.getparentFilter();
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(queryParseContext5);
        org.junit.Assert.assertNull(bitDocIdSetFilter8);
    }

    @Test
    public void test19465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19465");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper9;
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean12 = nestedInnerQueryParseSupport1.getfilterFound();
        boolean boolean13 = nestedInnerQueryParseSupport1.queryFound();
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test19466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19466");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.source = bytesReference6;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        boolean boolean9 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper11 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper11;
        nestedInnerQueryParseSupport1.setfilterFound(true);
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(objectMapper8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test19467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19467");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean3 = nestedInnerQueryParseSupport1.queryFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter4);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter6 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter6);
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterParsed();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.lucene.search.Query query9 = nestedInnerQueryParseSupport1.getInnerQuery();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test19468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19468");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean12 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean13 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper14 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        boolean boolean15 = nestedInnerQueryParseSupport1.filterFound();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(objectMapper14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test19469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19469");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = nestedInnerQueryParseSupport1.parentFilter;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(bitDocIdSetFilter10);
    }

    @Test
    public void test19470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19470");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Query query5 = null;
        nestedInnerQueryParseSupport1.innerFilter = query5;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter7 = nestedInnerQueryParseSupport1.parentFilter;
        org.apache.lucene.search.Filter filter8 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter8);
        org.apache.lucene.search.Query query10 = nestedInnerQueryParseSupport1.innerQuery;
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.parseContext;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter7);
        org.junit.Assert.assertNull(query10);
        org.junit.Assert.assertNull(queryParseContext11);
    }

    @Test
    public void test19471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19471");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query4 = null;
        nestedInnerQueryParseSupport1.innerFilter = query4;
        nestedInnerQueryParseSupport1.path = "";
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.Query query10 = null;
        nestedInnerQueryParseSupport1.innerFilter = query10;
        org.elasticsearch.index.query.QueryParseContext queryParseContext12 = nestedInnerQueryParseSupport1.parseContext;
        org.apache.lucene.search.Query query13 = nestedInnerQueryParseSupport1.innerFilter;
        boolean boolean14 = nestedInnerQueryParseSupport1.getqueryParsed();
        java.lang.String str15 = nestedInnerQueryParseSupport1.getPath();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(queryParseContext12);
        org.junit.Assert.assertNull(query13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test19472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19472");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.index.query.QueryParseContext queryParseContext4 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.common.bytes.BytesReference bytesReference5 = nestedInnerQueryParseSupport1.getsource();
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = nestedInnerQueryParseSupport1.getsource();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = nestedInnerQueryParseSupport1.parentObjectMapper;
        java.lang.String str10 = nestedInnerQueryParseSupport1.getPath();
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(queryParseContext4);
        org.junit.Assert.assertNull(bytesReference5);
        org.junit.Assert.assertNull(bytesReference8);
        org.junit.Assert.assertNull(objectMapper9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test19473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19473");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query4 = null;
        nestedInnerQueryParseSupport1.innerFilter = query4;
        nestedInnerQueryParseSupport1.path = "";
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryFound();
        boolean boolean11 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter12 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean13 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean14 = nestedInnerQueryParseSupport1.queryFound;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(objectMapper9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test19474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19474");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.apache.lucene.search.Query query5 = nestedInnerQueryParseSupport1.getInnerFilter();
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        boolean boolean8 = nestedInnerQueryParseSupport1.filterParsed;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter9 = nestedInnerQueryParseSupport1.getparentFilter();
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = nestedInnerQueryParseSupport1.getparentFilter();
        boolean boolean15 = nestedInnerQueryParseSupport1.filterFound();
        org.apache.lucene.search.Filter filter16 = nestedInnerQueryParseSupport1.getchildFilter();
        org.elasticsearch.common.bytes.BytesReference bytesReference17 = nestedInnerQueryParseSupport1.source;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(query5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter9);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertNull(objectMapper13);
        org.junit.Assert.assertNull(bitDocIdSetFilter14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(filter16);
        org.junit.Assert.assertNull(bytesReference17);
    }

    @Test
    public void test19475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19475");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query4 = null;
        nestedInnerQueryParseSupport1.innerFilter = query4;
        nestedInnerQueryParseSupport1.path = "";
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = nestedInnerQueryParseSupport1.getNestedObjectMapper();
        org.elasticsearch.common.bytes.BytesReference bytesReference9 = nestedInnerQueryParseSupport1.getsource();
        nestedInnerQueryParseSupport1.filterFound = true;
        boolean boolean12 = nestedInnerQueryParseSupport1.filterParsed;
        org.elasticsearch.common.bytes.BytesReference bytesReference13 = null;
        nestedInnerQueryParseSupport1.source = bytesReference13;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        boolean boolean16 = nestedInnerQueryParseSupport1.filterFound();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(objectMapper8);
        org.junit.Assert.assertNull(bytesReference9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(objectMapper15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test19476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19476");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper9;
        boolean boolean11 = nestedInnerQueryParseSupport1.queryFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = nestedInnerQueryParseSupport1.getsource();
        nestedInnerQueryParseSupport1.queryFound = false;
        nestedInnerQueryParseSupport1.setfilterFound(false);
        boolean boolean17 = nestedInnerQueryParseSupport1.queryParsed;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper18 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper18;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(bytesReference12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test19477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19477");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound();
        boolean boolean15 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean16 = nestedInnerQueryParseSupport1.queryParsed;
        nestedInnerQueryParseSupport1.path = "";
        org.apache.lucene.search.Query query19 = nestedInnerQueryParseSupport1.innerFilter;
        boolean boolean20 = nestedInnerQueryParseSupport1.filterParsed;
        org.apache.lucene.search.Filter filter21 = null;
        nestedInnerQueryParseSupport1.childFilter = filter21;
        boolean boolean23 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter24 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter24);
        nestedInnerQueryParseSupport1.queryParsed = true;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(query19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test19478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19478");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter8;
        org.elasticsearch.common.bytes.BytesReference bytesReference10 = null;
        nestedInnerQueryParseSupport1.source = bytesReference10;
        org.elasticsearch.common.bytes.BytesReference bytesReference12 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference12);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter14 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter14;
        org.elasticsearch.common.bytes.BytesReference bytesReference16 = null;
        nestedInnerQueryParseSupport1.source = bytesReference16;
        boolean boolean18 = nestedInnerQueryParseSupport1.getqueryFound();
        org.apache.lucene.search.Query query19 = nestedInnerQueryParseSupport1.innerFilter;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter20 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter20;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(query19);
    }

    @Test
    public void test19479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19479");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        nestedInnerQueryParseSupport1.filterParsed = false;
        nestedInnerQueryParseSupport1.path = "nested";
        java.lang.String str14 = nestedInnerQueryParseSupport1.getPath();
        org.elasticsearch.common.bytes.BytesReference bytesReference15 = nestedInnerQueryParseSupport1.getsource();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter16 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter16);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "nested" + "'", str14, "nested");
        org.junit.Assert.assertNull(bytesReference15);
    }

    @Test
    public void test19480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19480");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryParsed;
        org.elasticsearch.common.bytes.BytesReference bytesReference11 = nestedInnerQueryParseSupport1.getsource();
        nestedInnerQueryParseSupport1.setqueryFound(false);
        java.lang.String str14 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper17 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(bytesReference11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(objectMapper17);
    }

    @Test
    public void test19481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19481");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter3 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound;
        java.lang.String str5 = nestedInnerQueryParseSupport1.path;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter6 = nestedInnerQueryParseSupport1.getparentFilter();
        boolean boolean7 = nestedInnerQueryParseSupport1.getqueryFound();
        boolean boolean8 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.queryFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference10 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference10);
        org.apache.lucene.search.Query query12 = nestedInnerQueryParseSupport1.innerFilter;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(bitDocIdSetFilter6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(query12);
    }

    @Test
    public void test19482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19482");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        org.elasticsearch.index.query.QueryParseContext queryParseContext3 = nestedInnerQueryParseSupport1.parseContext;
        org.apache.lucene.search.Query query4 = null;
        nestedInnerQueryParseSupport1.innerFilter = query4;
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        java.lang.String str8 = nestedInnerQueryParseSupport1.getPath();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter9 = nestedInnerQueryParseSupport1.getparentFilter();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.lucene.search.Query query10 = nestedInnerQueryParseSupport1.getInnerQuery();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertNull(queryParseContext3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(bitDocIdSetFilter9);
    }

    @Test
    public void test19483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19483");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper9 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper9;
        org.apache.lucene.search.Filter filter11 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter11);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper13;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper15 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query16 = nestedInnerQueryParseSupport1.innerFilter;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(objectMapper15);
        org.junit.Assert.assertNull(query16);
    }

    @Test
    public void test19484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19484");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        org.apache.lucene.search.Query query9 = nestedInnerQueryParseSupport1.innerFilter;
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound;
        nestedInnerQueryParseSupport1.path = "hi!";
        nestedInnerQueryParseSupport1.filterParsed = true;
        java.lang.String str15 = nestedInnerQueryParseSupport1.path;
        org.apache.lucene.search.Filter filter16 = null;
        nestedInnerQueryParseSupport1.childFilter = filter16;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter18 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter18;
        org.apache.lucene.search.Filter filter20 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter20);
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper22 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        boolean boolean23 = nestedInnerQueryParseSupport1.filterParsed;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(query9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(objectMapper22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test19485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19485");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.source = bytesReference4;
        nestedInnerQueryParseSupport1.filterFound = true;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        boolean boolean10 = nestedInnerQueryParseSupport1.queryFound;
        nestedInnerQueryParseSupport1.filterFound = false;
        nestedInnerQueryParseSupport1.setfilterFound(true);
        boolean boolean15 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean16 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean17 = nestedInnerQueryParseSupport1.queryParsed;
        org.elasticsearch.common.bytes.BytesReference bytesReference18 = nestedInnerQueryParseSupport1.getsource();
        org.apache.lucene.search.Filter filter19 = null;
        nestedInnerQueryParseSupport1.childFilter = filter19;
        org.apache.lucene.search.Query query21 = nestedInnerQueryParseSupport1.innerFilter;
        java.lang.String str22 = nestedInnerQueryParseSupport1.path;
        org.apache.lucene.search.Query query23 = null;
        nestedInnerQueryParseSupport1.innerQuery = query23;
        nestedInnerQueryParseSupport1.queryFound = true;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper27 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(bytesReference18);
        org.junit.Assert.assertNull(query21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(objectMapper27);
    }

    @Test
    public void test19486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19486");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        boolean boolean4 = nestedInnerQueryParseSupport1.queryFound();
        nestedInnerQueryParseSupport1.setfilterFound(false);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter7 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter7);
        org.apache.lucene.search.Filter filter9 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter9);
        boolean boolean11 = nestedInnerQueryParseSupport1.filterParsed;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        boolean boolean13 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean14 = nestedInnerQueryParseSupport1.getfilterParsed();
        org.apache.lucene.search.Filter filter15 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter15);
        nestedInnerQueryParseSupport1.filterParsed = true;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test19487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19487");
        org.elasticsearch.index.mapper.object.ObjectMapper.Nested nested2 = org.elasticsearch.index.mapper.object.ObjectMapper.Nested.newNested(false, false);
        boolean boolean3 = nested2.isNested();
        boolean boolean4 = nested2.isIncludeInRoot();
        boolean boolean5 = nested2.isNested();
        boolean boolean6 = nested2.isNested();
        org.junit.Assert.assertNotNull(nested2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test19488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19488");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        nestedInnerQueryParseSupport1.filterParsed = false;
        org.apache.lucene.search.Query query8 = null;
        nestedInnerQueryParseSupport1.innerFilter = query8;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = nestedInnerQueryParseSupport1.getparentFilter();
        java.lang.String str11 = nestedInnerQueryParseSupport1.getPath();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper12 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        nestedInnerQueryParseSupport1.setfilterParsed(false);
        boolean boolean16 = nestedInnerQueryParseSupport1.filterParsed;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(objectMapper12);
        org.junit.Assert.assertNull(objectMapper13);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test19489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19489");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        java.lang.String str3 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        nestedInnerQueryParseSupport1.setfilterFound(true);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        nestedInnerQueryParseSupport1.filterParsed = false;
        boolean boolean15 = nestedInnerQueryParseSupport1.filterFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper16 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNull(objectMapper16);
    }

    @Test
    public void test19490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19490");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.Query query4 = null;
        nestedInnerQueryParseSupport1.innerFilter = query4;
        nestedInnerQueryParseSupport1.filterFound = false;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter8 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter8);
        org.elasticsearch.common.bytes.BytesReference bytesReference10 = nestedInnerQueryParseSupport1.getsource();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter11 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter11;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper13 = nestedInnerQueryParseSupport1.getParentObjectMapper();
        // The following exception was thrown during execution in test generation
        try {
// flaky:             nestedInnerQueryParseSupport1.query();
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(bytesReference10);
        org.junit.Assert.assertNull(objectMapper13);
    }

    @Test
    public void test19491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19491");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter4);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter6 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter6;
        boolean boolean8 = nestedInnerQueryParseSupport1.getfilterFound();
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        nestedInnerQueryParseSupport1.filterFound = false;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.lucene.search.Query query13 = nestedInnerQueryParseSupport1.getInnerFilter();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test19492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19492");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.parseContext;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.Query query4 = null;
        nestedInnerQueryParseSupport1.innerFilter = query4;
        org.elasticsearch.index.query.QueryParseContext queryParseContext6 = nestedInnerQueryParseSupport1.getparseContext();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper7 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper8 = null;
        nestedInnerQueryParseSupport1.parentObjectMapper = objectMapper8;
        boolean boolean10 = nestedInnerQueryParseSupport1.filterFound;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(queryParseContext6);
        org.junit.Assert.assertNull(objectMapper7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test19493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19493");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        java.lang.String str3 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        boolean boolean6 = nestedInnerQueryParseSupport1.getfilterParsed();
        java.lang.String str7 = nestedInnerQueryParseSupport1.path;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test19494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19494");
        org.elasticsearch.index.mapper.object.ObjectMapper.Nested nested0 = org.elasticsearch.index.mapper.object.ObjectMapper.Nested.NO;
        boolean boolean1 = nested0.isNested();
        boolean boolean2 = nested0.isNested();
        boolean boolean3 = nested0.isNested();
        boolean boolean4 = nested0.isIncludeInParent();
        boolean boolean5 = nested0.isIncludeInParent();
        boolean boolean6 = nested0.isIncludeInRoot();
        boolean boolean7 = nested0.isIncludeInParent();
        boolean boolean8 = nested0.isIncludeInParent();
        boolean boolean9 = nested0.isNested();
        boolean boolean10 = nested0.isNested();
        org.junit.Assert.assertNotNull(nested0);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test19495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19495");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean7 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean8 = nestedInnerQueryParseSupport1.queryFound;
        boolean boolean9 = nestedInnerQueryParseSupport1.getfilterParsed();
        boolean boolean10 = nestedInnerQueryParseSupport1.getqueryParsed();
        org.elasticsearch.index.query.QueryParseContext queryParseContext11 = nestedInnerQueryParseSupport1.getparseContext();
        boolean boolean12 = nestedInnerQueryParseSupport1.queryFound();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter13 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean14 = nestedInnerQueryParseSupport1.filterFound();
        org.apache.lucene.search.Query query15 = nestedInnerQueryParseSupport1.innerFilter;
        org.elasticsearch.common.bytes.BytesReference bytesReference16 = null;
        nestedInnerQueryParseSupport1.source = bytesReference16;
        boolean boolean18 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper19 = null;
        nestedInnerQueryParseSupport1.nestedObjectMapper = objectMapper19;
        java.lang.String str21 = nestedInnerQueryParseSupport1.path;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter22 = nestedInnerQueryParseSupport1.getparentFilter();
        nestedInnerQueryParseSupport1.path = "";
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper25 = nestedInnerQueryParseSupport1.nestedObjectMapper;
        org.apache.lucene.search.Query query26 = null;
        nestedInnerQueryParseSupport1.innerQuery = query26;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        org.apache.lucene.search.Query query30 = nestedInnerQueryParseSupport1.innerFilter;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(queryParseContext11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(bitDocIdSetFilter13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(query15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(bitDocIdSetFilter22);
        org.junit.Assert.assertNull(objectMapper25);
        org.junit.Assert.assertNull(query30);
    }

    @Test
    public void test19496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19496");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter3 = nestedInnerQueryParseSupport1.parentFilter;
        boolean boolean4 = nestedInnerQueryParseSupport1.filterFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference5 = nestedInnerQueryParseSupport1.getsource();
        boolean boolean6 = nestedInnerQueryParseSupport1.queryParsed;
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        nestedInnerQueryParseSupport1.setqueryParsed(false);
        org.apache.lucene.search.Filter filter11 = nestedInnerQueryParseSupport1.childFilter;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(bitDocIdSetFilter3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(bytesReference5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(filter11);
    }

    @Test
    public void test19497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19497");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        boolean boolean3 = nestedInnerQueryParseSupport1.queryParsed;
        nestedInnerQueryParseSupport1.setfilterParsed(true);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.apache.lucene.search.Filter filter8 = nestedInnerQueryParseSupport1.childFilter;
        boolean boolean9 = nestedInnerQueryParseSupport1.filterFound;
        org.apache.lucene.search.Filter filter10 = null;
        nestedInnerQueryParseSupport1.setchildFilter(filter10);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(filter8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test19498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19498");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.index.query.QueryParseContext queryParseContext2 = nestedInnerQueryParseSupport1.getparseContext();
        nestedInnerQueryParseSupport1.setqueryFound(false);
        org.apache.lucene.search.Query query5 = null;
        nestedInnerQueryParseSupport1.innerFilter = query5;
        org.apache.lucene.search.Filter filter7 = nestedInnerQueryParseSupport1.getchildFilter();
        boolean boolean8 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.common.bytes.BytesReference bytesReference9 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference9);
        boolean boolean11 = nestedInnerQueryParseSupport1.queryParsed;
        boolean boolean12 = nestedInnerQueryParseSupport1.getqueryFound();
        boolean boolean13 = nestedInnerQueryParseSupport1.getfilterParsed();
        java.lang.String str14 = nestedInnerQueryParseSupport1.path;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter15 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter15;
        nestedInnerQueryParseSupport1.setqueryFound(true);
        java.lang.String str19 = nestedInnerQueryParseSupport1.getPath();
        org.apache.lucene.search.Query query20 = null;
        nestedInnerQueryParseSupport1.innerFilter = query20;
        org.junit.Assert.assertNull(queryParseContext2);
        org.junit.Assert.assertNull(filter7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test19499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19499");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        org.elasticsearch.common.bytes.BytesReference bytesReference2 = nestedInnerQueryParseSupport1.source;
        boolean boolean3 = nestedInnerQueryParseSupport1.filterFound;
        org.elasticsearch.common.bytes.BytesReference bytesReference4 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference4);
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference6);
        org.elasticsearch.common.bytes.BytesReference bytesReference8 = null;
        nestedInnerQueryParseSupport1.setsource(bytesReference8);
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter10 = null;
        nestedInnerQueryParseSupport1.setparentFilter(bitDocIdSetFilter10);
        nestedInnerQueryParseSupport1.filterFound = true;
        nestedInnerQueryParseSupport1.setqueryParsed(true);
        org.apache.lucene.search.Query query16 = nestedInnerQueryParseSupport1.innerQuery;
        org.junit.Assert.assertNull(bytesReference2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(query16);
    }

    @Test
    public void test19500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest38.test19500");
        org.elasticsearch.index.query.QueryParseContext queryParseContext0 = null;
        org.elasticsearch.index.query.support.NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new org.elasticsearch.index.query.support.NestedInnerQueryParseSupport(queryParseContext0);
        boolean boolean2 = nestedInnerQueryParseSupport1.getqueryFound();
        org.elasticsearch.index.mapper.object.ObjectMapper objectMapper3 = nestedInnerQueryParseSupport1.parentObjectMapper;
        org.apache.lucene.search.join.BitDocIdSetFilter bitDocIdSetFilter4 = null;
        nestedInnerQueryParseSupport1.parentFilter = bitDocIdSetFilter4;
        org.elasticsearch.common.bytes.BytesReference bytesReference6 = nestedInnerQueryParseSupport1.source;
        java.lang.String str7 = nestedInnerQueryParseSupport1.getPath();
        nestedInnerQueryParseSupport1.filterFound = true;
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(objectMapper3);
        org.junit.Assert.assertNull(bytesReference6);
        org.junit.Assert.assertNull(str7);
    }
}
