/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 20:28:32 GMT 2021
 */

package org.elasticsearch.index.query.support;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Map;
import java.util.concurrent.TimeUnit;
import org.apache.lucene.document.FieldType;
import org.apache.lucene.index.DocValuesType;
import org.apache.lucene.index.IndexOptions;
import org.apache.lucene.search.FieldValueQuery;
import org.apache.lucene.search.Filter;
import org.apache.lucene.search.PhraseQuery;
import org.apache.lucene.search.Query;
import org.apache.lucene.search.join.BitDocIdSetCachingWrapperFilter;
import org.apache.lucene.search.join.BitDocIdSetFilter;
import org.elasticsearch.cluster.metadata.IndexMetaData;
import org.elasticsearch.common.bytes.BytesArray;
import org.elasticsearch.common.bytes.BytesReference;
import org.elasticsearch.common.bytes.ReleasablePagedBytesReference;
import org.elasticsearch.common.io.stream.BytesStreamOutput;
import org.elasticsearch.common.settings.Settings;
import org.elasticsearch.common.util.BigArrays;
import org.elasticsearch.common.util.ByteArray;
import org.elasticsearch.common.xcontent.XContentParser;
import org.elasticsearch.index.Index;
import org.elasticsearch.index.VersionType;
import org.elasticsearch.index.cache.bitset.BitsetFilterCache;
import org.elasticsearch.index.mapper.core.DateFieldMapper;
import org.elasticsearch.index.mapper.object.ObjectMapper;
import org.elasticsearch.index.query.MoreLikeThisQueryBuilder;
import org.elasticsearch.index.query.QueryParseContext;
import org.elasticsearch.index.query.support.NestedInnerQueryParseSupport;
import org.elasticsearch.node.settings.NodeSettingsService;
import org.elasticsearch.search.aggregations.support.AggregationContext;
import org.elasticsearch.search.internal.SearchContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NestedInnerQueryParseSupport_ESTest extends NestedInnerQueryParseSupport_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean0 = nestedInnerQueryParseSupport0.queryFound();
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.query();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPath(nestedInnerQueryParseSupport0.path);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.setqueryParsed(boolean0);
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      
      Query query0 = nestedInnerQueryParseSupport0.getInnerQuery();
      assertNull(query0);
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.filter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.getparentFilter();
      assertNull(bitDocIdSetFilter0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean0 = nestedInnerQueryParseSupport0.getqueryFound();
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPathLevel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean0 = nestedInnerQueryParseSupport0.filterFound();
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      String string0 = nestedInnerQueryParseSupport0.getPath();
      assertNull(string0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.filter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      boolean boolean0 = false;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      nestedInnerQueryParseSupport0.setfilterFound(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getParentObjectMapper();
      assertNull(objectMapper0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      boolean boolean0 = nestedInnerQueryParseSupport0.getqueryParsed();
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      Filter filter0 = nestedInnerQueryParseSupport0.getchildFilter();
      assertNull(filter0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      nestedInnerQueryParseSupport0.setparentFilter(nestedInnerQueryParseSupport0.parentFilter);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      BytesReference bytesReference0 = nestedInnerQueryParseSupport0.getsource();
      assertNull(bytesReference0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      nestedInnerQueryParseSupport0.setsource(bytesReference0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      nestedInnerQueryParseSupport0.setqueryFound(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      nestedInnerQueryParseSupport0.setchildFilter(nestedInnerQueryParseSupport0.parentFilter);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      boolean boolean0 = nestedInnerQueryParseSupport0.getfilterFound();
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.resetPathLevel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.setfilterParsed(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertTrue(nestedInnerQueryParseSupport0.filterParsed);
      
      Query query0 = nestedInnerQueryParseSupport0.getInnerFilter();
      assertNull(query0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertTrue(nestedInnerQueryParseSupport0.filterParsed);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.query();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getNestedObjectMapper();
      assertNull(objectMapper0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      boolean boolean0 = nestedInnerQueryParseSupport0.getfilterParsed();
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      QueryParseContext queryParseContext1 = nestedInnerQueryParseSupport0.getparseContext();
      assertNull(queryParseContext1);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      SearchContext searchContext0 = SearchContext.current();
      assertNull(searchContext0);
      
      XContentParser xContentParser0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = null;
      try {
        nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(xContentParser0, searchContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPathLevel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      boolean boolean0 = nestedInnerQueryParseSupport0.getqueryParsed();
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.getparentFilter();
      assertNull(bitDocIdSetFilter0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      nestedInnerQueryParseSupport0.setparentFilter(bitDocIdSetFilter0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      boolean boolean1 = false;
      nestedInnerQueryParseSupport0.setfilterFound(boolean1);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(boolean1 == boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport1);
      assertFalse(nestedInnerQueryParseSupport1.getqueryFound());
      assertNull(nestedInnerQueryParseSupport1.getPath());
      assertFalse(nestedInnerQueryParseSupport1.filterFound());
      assertFalse(nestedInnerQueryParseSupport1.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport1.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport1.queryFound());
      assertFalse(nestedInnerQueryParseSupport1.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport1.equals((Object)nestedInnerQueryParseSupport0));
      assertFalse(nestedInnerQueryParseSupport1.queryParsed);
      assertFalse(nestedInnerQueryParseSupport1.queryFound);
      assertFalse(nestedInnerQueryParseSupport1.filterParsed);
      assertFalse(nestedInnerQueryParseSupport1.filterFound);
      
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport1.getparentFilter();
      assertNull(bitDocIdSetFilter0);
      assertFalse(nestedInnerQueryParseSupport1.getqueryFound());
      assertNull(nestedInnerQueryParseSupport1.getPath());
      assertFalse(nestedInnerQueryParseSupport1.filterFound());
      assertFalse(nestedInnerQueryParseSupport1.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport1.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport1.queryFound());
      assertFalse(nestedInnerQueryParseSupport1.getqueryParsed());
      assertNotSame(nestedInnerQueryParseSupport1, nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport1.equals((Object)nestedInnerQueryParseSupport0));
      assertFalse(nestedInnerQueryParseSupport1.queryParsed);
      assertFalse(nestedInnerQueryParseSupport1.queryFound);
      assertFalse(nestedInnerQueryParseSupport1.filterParsed);
      assertFalse(nestedInnerQueryParseSupport1.filterFound);
      
      nestedInnerQueryParseSupport0.setchildFilter(bitDocIdSetFilter0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport1.getqueryFound());
      assertNull(nestedInnerQueryParseSupport1.getPath());
      assertFalse(nestedInnerQueryParseSupport1.filterFound());
      assertFalse(nestedInnerQueryParseSupport1.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport1.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport1.queryFound());
      assertFalse(nestedInnerQueryParseSupport1.getqueryParsed());
      assertNotSame(nestedInnerQueryParseSupport0, nestedInnerQueryParseSupport1);
      assertNotSame(nestedInnerQueryParseSupport1, nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.equals((Object)nestedInnerQueryParseSupport1));
      assertFalse(nestedInnerQueryParseSupport1.equals((Object)nestedInnerQueryParseSupport0));
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport1.queryParsed);
      assertFalse(nestedInnerQueryParseSupport1.queryFound);
      assertFalse(nestedInnerQueryParseSupport1.filterParsed);
      assertFalse(nestedInnerQueryParseSupport1.filterFound);
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      boolean boolean0 = false;
      nestedInnerQueryParseSupport0.setfilterFound(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getParentObjectMapper();
      assertNull(objectMapper0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      boolean boolean1 = nestedInnerQueryParseSupport0.filterFound();
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean0 = false;
      nestedInnerQueryParseSupport0.setqueryFound(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.parentFilter;
      assertNull(bitDocIdSetFilter0);
      
      nestedInnerQueryParseSupport0.setparentFilter(bitDocIdSetFilter0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      QueryParseContext queryParseContext1 = nestedInnerQueryParseSupport0.getparseContext();
      assertNull(queryParseContext1);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean1 = nestedInnerQueryParseSupport0.getfilterFound();
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      String string0 = nestedInnerQueryParseSupport0.getPath();
      assertNull(string0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      BytesReference bytesReference0 = nestedInnerQueryParseSupport0.getsource();
      assertNull(bytesReference0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      nestedInnerQueryParseSupport0.setsource(bytesReference0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      BytesReference bytesReference0 = null;
      nestedInnerQueryParseSupport0.source = bytesReference0;
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      
      BytesArray bytesArray0 = BytesArray.EMPTY;
      assertNotNull(bytesArray0);
      assertEquals(0, bytesArray0.arrayOffset());
      assertEquals(0, bytesArray0.length());
      assertTrue(bytesArray0.hasArray());
      
      BytesArray bytesArray1 = bytesArray0.copyBytesArray();
      assertNotNull(bytesArray1);
      assertEquals(0, bytesArray0.arrayOffset());
      assertEquals(0, bytesArray0.length());
      assertTrue(bytesArray0.hasArray());
      assertTrue(bytesArray1.hasArray());
      assertEquals(0, bytesArray1.arrayOffset());
      assertEquals(0, bytesArray1.length());
      assertNotSame(bytesArray0, bytesArray1);
      assertNotSame(bytesArray1, bytesArray0);
      assertTrue(bytesArray1.equals((Object)bytesArray0));
      
      nestedInnerQueryParseSupport0.setsource(bytesArray1);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertEquals(0, bytesArray0.arrayOffset());
      assertEquals(0, bytesArray0.length());
      assertTrue(bytesArray0.hasArray());
      assertTrue(bytesArray1.hasArray());
      assertEquals(0, bytesArray1.arrayOffset());
      assertEquals(0, bytesArray1.length());
      assertNotSame(bytesArray0, bytesArray1);
      assertNotSame(bytesArray1, bytesArray0);
      assertTrue(bytesArray0.equals((Object)bytesArray1));
      assertTrue(bytesArray1.equals((Object)bytesArray0));
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      boolean boolean0 = false;
      nestedInnerQueryParseSupport0.setfilterParsed(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      XContentParser xContentParser0 = null;
      SearchContext searchContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = null;
      try {
        nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(xContentParser0, searchContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.setqueryFound(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryFound);
      
      nestedInnerQueryParseSupport0.queryParsed = boolean0;
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      
      nestedInnerQueryParseSupport0.setqueryFound(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryFound);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean1 = true;
      nestedInnerQueryParseSupport0.setfilterFound(boolean1);
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      assertTrue(nestedInnerQueryParseSupport0.queryFound);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.getparentFilter();
      assertNull(bitDocIdSetFilter0);
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      assertTrue(nestedInnerQueryParseSupport0.queryFound);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      
      nestedInnerQueryParseSupport0.childFilter = (Filter) bitDocIdSetFilter0;
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPathLevel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      XContentParser xContentParser0 = null;
      SearchContext searchContext0 = SearchContext.current();
      assertNull(searchContext0);
      
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = null;
      try {
        nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(xContentParser0, searchContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      String string0 = "";
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPath(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean0 = false;
      nestedInnerQueryParseSupport0.setqueryFound(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      String string0 = "org.elasticsearch.action.support.single.instance.InstanceShardOperationRequestBuilder";
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPath(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean0 = false;
      nestedInnerQueryParseSupport0.filterFound = boolean0;
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.filter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.filter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean0 = false;
      boolean boolean1 = false;
      nestedInnerQueryParseSupport0.filterFound = boolean1;
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      
      nestedInnerQueryParseSupport0.setqueryParsed(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getNestedObjectMapper();
      assertNull(objectMapper0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean2 = nestedInnerQueryParseSupport0.getqueryParsed();
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean3 = nestedInnerQueryParseSupport0.getqueryParsed();
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(boolean3);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.queryFound = boolean0;
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      ObjectMapper objectMapper0 = null;
      nestedInnerQueryParseSupport0.nestedObjectMapper = objectMapper0;
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.setfilterFound(boolean0);
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean1 = true;
      nestedInnerQueryParseSupport0.filterFound = boolean1;
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      
      boolean boolean2 = nestedInnerQueryParseSupport0.getqueryFound();
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(boolean2);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      BytesReference bytesReference0 = nestedInnerQueryParseSupport0.getsource();
      assertNull(bytesReference0);
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean3 = false;
      nestedInnerQueryParseSupport0.parentObjectMapper = objectMapper0;
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      
      nestedInnerQueryParseSupport0.setfilterFound(boolean3);
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      boolean boolean4 = nestedInnerQueryParseSupport0.getfilterParsed();
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(boolean4);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4 == boolean0);
      assertFalse(boolean4 == boolean1);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      ObjectMapper objectMapper1 = nestedInnerQueryParseSupport0.getNestedObjectMapper();
      assertNull(objectMapper1);
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.query();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.setfilterParsed(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      Query query0 = nestedInnerQueryParseSupport0.getInnerFilter();
      assertNull(query0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean1 = false;
      nestedInnerQueryParseSupport0.setqueryFound(boolean1);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(boolean1 == boolean0);
      assertTrue(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.query();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      boolean boolean0 = false;
      nestedInnerQueryParseSupport0.setfilterParsed(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      nestedInnerQueryParseSupport0.filterFound = boolean0;
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      
      boolean boolean1 = nestedInnerQueryParseSupport0.queryFound();
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.parentFilter;
      assertNull(bitDocIdSetFilter0);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.query();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test33()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      QueryParseContext queryParseContext1 = nestedInnerQueryParseSupport0.getparseContext();
      assertNull(queryParseContext1);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      Filter filter0 = nestedInnerQueryParseSupport0.childFilter;
      assertNull(filter0);
      
      BitDocIdSetCachingWrapperFilter bitDocIdSetCachingWrapperFilter0 = new BitDocIdSetCachingWrapperFilter(filter0);
      assertNotNull(bitDocIdSetCachingWrapperFilter0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertEquals(1.0F, bitDocIdSetCachingWrapperFilter0.getBoost(), 0.01F);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      Query query0 = bitDocIdSetCachingWrapperFilter0.clone();
      assertNotNull(query0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertEquals(1.0F, bitDocIdSetCachingWrapperFilter0.getBoost(), 0.01F);
      assertEquals(1.0F, query0.getBoost(), 0.01F);
      assertNotSame(bitDocIdSetCachingWrapperFilter0, query0);
      assertNotSame(query0, bitDocIdSetCachingWrapperFilter0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      nestedInnerQueryParseSupport0.setparentFilter(bitDocIdSetCachingWrapperFilter0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertEquals(1.0F, bitDocIdSetCachingWrapperFilter0.getBoost(), 0.01F);
      assertNotSame(bitDocIdSetCachingWrapperFilter0, query0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean0 = true;
      boolean boolean1 = true;
      nestedInnerQueryParseSupport0.queryFound = boolean1;
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      
      String string0 = "7 i2 %+7k=-c;@sAF";
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPath(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test34()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.getparentFilter();
      assertNull(bitDocIdSetFilter0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      nestedInnerQueryParseSupport0.setchildFilter(bitDocIdSetFilter0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean0 = false;
      nestedInnerQueryParseSupport0.setqueryFound(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean1 = nestedInnerQueryParseSupport0.getqueryFound();
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean2 = nestedInnerQueryParseSupport0.getqueryFound();
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      BitDocIdSetFilter bitDocIdSetFilter1 = nestedInnerQueryParseSupport0.getparentFilter();
      assertNull(bitDocIdSetFilter1);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPathLevel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test35()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.setqueryParsed(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      boolean boolean1 = nestedInnerQueryParseSupport0.getfilterFound();
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test36()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.resetPathLevel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test37()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.parentFilter;
      assertNull(bitDocIdSetFilter0);
      
      nestedInnerQueryParseSupport0.parentFilter = bitDocIdSetFilter0;
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      
      Filter filter0 = null;
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.resetPathLevel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test38()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      boolean boolean0 = false;
      nestedInnerQueryParseSupport0.filterFound = boolean0;
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      
      String string0 = "";
      String string1 = "]";
      Index index0 = new Index(string1);
      assertNotNull(index0);
      assertEquals("]", index0.name());
      assertEquals("]", index0.getName());
      assertFalse(string1.equals((Object)string0));
      
      Settings settings0 = NodeSettingsService.getGlobalSettings();
      assertNotNull(settings0);
      assertTrue(settings0.getSettingsRequireUnits());
      
      Settings settings1 = IndexMetaData.addHumanReadableSettings(settings0);
      assertNotNull(settings1);
      assertTrue(settings0.getSettingsRequireUnits());
      assertTrue(settings1.getSettingsRequireUnits());
      assertNotSame(settings0, settings1);
      assertNotSame(settings1, settings0);
      assertTrue(settings1.equals((Object)settings0));
      
      BitsetFilterCache bitsetFilterCache0 = new BitsetFilterCache(index0, settings1);
      assertNotNull(bitsetFilterCache0);
      assertEquals("]", index0.name());
      assertEquals("]", index0.getName());
      assertTrue(settings0.getSettingsRequireUnits());
      assertTrue(settings1.getSettingsRequireUnits());
      assertFalse(string1.equals((Object)string0));
      assertTrue(settings0.equals((Object)settings1));
      assertTrue(settings1.equals((Object)settings0));
      
      String string2 = bitsetFilterCache0.nodeName();
      assertNotNull(string2);
      assertEquals("]", index0.name());
      assertEquals("]", index0.getName());
      assertTrue(settings0.getSettingsRequireUnits());
      assertTrue(settings1.getSettingsRequireUnits());
      assertEquals("", string2);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(settings0, settings1);
      assertNotSame(settings1, settings0);
      assertSame(string2, string0);
      assertNotSame(string2, string1);
      assertFalse(string1.equals((Object)string0));
      assertTrue(settings0.equals((Object)settings1));
      assertTrue(settings1.equals((Object)settings0));
      assertFalse(string2.equals((Object)string1));
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = string1;
      stringArray0[1] = settings0.SETTINGS_REQUIRE_UNITS;
      stringArray0[2] = string2;
      stringArray0[3] = settings0.SETTINGS_REQUIRE_UNITS;
      Map<String, Object> map0 = settings0.getAsStructuredMap();
      assertNotNull(map0);
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertTrue(settings0.getSettingsRequireUnits());
      assertNotSame(settings0, settings1);
      assertTrue(settings0.equals((Object)settings1));
      
      stringArray0[4] = string1;
      stringArray0[5] = settings0.SETTINGS_REQUIRE_UNITS;
      String string3 = settings1.get(stringArray0, bitsetFilterCache0.LOAD_RANDOM_ACCESS_FILTERS_EAGERLY);
      assertNotNull(string3);
      assertEquals("]", index0.name());
      assertEquals("]", index0.getName());
      assertTrue(settings0.getSettingsRequireUnits());
      assertTrue(settings1.getSettingsRequireUnits());
      assertEquals("index.load_fixed_bitset_filters_eagerly", string3);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(settings0, settings1);
      assertNotSame(settings1, settings0);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertTrue(settings0.equals((Object)settings1));
      assertTrue(settings1.equals((Object)settings0));
      assertEquals(6, stringArray0.length);
      
      String string4 = bitsetFilterCache0.nodeName();
      assertNotNull(string4);
      assertEquals("]", index0.name());
      assertEquals("]", index0.getName());
      assertTrue(settings0.getSettingsRequireUnits());
      assertTrue(settings1.getSettingsRequireUnits());
      assertEquals("", string4);
      assertNotSame(string4, string3);
      assertNotSame(string4, string1);
      assertSame(string4, string2);
      assertSame(string4, string0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(settings0, settings1);
      assertNotSame(settings1, settings0);
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertTrue(settings0.equals((Object)settings1));
      assertTrue(settings1.equals((Object)settings0));
      
      BitDocIdSetFilter bitDocIdSetFilter0 = bitsetFilterCache0.getBitDocIdSetFilter(nestedInnerQueryParseSupport0.parentFilter);
      assertNotNull(bitDocIdSetFilter0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertEquals(1.0F, bitDocIdSetFilter0.getBoost(), 0.01F);
      assertEquals("]", index0.name());
      assertEquals("]", index0.getName());
      assertTrue(settings0.getSettingsRequireUnits());
      assertTrue(settings1.getSettingsRequireUnits());
      assertNotSame(string1, string4);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(settings0, settings1);
      assertNotSame(settings1, settings0);
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertTrue(settings0.equals((Object)settings1));
      assertTrue(settings1.equals((Object)settings0));
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      BitDocIdSetCachingWrapperFilter bitDocIdSetCachingWrapperFilter0 = new BitDocIdSetCachingWrapperFilter(bitDocIdSetFilter0);
      assertNotNull(bitDocIdSetCachingWrapperFilter0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertEquals(1.0F, bitDocIdSetFilter0.getBoost(), 0.01F);
      assertEquals(1.0F, bitDocIdSetCachingWrapperFilter0.getBoost(), 0.01F);
      assertEquals("]", index0.name());
      assertEquals("]", index0.getName());
      assertTrue(settings0.getSettingsRequireUnits());
      assertTrue(settings1.getSettingsRequireUnits());
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertTrue(settings0.equals((Object)settings1));
      assertTrue(settings1.equals((Object)settings0));
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      nestedInnerQueryParseSupport0.setchildFilter(bitDocIdSetCachingWrapperFilter0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertEquals(1.0F, bitDocIdSetFilter0.getBoost(), 0.01F);
      assertEquals(1.0F, bitDocIdSetCachingWrapperFilter0.getBoost(), 0.01F);
      assertEquals("]", index0.name());
      assertEquals("]", index0.getName());
      assertTrue(settings0.getSettingsRequireUnits());
      assertTrue(settings1.getSettingsRequireUnits());
      assertNotSame(string1, string4);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(settings0, settings1);
      assertNotSame(settings1, settings0);
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertTrue(settings0.equals((Object)settings1));
      assertTrue(settings1.equals((Object)settings0));
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPath(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test39()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean0 = nestedInnerQueryParseSupport0.getfilterParsed();
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.getparentFilter();
      assertNull(bitDocIdSetFilter0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      QueryParseContext queryParseContext1 = nestedInnerQueryParseSupport0.getparseContext();
      assertNull(queryParseContext1);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.resetPathLevel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test40()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getNestedObjectMapper();
      assertNull(objectMapper0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      MoreLikeThisQueryBuilder.Item moreLikeThisQueryBuilder_Item0 = new MoreLikeThisQueryBuilder.Item(nestedInnerQueryParseSupport0.path);
      assertNotNull(moreLikeThisQueryBuilder_Item0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertNull(moreLikeThisQueryBuilder_Item0.type());
      assertNull(moreLikeThisQueryBuilder_Item0.routing());
      assertEquals((-3L), moreLikeThisQueryBuilder_Item0.version());
      assertEquals(VersionType.INTERNAL, moreLikeThisQueryBuilder_Item0.versionType());
      assertNull(moreLikeThisQueryBuilder_Item0.index());
      assertNull(moreLikeThisQueryBuilder_Item0.id());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      BytesReference bytesReference0 = moreLikeThisQueryBuilder_Item0.doc();
      assertNull(bytesReference0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertNull(moreLikeThisQueryBuilder_Item0.type());
      assertNull(moreLikeThisQueryBuilder_Item0.routing());
      assertEquals((-3L), moreLikeThisQueryBuilder_Item0.version());
      assertEquals(VersionType.INTERNAL, moreLikeThisQueryBuilder_Item0.versionType());
      assertNull(moreLikeThisQueryBuilder_Item0.index());
      assertNull(moreLikeThisQueryBuilder_Item0.id());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      nestedInnerQueryParseSupport0.setsource(bytesReference0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertNull(moreLikeThisQueryBuilder_Item0.type());
      assertNull(moreLikeThisQueryBuilder_Item0.routing());
      assertEquals((-3L), moreLikeThisQueryBuilder_Item0.version());
      assertEquals(VersionType.INTERNAL, moreLikeThisQueryBuilder_Item0.versionType());
      assertNull(moreLikeThisQueryBuilder_Item0.index());
      assertNull(moreLikeThisQueryBuilder_Item0.id());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.setqueryParsed(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      
      String string0 = nestedInnerQueryParseSupport0.getPath();
      assertNull(string0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean1 = nestedInnerQueryParseSupport0.getqueryFound();
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
  }

  @Test(timeout = 11000)
  public void test41()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      String string0 = nestedInnerQueryParseSupport0.getPath();
      assertNull(string0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPath(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test42()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.getparentFilter();
      assertNull(bitDocIdSetFilter0);
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      nestedInnerQueryParseSupport0.parentFilter = bitDocIdSetFilter0;
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = new NestedInnerQueryParseSupport(nestedInnerQueryParseSupport0.parseContext);
      assertNotNull(nestedInnerQueryParseSupport1);
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport1.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport1.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport1.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport1.queryFound());
      assertFalse(nestedInnerQueryParseSupport1.filterFound());
      assertNull(nestedInnerQueryParseSupport1.getPath());
      assertFalse(nestedInnerQueryParseSupport1.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport1.equals((Object)nestedInnerQueryParseSupport0));
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport1.queryParsed);
      assertFalse(nestedInnerQueryParseSupport1.filterFound);
      assertFalse(nestedInnerQueryParseSupport1.queryFound);
      assertFalse(nestedInnerQueryParseSupport1.filterParsed);
      
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport1.getParentObjectMapper();
      assertNull(objectMapper0);
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport1.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport1.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport1.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport1.queryFound());
      assertFalse(nestedInnerQueryParseSupport1.filterFound());
      assertNull(nestedInnerQueryParseSupport1.getPath());
      assertFalse(nestedInnerQueryParseSupport1.getqueryFound());
      assertNotSame(nestedInnerQueryParseSupport0, nestedInnerQueryParseSupport1);
      assertNotSame(nestedInnerQueryParseSupport1, nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.equals((Object)nestedInnerQueryParseSupport1));
      assertFalse(nestedInnerQueryParseSupport1.equals((Object)nestedInnerQueryParseSupport0));
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport1.queryParsed);
      assertFalse(nestedInnerQueryParseSupport1.filterFound);
      assertFalse(nestedInnerQueryParseSupport1.queryFound);
      assertFalse(nestedInnerQueryParseSupport1.filterParsed);
      
      ObjectMapper objectMapper1 = nestedInnerQueryParseSupport0.getNestedObjectMapper();
      assertNull(objectMapper1);
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNotSame(nestedInnerQueryParseSupport0, nestedInnerQueryParseSupport1);
      assertFalse(nestedInnerQueryParseSupport0.equals((Object)nestedInnerQueryParseSupport1));
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPathLevel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test43()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.setfilterParsed(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertTrue(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      nestedInnerQueryParseSupport0.filterFound = boolean0;
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      
      boolean boolean1 = nestedInnerQueryParseSupport0.queryFound();
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertTrue(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean2 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean2);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.parentFilter;
      assertNull(bitDocIdSetFilter0);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.query();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test44()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.filterParsed = boolean0;
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      
      String string0 = nestedInnerQueryParseSupport0.getPath();
      assertNull(string0);
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertTrue(nestedInnerQueryParseSupport0.filterParsed);
      
      boolean boolean1 = nestedInnerQueryParseSupport0.filterFound();
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertTrue(nestedInnerQueryParseSupport0.filterParsed);
  }

  @Test(timeout = 11000)
  public void test45()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.getparentFilter();
      assertNull(bitDocIdSetFilter0);
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.filterParsed = boolean0;
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      
      nestedInnerQueryParseSupport0.setchildFilter(bitDocIdSetFilter0);
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertTrue(nestedInnerQueryParseSupport0.filterParsed);
      
      boolean boolean1 = false;
      nestedInnerQueryParseSupport0.setqueryFound(boolean1);
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(boolean1 == boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertTrue(nestedInnerQueryParseSupport0.filterParsed);
      
      boolean boolean2 = nestedInnerQueryParseSupport0.getqueryFound();
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(boolean2);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertTrue(nestedInnerQueryParseSupport0.filterParsed);
      
      boolean boolean3 = nestedInnerQueryParseSupport0.getqueryFound();
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(boolean3);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertTrue(nestedInnerQueryParseSupport0.filterParsed);
      
      BitDocIdSetFilter bitDocIdSetFilter1 = nestedInnerQueryParseSupport0.getparentFilter();
      assertNull(bitDocIdSetFilter1);
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertTrue(nestedInnerQueryParseSupport0.filterParsed);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPathLevel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test46()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean0 = false;
      nestedInnerQueryParseSupport0.filterParsed = boolean0;
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.parentFilter;
      assertNull(bitDocIdSetFilter0);
      
      nestedInnerQueryParseSupport0.setchildFilter(bitDocIdSetFilter0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean1 = true;
      nestedInnerQueryParseSupport0.setfilterFound(boolean1);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(boolean1 == boolean0);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      Filter filter0 = nestedInnerQueryParseSupport0.getchildFilter();
      assertNull(filter0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      long long0 = 0L;
      System.setCurrentTimeMillis(long0);
  }

  @Test(timeout = 11000)
  public void test47()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      QueryParseContext queryParseContext1 = nestedInnerQueryParseSupport0.getparseContext();
      assertNull(queryParseContext1);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      Filter filter0 = nestedInnerQueryParseSupport0.childFilter;
      assertNull(filter0);
      
      BitDocIdSetCachingWrapperFilter bitDocIdSetCachingWrapperFilter0 = new BitDocIdSetCachingWrapperFilter(filter0);
      assertNotNull(bitDocIdSetCachingWrapperFilter0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertEquals(1.0F, bitDocIdSetCachingWrapperFilter0.getBoost(), 0.01F);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      boolean boolean0 = bitDocIdSetCachingWrapperFilter0.equals(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertEquals(1.0F, bitDocIdSetCachingWrapperFilter0.getBoost(), 0.01F);
      assertFalse(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      Query query0 = bitDocIdSetCachingWrapperFilter0.clone();
      assertNotNull(query0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertEquals(1.0F, bitDocIdSetCachingWrapperFilter0.getBoost(), 0.01F);
      assertEquals(1.0F, query0.getBoost(), 0.01F);
      assertNotSame(bitDocIdSetCachingWrapperFilter0, query0);
      assertNotSame(query0, bitDocIdSetCachingWrapperFilter0);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      nestedInnerQueryParseSupport0.setparentFilter(bitDocIdSetCachingWrapperFilter0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertEquals(1.0F, bitDocIdSetCachingWrapperFilter0.getBoost(), 0.01F);
      assertNotSame(bitDocIdSetCachingWrapperFilter0, query0);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      boolean boolean1 = true;
      boolean boolean2 = true;
      nestedInnerQueryParseSupport0.queryFound = boolean2;
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      
      String string0 = "7 i2 %+7k=-c;@sAF";
      FieldValueQuery fieldValueQuery0 = new FieldValueQuery(string0);
      assertNotNull(fieldValueQuery0);
      assertEquals(1.0F, fieldValueQuery0.getBoost(), 0.01F);
      
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.getparentFilter();
      assertNotNull(bitDocIdSetFilter0);
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertEquals(1.0F, bitDocIdSetFilter0.getBoost(), 0.01F);
      assertSame(bitDocIdSetFilter0, bitDocIdSetCachingWrapperFilter0);
      assertNotSame(bitDocIdSetFilter0, query0);
      assertTrue(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      String string1 = nestedInnerQueryParseSupport0.getPath();
      assertNull(string1);
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPath(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test48()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      QueryParseContext queryParseContext1 = nestedInnerQueryParseSupport0.getparseContext();
      assertNull(queryParseContext1);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      Filter filter0 = nestedInnerQueryParseSupport0.childFilter;
      assertNull(filter0);
      
      BitDocIdSetCachingWrapperFilter bitDocIdSetCachingWrapperFilter0 = new BitDocIdSetCachingWrapperFilter(filter0);
      assertNotNull(bitDocIdSetCachingWrapperFilter0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertEquals(1.0F, bitDocIdSetCachingWrapperFilter0.getBoost(), 0.01F);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = false;
      boolean boolean1 = FileSystemHandling.setPermissions(evoSuiteFile0, nestedInnerQueryParseSupport0.queryFound, boolean0, boolean0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      Query query0 = bitDocIdSetCachingWrapperFilter0.clone();
      assertNotNull(query0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertEquals(1.0F, bitDocIdSetCachingWrapperFilter0.getBoost(), 0.01F);
      assertEquals(1.0F, query0.getBoost(), 0.01F);
      assertNotSame(bitDocIdSetCachingWrapperFilter0, query0);
      assertNotSame(query0, bitDocIdSetCachingWrapperFilter0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      nestedInnerQueryParseSupport0.setparentFilter(bitDocIdSetCachingWrapperFilter0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertEquals(1.0F, bitDocIdSetCachingWrapperFilter0.getBoost(), 0.01F);
      assertNotSame(bitDocIdSetCachingWrapperFilter0, query0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      boolean boolean2 = true;
      boolean boolean3 = true;
      BytesReference bytesReference0 = nestedInnerQueryParseSupport0.getsource();
      assertNull(bytesReference0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      nestedInnerQueryParseSupport0.queryFound = boolean3;
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPath(nestedInnerQueryParseSupport0.path);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test49()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.getparentFilter();
      assertNull(bitDocIdSetFilter0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      nestedInnerQueryParseSupport0.setchildFilter(bitDocIdSetFilter0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.setqueryFound(boolean0);
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean1 = nestedInnerQueryParseSupport0.getqueryFound();
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean2 = nestedInnerQueryParseSupport0.getqueryFound();
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(boolean2);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      BitDocIdSetFilter bitDocIdSetFilter1 = nestedInnerQueryParseSupport0.getparentFilter();
      assertNull(bitDocIdSetFilter1);
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
  }

  @Test(timeout = 11000)
  public void test50()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.parentFilter;
      assertNull(bitDocIdSetFilter0);
      
      nestedInnerQueryParseSupport0.setchildFilter(bitDocIdSetFilter0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.setfilterFound(boolean0);
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean1 = nestedInnerQueryParseSupport0.getfilterFound();
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      BytesReference bytesReference0 = nestedInnerQueryParseSupport0.getsource();
      assertNull(bytesReference0);
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
  }

  @Test(timeout = 11000)
  public void test51()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.parentFilter;
      assertNull(bitDocIdSetFilter0);
      
      nestedInnerQueryParseSupport0.setchildFilter(bitDocIdSetFilter0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.setfilterFound(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test52()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.parentFilter;
      assertNull(bitDocIdSetFilter0);
      
      nestedInnerQueryParseSupport0.setchildFilter(bitDocIdSetFilter0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.setfilterFound(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean1 = nestedInnerQueryParseSupport0.filterFound();
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      long long0 = 0L;
      System.setCurrentTimeMillis(long0);
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getNestedObjectMapper();
      assertNull(objectMapper0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean2 = nestedInnerQueryParseSupport0.getqueryParsed();
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(boolean2);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
  }

  @Test(timeout = 11000)
  public void test53()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.queryParsed = boolean0;
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      
      boolean boolean1 = nestedInnerQueryParseSupport0.queryFound();
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      nestedInnerQueryParseSupport0.setchildFilter(nestedInnerQueryParseSupport0.parentFilter);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getParentObjectMapper();
      assertNull(objectMapper0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      boolean boolean2 = nestedInnerQueryParseSupport0.getfilterFound();
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(boolean2);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.resetPathLevel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test54()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "[nested] failed to find nested object under path [";
      boolean boolean0 = FileSystemHandling.appendStringToFile(evoSuiteFile0, string0);
      assertFalse(boolean0);
      
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean1 = true;
      nestedInnerQueryParseSupport0.queryFound = boolean1;
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      
      BitDocIdSetCachingWrapperFilter bitDocIdSetCachingWrapperFilter0 = new BitDocIdSetCachingWrapperFilter(nestedInnerQueryParseSupport0.parentFilter);
      assertNotNull(bitDocIdSetCachingWrapperFilter0);
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertEquals(1.0F, bitDocIdSetCachingWrapperFilter0.getBoost(), 0.01F);
      assertTrue(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      boolean boolean2 = nestedInnerQueryParseSupport0.queryFound();
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertTrue(boolean2);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertTrue(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      nestedInnerQueryParseSupport0.setqueryParsed(boolean1);
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertTrue(boolean1 == boolean2);
      assertFalse(boolean1 == boolean0);
      assertTrue(nestedInnerQueryParseSupport0.queryFound);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.filter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test55()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.parentFilter;
      assertNull(bitDocIdSetFilter0);
      
      nestedInnerQueryParseSupport0.setchildFilter(bitDocIdSetFilter0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.setfilterFound(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      boolean boolean1 = nestedInnerQueryParseSupport0.getfilterParsed();
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      BytesReference bytesReference0 = nestedInnerQueryParseSupport0.getsource();
      assertNull(bytesReference0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
  }

  @Test(timeout = 11000)
  public void test56()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = false;
      boolean boolean1 = false;
      boolean boolean2 = FileSystemHandling.setPermissions(evoSuiteFile0, boolean0, boolean0, boolean1);
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean3 = true;
      nestedInnerQueryParseSupport0.setfilterParsed(boolean3);
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertTrue(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean4 = nestedInnerQueryParseSupport0.getqueryParsed();
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(boolean4);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4 == boolean3);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean0);
      assertTrue(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean5 = true;
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test57()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.parentFilter;
      assertNull(bitDocIdSetFilter0);
      
      BytesArray bytesArray0 = BytesArray.EMPTY;
      assertNotNull(bytesArray0);
      assertEquals(0, bytesArray0.length());
      assertEquals(0, bytesArray0.arrayOffset());
      assertTrue(bytesArray0.hasArray());
      
      BytesArray bytesArray1 = bytesArray0.copyBytesArray();
      assertNotNull(bytesArray1);
      assertEquals(0, bytesArray0.length());
      assertEquals(0, bytesArray0.arrayOffset());
      assertTrue(bytesArray0.hasArray());
      assertEquals(0, bytesArray1.arrayOffset());
      assertTrue(bytesArray1.hasArray());
      assertEquals(0, bytesArray1.length());
      assertNotSame(bytesArray0, bytesArray1);
      assertNotSame(bytesArray1, bytesArray0);
      assertTrue(bytesArray1.equals((Object)bytesArray0));
      
      BytesArray bytesArray2 = bytesArray1.toBytesArray();
      assertNotNull(bytesArray2);
      assertEquals(0, bytesArray0.length());
      assertEquals(0, bytesArray0.arrayOffset());
      assertTrue(bytesArray0.hasArray());
      assertEquals(0, bytesArray1.arrayOffset());
      assertTrue(bytesArray1.hasArray());
      assertEquals(0, bytesArray1.length());
      assertTrue(bytesArray2.hasArray());
      assertEquals(0, bytesArray2.arrayOffset());
      assertEquals(0, bytesArray2.length());
      assertNotSame(bytesArray0, bytesArray2);
      assertNotSame(bytesArray0, bytesArray1);
      assertNotSame(bytesArray1, bytesArray0);
      assertSame(bytesArray1, bytesArray2);
      assertSame(bytesArray2, bytesArray1);
      assertNotSame(bytesArray2, bytesArray0);
      assertTrue(bytesArray0.equals((Object)bytesArray1));
      assertTrue(bytesArray1.equals((Object)bytesArray0));
      assertTrue(bytesArray2.equals((Object)bytesArray0));
      
      nestedInnerQueryParseSupport0.source = (BytesReference) bytesArray2;
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertEquals(0, bytesArray0.length());
      assertEquals(0, bytesArray0.arrayOffset());
      assertTrue(bytesArray0.hasArray());
      assertEquals(0, bytesArray1.arrayOffset());
      assertTrue(bytesArray1.hasArray());
      assertEquals(0, bytesArray1.length());
      assertTrue(bytesArray2.hasArray());
      assertEquals(0, bytesArray2.arrayOffset());
      assertEquals(0, bytesArray2.length());
      assertTrue(nestedInnerQueryParseSupport0.source.hasArray());
      assertEquals(0, nestedInnerQueryParseSupport0.source.length());
      
      nestedInnerQueryParseSupport0.setchildFilter(bitDocIdSetFilter0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.setfilterFound(boolean0);
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean1 = nestedInnerQueryParseSupport0.getfilterFound();
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      BytesReference bytesReference0 = nestedInnerQueryParseSupport0.getsource();
      assertNotNull(bytesReference0);
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertEquals(0, bytesReference0.arrayOffset());
      assertTrue(bytesReference0.hasArray());
      assertEquals(0, bytesReference0.length());
      assertNotSame(bytesReference0, bytesArray0);
      assertSame(bytesReference0, bytesArray1);
      assertSame(bytesReference0, bytesArray2);
      assertTrue(bytesReference0.equals((Object)bytesArray0));
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      BitDocIdSetFilter bitDocIdSetFilter1 = nestedInnerQueryParseSupport0.getparentFilter();
      assertNull(bitDocIdSetFilter1);
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      Filter filter0 = nestedInnerQueryParseSupport0.getchildFilter();
      assertNull(filter0);
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      QueryParseContext queryParseContext1 = nestedInnerQueryParseSupport0.getparseContext();
      assertNull(queryParseContext1);
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertTrue(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
  }

  @Test(timeout = 11000)
  public void test58()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      QueryParseContext queryParseContext1 = nestedInnerQueryParseSupport0.getparseContext();
      assertNull(queryParseContext1);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      Filter filter0 = nestedInnerQueryParseSupport0.childFilter;
      assertNull(filter0);
      
      BitDocIdSetCachingWrapperFilter bitDocIdSetCachingWrapperFilter0 = new BitDocIdSetCachingWrapperFilter(filter0);
      assertNotNull(bitDocIdSetCachingWrapperFilter0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertEquals(1.0F, bitDocIdSetCachingWrapperFilter0.getBoost(), 0.01F);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      float float0 = (-155.9F);
      bitDocIdSetCachingWrapperFilter0.setBoost(float0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertEquals((-155.9F), bitDocIdSetCachingWrapperFilter0.getBoost(), 0.01F);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      Query query0 = bitDocIdSetCachingWrapperFilter0.clone();
      assertNotNull(query0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertEquals((-155.9F), bitDocIdSetCachingWrapperFilter0.getBoost(), 0.01F);
      assertEquals((-155.9F), query0.getBoost(), 0.01F);
      assertNotSame(bitDocIdSetCachingWrapperFilter0, query0);
      assertNotSame(query0, bitDocIdSetCachingWrapperFilter0);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      nestedInnerQueryParseSupport0.setparentFilter(bitDocIdSetCachingWrapperFilter0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertEquals((-155.9F), bitDocIdSetCachingWrapperFilter0.getBoost(), 0.01F);
      assertNotSame(bitDocIdSetCachingWrapperFilter0, query0);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.queryFound = boolean0;
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      
      String string0 = "7 i2 %+7k=-c;@sAF";
      nestedInnerQueryParseSupport0.queryFound = nestedInnerQueryParseSupport0.queryFound;
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      
      boolean boolean1 = true;
      nestedInnerQueryParseSupport0.queryFound = boolean1;
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.getparentFilter();
      assertNotNull(bitDocIdSetFilter0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertEquals((-155.9F), bitDocIdSetFilter0.getBoost(), 0.01F);
      assertSame(bitDocIdSetFilter0, bitDocIdSetCachingWrapperFilter0);
      assertNotSame(bitDocIdSetFilter0, query0);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertTrue(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      nestedInnerQueryParseSupport0.setparentFilter(bitDocIdSetFilter0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertEquals((-155.9F), bitDocIdSetFilter0.getBoost(), 0.01F);
      assertSame(bitDocIdSetFilter0, bitDocIdSetCachingWrapperFilter0);
      assertNotSame(bitDocIdSetFilter0, query0);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertTrue(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      BitDocIdSetFilter bitDocIdSetFilter1 = nestedInnerQueryParseSupport0.getparentFilter();
      assertNotNull(bitDocIdSetFilter1);
      assertEquals((-155.9F), bitDocIdSetFilter1.getBoost(), 0.01F);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertSame(bitDocIdSetFilter1, bitDocIdSetFilter0);
      assertSame(bitDocIdSetFilter1, bitDocIdSetCachingWrapperFilter0);
      assertNotSame(bitDocIdSetFilter1, query0);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertTrue(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPathLevel();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test59()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getNestedObjectMapper();
      assertNull(objectMapper0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.setqueryParsed(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean1 = nestedInnerQueryParseSupport0.getfilterParsed();
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      QueryParseContext queryParseContext1 = nestedInnerQueryParseSupport0.getparseContext();
      assertNull(queryParseContext1);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.getparentFilter();
      assertNull(bitDocIdSetFilter0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test60()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.getparentFilter();
      assertNull(bitDocIdSetFilter0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      nestedInnerQueryParseSupport0.setchildFilter(bitDocIdSetFilter0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.queryParsed = boolean0;
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      
      boolean boolean1 = false;
      boolean boolean2 = nestedInnerQueryParseSupport0.getqueryFound();
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(boolean2);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean3 = nestedInnerQueryParseSupport0.getqueryFound();
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(boolean3);
      assertFalse(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      BitDocIdSetFilter bitDocIdSetFilter1 = nestedInnerQueryParseSupport0.getparentFilter();
      assertNull(bitDocIdSetFilter1);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      BitDocIdSetFilter bitDocIdSetFilter2 = null;
      nestedInnerQueryParseSupport0.childFilter = (Filter) bitDocIdSetFilter2;
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      
      String string0 = nestedInnerQueryParseSupport0.getPath();
      assertNull(string0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      nestedInnerQueryParseSupport0.setparentFilter(bitDocIdSetFilter2);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean4 = nestedInnerQueryParseSupport0.getqueryParsed();
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertTrue(boolean4);
      assertFalse(boolean4 == boolean2);
      assertFalse(boolean4 == boolean3);
      assertTrue(boolean4 == boolean0);
      assertFalse(boolean4 == boolean1);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
  }

  @Test(timeout = 11000)
  public void test61()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getNestedObjectMapper();
      assertNull(objectMapper0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.setqueryParsed(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      nestedInnerQueryParseSupport0.setqueryFound(boolean0);
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      boolean boolean1 = nestedInnerQueryParseSupport0.getfilterParsed();
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      assertTrue(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      QueryParseContext queryParseContext1 = nestedInnerQueryParseSupport0.getparseContext();
      assertNull(queryParseContext1);
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.getparentFilter();
      assertNull(bitDocIdSetFilter0);
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertTrue(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test62()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      boolean boolean0 = true;
      boolean boolean1 = true;
      nestedInnerQueryParseSupport0.setqueryParsed(boolean1);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      Query query0 = nestedInnerQueryParseSupport0.getInnerQuery();
      assertNull(query0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      nestedInnerQueryParseSupport0.setqueryParsed(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.filter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test63()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      BitDocIdSetCachingWrapperFilter bitDocIdSetCachingWrapperFilter0 = new BitDocIdSetCachingWrapperFilter(nestedInnerQueryParseSupport0.parentFilter);
      assertNotNull(bitDocIdSetCachingWrapperFilter0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertEquals(1.0F, bitDocIdSetCachingWrapperFilter0.getBoost(), 0.01F);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      nestedInnerQueryParseSupport0.childFilter = (Filter) bitDocIdSetCachingWrapperFilter0;
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertEquals(1.0F, bitDocIdSetCachingWrapperFilter0.getBoost(), 0.01F);
      assertEquals(1.0F, nestedInnerQueryParseSupport0.childFilter.getBoost(), 0.01F);
      
      boolean boolean0 = false;
      Filter filter0 = nestedInnerQueryParseSupport0.getchildFilter();
      assertNotNull(filter0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertEquals(1.0F, filter0.getBoost(), 0.01F);
      assertSame(filter0, bitDocIdSetCachingWrapperFilter0);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      nestedInnerQueryParseSupport0.setchildFilter(filter0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertEquals(1.0F, filter0.getBoost(), 0.01F);
      assertSame(filter0, bitDocIdSetCachingWrapperFilter0);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      nestedInnerQueryParseSupport0.setqueryParsed(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      BitDocIdSetFilter bitDocIdSetFilter0 = null;
      nestedInnerQueryParseSupport0.setparentFilter(bitDocIdSetFilter0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean1 = true;
      BytesReference bytesReference0 = nestedInnerQueryParseSupport0.source;
      assertNull(bytesReference0);
      
      nestedInnerQueryParseSupport0.setsource(bytesReference0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      nestedInnerQueryParseSupport0.setqueryFound(boolean1);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(boolean1 == boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertTrue(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean2 = false;
      nestedInnerQueryParseSupport0.setqueryFound(boolean2);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(boolean2 == boolean1);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      nestedInnerQueryParseSupport0.queryParsed = boolean2;
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.query();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test64()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      boolean boolean0 = true;
      PhraseQuery phraseQuery0 = new PhraseQuery();
      assertNotNull(phraseQuery0);
      assertEquals(1.0F, phraseQuery0.getBoost(), 0.01F);
      assertEquals(0, phraseQuery0.getSlop());
      
      nestedInnerQueryParseSupport0.innerQuery = (Query) phraseQuery0;
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertEquals(1.0F, phraseQuery0.getBoost(), 0.01F);
      assertEquals(0, phraseQuery0.getSlop());
      assertEquals(1.0F, nestedInnerQueryParseSupport0.innerQuery.getBoost(), 0.01F);
      
      nestedInnerQueryParseSupport0.setfilterParsed(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertTrue(nestedInnerQueryParseSupport0.filterParsed);
      
      Query query0 = nestedInnerQueryParseSupport0.getInnerFilter();
      assertNull(query0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertTrue(nestedInnerQueryParseSupport0.filterParsed);
      
      boolean boolean1 = false;
      nestedInnerQueryParseSupport0.setqueryFound(boolean1);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(boolean1 == boolean0);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertTrue(nestedInnerQueryParseSupport0.filterParsed);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.query();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test65()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "C<UkjfH^H\"28Y";
      boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      assertFalse(boolean0);
      
      boolean boolean1 = true;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      
      nestedInnerQueryParseSupport0.setfilterParsed(boolean1);
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(boolean1 == boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertTrue(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      Query query0 = nestedInnerQueryParseSupport0.getInnerFilter();
      assertNull(query0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertTrue(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean2 = nestedInnerQueryParseSupport0.getfilterParsed();
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(boolean2);
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertTrue(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
  }

  @Test(timeout = 11000)
  public void test66()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      String string0 = "Om";
      BytesArray bytesArray0 = new BytesArray(string0);
      assertNotNull(bytesArray0);
      assertTrue(bytesArray0.hasArray());
      assertEquals(2, bytesArray0.length());
      assertEquals(0, bytesArray0.arrayOffset());
      
      nestedInnerQueryParseSupport0.setsource(bytesArray0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(bytesArray0.hasArray());
      assertEquals(2, bytesArray0.length());
      assertEquals(0, bytesArray0.arrayOffset());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getNestedObjectMapper();
      assertNull(objectMapper0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      BytesReference bytesReference0 = nestedInnerQueryParseSupport0.getsource();
      assertNotNull(bytesReference0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertEquals(2, bytesReference0.length());
      assertEquals(0, bytesReference0.arrayOffset());
      assertTrue(bytesReference0.hasArray());
      assertSame(bytesReference0, bytesArray0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      boolean boolean0 = nestedInnerQueryParseSupport0.getfilterParsed();
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      QueryParseContext queryParseContext1 = nestedInnerQueryParseSupport0.getparseContext();
      assertNull(queryParseContext1);
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test67()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      boolean boolean0 = true;
      DateFieldMapper.DateFieldType dateFieldMapper_DateFieldType0 = new DateFieldMapper.DateFieldType();
      assertNotNull(dateFieldMapper_DateFieldType0);
      assertFalse(dateFieldMapper_DateFieldType0.stored());
      assertFalse(dateFieldMapper_DateFieldType0.tokenized());
      assertEquals(TimeUnit.MILLISECONDS, dateFieldMapper_DateFieldType0.timeUnit());
      assertTrue(dateFieldMapper_DateFieldType0.isNumeric());
      assertTrue(dateFieldMapper_DateFieldType0.isSortable());
      assertEquals(1.0F, dateFieldMapper_DateFieldType0.boost(), 0.01F);
      assertNull(dateFieldMapper_DateFieldType0.normsLoading());
      assertFalse(dateFieldMapper_DateFieldType0.storeTermVectorPayloads());
      assertFalse(dateFieldMapper_DateFieldType0.storeTermVectorPositions());
      assertEquals(FieldType.NumericType.LONG, dateFieldMapper_DateFieldType0.numericType());
      assertEquals(DocValuesType.NONE, dateFieldMapper_DateFieldType0.docValuesType());
      assertFalse(dateFieldMapper_DateFieldType0.storeTermVectors());
      assertTrue(dateFieldMapper_DateFieldType0.omitNorms());
      assertTrue(dateFieldMapper_DateFieldType0.useTermQueryWithQueryString());
      assertNull(dateFieldMapper_DateFieldType0.nullValueAsString());
      assertEquals(16, dateFieldMapper_DateFieldType0.numericPrecisionStep());
      assertEquals("date", dateFieldMapper_DateFieldType0.typeName());
      assertFalse(dateFieldMapper_DateFieldType0.storeTermVectorOffsets());
      assertFalse(dateFieldMapper_DateFieldType0.hasDocValues());
      assertEquals(IndexOptions.DOCS, dateFieldMapper_DateFieldType0.indexOptions());
      
      Object object0 = null;
      boolean boolean1 = true;
      Query query0 = dateFieldMapper_DateFieldType0.rangeQuery(object0, object0, boolean1, boolean0);
      assertNotNull(query0);
      assertFalse(dateFieldMapper_DateFieldType0.stored());
      assertFalse(dateFieldMapper_DateFieldType0.tokenized());
      assertEquals(TimeUnit.MILLISECONDS, dateFieldMapper_DateFieldType0.timeUnit());
      assertTrue(dateFieldMapper_DateFieldType0.isNumeric());
      assertTrue(dateFieldMapper_DateFieldType0.isSortable());
      assertEquals(1.0F, dateFieldMapper_DateFieldType0.boost(), 0.01F);
      assertNull(dateFieldMapper_DateFieldType0.normsLoading());
      assertFalse(dateFieldMapper_DateFieldType0.storeTermVectorPayloads());
      assertFalse(dateFieldMapper_DateFieldType0.storeTermVectorPositions());
      assertEquals(FieldType.NumericType.LONG, dateFieldMapper_DateFieldType0.numericType());
      assertEquals(DocValuesType.NONE, dateFieldMapper_DateFieldType0.docValuesType());
      assertFalse(dateFieldMapper_DateFieldType0.storeTermVectors());
      assertTrue(dateFieldMapper_DateFieldType0.omitNorms());
      assertTrue(dateFieldMapper_DateFieldType0.useTermQueryWithQueryString());
      assertNull(dateFieldMapper_DateFieldType0.nullValueAsString());
      assertEquals(16, dateFieldMapper_DateFieldType0.numericPrecisionStep());
      assertEquals("date", dateFieldMapper_DateFieldType0.typeName());
      assertFalse(dateFieldMapper_DateFieldType0.storeTermVectorOffsets());
      assertFalse(dateFieldMapper_DateFieldType0.hasDocValues());
      assertEquals(IndexOptions.DOCS, dateFieldMapper_DateFieldType0.indexOptions());
      assertEquals(1.0F, query0.getBoost(), 0.01F);
      
      nestedInnerQueryParseSupport0.innerQuery = query0;
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(dateFieldMapper_DateFieldType0.stored());
      assertFalse(dateFieldMapper_DateFieldType0.tokenized());
      assertEquals(TimeUnit.MILLISECONDS, dateFieldMapper_DateFieldType0.timeUnit());
      assertTrue(dateFieldMapper_DateFieldType0.isNumeric());
      assertTrue(dateFieldMapper_DateFieldType0.isSortable());
      assertEquals(1.0F, dateFieldMapper_DateFieldType0.boost(), 0.01F);
      assertNull(dateFieldMapper_DateFieldType0.normsLoading());
      assertFalse(dateFieldMapper_DateFieldType0.storeTermVectorPayloads());
      assertFalse(dateFieldMapper_DateFieldType0.storeTermVectorPositions());
      assertEquals(FieldType.NumericType.LONG, dateFieldMapper_DateFieldType0.numericType());
      assertEquals(DocValuesType.NONE, dateFieldMapper_DateFieldType0.docValuesType());
      assertFalse(dateFieldMapper_DateFieldType0.storeTermVectors());
      assertTrue(dateFieldMapper_DateFieldType0.omitNorms());
      assertTrue(dateFieldMapper_DateFieldType0.useTermQueryWithQueryString());
      assertNull(dateFieldMapper_DateFieldType0.nullValueAsString());
      assertEquals(16, dateFieldMapper_DateFieldType0.numericPrecisionStep());
      assertEquals("date", dateFieldMapper_DateFieldType0.typeName());
      assertFalse(dateFieldMapper_DateFieldType0.storeTermVectorOffsets());
      assertFalse(dateFieldMapper_DateFieldType0.hasDocValues());
      assertEquals(IndexOptions.DOCS, dateFieldMapper_DateFieldType0.indexOptions());
      assertEquals(1.0F, query0.getBoost(), 0.01F);
      assertEquals(1.0F, nestedInnerQueryParseSupport0.innerQuery.getBoost(), 0.01F);
      
      nestedInnerQueryParseSupport0.setqueryParsed(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      Query query1 = nestedInnerQueryParseSupport0.getInnerQuery();
      assertNotNull(query1);
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertEquals(1.0F, query1.getBoost(), 0.01F);
      assertSame(query1, query0);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.filter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test68()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNotNull(nestedInnerQueryParseSupport0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      boolean boolean0 = true;
      DateFieldMapper.DateFieldType dateFieldMapper_DateFieldType0 = new DateFieldMapper.DateFieldType();
      assertNotNull(dateFieldMapper_DateFieldType0);
      assertFalse(dateFieldMapper_DateFieldType0.hasDocValues());
      assertTrue(dateFieldMapper_DateFieldType0.omitNorms());
      assertEquals("date", dateFieldMapper_DateFieldType0.typeName());
      assertEquals(DocValuesType.NONE, dateFieldMapper_DateFieldType0.docValuesType());
      assertFalse(dateFieldMapper_DateFieldType0.storeTermVectors());
      assertEquals(16, dateFieldMapper_DateFieldType0.numericPrecisionStep());
      assertFalse(dateFieldMapper_DateFieldType0.storeTermVectorPayloads());
      assertTrue(dateFieldMapper_DateFieldType0.isSortable());
      assertEquals(1.0F, dateFieldMapper_DateFieldType0.boost(), 0.01F);
      assertEquals(FieldType.NumericType.LONG, dateFieldMapper_DateFieldType0.numericType());
      assertFalse(dateFieldMapper_DateFieldType0.storeTermVectorPositions());
      assertNull(dateFieldMapper_DateFieldType0.nullValueAsString());
      assertTrue(dateFieldMapper_DateFieldType0.isNumeric());
      assertNull(dateFieldMapper_DateFieldType0.normsLoading());
      assertEquals(TimeUnit.MILLISECONDS, dateFieldMapper_DateFieldType0.timeUnit());
      assertFalse(dateFieldMapper_DateFieldType0.stored());
      assertFalse(dateFieldMapper_DateFieldType0.tokenized());
      assertTrue(dateFieldMapper_DateFieldType0.useTermQueryWithQueryString());
      assertFalse(dateFieldMapper_DateFieldType0.storeTermVectorOffsets());
      assertEquals(IndexOptions.DOCS, dateFieldMapper_DateFieldType0.indexOptions());
      
      Object object0 = null;
      boolean boolean1 = true;
      BitDocIdSetCachingWrapperFilter bitDocIdSetCachingWrapperFilter0 = new BitDocIdSetCachingWrapperFilter(nestedInnerQueryParseSupport0.parentFilter);
      assertNotNull(bitDocIdSetCachingWrapperFilter0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertEquals(1.0F, bitDocIdSetCachingWrapperFilter0.getBoost(), 0.01F);
      assertFalse(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      nestedInnerQueryParseSupport0.innerQuery = (Query) bitDocIdSetCachingWrapperFilter0;
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getqueryParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertEquals(1.0F, bitDocIdSetCachingWrapperFilter0.getBoost(), 0.01F);
      assertEquals(1.0F, nestedInnerQueryParseSupport0.innerQuery.getBoost(), 0.01F);
      
      nestedInnerQueryParseSupport0.setqueryParsed(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      Query query0 = nestedInnerQueryParseSupport0.getInnerQuery();
      assertNotNull(query0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.getfilterParsed());
      assertFalse(nestedInnerQueryParseSupport0.getfilterFound());
      assertTrue(nestedInnerQueryParseSupport0.getqueryParsed());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.getqueryFound());
      assertEquals(1.0F, query0.getBoost(), 0.01F);
      assertSame(query0, bitDocIdSetCachingWrapperFilter0);
      assertTrue(nestedInnerQueryParseSupport0.queryParsed);
      assertFalse(nestedInnerQueryParseSupport0.filterFound);
      assertFalse(nestedInnerQueryParseSupport0.filterParsed);
      assertFalse(nestedInnerQueryParseSupport0.queryFound);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.filter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }
}
