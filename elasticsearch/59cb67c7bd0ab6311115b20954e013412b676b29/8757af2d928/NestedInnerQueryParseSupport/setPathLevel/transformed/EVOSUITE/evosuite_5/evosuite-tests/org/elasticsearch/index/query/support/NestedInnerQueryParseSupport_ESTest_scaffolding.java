/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Oct 29 20:22:19 GMT 2021
 */

package org.elasticsearch.index.query.support;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class NestedInnerQueryParseSupport_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 10000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.elasticsearch.index.query.support.NestedInnerQueryParseSupport"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/elasticsearch/59cb67c7bd0ab6311115b20954e013412b676b29/evosuite_5"); 
    java.lang.System.setProperty("user.home", "/home/CIN/lmps2"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "lmps2"); 
    java.lang.System.setProperty("user.timezone", "America/Recife"); 
    java.lang.System.setProperty("log4j.configuration", "SUT.log4j.properties"); 
    java.lang.System.setProperty("sun.arch.data.model", "64"); 
    java.lang.System.setProperty("sun.boot.class.path", "/usr/lib/jvm/jdk1.8.0_291/jre/lib/resources.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/rt.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/sunrsasign.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/jsse.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/jce.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/charsets.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/jfr.jar:/usr/lib/jvm/jdk1.8.0_291/jre/classes"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(NestedInnerQueryParseSupport_ESTest_scaffolding.class.getClassLoader() ,
      "org.elasticsearch.index.cache.bitset.BitsetFilterCache",
      "org.apache.lucene.search.Query",
      "org.elasticsearch.common.io.stream.StreamOutput",
      "org.elasticsearch.common.HasContextAndHeaders",
      "org.elasticsearch.common.util.BigArrays",
      "org.elasticsearch.common.ContextAndHeaderHolder",
      "org.elasticsearch.search.internal.SubSearchContext",
      "org.apache.lucene.queryparser.classic.MapperQueryParser",
      "org.apache.lucene.util.QueryBuilder",
      "org.apache.lucene.index.LeafReader$CoreClosedListener",
      "org.elasticsearch.search.internal.ScrollContext",
      "org.elasticsearch.search.aggregations.SearchContextAggregations",
      "org.elasticsearch.index.query.IndexQueryParserService",
      "org.elasticsearch.common.ParseField",
      "org.elasticsearch.search.highlight.SearchContextHighlight",
      "org.elasticsearch.search.rescore.RescoreSearchContext",
      "org.elasticsearch.index.translog.Translog$Durabilty",
      "org.apache.lucene.queryparser.flexible.standard.CommonQueryParserConfiguration",
      "org.elasticsearch.common.ParseField$Flag",
      "org.elasticsearch.search.internal.SearchContext$Lifetime",
      "org.elasticsearch.action.search.SearchType",
      "org.elasticsearch.search.aggregations.Aggregations",
      "org.elasticsearch.index.translog.Translog$Operation",
      "org.elasticsearch.search.internal.ContextIndexSearcher",
      "org.elasticsearch.index.similarity.SimilarityService",
      "org.elasticsearch.search.fetch.FetchSearchResultProvider",
      "org.elasticsearch.search.fetch.script.ScriptFieldsContext",
      "org.elasticsearch.search.SearchPhaseResult",
      "org.elasticsearch.common.collect.ImmutableOpenMap",
      "org.elasticsearch.common.io.stream.Streamable",
      "org.elasticsearch.index.engine.Engine$Index",
      "org.elasticsearch.index.translog.Translog$Source",
      "org.elasticsearch.index.translog.Translog$DeleteByQuery",
      "org.elasticsearch.index.mapper.object.ObjectMapper",
      "org.elasticsearch.index.shard.IndexShardComponent",
      "org.elasticsearch.index.query.support.NestedScope",
      "org.elasticsearch.cache.recycler.PageCacheRecycler",
      "org.apache.lucene.analysis.DelegatingAnalyzerWrapper",
      "org.elasticsearch.index.translog.Translog$TranslogGeneration",
      "org.apache.lucene.search.similarities.Similarity",
      "org.elasticsearch.transport.TransportResponse",
      "org.elasticsearch.search.lookup.SearchLookup",
      "org.elasticsearch.transport.TransportMessage",
      "org.elasticsearch.index.mapper.internal.AllFieldMapper$IncludeInAll",
      "org.elasticsearch.common.component.AbstractComponent",
      "org.elasticsearch.index.shard.IndexShard",
      "org.apache.lucene.analysis.Analyzer",
      "com.carrotsearch.hppc.ObjectObjectMap",
      "org.apache.lucene.search.join.BitDocIdSetFilter",
      "org.elasticsearch.common.xcontent.XContentParser",
      "org.apache.lucene.analysis.AnalyzerWrapper",
      "org.elasticsearch.common.HasContext",
      "com.google.common.cache.RemovalListener",
      "org.elasticsearch.script.ScriptService",
      "org.elasticsearch.ElasticsearchException",
      "org.elasticsearch.index.translog.Translog$Index",
      "org.elasticsearch.index.translog.Translog$Delete",
      "org.elasticsearch.index.query.QueryShardContext",
      "org.apache.lucene.document.FieldType",
      "org.elasticsearch.search.fetch.FetchSubPhase$ContextFactory",
      "org.elasticsearch.index.query.ParsedQuery",
      "org.elasticsearch.index.VersionType",
      "org.elasticsearch.search.query.QuerySearchResultProvider",
      "org.elasticsearch.search.fetch.FetchSubPhaseContext",
      "org.elasticsearch.search.scan.ScanContext",
      "org.elasticsearch.search.internal.ShardSearchRequest",
      "org.elasticsearch.search.fetch.FetchSearchResult",
      "org.elasticsearch.index.analysis.NamedAnalyzer",
      "org.elasticsearch.index.mapper.MappedFieldType",
      "org.elasticsearch.common.ParseFieldMatcher",
      "org.apache.lucene.queryparser.classic.QueryParserBase",
      "org.elasticsearch.common.lease.Releasable",
      "org.elasticsearch.index.engine.Engine$IndexingOperation",
      "org.elasticsearch.search.internal.FilteredSearchContext",
      "org.elasticsearch.index.query.QueryShardException",
      "com.google.common.collect.ImmutableMap",
      "org.apache.lucene.search.Sort",
      "org.elasticsearch.common.xcontent.ToXContent",
      "org.elasticsearch.common.bytes.BytesReference",
      "org.elasticsearch.index.query.QueryParseContext",
      "org.apache.lucene.search.Filter",
      "org.elasticsearch.index.mapper.MapperService",
      "org.elasticsearch.index.IndexComponent",
      "org.elasticsearch.Version",
      "org.elasticsearch.search.query.QuerySearchResult",
      "org.apache.lucene.util.Counter",
      "org.elasticsearch.index.engine.Engine$Operation",
      "org.elasticsearch.search.fetch.innerhits.InnerHitsContext$BaseInnerHits",
      "org.elasticsearch.index.analysis.AnalysisService",
      "org.apache.lucene.search.IndexSearcher",
      "org.elasticsearch.search.SearchShardTarget",
      "org.elasticsearch.search.suggest.SuggestionSearchContext",
      "org.elasticsearch.search.fetch.source.FetchSourceContext",
      "org.elasticsearch.index.fielddata.IndexFieldDataService",
      "org.elasticsearch.search.internal.SearchContext",
      "org.elasticsearch.index.Index",
      "org.elasticsearch.index.query.support.NestedInnerQueryParseSupport",
      "com.google.common.collect.Multimap",
      "org.elasticsearch.search.internal.DefaultSearchContext",
      "org.elasticsearch.search.fetch.innerhits.InnerHitsContext",
      "org.apache.lucene.index.IndexableFieldType",
      "org.apache.lucene.queryparser.classic.QueryParserSettings",
      "com.carrotsearch.hppc.ObjectObjectAssociativeContainer",
      "org.apache.lucene.index.TwoPhaseCommit",
      "org.elasticsearch.common.HasHeaders",
      "org.elasticsearch.index.AbstractIndexComponent",
      "org.elasticsearch.index.mapper.Mapper",
      "org.elasticsearch.search.dfs.DfsSearchResult",
      "org.elasticsearch.index.shard.AbstractIndexShardComponent",
      "org.elasticsearch.index.translog.Translog$Operation$Type",
      "org.apache.lucene.queryparser.classic.QueryParserConstants",
      "org.apache.lucene.queryparser.classic.QueryParser",
      "org.elasticsearch.common.io.stream.StreamInput",
      "org.elasticsearch.index.fielddata.IndexFieldData",
      "org.elasticsearch.index.translog.Translog"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(NestedInnerQueryParseSupport_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.elasticsearch.index.query.support.NestedInnerQueryParseSupport",
      "org.elasticsearch.common.xcontent.XContentType",
      "com.fasterxml.jackson.core.JsonFactory$Feature",
      "com.fasterxml.jackson.core.JsonParser$Feature",
      "com.fasterxml.jackson.core.JsonGenerator$Feature",
      "com.fasterxml.jackson.core.io.SerializedString",
      "com.fasterxml.jackson.core.util.DefaultPrettyPrinter",
      "com.fasterxml.jackson.core.JsonFactory",
      "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer",
      "com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer",
      "com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo",
      "org.elasticsearch.common.xcontent.json.JsonXContent",
      "org.joda.time.format.DateTimeFormatterBuilder",
      "org.joda.time.DateTimeFieldType$StandardDateTimeFieldType",
      "org.joda.time.DurationFieldType$StandardDurationFieldType",
      "org.joda.time.DurationFieldType",
      "org.joda.time.DateTimeFieldType",
      "org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter",
      "org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber",
      "org.joda.time.format.DateTimeFormatter",
      "org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral",
      "org.joda.time.format.DateTimeFormatterBuilder$Composite",
      "org.joda.time.format.DateTimeFormatterBuilder$StringLiteral",
      "org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber",
      "org.joda.time.format.DateTimeFormatterBuilder$Fraction",
      "org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset",
      "org.joda.time.format.ISODateTimeFormat",
      "org.joda.time.format.DateTimeFormatterBuilder$FixedNumber",
      "org.joda.time.format.InternalParserDateTimeParser",
      "org.joda.time.format.DateTimeParserInternalParser",
      "org.joda.time.format.DateTimeFormatterBuilder$MatchingParser",
      "org.joda.time.format.DateTimePrinterInternalPrinter",
      "org.joda.time.UTCDateTimeZone",
      "org.joda.time.DateTimeZone",
      "org.joda.time.format.ISODateTimeFormat$Constants",
      "org.elasticsearch.common.xcontent.XContentBuilder$FieldCaseConversion",
      "com.fasterxml.jackson.dataformat.smile.SmileParser$Feature",
      "com.fasterxml.jackson.dataformat.smile.SmileGenerator$Feature",
      "com.fasterxml.jackson.dataformat.smile.SmileFactory",
      "org.elasticsearch.common.xcontent.smile.SmileXContent",
      "com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature",
      "com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature",
      "com.fasterxml.jackson.dataformat.yaml.YAMLFactory",
      "org.elasticsearch.common.xcontent.yaml.YamlXContent",
      "com.fasterxml.jackson.dataformat.cbor.CBORParser$Feature",
      "com.fasterxml.jackson.dataformat.cbor.CBORGenerator$Feature",
      "com.fasterxml.jackson.dataformat.cbor.CBORFactory",
      "org.elasticsearch.common.xcontent.cbor.CborXContent",
      "org.elasticsearch.common.compress.lzf.LZFCompressor",
      "com.ning.compress.lzf.ChunkDecoder",
      "com.ning.compress.lzf.impl.UnsafeChunkDecoder",
      "com.ning.compress.lzf.util.ChunkDecoderFactory",
      "com.ning.compress.lzf.impl.VanillaChunkDecoder",
      "org.elasticsearch.common.logging.Loggers",
      "org.elasticsearch.common.Classes",
      "org.elasticsearch.common.logging.jdk.JdkESLoggerFactory",
      "org.apache.log4j.Category",
      "org.apache.log4j.Logger",
      "org.apache.log4j.Priority",
      "org.apache.log4j.Level",
      "org.elasticsearch.common.logging.log4j.Log4jESLoggerFactory",
      "org.elasticsearch.common.logging.ESLoggerFactory",
      "org.apache.log4j.Hierarchy",
      "org.apache.log4j.spi.RootLogger",
      "org.apache.log4j.or.DefaultRenderer",
      "org.apache.log4j.or.RendererMap",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.log4j.helpers.OptionConverter",
      "org.apache.log4j.helpers.Loader",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.log4j.PropertyConfigurator",
      "org.apache.log4j.LogManager",
      "org.apache.log4j.CategoryKey",
      "org.apache.log4j.ProvisionNode",
      "org.elasticsearch.common.logging.support.AbstractESLogger",
      "org.elasticsearch.common.logging.log4j.Log4jESLogger",
      "org.elasticsearch.common.compress.deflate.DeflateCompressor",
      "org.elasticsearch.common.compress.CompressorFactory",
      "org.elasticsearch.common.xcontent.XContentFactory",
      "org.apache.lucene.search.BooleanClause$Occur",
      "org.elasticsearch.search.internal.SearchContext",
      "org.elasticsearch.search.internal.FilteredSearchContext",
      "org.elasticsearch.search.internal.SubSearchContext",
      "org.elasticsearch.common.ParseFieldMatcher",
      "org.elasticsearch.common.ContextAndHeaderHolder",
      "org.elasticsearch.transport.TransportMessage",
      "org.elasticsearch.transport.TransportResponse",
      "org.elasticsearch.search.fetch.FetchSearchResult",
      "org.elasticsearch.search.query.QuerySearchResultProvider",
      "org.elasticsearch.search.query.QuerySearchResult",
      "com.google.common.collect.ImmutableMap",
      "com.google.common.collect.ImmutableSortedMapFauxverideShim",
      "com.google.common.collect.Ordering",
      "com.google.common.collect.NaturalOrdering",
      "com.google.common.collect.EmptyImmutableSortedMap",
      "com.google.common.collect.ImmutableSortedSetFauxverideShim",
      "com.google.common.collect.EmptyImmutableSortedSet",
      "com.google.common.collect.ImmutableSortedSet",
      "com.google.common.collect.ImmutableSortedMap",
      "com.google.common.base.Joiner",
      "com.google.common.base.Preconditions",
      "com.google.common.base.Joiner$1",
      "com.google.common.collect.Collections2",
      "com.google.common.base.Joiner$MapJoiner",
      "com.google.common.collect.Maps",
      "com.google.common.collect.Maps$EntryFunction",
      "com.google.common.collect.ByFunctionOrdering",
      "com.google.common.collect.ImmutableBiMap",
      "com.google.common.collect.EmptyImmutableBiMap",
      "org.elasticsearch.common.settings.Settings$Builder",
      "org.elasticsearch.common.settings.Settings",
      "org.elasticsearch.common.io.stream.StreamInput",
      "org.elasticsearch.common.io.stream.InputStreamStreamInput",
      "org.apache.lucene.util.Version",
      "org.elasticsearch.Version",
      "org.apache.lucene.util.CharsRefBuilder",
      "org.apache.lucene.util.CharsRef$UTF16SortedAsUTF8Comparator",
      "org.apache.lucene.util.CharsRef",
      "org.elasticsearch.common.io.stream.NamedWriteableRegistry",
      "org.elasticsearch.index.Index",
      "org.elasticsearch.index.query.QueryShardContext",
      "org.apache.lucene.util.QueryBuilder",
      "org.apache.lucene.queryparser.classic.QueryParser$Operator",
      "org.apache.lucene.queryparser.classic.QueryParserBase",
      "org.apache.lucene.queryparser.classic.QueryParser",
      "com.google.common.collect.ImmutableMap$Builder",
      "org.apache.lucene.queryparser.classic.ExistsFieldQueryExtension",
      "com.google.common.collect.CollectPreconditions",
      "com.google.common.collect.AbstractMapEntry",
      "com.google.common.collect.ImmutableEntry",
      "com.google.common.collect.ImmutableMapEntry",
      "com.google.common.collect.ImmutableMapEntry$TerminalEntry",
      "org.apache.lucene.queryparser.classic.MissingFieldQueryExtension",
      "com.google.common.collect.RegularImmutableMap",
      "org.apache.lucene.queryparser.classic.MapperQueryParser",
      "org.apache.lucene.queryparser.classic.FastCharStream",
      "org.apache.lucene.search.Query",
      "org.apache.lucene.search.MultiTermQuery$RewriteMethod",
      "org.apache.lucene.search.MultiTermQuery$1",
      "org.apache.lucene.search.TermCollectingRewrite",
      "org.apache.lucene.search.ScoringRewrite$1",
      "org.apache.lucene.search.ScoringRewrite$2",
      "org.apache.lucene.search.ScoringRewrite",
      "org.apache.lucene.search.MultiTermQuery",
      "org.apache.lucene.queryparser.classic.QueryParser$LookaheadSuccess",
      "org.apache.lucene.queryparser.classic.QueryParserTokenManager",
      "org.apache.lucene.queryparser.classic.Token",
      "org.apache.lucene.queryparser.classic.QueryParser$JJCalls",
      "org.apache.lucene.index.Term",
      "org.elasticsearch.index.engine.Engine$IndexingOperation",
      "org.elasticsearch.index.engine.Engine$Create",
      "org.elasticsearch.common.xcontent.support.AbstractXContentParser$1",
      "org.elasticsearch.common.xcontent.support.AbstractXContentParser$2",
      "org.elasticsearch.common.xcontent.support.AbstractXContentParser",
      "org.elasticsearch.common.xcontent.json.JsonXContentParser",
      "org.elasticsearch.common.xcontent.cbor.CborXContentParser",
      "com.fasterxml.jackson.core.io.IOContext",
      "com.fasterxml.jackson.core.util.BufferRecycler",
      "com.fasterxml.jackson.dataformat.cbor.CBORParserBootstrapper",
      "com.fasterxml.jackson.core.JsonParser",
      "com.fasterxml.jackson.core.base.ParserMinimalBase",
      "com.fasterxml.jackson.dataformat.cbor.CBORConstants",
      "com.fasterxml.jackson.dataformat.cbor.CBORParser",
      "com.fasterxml.jackson.core.util.TextBuffer",
      "com.fasterxml.jackson.core.JsonStreamContext",
      "com.fasterxml.jackson.dataformat.cbor.CBORReadContext",
      "org.elasticsearch.common.io.CharSequenceReader",
      "org.elasticsearch.common.io.FastStringReader",
      "com.fasterxml.jackson.core.base.ParserBase",
      "com.fasterxml.jackson.core.io.CharTypes",
      "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
      "com.fasterxml.jackson.core.json.JsonReadContext",
      "org.apache.lucene.analysis.Analyzer$ReuseStrategy",
      "org.apache.lucene.analysis.Analyzer$1",
      "org.apache.lucene.analysis.Analyzer$2",
      "org.apache.lucene.analysis.Analyzer",
      "org.apache.lucene.analysis.AnalyzerWrapper",
      "org.apache.lucene.analysis.DelegatingAnalyzerWrapper",
      "org.elasticsearch.index.analysis.NamedAnalyzer$1",
      "org.elasticsearch.index.analysis.NamedAnalyzer",
      "org.elasticsearch.common.xcontent.yaml.YamlXContentParser",
      "com.fasterxml.jackson.dataformat.yaml.YAMLParser",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.parser.ParserImpl",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.reader.StreamReader",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.scanner.ScannerImpl",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.util.ArrayStack",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.error.Mark",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.tokens.Token",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.tokens.StreamStartToken",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.parser.VersionTagsTuple",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.parser.ParserImpl$ParseStreamStart",
      "org.elasticsearch.common.xcontent.smile.SmileXContentParser",
      "com.fasterxml.jackson.dataformat.smile.SmileParserBootstrapper",
      "com.fasterxml.jackson.dataformat.smile.SmileParser",
      "com.fasterxml.jackson.dataformat.smile.SmileBufferRecycler",
      "com.fasterxml.jackson.core.JsonProcessingException",
      "com.fasterxml.jackson.core.JsonParseException",
      "com.fasterxml.jackson.core.JsonLocation",
      "org.elasticsearch.index.query.ParsedQuery",
      "org.elasticsearch.common.lucene.search.Queries",
      "org.apache.lucene.search.MatchAllDocsQuery",
      "org.elasticsearch.search.lookup.SourceLookup",
      "com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper",
      "com.fasterxml.jackson.core.JsonEncoding",
      "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "com.fasterxml.jackson.core.io.UTF32Reader",
      "org.apache.lucene.util.BytesRef$UTF8SortedAsUnicodeComparator",
      "org.apache.lucene.util.BytesRef$UTF8SortedAsUTF16Comparator",
      "org.apache.lucene.util.BytesRef",
      "org.elasticsearch.common.bytes.BytesArray",
      "com.fasterxml.jackson.dataformat.yaml.UTF8Reader",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.error.YAMLException",
      "org.elasticsearch.common.io.stream.ByteBufferStreamInput",
      "org.apache.lucene.util.Constants",
      "org.apache.lucene.util.RamUsageEstimator",
      "org.apache.lucene.util.ArrayUtil$NaturalComparator",
      "org.apache.lucene.util.ArrayUtil",
      "org.jboss.netty.buffer.AbstractChannelBuffer",
      "org.jboss.netty.buffer.DuplicatedChannelBuffer",
      "org.elasticsearch.common.util.BigArrays",
      "org.elasticsearch.common.regex.Regex",
      "org.elasticsearch.common.io.stream.StreamOutput",
      "org.elasticsearch.common.io.stream.BytesStreamOutput",
      "org.elasticsearch.common.io.stream.ReleasableBytesStreamOutput",
      "org.apache.lucene.util.BytesRefBuilder",
      "org.elasticsearch.common.util.AbstractArray",
      "org.elasticsearch.common.util.BigArrays$AbstractArrayWrapper",
      "org.elasticsearch.common.util.BigArrays$ByteArrayWrapper",
      "org.elasticsearch.common.bytes.PagedBytesReference",
      "org.elasticsearch.common.bytes.ReleasablePagedBytesReference",
      "org.elasticsearch.index.engine.Engine$Index",
      "org.elasticsearch.index.translog.Translog$Index",
      "org.elasticsearch.transport.TransportRequest",
      "org.elasticsearch.search.internal.ShardSearchTransportRequest",
      "org.elasticsearch.common.io.stream.FilterStreamInput",
      "org.elasticsearch.common.io.stream.NamedWriteableAwareStreamInput",
      "org.elasticsearch.index.translog.Translog$Source",
      "org.elasticsearch.search.rescore.QueryRescorer$2",
      "org.elasticsearch.search.rescore.QueryRescorer",
      "org.elasticsearch.search.rescore.RescoreSearchContext",
      "org.elasticsearch.common.text.StringAndBytesText",
      "org.elasticsearch.common.io.Streams",
      "com.fasterxml.jackson.core.util.JsonParserDelegate",
      "com.fasterxml.jackson.core.util.JsonParserSequence",
      "org.apache.lucene.search.SortField$1",
      "org.apache.lucene.search.SortField$2",
      "org.apache.lucene.search.SortField",
      "org.elasticsearch.search.sort.SortParseElement",
      "org.elasticsearch.common.unit.TimeValue",
      "org.joda.time.format.PeriodFormat",
      "org.joda.time.format.PeriodFormat$DynamicWordBased",
      "org.joda.time.format.PeriodFormatterBuilder",
      "org.joda.time.format.PeriodFormatterBuilder$FieldFormatter",
      "org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix",
      "org.joda.time.format.PeriodFormatterBuilder$PluralAffix",
      "org.joda.time.format.PeriodFormatterBuilder$Composite",
      "org.joda.time.format.PeriodFormatterBuilder$Separator",
      "org.joda.time.format.PeriodFormatter",
      "org.joda.time.PeriodType",
      "org.elasticsearch.common.unit.ByteSizeValue",
      "org.elasticsearch.common.unit.ByteSizeUnit",
      "org.elasticsearch.index.engine.EngineConfig",
      "org.elasticsearch.common.component.AbstractComponent",
      "org.elasticsearch.threadpool.ThreadPool",
      "com.google.common.collect.RegularImmutableList",
      "com.google.common.collect.ImmutableList",
      "com.google.common.collect.ImmutableCollection$Builder",
      "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
      "com.google.common.collect.ImmutableList$Builder",
      "com.google.common.collect.RegularImmutableSortedMap",
      "com.google.common.collect.RegularImmutableSortedSet",
      "com.google.common.collect.SingletonImmutableList",
      "com.google.common.collect.Lists",
      "com.google.common.collect.SortedLists$KeyPresentBehavior",
      "com.google.common.collect.SortedLists$KeyAbsentBehavior",
      "com.google.common.collect.SortedLists",
      "org.elasticsearch.common.Booleans",
      "org.elasticsearch.common.logging.DeprecationLogger",
      "com.google.common.collect.UnmodifiableIterator",
      "com.google.common.collect.UnmodifiableListIterator",
      "com.google.common.collect.Iterators$1",
      "com.google.common.collect.Iterators$2",
      "com.google.common.collect.Iterators",
      "com.google.common.collect.Iterators$12",
      "org.elasticsearch.common.util.concurrent.EsExecutors",
      "com.google.common.collect.Platform",
      "com.google.common.collect.RegularImmutableMap$NonTerminalMapEntry",
      "com.google.common.collect.ImmutableMapEntrySet",
      "com.google.common.collect.RegularImmutableMap$EntrySet",
      "com.google.common.collect.ImmutableAsList",
      "com.google.common.collect.RegularImmutableAsList",
      "com.google.common.collect.AbstractIndexedListIterator",
      "com.google.common.collect.Iterators$11",
      "org.elasticsearch.common.util.concurrent.EsExecutors$EsThreadFactory",
      "org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor",
      "org.elasticsearch.common.util.concurrent.EsAbortPolicy",
      "org.elasticsearch.common.metrics.CounterMetric",
      "com.twitter.jsr166e.Striped64$ThreadHashCode",
      "com.twitter.jsr166e.Striped64$1",
      "com.twitter.jsr166e.Striped64",
      "com.twitter.jsr166e.LongAdder",
      "org.elasticsearch.threadpool.ThreadPool$ExecutorHolder",
      "org.elasticsearch.threadpool.ThreadPool$Info",
      "org.elasticsearch.common.unit.SizeValue",
      "org.elasticsearch.common.unit.SizeUnit",
      "org.elasticsearch.common.util.concurrent.SizeBlockingQueue",
      "org.elasticsearch.common.util.concurrent.ConcurrentCollections",
      "org.elasticsearch.common.util.concurrent.EsExecutors$ExecutorScalingQueue",
      "org.elasticsearch.common.util.concurrent.EsExecutors$ForceQueuePolicy",
      "com.google.common.util.concurrent.MoreExecutors",
      "com.google.common.util.concurrent.MoreExecutors$DirectExecutor",
      "org.elasticsearch.threadpool.ThreadPool$EstimatedTimeThread",
      "org.apache.lucene.util.Counter",
      "org.elasticsearch.threadpool.ThreadPool$EstimatedTimeThread$TimeCounter",
      "org.elasticsearch.cache.recycler.PageCacheRecycler",
      "org.elasticsearch.cache.recycler.PageCacheRecycler$Type",
      "com.google.common.base.Strings",
      "org.elasticsearch.common.unit.MemorySizeValue",
      "org.elasticsearch.monitor.jvm.JvmInfo$Mem",
      "org.elasticsearch.monitor.jvm.JvmInfo",
      "org.elasticsearch.common.recycler.AbstractRecyclerC",
      "org.elasticsearch.cache.recycler.PageCacheRecycler$1",
      "org.elasticsearch.common.recycler.Recyclers",
      "org.elasticsearch.common.recycler.Recyclers$1",
      "org.elasticsearch.common.recycler.AbstractRecycler",
      "org.elasticsearch.common.recycler.DequeRecycler",
      "com.google.common.collect.Queues",
      "org.elasticsearch.common.recycler.FilterRecycler",
      "org.elasticsearch.common.recycler.Recyclers$3",
      "org.elasticsearch.cache.recycler.PageCacheRecycler$2",
      "org.elasticsearch.cache.recycler.PageCacheRecycler$3",
      "org.elasticsearch.cache.recycler.PageCacheRecycler$4",
      "org.elasticsearch.node.settings.NodeSettingsService",
      "org.elasticsearch.common.component.AbstractLifecycleComponent",
      "org.elasticsearch.indices.breaker.CircuitBreakerService",
      "org.elasticsearch.indices.breaker.HierarchyCircuitBreakerService",
      "org.elasticsearch.common.component.Lifecycle",
      "org.elasticsearch.common.component.Lifecycle$State",
      "org.elasticsearch.indices.breaker.BreakerSettings",
      "org.elasticsearch.common.breaker.CircuitBreaker$Type",
      "org.elasticsearch.common.breaker.ChildMemoryCircuitBreaker",
      "org.elasticsearch.indices.breaker.HierarchyCircuitBreakerService$ApplySettings",
      "org.elasticsearch.common.recycler.DequeRecycler$DV",
      "org.elasticsearch.common.recycler.Recyclers$3$1",
      "com.google.common.base.Charsets",
      "org.elasticsearch.action.support.ToXContentToBytes",
      "org.elasticsearch.index.query.AbstractQueryBuilder",
      "org.elasticsearch.index.query.MultiMatchQueryBuilder",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.reader.ReaderException",
      "org.elasticsearch.ElasticsearchException",
      "org.elasticsearch.ElasticsearchParseException",
      "org.elasticsearch.common.logging.support.LoggerMessageFormat",
      "org.apache.lucene.document.FieldType",
      "org.elasticsearch.index.mapper.MappedFieldType",
      "org.elasticsearch.index.mapper.core.NumberFieldMapper$NumberFieldType",
      "org.elasticsearch.index.mapper.core.LongFieldMapper$LongFieldType",
      "org.elasticsearch.index.mapper.internal.TTLFieldMapper$TTLFieldType",
      "org.apache.lucene.document.FieldType$NumericType",
      "org.apache.lucene.index.IndexOptions",
      "org.elasticsearch.index.fielddata.FieldDataType",
      "org.elasticsearch.index.mapper.MappedFieldType$Loading",
      "org.apache.lucene.util.IOUtils",
      "org.jboss.netty.buffer.DynamicChannelBuffer",
      "org.jboss.netty.buffer.AbstractChannelBufferFactory",
      "org.jboss.netty.buffer.HeapChannelBufferFactory",
      "org.jboss.netty.buffer.HeapChannelBuffer",
      "org.jboss.netty.buffer.BigEndianHeapChannelBuffer",
      "org.jboss.netty.buffer.EmptyChannelBuffer",
      "org.jboss.netty.buffer.ChannelBuffers",
      "org.elasticsearch.common.bytes.ChannelBufferBytesReference",
      "org.elasticsearch.common.xcontent.XContentBuilder",
      "org.elasticsearch.common.util.CollectionUtils",
      "com.fasterxml.jackson.dataformat.yaml.UTF8Writer",
      "com.fasterxml.jackson.core.JsonGenerator",
      "com.fasterxml.jackson.core.base.GeneratorBase",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.ImplicitTuple",
      "com.fasterxml.jackson.dataformat.yaml.YAMLGenerator",
      "com.fasterxml.jackson.core.json.JsonWriteContext",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.DumperOptions",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.DumperOptions$ScalarStyle",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.DumperOptions$FlowStyle",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.DumperOptions$LineBreak",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectStreamStart",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.Event",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.StreamStartEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectFirstDocumentStart",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.DocumentStartEvent",
      "org.elasticsearch.common.xcontent.json.JsonXContentGenerator",
      "org.elasticsearch.common.xcontent.yaml.YamlXContentGenerator",
      "com.fasterxml.jackson.core.util.JsonGeneratorDelegate",
      "org.elasticsearch.common.xcontent.json.BaseJsonGenerator",
      "org.apache.lucene.util.UnicodeUtil",
      "org.elasticsearch.index.mapper.SourceToParse",
      "org.apache.lucene.search.Sort",
      "org.elasticsearch.common.xcontent.XContentParser$Token",
      "com.fasterxml.jackson.core.JsonToken",
      "org.elasticsearch.action.ActionResponse",
      "org.elasticsearch.action.get.GetResponse",
      "org.elasticsearch.common.text.StringText",
      "org.elasticsearch.search.fetch.source.FetchSourceContext",
      "com.fasterxml.jackson.core.util.VersionUtil",
      "com.fasterxml.jackson.dataformat.smile.SmileGenerator",
      "org.elasticsearch.common.xcontent.smile.SmileXContentGenerator",
      "org.apache.lucene.index.SegmentInfos",
      "org.elasticsearch.common.xcontent.support.filtering.FilteringJsonGenerator",
      "org.elasticsearch.common.xcontent.support.filtering.FilterContext",
      "org.elasticsearch.common.xcontent.support.filtering.FilterContext$Type",
      "org.elasticsearch.action.ActionRequest",
      "org.elasticsearch.action.support.IndicesOptions",
      "org.elasticsearch.action.search.SearchRequest",
      "org.elasticsearch.cluster.routing.ShardRouting",
      "org.apache.lucene.search.DocValuesTermsQuery",
      "org.apache.lucene.search.DocValuesTermsQuery$1",
      "org.apache.lucene.util.Sorter",
      "org.apache.lucene.util.TimSorter",
      "org.apache.lucene.util.ArrayTimSorter",
      "com.vividsolutions.jts.geom.CoordinateSequenceComparator",
      "com.google.common.collect.EmptyImmutableSet",
      "com.google.common.collect.ComparatorOrdering",
      "org.elasticsearch.search.fetch.innerhits.InnerHitsContext$BaseInnerHits",
      "org.elasticsearch.search.fetch.innerhits.InnerHitsContext$NestedInnerHits",
      "org.elasticsearch.action.get.MultiGetRequest$Item",
      "org.elasticsearch.index.query.MoreLikeThisQueryBuilder$Item",
      "org.elasticsearch.action.indexedscripts.get.GetIndexedScriptRequest",
      "org.elasticsearch.indices.analysis.IndicesAnalysisService",
      "org.elasticsearch.action.support.broadcast.BroadcastRequest",
      "org.elasticsearch.action.count.CountRequest",
      "com.carrotsearch.hppc.ObjectObjectHashMap",
      "com.carrotsearch.hppc.ObjectObjectIdentityHashMap",
      "com.carrotsearch.hppc.HashOrderMixing$1",
      "com.carrotsearch.hppc.HashOrderMixing",
      "com.carrotsearch.hppc.Containers",
      "com.carrotsearch.hppc.Containers$1",
      "com.carrotsearch.hppc.BitMixer",
      "com.carrotsearch.hppc.RandomizedHashOrderMixer",
      "com.carrotsearch.hppc.HashOrderMixing$4",
      "com.carrotsearch.hppc.HashOrderMixing$Strategy",
      "com.carrotsearch.hppc.HashContainers",
      "com.carrotsearch.hppc.BitUtil",
      "com.carrotsearch.hppc.BufferAllocationException",
      "com.fasterxml.jackson.dataformat.cbor.CBORGenerator",
      "org.elasticsearch.common.xcontent.cbor.CborXContentGenerator",
      "com.vividsolutions.jts.geom.PrecisionModel$Type",
      "com.vividsolutions.jts.geom.PrecisionModel",
      "org.elasticsearch.index.query.ExistsQueryBuilder",
      "org.apache.lucene.search.BooleanQuery",
      "org.elasticsearch.action.percolate.PercolateRequest",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.DocumentEndEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectDocumentEnd",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.EmitterException",
      "org.jboss.netty.buffer.TruncatedChannelBuffer",
      "org.elasticsearch.indices.query.IndicesQueriesRegistry",
      "org.elasticsearch.index.query.BoolQueryBuilder",
      "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
      "com.fasterxml.jackson.core.json.UTF8JsonGenerator",
      "org.elasticsearch.common.xcontent.ToXContent$1",
      "org.elasticsearch.common.xcontent.ToXContent",
      "org.elasticsearch.search.suggest.SuggestionSearchContext",
      "org.elasticsearch.action.percolate.MultiPercolateRequest",
      "org.apache.lucene.analysis.DelegatingAnalyzerWrapper$DelegatingReuseStrategy",
      "org.apache.lucene.util.CloseableThreadLocal",
      "com.fasterxml.jackson.core.util.ByteArrayBuilder",
      "org.elasticsearch.cluster.node.DiscoveryNode",
      "org.apache.lucene.util.automaton.Automaton",
      "org.apache.lucene.util.InPlaceMergeSorter",
      "org.apache.lucene.util.automaton.Automaton$1",
      "org.apache.lucene.util.automaton.Automaton$2",
      "org.apache.lucene.search.AutomatonQuery",
      "org.apache.lucene.util.automaton.CompiledAutomaton",
      "org.apache.lucene.util.automaton.Transition",
      "org.apache.lucene.util.automaton.Operations",
      "org.apache.lucene.util.automaton.CompiledAutomaton$AUTOMATON_TYPE",
      "org.apache.lucene.search.CachingWrapperQuery",
      "org.apache.lucene.search.QueryCachingPolicy$CacheOnLargeSegments",
      "org.apache.lucene.util.AttributeImpl",
      "org.apache.lucene.analysis.NumericTokenStream$NumericTermAttributeImpl",
      "org.elasticsearch.transport.EmptyTransportResponseHandler",
      "org.elasticsearch.transport.TransportResponse$Empty",
      "org.elasticsearch.search.fetch.innerhits.InnerHitsContext",
      "org.jboss.netty.buffer.LittleEndianHeapChannelBuffer",
      "org.jboss.netty.buffer.SlicedChannelBuffer",
      "com.carrotsearch.hppc.ObjectObjectScatterMap",
      "com.carrotsearch.hppc.HashOrderMixing$3",
      "org.elasticsearch.action.GenericAction",
      "org.elasticsearch.action.Action",
      "org.elasticsearch.action.search.ClearScrollAction",
      "org.elasticsearch.action.search.ClearScrollResponse",
      "org.elasticsearch.common.lease.Releasables",
      "org.elasticsearch.search.aggregations.AggregatorFactories$Empty",
      "org.elasticsearch.search.aggregations.AggregatorFactories",
      "org.elasticsearch.search.aggregations.SearchContextAggregations",
      "org.elasticsearch.search.fetch.source.FetchSourceParseElement",
      "org.elasticsearch.common.collect.ImmutableOpenMap",
      "org.elasticsearch.common.collect.ImmutableOpenMap$Builder",
      "org.elasticsearch.cluster.metadata.MetaData$Builder",
      "com.carrotsearch.hppc.AbstractObjectCollection",
      "com.carrotsearch.hppc.ObjectObjectHashMap$ValuesContainer",
      "com.carrotsearch.hppc.AbstractIterator",
      "com.carrotsearch.hppc.ObjectObjectHashMap$ValuesIterator",
      "com.carrotsearch.hppc.cursors.ObjectCursor",
      "org.elasticsearch.cluster.metadata.MetaData$XContentContext",
      "org.elasticsearch.cluster.AbstractDiffable",
      "org.elasticsearch.cluster.metadata.RepositoriesMetaData",
      "org.elasticsearch.cluster.block.ClusterBlock",
      "org.elasticsearch.rest.RestStatus",
      "org.elasticsearch.cluster.block.ClusterBlockLevel",
      "org.elasticsearch.cluster.metadata.MetaData",
      "org.elasticsearch.search.internal.ScrollContext",
      "org.elasticsearch.index.fielddata.plain.AbstractAtomicOrdinalsFieldData",
      "org.elasticsearch.index.fielddata.plain.PagedBytesAtomicFieldData",
      "org.elasticsearch.action.index.IndexAction",
      "org.elasticsearch.action.ActionWriteResponse",
      "org.elasticsearch.action.index.IndexResponse",
      "org.elasticsearch.action.indexedscripts.put.PutIndexedScriptRequest",
      "org.elasticsearch.action.index.IndexRequest$OpType",
      "org.elasticsearch.client.Requests",
      "org.elasticsearch.search.rescore.QueryRescorer$QueryRescoreContext",
      "org.elasticsearch.search.rescore.QueryRescorer$ScoreMode",
      "org.elasticsearch.action.support.single.instance.InstanceShardOperationRequest",
      "org.elasticsearch.action.update.UpdateRequest",
      "org.elasticsearch.action.WriteConsistencyLevel",
      "org.elasticsearch.action.support.replication.ReplicationRequest",
      "org.elasticsearch.action.index.IndexRequest",
      "org.elasticsearch.common.settings.SettingsException",
      "org.elasticsearch.common.settings.NoClassSettingsException",
      "org.elasticsearch.search.aggregations.InternalMultiBucketAggregation$InternalBucket",
      "org.elasticsearch.search.aggregations.bucket.histogram.InternalHistogram$Bucket",
      "org.jboss.netty.buffer.ByteBufferBackedChannelBuffer",
      "org.elasticsearch.transport.netty.ChannelBufferStreamInputFactory",
      "org.elasticsearch.transport.netty.ChannelBufferStreamInput",
      "org.elasticsearch.indices.breaker.NoneCircuitBreakerService",
      "org.elasticsearch.common.breaker.NoopCircuitBreaker",
      "org.elasticsearch.common.io.stream.OutputStreamStreamOutput",
      "org.elasticsearch.action.indexedscripts.delete.DeleteIndexedScriptRequest",
      "org.elasticsearch.action.bulk.BulkRequest",
      "com.vividsolutions.jts.geom.GeometryFactory",
      "com.vividsolutions.jts.geom.impl.CoordinateArraySequenceFactory",
      "com.vividsolutions.jts.geom.impl.PackedCoordinateSequence",
      "com.vividsolutions.jts.geom.impl.PackedCoordinateSequence$Float",
      "org.elasticsearch.action.admin.indices.optimize.OptimizeRequest",
      "org.elasticsearch.action.update.UpdateAction",
      "org.elasticsearch.action.update.UpdateResponse",
      "org.elasticsearch.transport.TransportRequest$Empty",
      "org.elasticsearch.search.internal.ShardSearchLocalRequest",
      "org.elasticsearch.search.SearchShardTarget",
      "org.elasticsearch.common.xcontent.XContentBuilderString",
      "org.elasticsearch.common.xcontent.XContentString",
      "org.elasticsearch.common.unit.Fuzziness",
      "org.elasticsearch.index.query.FuzzyQueryBuilder",
      "org.elasticsearch.common.io.stream.NamedWriteableRegistry$InnerRegistry",
      "com.spatial4j.core.context.SpatialContextFactory",
      "com.spatial4j.core.distance.AbstractDistanceCalculator",
      "com.spatial4j.core.distance.DistanceUtils",
      "com.spatial4j.core.distance.GeodesicSphereDistCalc",
      "com.spatial4j.core.distance.GeodesicSphereDistCalc$Haversine",
      "com.spatial4j.core.shape.impl.RectangleImpl",
      "com.spatial4j.core.io.WktShapeParser",
      "com.spatial4j.core.io.BinaryCodec",
      "com.spatial4j.core.context.SpatialContext",
      "com.spatial4j.core.context.jts.JtsSpatialContextFactory",
      "com.spatial4j.core.io.jts.JtsWktShapeParser$DatelineRule",
      "com.spatial4j.core.io.jts.JtsWktShapeParser$ValidationRule",
      "com.spatial4j.core.io.jts.JtsWktShapeParser",
      "com.spatial4j.core.io.jts.JtsBinaryCodec",
      "com.spatial4j.core.context.jts.JtsSpatialContext",
      "org.elasticsearch.common.geo.builders.ShapeBuilder$IntersectionOrder",
      "org.elasticsearch.common.geo.builders.ShapeBuilder",
      "org.elasticsearch.common.geo.builders.ShapeBuilder$GeoShapeType",
      "org.elasticsearch.common.geo.builders.MultiPolygonBuilder",
      "org.elasticsearch.common.geo.builders.BasePolygonBuilder",
      "org.elasticsearch.common.geo.builders.MultiPolygonBuilder$InternalPolygonBuilder",
      "org.elasticsearch.common.geo.builders.PointCollection",
      "org.elasticsearch.common.geo.builders.BaseLineStringBuilder",
      "org.elasticsearch.common.geo.builders.BasePolygonBuilder$Ring",
      "org.elasticsearch.action.explain.ExplainAction",
      "org.elasticsearch.action.explain.ExplainResponse",
      "org.elasticsearch.search.aggregations.support.AggregationContext",
      "org.elasticsearch.action.support.single.shard.SingleShardRequest",
      "org.elasticsearch.action.get.MultiGetShardRequest",
      "org.elasticsearch.cluster.metadata.IndexMetaData$Builder",
      "org.elasticsearch.cluster.metadata.IndexMetaData$State",
      "com.google.common.collect.RegularImmutableSortedMap$EntrySet",
      "com.google.common.collect.RegularImmutableSortedMap$EntrySet$1",
      "com.google.common.collect.ImmutableSortedAsList",
      "com.google.common.collect.ImmutableList$1",
      "org.elasticsearch.common.settings.Settings$StartsWithPredicate",
      "com.google.common.collect.Iterables",
      "org.elasticsearch.search.warmer.IndexWarmersMetaData",
      "org.elasticsearch.cluster.routing.Murmur3HashFunction",
      "org.elasticsearch.cluster.metadata.IndexMetaData",
      "org.elasticsearch.index.mapper.MappedFieldType$Names",
      "org.elasticsearch.index.fielddata.IndexFieldDataCache$None",
      "org.elasticsearch.index.AbstractIndexComponent",
      "org.elasticsearch.index.fielddata.plain.AbstractIndexFieldData",
      "org.elasticsearch.index.fielddata.plain.FloatArrayIndexFieldData",
      "org.elasticsearch.index.query.TypeQueryBuilder",
      "org.elasticsearch.common.lucene.BytesRefs",
      "org.elasticsearch.search.query.QuerySearchRequest",
      "com.carrotsearch.hppc.ObjectObjectHashMap$EntryIterator",
      "com.carrotsearch.hppc.cursors.ObjectObjectCursor",
      "org.elasticsearch.action.OriginalIndices",
      "org.elasticsearch.action.get.MultiGetRequest",
      "org.elasticsearch.cluster.metadata.SnapshotId",
      "org.elasticsearch.index.get.GetResult",
      "org.elasticsearch.common.geo.builders.LineStringBuilder",
      "org.jboss.netty.buffer.CompositeChannelBuffer",
      "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator",
      "org.elasticsearch.action.exists.ExistsRequest",
      "com.fasterxml.jackson.core.json.DupDetector",
      "com.fasterxml.jackson.core.io.MergedStream",
      "org.elasticsearch.action.explain.ExplainRequest",
      "org.elasticsearch.script.ScriptParameterParser",
      "org.elasticsearch.script.ScriptService",
      "org.elasticsearch.search.aggregations.AggregatorParsers",
      "org.elasticsearch.common.collect.MapBuilder",
      "org.elasticsearch.search.aggregations.AggregatorFactories$Builder",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.Event$ID",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.tokens.Token$ID",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.tokens.StreamEndToken",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.StreamEndEvent",
      "org.elasticsearch.search.SearchException",
      "org.elasticsearch.search.SearchContextException",
      "org.elasticsearch.search.SearchParseException",
      "org.elasticsearch.common.xcontent.XContentLocation",
      "org.elasticsearch.index.mapper.ContentPath",
      "org.elasticsearch.index.mapper.ParseContext",
      "org.elasticsearch.index.mapper.ParseContext$InternalParseContext",
      "org.elasticsearch.common.lucene.all.AllEntries",
      "org.apache.lucene.search.MultiPhraseQuery",
      "org.elasticsearch.action.termvectors.MultiTermVectorsRequest",
      "org.elasticsearch.action.termvectors.TermVectorsRequest",
      "org.elasticsearch.action.termvectors.TermVectorsRequest$Flag",
      "org.elasticsearch.action.admin.indices.upgrade.post.UpgradeRequest",
      "org.elasticsearch.search.builder.SearchSourceBuilder",
      "com.fasterxml.jackson.dataformat.smile.SmileGenerator$SharedStringNode",
      "com.fasterxml.jackson.dataformat.smile.SmileUtil",
      "org.elasticsearch.action.search.MultiSearchRequest",
      "org.elasticsearch.common.bytes.PagedBytesReference$PagedBytesReferenceStreamInput",
      "org.elasticsearch.action.delete.DeleteAction",
      "org.elasticsearch.action.delete.DeleteResponse",
      "org.elasticsearch.index.engine.Engine$Searcher",
      "org.elasticsearch.index.translog.Translog$Create",
      "com.google.common.collect.ReverseNaturalOrdering",
      "org.elasticsearch.action.suggest.SuggestRequest",
      "org.elasticsearch.search.fetch.ShardFetchRequest",
      "org.elasticsearch.search.highlight.HighlighterParseElement",
      "org.elasticsearch.search.highlight.SearchContextHighlight$FieldOptions$Builder",
      "org.elasticsearch.search.highlight.SearchContextHighlight$FieldOptions",
      "org.apache.lucene.search.vectorhighlight.SimpleBoundaryScanner",
      "org.elasticsearch.index.mapper.core.BooleanFieldMapper$BooleanFieldType",
      "org.elasticsearch.index.mapper.core.DateFieldMapper$DateFieldType",
      "org.elasticsearch.index.mapper.internal.TimestampFieldMapper$TimestampFieldType",
      "org.elasticsearch.common.Explicit",
      "org.elasticsearch.index.mapper.core.NumberFieldMapper$Defaults",
      "org.elasticsearch.common.joda.Joda$1",
      "org.elasticsearch.common.joda.Joda$2",
      "org.elasticsearch.common.joda.Joda",
      "org.elasticsearch.common.joda.FormatDateTimeFormatter",
      "org.joda.time.format.StrictISODateTimeFormat",
      "org.joda.time.format.StrictISODateTimeFormat$Constants",
      "org.elasticsearch.common.joda.Joda$EpochTimePrinter",
      "org.elasticsearch.common.joda.Joda$EpochTimeParser",
      "org.joda.time.format.InternalPrinterDateTimePrinter",
      "org.elasticsearch.common.joda.DateMathParser",
      "org.elasticsearch.index.mapper.core.DateFieldMapper$Defaults",
      "org.elasticsearch.cluster.RestoreInProgress",
      "org.elasticsearch.index.fielddata.plain.AbstractIndexOrdinalsFieldData",
      "org.elasticsearch.index.fielddata.plain.PagedBytesIndexFieldData",
      "com.google.common.collect.Lists$TwoPlusArrayList",
      "org.apache.lucene.index.QueryTimeoutImpl",
      "org.apache.lucene.index.IndexReader",
      "org.apache.lucene.index.CompositeReader",
      "org.apache.lucene.index.BaseCompositeReader",
      "org.apache.lucene.index.DirectoryReader",
      "org.apache.lucene.index.FilterDirectoryReader",
      "org.apache.lucene.index.ExitableDirectoryReader",
      "org.apache.lucene.index.FilterDirectoryReader$SubReaderWrapper",
      "org.apache.lucene.index.ExitableDirectoryReader$ExitableSubReaderWrapper",
      "org.elasticsearch.search.aggregations.support.ValuesSource",
      "org.elasticsearch.search.aggregations.support.ValuesSource$Bytes$1",
      "org.elasticsearch.search.aggregations.support.ValuesSource$Bytes",
      "org.elasticsearch.search.aggregations.support.ValuesSource$Bytes$WithOrdinals",
      "org.elasticsearch.search.aggregations.support.ValuesSource$Bytes$WithOrdinals$FieldData",
      "org.apache.lucene.util.NamedThreadFactory",
      "org.apache.lucene.search.Filter",
      "org.apache.lucene.search.join.BitDocIdSetFilter",
      "org.apache.lucene.search.join.BitDocIdSetCachingWrapperFilter",
      "com.google.common.collect.RegularImmutableBiMap",
      "org.elasticsearch.common.bytes.BytesReference$Helper",
      "org.elasticsearch.action.termvectors.MultiTermVectorsAction",
      "org.elasticsearch.common.util.CancellableThreads$ExecutionCancelledException",
      "org.apache.lucene.analysis.PrefixAnalyzer",
      "org.apache.lucene.analysis.ReusableStringReader",
      "org.apache.lucene.search.TimeLimitingCollector",
      "org.apache.lucene.search.TimeLimitingCollector$TimerThread",
      "org.apache.lucene.util.Counter$AtomicCounter",
      "org.apache.lucene.search.TimeLimitingCollector$TimerThreadHolder",
      "org.elasticsearch.search.suggest.SuggestBuilder",
      "org.elasticsearch.search.suggest.SuggestBuilder$SuggestionBuilder",
      "org.jboss.netty.buffer.ReadOnlyChannelBuffer",
      "org.jboss.netty.buffer.DirectChannelBufferFactory",
      "org.elasticsearch.indices.analysis.PreBuiltCacheFactory$CachingStrategy",
      "org.elasticsearch.indices.analysis.PreBuiltCacheFactory",
      "org.elasticsearch.indices.analysis.PreBuiltCacheFactory$1",
      "org.elasticsearch.indices.analysis.PreBuiltCacheFactory$PreBuiltCacheStrategyElasticsearch",
      "org.elasticsearch.indices.analysis.PreBuiltCacheFactory$PreBuiltCacheStrategyOne",
      "org.elasticsearch.indices.analysis.PreBuiltCacheFactory$PreBuiltCacheStrategyLucene",
      "org.elasticsearch.indices.analysis.PreBuiltAnalyzers",
      "org.elasticsearch.index.analysis.PreBuiltAnalyzerProviderFactory",
      "org.apache.lucene.analysis.util.StopwordAnalyzerBase",
      "org.apache.lucene.analysis.util.CharArrayMap$UnmodifiableCharArrayMap",
      "org.apache.lucene.analysis.util.CharArrayMap$EmptyCharArrayMap",
      "org.apache.lucene.analysis.util.CharacterUtils$Java4CharacterUtils",
      "org.apache.lucene.analysis.util.CharacterUtils$Java5CharacterUtils",
      "org.apache.lucene.analysis.util.CharacterUtils",
      "org.apache.lucene.analysis.util.CharArrayMap",
      "org.apache.lucene.analysis.util.CharArraySet",
      "org.apache.lucene.analysis.core.StopAnalyzer",
      "org.apache.lucene.analysis.standard.StandardAnalyzer",
      "org.elasticsearch.index.analysis.PreBuiltAnalyzerProvider",
      "org.apache.lucene.analysis.core.KeywordAnalyzer",
      "org.apache.lucene.analysis.core.WhitespaceAnalyzer",
      "org.apache.lucene.analysis.core.SimpleAnalyzer",
      "org.apache.lucene.analysis.standard.ClassicAnalyzer",
      "org.elasticsearch.index.analysis.SnowballAnalyzer",
      "org.elasticsearch.index.analysis.PatternAnalyzer",
      "org.elasticsearch.index.analysis.StandardHtmlStripAnalyzer",
      "org.apache.lucene.analysis.ar.ArabicAnalyzer",
      "org.apache.lucene.analysis.util.WordlistLoader",
      "org.apache.lucene.analysis.ar.ArabicAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.hy.ArmenianAnalyzer",
      "org.apache.lucene.analysis.hy.ArmenianAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.eu.BasqueAnalyzer",
      "org.apache.lucene.analysis.eu.BasqueAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.br.BrazilianAnalyzer",
      "org.apache.lucene.analysis.br.BrazilianAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.bg.BulgarianAnalyzer",
      "org.apache.lucene.analysis.bg.BulgarianAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.ca.CatalanAnalyzer",
      "org.apache.lucene.analysis.ca.CatalanAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.cjk.CJKAnalyzer",
      "org.apache.lucene.analysis.cjk.CJKAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.cz.CzechAnalyzer",
      "org.apache.lucene.analysis.cz.CzechAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.nl.DutchAnalyzer",
      "org.apache.lucene.analysis.nl.DutchAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$Builder",
      "org.apache.lucene.util.BytesRefHash",
      "org.apache.lucene.util.ByteBlockPool",
      "org.apache.lucene.util.ByteBlockPool$Allocator",
      "org.apache.lucene.util.ByteBlockPool$DirectAllocator",
      "org.apache.lucene.util.BytesRefHash$BytesStartArray",
      "org.apache.lucene.util.BytesRefHash$DirectBytesStartArray",
      "org.apache.lucene.util.Counter$SerialCounter",
      "org.apache.lucene.analysis.util.CharArrayMap$EntrySet",
      "org.apache.lucene.analysis.util.CharArrayMap$EntryIterator",
      "org.apache.lucene.util.StringHelper",
      "org.apache.lucene.util.fst.Outputs",
      "org.apache.lucene.util.fst.ByteSequenceOutputs",
      "org.apache.lucene.util.fst.Builder",
      "org.apache.lucene.util.fst.FST$INPUT_TYPE",
      "org.apache.lucene.util.IntsRefBuilder",
      "org.apache.lucene.util.IntsRef",
      "org.apache.lucene.util.fst.FST",
      "org.apache.lucene.store.DataOutput",
      "org.apache.lucene.util.fst.BytesStore",
      "org.apache.lucene.util.fst.NodeHash",
      "org.apache.lucene.store.DataInput",
      "org.apache.lucene.util.fst.FST$BytesReader",
      "org.apache.lucene.util.fst.BytesStore$2",
      "org.apache.lucene.util.fst.FST$Arc",
      "org.apache.lucene.index.NumericDocValues",
      "org.apache.lucene.util.LongValues$1",
      "org.apache.lucene.util.LongValues",
      "org.apache.lucene.util.packed.AbstractPagedMutable",
      "org.apache.lucene.util.packed.PagedGrowableWriter",
      "org.apache.lucene.util.packed.PackedInts",
      "org.apache.lucene.util.packed.PackedInts$Reader",
      "org.apache.lucene.util.packed.PackedInts$Mutable",
      "org.apache.lucene.util.packed.GrowableWriter",
      "org.apache.lucene.util.packed.PackedInts$Format$2",
      "org.apache.lucene.util.packed.PackedInts$Format",
      "org.apache.lucene.util.packed.PackedInts$FormatAndBits",
      "org.apache.lucene.util.packed.PackedInts$2",
      "org.apache.lucene.util.packed.PackedInts$MutableImpl",
      "org.apache.lucene.util.packed.Direct8",
      "org.apache.lucene.util.fst.Builder$UnCompiledNode",
      "org.apache.lucene.util.fst.Builder$Arc",
      "org.apache.lucene.util.IntroSorter",
      "org.apache.lucene.util.BytesRefHash$1",
      "org.apache.lucene.util.fst.Builder$CompiledNode",
      "org.apache.lucene.analysis.miscellaneous.StemmerOverrideFilter$StemmerOverrideMap",
      "org.apache.lucene.util.packed.Packed64SingleBlock",
      "org.apache.lucene.util.packed.Packed64SingleBlock$Packed64SingleBlock4",
      "org.apache.lucene.util.packed.Packed64",
      "org.apache.lucene.util.packed.BulkOperationPacked",
      "org.apache.lucene.util.packed.BulkOperationPacked1",
      "org.apache.lucene.util.packed.BulkOperationPacked2",
      "org.apache.lucene.util.packed.BulkOperationPacked3",
      "org.apache.lucene.util.packed.BulkOperationPacked4",
      "org.apache.lucene.util.packed.BulkOperationPacked5",
      "org.apache.lucene.util.packed.BulkOperationPacked6",
      "org.apache.lucene.util.packed.BulkOperationPacked7",
      "org.apache.lucene.util.packed.BulkOperationPacked8",
      "org.apache.lucene.util.packed.BulkOperationPacked9",
      "org.apache.lucene.util.packed.BulkOperationPacked10",
      "org.apache.lucene.util.packed.BulkOperationPacked11",
      "org.apache.lucene.util.packed.BulkOperationPacked12",
      "org.apache.lucene.util.packed.BulkOperationPacked13",
      "org.apache.lucene.util.packed.BulkOperationPacked14",
      "org.apache.lucene.util.packed.BulkOperationPacked15",
      "org.apache.lucene.util.packed.BulkOperationPacked16",
      "org.apache.lucene.util.packed.BulkOperationPacked17",
      "org.apache.lucene.util.packed.BulkOperationPacked18",
      "org.apache.lucene.util.packed.BulkOperationPacked19",
      "org.apache.lucene.util.packed.BulkOperationPacked20",
      "org.apache.lucene.util.packed.BulkOperationPacked21",
      "org.apache.lucene.util.packed.BulkOperationPacked22",
      "org.apache.lucene.util.packed.BulkOperationPacked23",
      "org.apache.lucene.util.packed.BulkOperationPacked24",
      "org.apache.lucene.util.packed.BulkOperationPackedSingleBlock",
      "org.apache.lucene.util.packed.BulkOperation",
      "org.apache.lucene.util.packed.BulkOperation$1",
      "org.apache.lucene.util.fst.ReverseBytesReader",
      "org.apache.lucene.analysis.da.DanishAnalyzer",
      "org.apache.lucene.analysis.da.DanishAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.en.EnglishAnalyzer",
      "org.apache.lucene.analysis.en.EnglishAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.fi.FinnishAnalyzer",
      "org.apache.lucene.analysis.fi.FinnishAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.fr.FrenchAnalyzer",
      "org.apache.lucene.analysis.fr.FrenchAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.gl.GalicianAnalyzer",
      "org.apache.lucene.analysis.gl.GalicianAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.de.GermanAnalyzer",
      "org.apache.lucene.analysis.de.GermanAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.el.GreekAnalyzer",
      "org.apache.lucene.analysis.el.GreekAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.hi.HindiAnalyzer",
      "org.apache.lucene.analysis.hi.HindiAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.hu.HungarianAnalyzer",
      "org.apache.lucene.analysis.hu.HungarianAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.id.IndonesianAnalyzer",
      "org.apache.lucene.analysis.id.IndonesianAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.ga.IrishAnalyzer",
      "org.apache.lucene.analysis.ga.IrishAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.it.ItalianAnalyzer",
      "org.apache.lucene.analysis.it.ItalianAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.lv.LatvianAnalyzer",
      "org.apache.lucene.analysis.lv.LatvianAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.no.NorwegianAnalyzer",
      "org.apache.lucene.analysis.no.NorwegianAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.fa.PersianAnalyzer",
      "org.apache.lucene.analysis.fa.PersianAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.pt.PortugueseAnalyzer",
      "org.apache.lucene.analysis.pt.PortugueseAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.ro.RomanianAnalyzer",
      "org.apache.lucene.analysis.ro.RomanianAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.ru.RussianAnalyzer",
      "org.apache.lucene.analysis.ru.RussianAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.ckb.SoraniAnalyzer",
      "org.apache.lucene.analysis.ckb.SoraniAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.es.SpanishAnalyzer",
      "org.apache.lucene.analysis.es.SpanishAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.sv.SwedishAnalyzer",
      "org.apache.lucene.analysis.sv.SwedishAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.tr.TurkishAnalyzer",
      "org.apache.lucene.analysis.tr.TurkishAnalyzer$DefaultSetHolder",
      "org.apache.lucene.analysis.th.ThaiAnalyzer",
      "org.apache.lucene.analysis.th.ThaiAnalyzer$DefaultSetHolder",
      "org.elasticsearch.indices.analysis.PreBuiltTokenizers",
      "org.elasticsearch.index.analysis.PreBuiltTokenizerFactoryFactory",
      "org.elasticsearch.indices.analysis.PreBuiltTokenizers$13",
      "org.elasticsearch.indices.analysis.PreBuiltTokenFilters",
      "org.elasticsearch.index.analysis.PreBuiltTokenFilterFactoryFactory",
      "org.elasticsearch.indices.analysis.PreBuiltTokenFilters$44",
      "org.elasticsearch.indices.analysis.PreBuiltCharFilters",
      "org.elasticsearch.index.analysis.PreBuiltCharFilterFactoryFactory",
      "org.elasticsearch.indices.analysis.PreBuiltCharFilters$2",
      "org.elasticsearch.cluster.ClusterName",
      "org.elasticsearch.cluster.ClusterState$Builder",
      "org.elasticsearch.cluster.routing.RoutingTable$Builder",
      "org.elasticsearch.cluster.routing.RoutingTable",
      "org.elasticsearch.cluster.node.DiscoveryNodes$Builder",
      "org.elasticsearch.cluster.node.DiscoveryNodes",
      "com.google.common.collect.ImmutableSet$Builder",
      "org.elasticsearch.cluster.block.ClusterBlocks$ImmutableLevelHolder",
      "org.elasticsearch.cluster.block.ClusterBlocks",
      "org.elasticsearch.common.Base64",
      "org.elasticsearch.cluster.ClusterState$ClusterStateStatus",
      "org.elasticsearch.cluster.SnapshotsInProgress",
      "org.elasticsearch.cluster.ClusterState",
      "org.elasticsearch.cluster.ClusterChangedEvent",
      "org.elasticsearch.common.collect.ImmutableOpenMap$2",
      "org.elasticsearch.cluster.node.DiscoveryNodes$Delta",
      "org.apache.lucene.index.MultiReader",
      "org.elasticsearch.search.highlight.SearchContextHighlight$Field",
      "org.elasticsearch.search.highlight.SearchContextHighlight",
      "org.jboss.netty.logging.JdkLoggerFactory",
      "org.jboss.netty.logging.InternalLoggerFactory",
      "org.jboss.netty.logging.AbstractInternalLogger",
      "org.jboss.netty.logging.JdkLogger",
      "org.jboss.netty.channel.DefaultChannelPipeline$DiscardingChannelSink",
      "org.jboss.netty.channel.DefaultChannelPipeline",
      "org.elasticsearch.index.mapper.Mapper",
      "org.elasticsearch.index.mapper.FieldMapper",
      "org.elasticsearch.index.mapper.MetadataFieldMapper",
      "org.elasticsearch.index.mapper.internal.IndexFieldMapper",
      "org.elasticsearch.index.mapper.internal.IndexFieldMapper$IndexFieldType",
      "org.apache.lucene.codecs.PostingsFormat",
      "org.apache.lucene.util.NamedSPILoader",
      "org.apache.lucene.codecs.lucene50.Lucene50PostingsFormat",
      "org.apache.lucene.codecs.FieldsConsumer",
      "org.apache.lucene.codecs.blocktree.BlockTreeTermsWriter",
      "org.apache.lucene.codecs.PostingsFormat$Holder",
      "org.apache.lucene.codecs.DocValuesFormat",
      "org.apache.lucene.codecs.lucene50.Lucene50DocValuesFormat",
      "org.apache.lucene.codecs.DocValuesFormat$Holder",
      "org.apache.lucene.search.TopDocs",
      "org.elasticsearch.common.lucene.Lucene",
      "org.elasticsearch.index.mapper.internal.IndexFieldMapper$Defaults",
      "org.elasticsearch.index.mapper.FieldMapper$MultiFields",
      "org.elasticsearch.index.query.QueryParseContext",
      "org.jboss.netty.handler.codec.http.HttpMethod",
      "org.elasticsearch.search.fetch.FetchSubPhase$HitContext",
      "org.elasticsearch.action.fieldstats.FieldStatsAction",
      "org.elasticsearch.action.support.broadcast.BroadcastResponse",
      "org.elasticsearch.action.fieldstats.FieldStatsResponse",
      "org.elasticsearch.common.io.stream.DataOutputStreamOutput",
      "org.elasticsearch.search.fetch.script.ScriptFieldsContext",
      "org.elasticsearch.common.ParseField$Flag",
      "org.elasticsearch.common.ParseField"
    );
  }
}
