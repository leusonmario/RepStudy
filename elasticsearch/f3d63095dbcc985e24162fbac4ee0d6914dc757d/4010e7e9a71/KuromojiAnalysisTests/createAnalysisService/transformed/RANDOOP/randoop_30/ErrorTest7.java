import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ErrorTest7 {

    public static boolean debug = false;

    @Test
    public void test3501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3501");
        java.lang.String[] strArray7 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet8 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray7);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests9 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests9.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet8, (java.lang.Object) kuromojiAnalysisTests9);
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests9.assertDocsEnumEquals("tests.badapples", postingsEnum14, postingsEnum15, true);
        org.junit.rules.TestRule testRule18 = kuromojiAnalysisTests9.ruleChain;
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        kuromojiAnalysisTests9.assertDocsSkippingEquals("tests.maxfailures", indexReader20, (int) (byte) 100, postingsEnum22, postingsEnum23, false);
        kuromojiAnalysisTests9.resetCheckIndexStatus();
        kuromojiAnalysisTests9.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.Terms terms30 = null;
        org.apache.lucene.index.Terms terms31 = null;
        kuromojiAnalysisTests9.assertTermsEquals("hi!", indexReader29, terms30, terms31, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.Fields fields37 = null;
        org.apache.lucene.index.Fields fields38 = null;
        kuromojiAnalysisTests34.assertFieldsEquals("europarl.lines.txt.gz", indexReader36, fields37, fields38, false);
        kuromojiAnalysisTests34.tearDown();
        org.junit.rules.RuleChain ruleChain42 = kuromojiAnalysisTests34.failureAndSuccessEvents;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain42;
        kuromojiAnalysisTests9.failureAndSuccessEvents = ruleChain42;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) ruleChain42);
    }

    @Test
    public void test3502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3502");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (double) (-1L), (double) 0, (double) (-1));
    }

    @Test
    public void test3503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3503");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((long) (byte) -1, (long) (short) -1);
    }

    @Test
    public void test3504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3504");
        java.lang.Object obj0 = null;
        byte[] byteArray2 = new byte[] {};
        byte[] byteArray3 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray2, byteArray3);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray7 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray6, byteArray7);
        org.junit.Assert.assertArrayEquals(byteArray2, byteArray7);
        byte[] byteArray11 = new byte[] {};
        byte[] byteArray12 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray11, byteArray12);
        org.junit.Assert.assertArrayEquals(byteArray7, byteArray12);
        byte[] byteArray16 = new byte[] {};
        byte[] byteArray17 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray16, byteArray17);
        byte[] byteArray20 = new byte[] {};
        byte[] byteArray21 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray20, byteArray21);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray25 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray24, byteArray25);
        org.junit.Assert.assertArrayEquals(byteArray21, byteArray25);
        org.junit.Assert.assertArrayEquals(byteArray17, byteArray21);
        org.junit.Assert.assertArrayEquals(byteArray12, byteArray21);
        byte[] byteArray31 = new byte[] {};
        byte[] byteArray32 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray31, byteArray32);
        byte[] byteArray35 = new byte[] {};
        byte[] byteArray36 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray35, byteArray36);
        org.junit.Assert.assertArrayEquals(byteArray32, byteArray36);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray42 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray41, byteArray42);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray47 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray46, byteArray47);
        byte[] byteArray50 = new byte[] {};
        byte[] byteArray51 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray50, byteArray51);
        org.junit.Assert.assertArrayEquals(byteArray47, byteArray51);
        byte[] byteArray55 = new byte[] {};
        byte[] byteArray56 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray55, byteArray56);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray60 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray59, byteArray60);
        org.junit.Assert.assertArrayEquals(byteArray56, byteArray60);
        org.junit.Assert.assertArrayEquals("tests.nightly", byteArray51, byteArray60);
        org.junit.Assert.assertArrayEquals(byteArray42, byteArray51);
        byte[] byteArray66 = new byte[] {};
        byte[] byteArray67 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray66, byteArray67);
        org.junit.Assert.assertArrayEquals("tests.nightly", byteArray51, byteArray67);
        org.junit.Assert.assertArrayEquals(byteArray32, byteArray51);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray73 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray72, byteArray73);
        byte[] byteArray76 = new byte[] {};
        byte[] byteArray77 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray76, byteArray77);
        org.junit.Assert.assertArrayEquals(byteArray72, byteArray77);
        org.junit.Assert.assertArrayEquals(byteArray32, byteArray72);
        org.junit.Assert.assertArrayEquals(byteArray21, byteArray72);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame(obj0, (java.lang.Object) byteArray72);
    }

    @Test
    public void test3505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3505");
        java.lang.Object obj0 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        kuromojiAnalysisTests1.setUp();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        org.apache.lucene.index.Terms terms14 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.nightly", indexReader12, terms13, terms14, false);
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests18 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.Fields fields21 = null;
        org.apache.lucene.index.Fields fields22 = null;
        kuromojiAnalysisTests18.assertFieldsEquals("europarl.lines.txt.gz", indexReader20, fields21, fields22, false);
        kuromojiAnalysisTests18.tearDown();
        org.junit.rules.RuleChain ruleChain26 = kuromojiAnalysisTests18.failureAndSuccessEvents;
        kuromojiAnalysisTests18.setIndexWriterMaxDocs((int) (byte) -1);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests18);
        java.lang.String str30 = kuromojiAnalysisTests1.getTestName();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(obj0, (java.lang.Object) str30);
    }

    @Test
    public void test3506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3506");
        java.lang.Object[] objArray0 = null;
        java.lang.String[] strArray2 = new java.lang.String[] {};
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.String[] strArray4 = new java.lang.String[] {};
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.String[][] strArray6 = new java.lang.String[][] { strArray2, strArray3, strArray4, strArray5 };
        java.util.Set<java.lang.String[]> strArraySet7 = org.apache.lucene.util.LuceneTestCase.asSet(strArray6);
        java.util.List<java.lang.String[]> strArrayList8 = org.elasticsearch.test.ESTestCase.randomSubsetOf(3, strArray6);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(objArray0, (java.lang.Object[]) strArray6);
    }

    @Test
    public void test3507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3507");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("europarl.lines.txt.gz", indexReader4, fields5, fields6, false);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("hi!", indexReader10, (int) (byte) 0, postingsEnum12, postingsEnum13);
        kuromojiAnalysisTests2.ensureCheckIndexPassed();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests16 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.Assert.assertNotSame("tests.slow", (java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) kuromojiAnalysisTests16);
        kuromojiAnalysisTests16.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests16.ensureAllSearchContextsReleased();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests21 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        org.apache.lucene.index.Fields fields25 = null;
        kuromojiAnalysisTests21.assertFieldsEquals("europarl.lines.txt.gz", indexReader23, fields24, fields25, false);
        kuromojiAnalysisTests21.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain30 = kuromojiAnalysisTests21.failureAndSuccessEvents;
        kuromojiAnalysisTests21.resetCheckIndexStatus();
        java.lang.String str32 = kuromojiAnalysisTests21.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests21);
        kuromojiAnalysisTests21.setUp();
        org.junit.rules.TestRule testRule35 = kuromojiAnalysisTests21.ruleChain;
        org.junit.rules.RuleChain ruleChain36 = kuromojiAnalysisTests21.failureAndSuccessEvents;
        kuromojiAnalysisTests21.ensureCleanedUp();
        kuromojiAnalysisTests21.setIndexWriterMaxDocs((int) (short) 1);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("hi!", (java.lang.Object) kuromojiAnalysisTests16, (java.lang.Object) (short) 1);
    }

    @Test
    public void test3508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3508");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.nightly", (double) 0.0f, (double) 2);
    }

    @Test
    public void test3509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3509");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.failfast", indexReader8, 1, postingsEnum10, postingsEnum11);
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum17 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("<unknown>", indexReader14, (int) '#', postingsEnum16, postingsEnum17);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("hi!", indexReader22, (int) (byte) 100, postingsEnum24, postingsEnum25, false);
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("europarl.lines.txt.gz", postingsEnum29, postingsEnum30);
    }

    @Test
    public void test3510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3510");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (double) ' ', (double) 'a', 10.0d);
    }

    @Test
    public void test3511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3511");
        java.lang.String[] strArray7 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet8 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray7);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests9 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests9.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet8, (java.lang.Object) kuromojiAnalysisTests9);
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests9.assertDocsEnumEquals("tests.badapples", postingsEnum14, postingsEnum15, true);
        org.junit.rules.TestRule testRule18 = kuromojiAnalysisTests9.ruleChain;
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        kuromojiAnalysisTests9.assertDocsSkippingEquals("tests.maxfailures", indexReader20, (int) (byte) 100, postingsEnum22, postingsEnum23, false);
        kuromojiAnalysisTests9.resetCheckIndexStatus();
        kuromojiAnalysisTests9.ensureCleanedUp();
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests9);
        kuromojiAnalysisTests9.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        kuromojiAnalysisTests9.assertDocsSkippingEquals("", indexReader31, 0, postingsEnum33, postingsEnum34, true);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests9);
    }

    @Test
    public void test3512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3512");
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray1 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray2 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray3 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[][] throttlingArray4 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[][] { throttlingArray1, throttlingArray2, throttlingArray3 };
        java.util.List<org.apache.lucene.store.MockDirectoryWrapper.Throttling[]> throttlingArrayList5 = org.elasticsearch.test.ESTestCase.randomSubsetOf(0, throttlingArray4);
        double[] doubleArray9 = new double[] { 100, (short) 100 };
        double[] doubleArray12 = new double[] { 100, (short) 100 };
        double[] doubleArray15 = new double[] { 100, (short) 100 };
        double[][] doubleArray16 = new double[][] { doubleArray9, doubleArray12, doubleArray15 };
        java.util.Set<double[]> doubleArraySet17 = org.apache.lucene.util.LuceneTestCase.asSet(doubleArray16);
        java.util.Set<double[]> doubleArraySet18 = org.apache.lucene.util.LuceneTestCase.asSet(doubleArray16);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.Fields fields23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        kuromojiAnalysisTests20.assertFieldsEquals("europarl.lines.txt.gz", indexReader22, fields23, fields24, false);
        kuromojiAnalysisTests20.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain29 = kuromojiAnalysisTests20.failureAndSuccessEvents;
        kuromojiAnalysisTests20.resetCheckIndexStatus();
        java.lang.String str31 = kuromojiAnalysisTests20.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests20);
        kuromojiAnalysisTests20.tearDown();
        kuromojiAnalysisTests20.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain35 = kuromojiAnalysisTests20.failureAndSuccessEvents;
        java.lang.String str36 = kuromojiAnalysisTests20.getTestName();
        org.junit.Assert.assertNotSame((java.lang.Object) doubleArray16, (java.lang.Object) str36);
        java.util.List<double[]> doubleArrayList38 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (byte) 0, doubleArray16);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray4, (java.lang.Object[]) doubleArray16);
    }

    @Test
    public void test3513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3513");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        org.apache.lucene.index.Fields fields15 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("tests.awaitsfix", indexReader13, fields14, fields15, true);
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.badapples");
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.junit.rules.RuleChain ruleChain22 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        java.lang.Object obj23 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) ruleChain22, obj23);
    }

    @Test
    public void test3514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3514");
        short[] shortArray3 = new short[] { (short) 10 };
        short[] shortArray5 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray3, shortArray5);
        short[] shortArray9 = new short[] { (short) 10 };
        short[] shortArray11 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray9, shortArray11);
        short[] shortArray15 = new short[] { (short) 10 };
        short[] shortArray17 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray15, shortArray17);
        org.junit.Assert.assertArrayEquals(shortArray11, shortArray15);
        short[] shortArray22 = new short[] { (short) 10 };
        short[] shortArray24 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray22, shortArray24);
        short[] shortArray29 = new short[] { (short) 10 };
        short[] shortArray31 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray29, shortArray31);
        short[] shortArray35 = new short[] { (short) 10 };
        short[] shortArray37 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray35, shortArray37);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray31, shortArray37);
        org.junit.Assert.assertArrayEquals(shortArray24, shortArray37);
        short[] shortArray44 = new short[] { (short) 10 };
        short[] shortArray46 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray44, shortArray46);
        short[] shortArray50 = new short[] { (short) 10 };
        short[] shortArray52 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray50, shortArray52);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", shortArray46, shortArray52);
        short[] shortArray58 = new short[] { (short) 10 };
        short[] shortArray60 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray58, shortArray60);
        short[] shortArray64 = new short[] { (short) 10 };
        short[] shortArray66 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray64, shortArray66);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray60, shortArray66);
        org.junit.Assert.assertArrayEquals(shortArray52, shortArray60);
        org.junit.Assert.assertArrayEquals(shortArray24, shortArray52);
        org.junit.Assert.assertArrayEquals(shortArray11, shortArray52);
        short[] shortArray75 = new short[] { (short) 10 };
        short[] shortArray77 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray75, shortArray77);
        short[] shortArray82 = new short[] { (short) 10 };
        short[] shortArray84 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray82, shortArray84);
        short[] shortArray88 = new short[] { (short) 10 };
        short[] shortArray90 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray88, shortArray90);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray84, shortArray90);
        org.junit.Assert.assertArrayEquals("tests.nightly", shortArray75, shortArray84);
        org.junit.Assert.assertArrayEquals(shortArray52, shortArray75);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", shortArray3, shortArray75);
        short[] shortArray96 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(shortArray75, shortArray96);
    }

    @Test
    public void test3515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3515");
        java.util.Locale locale1 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale3 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale5 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale7 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale9 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray10 = new java.util.Locale[] { locale1, locale3, locale5, locale7, locale9 };
        java.util.Set<java.util.Locale> localeSet11 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray10);
        java.util.Locale locale14 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale16 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale18 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale20 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale22 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray23 = new java.util.Locale[] { locale14, locale16, locale18, locale20, locale22 };
        java.util.Set<java.util.Locale> localeSet24 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray23);
        java.util.List<java.io.Serializable> serializableList25 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray23);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray10, (java.lang.Object[]) localeArray23);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests27 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests27.setIndexWriterMaxDocs((int) (byte) 10);
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.Terms terms32 = null;
        org.apache.lucene.index.Terms terms33 = null;
        kuromojiAnalysisTests27.assertTermsEquals("tests.weekly", indexReader31, terms32, terms33, true);
        kuromojiAnalysisTests27.setIndexWriterMaxDocs((int) '#');
        kuromojiAnalysisTests27.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests27.ensureCheckIndexPassed();
        kuromojiAnalysisTests27.setUp();
        kuromojiAnalysisTests27.resetCheckIndexStatus();
        org.junit.rules.RuleChain ruleChain42 = kuromojiAnalysisTests27.failureAndSuccessEvents;
        kuromojiAnalysisTests27.ensureCheckIndexPassed();
        org.junit.Assert.assertNotSame((java.lang.Object) localeArray10, (java.lang.Object) kuromojiAnalysisTests27);
        java.lang.Object[] objArray45 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) localeArray10, objArray45);
    }

    @Test
    public void test3516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3516");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.junit.rules.TestRule testRule13 = kuromojiAnalysisTests1.ruleChain;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule13;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests15 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        org.apache.lucene.index.Fields fields19 = null;
        kuromojiAnalysisTests15.assertFieldsEquals("europarl.lines.txt.gz", indexReader17, fields18, fields19, false);
        kuromojiAnalysisTests15.ensureCleanedUp();
        kuromojiAnalysisTests15.resetCheckIndexStatus();
        kuromojiAnalysisTests15.ensureCleanedUp();
        java.lang.String str25 = kuromojiAnalysisTests15.getTestName();
        kuromojiAnalysisTests15.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests15.resetCheckIndexStatus();
        org.junit.Assert.assertNotSame("tests.nightly", (java.lang.Object) testRule13, (java.lang.Object) kuromojiAnalysisTests15);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests29 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.Fields fields32 = null;
        org.apache.lucene.index.Fields fields33 = null;
        kuromojiAnalysisTests29.assertFieldsEquals("europarl.lines.txt.gz", indexReader31, fields32, fields33, false);
        kuromojiAnalysisTests29.ensureCleanedUp();
        kuromojiAnalysisTests29.assertPathHasBeenCleared("tests.failfast");
        kuromojiAnalysisTests29.tearDown();
        kuromojiAnalysisTests29.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests29.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests42 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader44 = null;
        org.apache.lucene.index.Fields fields45 = null;
        org.apache.lucene.index.Fields fields46 = null;
        kuromojiAnalysisTests42.assertFieldsEquals("europarl.lines.txt.gz", indexReader44, fields45, fields46, false);
        kuromojiAnalysisTests42.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain51 = kuromojiAnalysisTests42.failureAndSuccessEvents;
        kuromojiAnalysisTests42.resetCheckIndexStatus();
        kuromojiAnalysisTests42.assertPathHasBeenCleared("random");
        java.lang.String str55 = kuromojiAnalysisTests42.getTestName();
        org.junit.rules.RuleChain ruleChain56 = kuromojiAnalysisTests42.failureAndSuccessEvents;
        kuromojiAnalysisTests29.failureAndSuccessEvents = ruleChain56;
        org.apache.lucene.index.IndexReader indexReader59 = null;
        org.apache.lucene.index.Fields fields60 = null;
        org.apache.lucene.index.Fields fields61 = null;
        kuromojiAnalysisTests29.assertFieldsEquals("<unknown>", indexReader59, fields60, fields61, false);
        org.apache.lucene.index.IndexReader indexReader65 = null;
        org.apache.lucene.index.Fields fields66 = null;
        org.apache.lucene.index.Fields fields67 = null;
        kuromojiAnalysisTests29.assertFieldsEquals("", indexReader65, fields66, fields67, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests15, (java.lang.Object) "");
    }

    @Test
    public void test3517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3517");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.failfast", indexReader8, 1, postingsEnum10, postingsEnum11);
        kuromojiAnalysisTests0.setIndexWriterMaxDocs(0);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("tests.slow", indexReader16, fields17, fields18, false);
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("<unknown>", indexReader22, (int) 'a', postingsEnum24, postingsEnum25);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain28 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test3518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3518");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", (long) 100, (long) 'a');
    }

    @Test
    public void test3519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3519");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.ensureCleanedUp();
        java.lang.String str11 = kuromojiAnalysisTests1.getTestName();
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule13 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.junit.Assert.assertNotNull("<unknown>", (java.lang.Object) kuromojiAnalysisTests1);
        org.apache.lucene.index.NumericDocValues numericDocValues19 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues20 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocValuesEquals("hi!", (int) '#', numericDocValues19, numericDocValues20);
    }

    @Test
    public void test3520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3520");
        java.lang.String[] strArray8 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet9 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray8);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests10 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests10.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet9, (java.lang.Object) kuromojiAnalysisTests10);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests14 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        kuromojiAnalysisTests14.assertFieldsEquals("europarl.lines.txt.gz", indexReader16, fields17, fields18, false);
        kuromojiAnalysisTests14.ensureCleanedUp();
        kuromojiAnalysisTests14.resetCheckIndexStatus();
        kuromojiAnalysisTests14.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        kuromojiAnalysisTests14.assertPositionsSkippingEquals("", indexReader25, (int) (byte) 0, postingsEnum27, postingsEnum28);
        org.junit.Assert.assertNotEquals((java.lang.Object) "tests.failfast", (java.lang.Object) kuromojiAnalysisTests14);
        org.junit.rules.RuleChain ruleChain31 = kuromojiAnalysisTests14.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests33 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader35 = null;
        org.apache.lucene.index.Fields fields36 = null;
        org.apache.lucene.index.Fields fields37 = null;
        kuromojiAnalysisTests33.assertFieldsEquals("europarl.lines.txt.gz", indexReader35, fields36, fields37, false);
        kuromojiAnalysisTests33.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain42 = kuromojiAnalysisTests33.failureAndSuccessEvents;
        kuromojiAnalysisTests33.resetCheckIndexStatus();
        kuromojiAnalysisTests33.assertPathHasBeenCleared("random");
        org.apache.lucene.index.IndexReader indexReader47 = null;
        org.apache.lucene.index.Terms terms48 = null;
        org.apache.lucene.index.Terms terms49 = null;
        kuromojiAnalysisTests33.assertTermsEquals("tests.failfast", indexReader47, terms48, terms49, true);
        org.junit.rules.TestRule testRule52 = kuromojiAnalysisTests33.ruleChain;
        org.junit.Assert.assertNotNull("tests.badapples", (java.lang.Object) kuromojiAnalysisTests33);
        org.apache.lucene.index.PostingsEnum postingsEnum55 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum56 = null;
        kuromojiAnalysisTests33.assertDocsEnumEquals("", postingsEnum55, postingsEnum56, true);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.weekly", (java.lang.Object) kuromojiAnalysisTests14, (java.lang.Object) "");
    }

    @Test
    public void test3521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3521");
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[][] throttlingArray0 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[][] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[][][] throttlingArray1 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[][][] { throttlingArray0 };
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling[][]> throttlingArraySet2 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray1);
        java.util.Locale locale4 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale6 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale8 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale10 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale12 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray13 = new java.util.Locale[] { locale4, locale6, locale8, locale10, locale12 };
        java.util.Set<java.util.Locale> localeSet14 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray13);
        java.util.Locale locale17 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale19 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale21 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale23 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale25 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray26 = new java.util.Locale[] { locale17, locale19, locale21, locale23, locale25 };
        java.util.Set<java.util.Locale> localeSet27 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray26);
        java.util.List<java.io.Serializable> serializableList28 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray26);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray13, (java.lang.Object[]) localeArray26);
        java.util.Locale locale33 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale35 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale37 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale39 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale41 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray42 = new java.util.Locale[] { locale33, locale35, locale37, locale39, locale41 };
        java.util.Set<java.util.Locale> localeSet43 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray42);
        java.util.List<java.io.Serializable> serializableList44 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray42);
        java.util.Set<java.lang.Cloneable> cloneableSet45 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray42);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray42, (java.lang.Object) (byte) -1);
        java.util.Locale locale50 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale52 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale54 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale56 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale58 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale50, locale52, locale54, locale56, locale58 };
        java.util.Set<java.util.Locale> localeSet60 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray59);
        java.util.Locale locale63 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale65 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale67 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale69 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale71 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray72 = new java.util.Locale[] { locale63, locale65, locale67, locale69, locale71 };
        java.util.Set<java.util.Locale> localeSet73 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray72);
        java.util.List<java.io.Serializable> serializableList74 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray72);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray59, (java.lang.Object[]) localeArray72);
        java.util.Locale locale78 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale80 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale82 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale84 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale86 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray87 = new java.util.Locale[] { locale78, locale80, locale82, locale84, locale86 };
        java.util.Set<java.util.Locale> localeSet88 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray87);
        java.util.List<java.io.Serializable> serializableList89 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray87);
        java.util.Set<java.lang.Cloneable> cloneableSet90 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray87);
        org.junit.Assert.assertArrayEquals("tests.slow", (java.lang.Object[]) localeArray72, (java.lang.Object[]) localeArray87);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", (java.lang.Object[]) localeArray42, (java.lang.Object[]) localeArray72);
        org.junit.Assert.assertEquals((java.lang.Object[]) localeArray26, (java.lang.Object[]) localeArray42);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray1, (java.lang.Object[]) localeArray26);
    }

    @Test
    public void test3522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3522");
        long[] longArray3 = new long[] { 1 };
        long[] longArray5 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray3, longArray5);
        long[] longArray9 = new long[] { 1 };
        long[] longArray11 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray9, longArray11);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", longArray5, longArray9);
        long[] longArray17 = new long[] { 1 };
        long[] longArray19 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray17, longArray19);
        long[] longArray24 = new long[] { 1 };
        long[] longArray26 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray24, longArray26);
        long[] longArray30 = new long[] { 1 };
        long[] longArray32 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray30, longArray32);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", longArray26, longArray30);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", longArray17, longArray30);
        org.junit.Assert.assertArrayEquals(longArray5, longArray17);
        long[] longArray40 = new long[] { 1 };
        long[] longArray42 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray40, longArray42);
        long[] longArray46 = new long[] { 1 };
        long[] longArray48 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray46, longArray48);
        org.junit.Assert.assertArrayEquals("random", longArray42, longArray48);
        org.junit.Assert.assertArrayEquals(longArray17, longArray48);
        long[] longArray55 = new long[] { 1 };
        long[] longArray57 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray55, longArray57);
        long[] longArray62 = new long[] { 1 };
        long[] longArray64 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray62, longArray64);
        long[] longArray68 = new long[] { 1 };
        long[] longArray70 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray68, longArray70);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", longArray64, longArray68);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", longArray55, longArray68);
        long[] longArray77 = new long[] { 1 };
        long[] longArray79 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray77, longArray79);
        long[] longArray83 = new long[] { 1 };
        long[] longArray85 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray83, longArray85);
        org.junit.Assert.assertArrayEquals("random", longArray79, longArray85);
        org.junit.Assert.assertArrayEquals(longArray55, longArray85);
        org.junit.Assert.assertArrayEquals(longArray17, longArray55);
        long[] longArray90 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(longArray55, longArray90);
    }

    @Test
    public void test3523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3523");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.failfast", indexReader8, 1, postingsEnum10, postingsEnum11);
        kuromojiAnalysisTests0.setIndexWriterMaxDocs(0);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("tests.slow", indexReader16, fields17, fields18, false);
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("<unknown>", indexReader22, (int) 'a', postingsEnum24, postingsEnum25);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        java.util.concurrent.ExecutorService executorService30 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray31 = new java.util.concurrent.ExecutorService[] { executorService30 };
        boolean boolean32 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray31);
        boolean boolean33 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray31);
        boolean boolean34 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray31);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) boolean34);
    }

    @Test
    public void test3524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3524");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) '4', (long) 4);
    }

    @Test
    public void test3525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3525");
        int[] intArray5 = new int[] { '#' };
        int[] intArray7 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray5, intArray7);
        int[] intArray10 = new int[] { '#' };
        int[] intArray12 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray10, intArray12);
        org.junit.Assert.assertArrayEquals("tests.badapples", intArray5, intArray10);
        int[] intArray17 = new int[] { '#' };
        int[] intArray19 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray17, intArray19);
        int[] intArray22 = new int[] { '#' };
        int[] intArray24 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray22, intArray24);
        org.junit.Assert.assertArrayEquals("tests.badapples", intArray17, intArray22);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", intArray5, intArray22);
        int[] intArray31 = new int[] { '#' };
        int[] intArray33 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray31, intArray33);
        int[] intArray36 = new int[] { '#' };
        int[] intArray38 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray36, intArray38);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray31, intArray36);
        int[] intArray43 = new int[] { '#' };
        int[] intArray45 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray43, intArray45);
        int[] intArray48 = new int[] { '#' };
        int[] intArray50 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray48, intArray50);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray43, intArray48);
        int[] intArray54 = new int[] { '#' };
        int[] intArray56 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray54, intArray56);
        org.junit.Assert.assertArrayEquals(intArray48, intArray54);
        org.junit.Assert.assertArrayEquals("tests.badapples", intArray36, intArray48);
        org.junit.Assert.assertArrayEquals("", intArray22, intArray48);
        int[] intArray62 = new int[] { 3 };
        // during test generation this statement threw an exception of type org.junit.internal.ArrayComparisonFailure in error
        org.junit.Assert.assertArrayEquals("<unknown>", intArray48, intArray62);
    }

    @Test
    public void test3526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3526");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.nightly", (java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test3527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3527");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (short) 10, (long) 4);
    }

    @Test
    public void test3528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3528");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.failfast", indexReader8, 1, postingsEnum10, postingsEnum11);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests17 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.Fields fields20 = null;
        org.apache.lucene.index.Fields fields21 = null;
        kuromojiAnalysisTests17.assertFieldsEquals("europarl.lines.txt.gz", indexReader19, fields20, fields21, false);
        kuromojiAnalysisTests17.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain26 = kuromojiAnalysisTests17.failureAndSuccessEvents;
        kuromojiAnalysisTests17.resetCheckIndexStatus();
        java.lang.String str28 = kuromojiAnalysisTests17.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests17);
        kuromojiAnalysisTests17.tearDown();
        kuromojiAnalysisTests17.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests17.ensureAllSearchContextsReleased();
        org.junit.rules.RuleChain ruleChain33 = null;
        kuromojiAnalysisTests17.failureAndSuccessEvents = ruleChain33;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests35 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader37 = null;
        org.apache.lucene.index.Fields fields38 = null;
        org.apache.lucene.index.Fields fields39 = null;
        kuromojiAnalysisTests35.assertFieldsEquals("europarl.lines.txt.gz", indexReader37, fields38, fields39, false);
        org.apache.lucene.index.IndexReader indexReader43 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum46 = null;
        kuromojiAnalysisTests35.assertPositionsSkippingEquals("hi!", indexReader43, (int) (byte) 0, postingsEnum45, postingsEnum46);
        kuromojiAnalysisTests35.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests35.ensureAllSearchContextsReleased();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests50 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader52 = null;
        org.apache.lucene.index.Fields fields53 = null;
        org.apache.lucene.index.Fields fields54 = null;
        kuromojiAnalysisTests50.assertFieldsEquals("europarl.lines.txt.gz", indexReader52, fields53, fields54, false);
        kuromojiAnalysisTests50.ensureCleanedUp();
        kuromojiAnalysisTests50.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests50.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain60 = kuromojiAnalysisTests50.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests35, (java.lang.Object) kuromojiAnalysisTests50);
        org.apache.lucene.index.PostingsEnum postingsEnum63 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum64 = null;
        kuromojiAnalysisTests35.assertDocsEnumEquals("tests.maxfailures", postingsEnum63, postingsEnum64, true);
        org.junit.rules.RuleChain ruleChain67 = kuromojiAnalysisTests35.failureAndSuccessEvents;
        kuromojiAnalysisTests17.failureAndSuccessEvents = ruleChain67;
        org.junit.rules.RuleChain ruleChain69 = kuromojiAnalysisTests17.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain69;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertPathHasBeenCleared("");
    }

    @Test
    public void test3529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3529");
        java.lang.String[] strArray8 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet9 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray8);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests10 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests10.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet9, (java.lang.Object) kuromojiAnalysisTests10);
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        kuromojiAnalysisTests10.assertDocsEnumEquals("tests.badapples", postingsEnum15, postingsEnum16, true);
        org.junit.rules.TestRule testRule19 = kuromojiAnalysisTests10.ruleChain;
        kuromojiAnalysisTests10.setUp();
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.Terms terms23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        kuromojiAnalysisTests10.assertTermsEquals("tests.badapples", indexReader22, terms23, terms24, false);
        kuromojiAnalysisTests10.ensureAllSearchContextsReleased();
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        kuromojiAnalysisTests10.assertDocsEnumEquals("europarl.lines.txt.gz", postingsEnum29, postingsEnum30, true);
        kuromojiAnalysisTests10.ensureCheckIndexPassed();
        kuromojiAnalysisTests10.ensureCheckIndexPassed();
        java.lang.String[] strArray42 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet43 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray42);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests44 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests44.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet43, (java.lang.Object) kuromojiAnalysisTests44);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests48 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader50 = null;
        org.apache.lucene.index.Fields fields51 = null;
        org.apache.lucene.index.Fields fields52 = null;
        kuromojiAnalysisTests48.assertFieldsEquals("europarl.lines.txt.gz", indexReader50, fields51, fields52, false);
        kuromojiAnalysisTests48.ensureCleanedUp();
        kuromojiAnalysisTests48.resetCheckIndexStatus();
        kuromojiAnalysisTests48.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader59 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum61 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum62 = null;
        kuromojiAnalysisTests48.assertPositionsSkippingEquals("", indexReader59, (int) (byte) 0, postingsEnum61, postingsEnum62);
        org.junit.Assert.assertNotEquals((java.lang.Object) "tests.failfast", (java.lang.Object) kuromojiAnalysisTests48);
        kuromojiAnalysisTests48.setUp();
        kuromojiAnalysisTests48.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests48.assertPathHasBeenCleared("random");
        kuromojiAnalysisTests48.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader71 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum73 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum74 = null;
        kuromojiAnalysisTests48.assertPositionsSkippingEquals("tests.awaitsfix", indexReader71, (int) (byte) 1, postingsEnum73, postingsEnum74);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("hi!", (java.lang.Object) kuromojiAnalysisTests10, (java.lang.Object) postingsEnum74);
    }

    @Test
    public void test3530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3530");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(0.0f, (float) (-1L), (float) (byte) 0);
    }

    @Test
    public void test3531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3531");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.badapples", (double) 1L, (double) (byte) 1, (double) 3);
    }

    @Test
    public void test3532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3532");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        java.lang.String[] strArray15 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet16 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray15);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests17 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests17.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet16, (java.lang.Object) kuromojiAnalysisTests17);
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        kuromojiAnalysisTests17.assertDocsEnumEquals("tests.badapples", postingsEnum22, postingsEnum23, true);
        org.junit.rules.TestRule testRule26 = kuromojiAnalysisTests17.ruleChain;
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        kuromojiAnalysisTests17.assertDocsSkippingEquals("tests.maxfailures", indexReader28, (int) (byte) 100, postingsEnum30, postingsEnum31, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.Fields fields37 = null;
        org.apache.lucene.index.Fields fields38 = null;
        kuromojiAnalysisTests34.assertFieldsEquals("europarl.lines.txt.gz", indexReader36, fields37, fields38, false);
        kuromojiAnalysisTests34.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain43 = kuromojiAnalysisTests34.failureAndSuccessEvents;
        kuromojiAnalysisTests17.failureAndSuccessEvents = ruleChain43;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain43;
        org.apache.lucene.index.PostingsEnum postingsEnum47 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum48 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("<unknown>", postingsEnum47, postingsEnum48, true);
        org.apache.lucene.index.IndexReader indexReader52 = null;
        org.apache.lucene.index.Terms terms53 = null;
        org.apache.lucene.index.Terms terms54 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.slow", indexReader52, terms53, terms54, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests57 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader59 = null;
        org.apache.lucene.index.Fields fields60 = null;
        org.apache.lucene.index.Fields fields61 = null;
        kuromojiAnalysisTests57.assertFieldsEquals("europarl.lines.txt.gz", indexReader59, fields60, fields61, false);
        org.apache.lucene.index.IndexReader indexReader65 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum67 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum68 = null;
        kuromojiAnalysisTests57.assertPositionsSkippingEquals("hi!", indexReader65, (int) (byte) 0, postingsEnum67, postingsEnum68);
        org.apache.lucene.index.IndexReader indexReader71 = null;
        org.apache.lucene.index.Terms terms72 = null;
        org.apache.lucene.index.Terms terms73 = null;
        kuromojiAnalysisTests57.assertTermsEquals("random", indexReader71, terms72, terms73, true);
        kuromojiAnalysisTests57.setUp();
        kuromojiAnalysisTests57.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests57.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule79 = kuromojiAnalysisTests57.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (java.lang.Object) indexReader52, (java.lang.Object) kuromojiAnalysisTests57);
    }

    @Test
    public void test3533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3533");
        int[][][][] intArray0 = new int[][][][] {};
        java.util.Set<int[][][]> intArraySet1 = org.apache.lucene.util.LuceneTestCase.asSet(intArray0);
        org.junit.rules.RuleChain[] ruleChainArray2 = new org.junit.rules.RuleChain[] {};
        org.junit.rules.RuleChain[][] ruleChainArray3 = new org.junit.rules.RuleChain[][] { ruleChainArray2 };
        java.util.Set<org.junit.rules.RuleChain[]> ruleChainArraySet4 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray3);
        java.util.Set<org.junit.rules.TestRule[]> testRuleArraySet5 = org.apache.lucene.util.LuceneTestCase.asSet((org.junit.rules.TestRule[][]) ruleChainArray3);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) intArray0, (java.lang.Object[]) ruleChainArray3);
    }

    @Test
    public void test3534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3534");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 'a', (double) 4);
    }

    @Test
    public void test3535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3535");
        long[] longArray3 = new long[] { 1 };
        long[] longArray5 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray3, longArray5);
        long[] longArray10 = new long[] { 1 };
        long[] longArray12 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray10, longArray12);
        long[] longArray16 = new long[] { 1 };
        long[] longArray18 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray16, longArray18);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", longArray12, longArray16);
        long[] longArray24 = new long[] { 1 };
        long[] longArray26 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray24, longArray26);
        long[] longArray30 = new long[] { 1 };
        long[] longArray32 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray30, longArray32);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", longArray26, longArray30);
        long[] longArray38 = new long[] { 1 };
        long[] longArray40 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray38, longArray40);
        long[] longArray45 = new long[] { 1 };
        long[] longArray47 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray45, longArray47);
        long[] longArray51 = new long[] { 1 };
        long[] longArray53 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray51, longArray53);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", longArray47, longArray51);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", longArray38, longArray51);
        org.junit.Assert.assertArrayEquals(longArray26, longArray38);
        org.junit.Assert.assertArrayEquals(longArray12, longArray38);
        org.junit.Assert.assertArrayEquals(longArray5, longArray38);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("<unknown>", (java.lang.Object) longArray5);
    }

    @Test
    public void test3536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3536");
        java.lang.String[] strArray2 = new java.lang.String[] {};
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.String[] strArray4 = new java.lang.String[] {};
        java.lang.String[] strArray5 = new java.lang.String[] {};
        java.lang.String[][] strArray6 = new java.lang.String[][] { strArray2, strArray3, strArray4, strArray5 };
        java.util.Set<java.lang.String[]> strArraySet7 = org.apache.lucene.util.LuceneTestCase.asSet(strArray6);
        java.util.List<java.lang.String[]> strArrayList8 = org.elasticsearch.test.ESTestCase.randomSubsetOf(3, strArray6);
        java.util.concurrent.ExecutorService[] executorServiceArray11 = new java.util.concurrent.ExecutorService[] {};
        java.util.concurrent.ExecutorService[] executorServiceArray12 = new java.util.concurrent.ExecutorService[] {};
        java.util.concurrent.ExecutorService[] executorServiceArray13 = new java.util.concurrent.ExecutorService[] {};
        java.util.concurrent.ExecutorService[] executorServiceArray14 = new java.util.concurrent.ExecutorService[] {};
        java.util.concurrent.ExecutorService[] executorServiceArray15 = new java.util.concurrent.ExecutorService[] {};
        java.util.concurrent.ExecutorService[] executorServiceArray16 = new java.util.concurrent.ExecutorService[] {};
        java.util.concurrent.ExecutorService[][] executorServiceArray17 = new java.util.concurrent.ExecutorService[][] { executorServiceArray11, executorServiceArray12, executorServiceArray13, executorServiceArray14, executorServiceArray15, executorServiceArray16 };
        java.util.List<java.util.concurrent.ExecutorService[]> executorServiceArrayList18 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 0, executorServiceArray17);
        java.util.Set<java.util.concurrent.ExecutorService[]> executorServiceArraySet19 = org.apache.lucene.util.LuceneTestCase.asSet(executorServiceArray17);
        java.util.Set<java.util.concurrent.ExecutorService[]> executorServiceArraySet20 = org.apache.lucene.util.LuceneTestCase.asSet(executorServiceArray17);
        int[][][][][][] intArray22 = new int[][][][][][] {};
        int[][][][][][] intArray23 = new int[][][][][][] {};
        int[][][][][][] intArray24 = new int[][][][][][] {};
        int[][][][][][] intArray25 = new int[][][][][][] {};
        int[][][][][][] intArray26 = new int[][][][][][] {};
        int[][][][][][] intArray27 = new int[][][][][][] {};
        int[][][][][][][] intArray28 = new int[][][][][][][] { intArray22, intArray23, intArray24, intArray25, intArray26, intArray27 };
        java.util.List<int[][][][][][]> intArrayList29 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (byte) 1, intArray28);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", (java.lang.Object[]) executorServiceArray17, (java.lang.Object[]) intArray28);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) strArray6, (java.lang.Object[]) intArray28);
    }

    @Test
    public void test3537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3537");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(1L, 100L);
    }

    @Test
    public void test3538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3538");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.junit.rules.RuleChain ruleChain11 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) ruleChain11);
    }

    @Test
    public void test3539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3539");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("hi!", indexReader11, 1, postingsEnum13, postingsEnum14);
        kuromojiAnalysisTests1.setUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests17 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.Fields fields20 = null;
        org.apache.lucene.index.Fields fields21 = null;
        kuromojiAnalysisTests17.assertFieldsEquals("europarl.lines.txt.gz", indexReader19, fields20, fields21, false);
        kuromojiAnalysisTests17.ensureCleanedUp();
        kuromojiAnalysisTests17.ensureCleanedUp();
        java.lang.String str26 = kuromojiAnalysisTests17.getTestName();
        org.junit.rules.RuleChain ruleChain27 = kuromojiAnalysisTests17.failureAndSuccessEvents;
        kuromojiAnalysisTests17.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotEquals("europarl.lines.txt.gz", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests17);
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocsAndPositionsEnumEquals("tests.nightly", postingsEnum31, postingsEnum32);
    }

    @Test
    public void test3540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3540");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests13 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Fields fields16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        kuromojiAnalysisTests13.assertFieldsEquals("europarl.lines.txt.gz", indexReader15, fields16, fields17, false);
        kuromojiAnalysisTests13.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain22 = kuromojiAnalysisTests13.failureAndSuccessEvents;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain22;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain22;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain22;
        kuromojiAnalysisTests1.tearDown();
        java.lang.String str27 = kuromojiAnalysisTests1.getTestName();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("<unknown>", (java.lang.Object) str27);
    }

    @Test
    public void test3541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3541");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (short) 1, (long) (-1));
    }

    @Test
    public void test3542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3542");
        int[] intArray1 = new int[] { (byte) 10 };
        int[] intArray3 = new int[] { (byte) 10 };
        int[] intArray5 = new int[] { (byte) 10 };
        int[] intArray7 = new int[] { (byte) 10 };
        int[][] intArray8 = new int[][] { intArray1, intArray3, intArray5, intArray7 };
        int[] intArray10 = new int[] { (byte) 10 };
        int[] intArray12 = new int[] { (byte) 10 };
        int[] intArray14 = new int[] { (byte) 10 };
        int[] intArray16 = new int[] { (byte) 10 };
        int[][] intArray17 = new int[][] { intArray10, intArray12, intArray14, intArray16 };
        int[] intArray19 = new int[] { (byte) 10 };
        int[] intArray21 = new int[] { (byte) 10 };
        int[] intArray23 = new int[] { (byte) 10 };
        int[] intArray25 = new int[] { (byte) 10 };
        int[][] intArray26 = new int[][] { intArray19, intArray21, intArray23, intArray25 };
        int[] intArray28 = new int[] { (byte) 10 };
        int[] intArray30 = new int[] { (byte) 10 };
        int[] intArray32 = new int[] { (byte) 10 };
        int[] intArray34 = new int[] { (byte) 10 };
        int[][] intArray35 = new int[][] { intArray28, intArray30, intArray32, intArray34 };
        int[][][] intArray36 = new int[][][] { intArray8, intArray17, intArray26, intArray35 };
        java.util.Set<int[][]> intArraySet37 = org.apache.lucene.util.LuceneTestCase.asSet(intArray36);
        java.util.Set<int[][]> intArraySet38 = org.apache.lucene.util.LuceneTestCase.asSet(intArray36);
        org.junit.Assert.assertNotNull((java.lang.Object) intArray36);
        java.lang.Iterable[][] iterableArray41 = new java.lang.Iterable[0][];
        @SuppressWarnings("unchecked")
        java.lang.Iterable<java.util.Locale>[][] localeIterableArray42 = (java.lang.Iterable<java.util.Locale>[][]) iterableArray41;
        java.util.Set<java.lang.Iterable<java.util.Locale>[]> localeIterableArraySet43 = org.apache.lucene.util.LuceneTestCase.asSet(localeIterableArray42);
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray45 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet46 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray45);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests47 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader49 = null;
        org.apache.lucene.index.Fields fields50 = null;
        org.apache.lucene.index.Fields fields51 = null;
        kuromojiAnalysisTests47.assertFieldsEquals("europarl.lines.txt.gz", indexReader49, fields50, fields51, false);
        org.apache.lucene.index.IndexReader indexReader55 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum57 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum58 = null;
        kuromojiAnalysisTests47.assertPositionsSkippingEquals("tests.failfast", indexReader55, 1, postingsEnum57, postingsEnum58);
        kuromojiAnalysisTests47.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests47.ensureCleanedUp();
        kuromojiAnalysisTests47.resetCheckIndexStatus();
        kuromojiAnalysisTests47.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader66 = null;
        org.apache.lucene.index.Fields fields67 = null;
        org.apache.lucene.index.Fields fields68 = null;
        kuromojiAnalysisTests47.assertFieldsEquals("enwiki.random.lines.txt", indexReader66, fields67, fields68, false);
        org.apache.lucene.index.IndexReader indexReader72 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum74 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum75 = null;
        kuromojiAnalysisTests47.assertDocsSkippingEquals("tests.weekly", indexReader72, (int) (byte) 0, postingsEnum74, postingsEnum75, true);
        org.junit.Assert.assertNotSame("tests.weekly", (java.lang.Object) genericDeclarationArray45, (java.lang.Object) "tests.weekly");
        java.util.concurrent.ExecutorService[] executorServiceArray79 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean80 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray79);
        org.junit.Assert.assertEquals((java.lang.Object[]) genericDeclarationArray45, (java.lang.Object[]) executorServiceArray79);
        org.junit.Assert.assertEquals((java.lang.Object[]) localeIterableArray42, (java.lang.Object[]) genericDeclarationArray45);
        java.util.Set<java.lang.reflect.AnnotatedElement[]> annotatedElementArraySet83 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.reflect.AnnotatedElement[][]) genericDeclarationArray45);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) intArray36, (java.lang.Object[]) genericDeclarationArray45);
    }

    @Test
    public void test3543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3543");
        java.util.Locale locale3 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale5 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale7 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale9 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale11 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray12 = new java.util.Locale[] { locale3, locale5, locale7, locale9, locale11 };
        java.util.Set<java.util.Locale> localeSet13 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray12);
        java.util.Locale locale16 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale18 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale20 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale22 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale24 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray25 = new java.util.Locale[] { locale16, locale18, locale20, locale22, locale24 };
        java.util.Set<java.util.Locale> localeSet26 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray25);
        java.util.List<java.io.Serializable> serializableList27 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray25);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray12, (java.lang.Object[]) localeArray25);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests29 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.Fields fields32 = null;
        org.apache.lucene.index.Fields fields33 = null;
        kuromojiAnalysisTests29.assertFieldsEquals("europarl.lines.txt.gz", indexReader31, fields32, fields33, false);
        kuromojiAnalysisTests29.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain38 = kuromojiAnalysisTests29.failureAndSuccessEvents;
        kuromojiAnalysisTests29.setUp();
        java.util.Locale locale42 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale44 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale46 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale48 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale50 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray51 = new java.util.Locale[] { locale42, locale44, locale46, locale48, locale50 };
        java.util.Set<java.util.Locale> localeSet52 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray51);
        java.util.Locale locale55 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale57 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale59 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale61 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale63 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray64 = new java.util.Locale[] { locale55, locale57, locale59, locale61, locale63 };
        java.util.Set<java.util.Locale> localeSet65 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray64);
        java.util.List<java.io.Serializable> serializableList66 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray64);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray51, (java.lang.Object[]) localeArray64);
        java.util.Locale locale70 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale72 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale74 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale76 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale78 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray79 = new java.util.Locale[] { locale70, locale72, locale74, locale76, locale78 };
        java.util.Set<java.util.Locale> localeSet80 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray79);
        java.util.List<java.io.Serializable> serializableList81 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray79);
        java.util.Set<java.lang.Cloneable> cloneableSet82 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray79);
        org.junit.Assert.assertArrayEquals("tests.slow", (java.lang.Object[]) localeArray64, (java.lang.Object[]) localeArray79);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests29, (java.lang.Object) localeArray79);
        org.junit.Assert.assertEquals("random", (java.lang.Object[]) localeArray12, (java.lang.Object[]) localeArray79);
        int[][] intArray86 = new int[][] {};
        java.util.Set<int[]> intArraySet87 = org.apache.lucene.util.LuceneTestCase.asSet(intArray86);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("enwiki.random.lines.txt", (java.lang.Object[]) localeArray12, (java.lang.Object[]) intArray86);
    }

    @Test
    public void test3544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3544");
        java.util.concurrent.ExecutorService[] executorServiceArray0 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean1 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray0);
        boolean boolean2 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray0);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests3 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests3.setIndexWriterMaxDocs((int) (byte) 10);
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        org.apache.lucene.index.Terms terms9 = null;
        kuromojiAnalysisTests3.assertTermsEquals("tests.weekly", indexReader7, terms8, terms9, true);
        kuromojiAnalysisTests3.setIndexWriterMaxDocs((int) '#');
        kuromojiAnalysisTests3.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests3.ensureCheckIndexPassed();
        kuromojiAnalysisTests3.setUp();
        kuromojiAnalysisTests3.resetCheckIndexStatus();
        org.junit.Assert.assertNotSame((java.lang.Object) boolean2, (java.lang.Object) kuromojiAnalysisTests3);
        kuromojiAnalysisTests3.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests3.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        kuromojiAnalysisTests3.assertDocsEnumEquals("", postingsEnum22, postingsEnum23, false);
        java.lang.Object obj26 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests28 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.Fields fields31 = null;
        org.apache.lucene.index.Fields fields32 = null;
        kuromojiAnalysisTests28.assertFieldsEquals("europarl.lines.txt.gz", indexReader30, fields31, fields32, false);
        kuromojiAnalysisTests28.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain37 = kuromojiAnalysisTests28.failureAndSuccessEvents;
        kuromojiAnalysisTests28.resetCheckIndexStatus();
        java.lang.String str39 = kuromojiAnalysisTests28.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests28);
        kuromojiAnalysisTests28.tearDown();
        kuromojiAnalysisTests28.overrideTestDefaultQueryCache();
        org.junit.Assert.assertNotSame(obj26, (java.lang.Object) kuromojiAnalysisTests28);
        kuromojiAnalysisTests28.ensureCleanedUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) postingsEnum22, (java.lang.Object) kuromojiAnalysisTests28);
    }

    @Test
    public void test3545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3545");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.failfast", indexReader8, 1, postingsEnum10, postingsEnum11);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.tearDown();
        org.junit.rules.TestRule testRule15 = kuromojiAnalysisTests0.ruleChain;
        org.junit.rules.RuleChain ruleChain16 = null;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain16;
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.Fields fields20 = null;
        org.apache.lucene.index.Fields fields21 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("tests.awaitsfix", indexReader19, fields20, fields21, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests24 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Fields fields27 = null;
        org.apache.lucene.index.Fields fields28 = null;
        kuromojiAnalysisTests24.assertFieldsEquals("europarl.lines.txt.gz", indexReader26, fields27, fields28, false);
        kuromojiAnalysisTests24.ensureCleanedUp();
        kuromojiAnalysisTests24.assertPathHasBeenCleared("tests.failfast");
        org.apache.lucene.index.IndexReader indexReader35 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum37 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        kuromojiAnalysisTests24.assertPositionsSkippingEquals("tests.slow", indexReader35, (int) (short) 10, postingsEnum37, postingsEnum38);
        org.apache.lucene.index.IndexReader indexReader41 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum43 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum44 = null;
        kuromojiAnalysisTests24.assertDocsSkippingEquals("<unknown>", indexReader41, (-1), postingsEnum43, postingsEnum44, false);
        org.apache.lucene.index.IndexReader indexReader48 = null;
        org.apache.lucene.index.Terms terms49 = null;
        org.apache.lucene.index.Terms terms50 = null;
        kuromojiAnalysisTests24.assertTermsEquals("tests.failfast", indexReader48, terms49, terms50, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) terms49);
    }

    @Test
    public void test3546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3546");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (short) 0, (double) 100.0f, (double) 2);
    }

    @Test
    public void test3547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3547");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (long) 'a', (long) (byte) 1);
    }

    @Test
    public void test3548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3548");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("hi!", indexReader9, (int) (byte) 0, postingsEnum11, postingsEnum12);
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests1.assertTermsEquals("random", indexReader15, terms16, terms17, true);
        kuromojiAnalysisTests1.setUp();
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.failfast", indexReader22, (int) '4', postingsEnum24, postingsEnum25);
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.Terms terms30 = null;
        org.apache.lucene.index.Terms terms31 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.slow", indexReader29, terms30, terms31, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.Fields fields37 = null;
        org.apache.lucene.index.Fields fields38 = null;
        kuromojiAnalysisTests34.assertFieldsEquals("random", indexReader36, fields37, fields38, true);
        org.apache.lucene.index.IndexReader indexReader42 = null;
        org.apache.lucene.index.Fields fields43 = null;
        org.apache.lucene.index.Fields fields44 = null;
        kuromojiAnalysisTests34.assertFieldsEquals("enwiki.random.lines.txt", indexReader42, fields43, fields44, false);
        kuromojiAnalysisTests34.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests34.ensureCleanedUp();
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests34);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests34);
    }

    @Test
    public void test3549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3549");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.PostingsEnum postingsEnum3 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum4 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("", postingsEnum3, postingsEnum4, false);
        org.junit.rules.TestRule testRule7 = kuromojiAnalysisTests1.ruleChain;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests8 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Fields fields11 = null;
        org.apache.lucene.index.Fields fields12 = null;
        kuromojiAnalysisTests8.assertFieldsEquals("europarl.lines.txt.gz", indexReader10, fields11, fields12, false);
        kuromojiAnalysisTests8.ensureCleanedUp();
        kuromojiAnalysisTests8.assertPathHasBeenCleared("tests.failfast");
        kuromojiAnalysisTests8.tearDown();
        org.junit.Assert.assertNotEquals("europarl.lines.txt.gz", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests8);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("europarl.lines.txt.gz");
        org.apache.lucene.index.NumericDocValues numericDocValues24 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues25 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocValuesEquals("tests.slow", (-1), numericDocValues24, numericDocValues25);
    }

    @Test
    public void test3550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3550");
        char[] charArray1 = null;
        char[] charArray3 = new char[] {};
        char[] charArray4 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray3, charArray4);
        char[] charArray6 = new char[] {};
        char[] charArray7 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray6, charArray7);
        org.junit.Assert.assertArrayEquals(charArray4, charArray7);
        char[] charArray12 = new char[] {};
        char[] charArray13 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray12, charArray13);
        char[] charArray15 = new char[] {};
        char[] charArray16 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray15, charArray16);
        char[] charArray18 = new char[] {};
        char[] charArray19 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray18, charArray19);
        org.junit.Assert.assertArrayEquals(charArray16, charArray19);
        org.junit.Assert.assertArrayEquals("random", charArray13, charArray16);
        char[] charArray23 = new char[] {};
        char[] charArray24 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray23, charArray24);
        char[] charArray26 = new char[] {};
        char[] charArray27 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray26, charArray27);
        org.junit.Assert.assertArrayEquals(charArray24, charArray27);
        org.junit.Assert.assertArrayEquals(charArray13, charArray24);
        char[] charArray33 = new char[] {};
        char[] charArray34 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray33, charArray34);
        char[] charArray36 = new char[] {};
        char[] charArray37 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray36, charArray37);
        char[] charArray39 = new char[] {};
        char[] charArray40 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray39, charArray40);
        org.junit.Assert.assertArrayEquals(charArray37, charArray40);
        char[] charArray43 = new char[] {};
        char[] charArray44 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray43, charArray44);
        org.junit.Assert.assertArrayEquals(charArray37, charArray44);
        org.junit.Assert.assertArrayEquals("tests.slow", charArray34, charArray44);
        char[] charArray48 = new char[] {};
        char[] charArray49 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray48, charArray49);
        char[] charArray51 = new char[] {};
        char[] charArray52 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray51, charArray52);
        org.junit.Assert.assertArrayEquals(charArray48, charArray52);
        org.junit.Assert.assertArrayEquals("tests.badapples", charArray34, charArray52);
        char[] charArray58 = new char[] {};
        char[] charArray59 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray58, charArray59);
        char[] charArray61 = new char[] {};
        char[] charArray62 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray61, charArray62);
        org.junit.Assert.assertArrayEquals(charArray59, charArray62);
        char[] charArray65 = new char[] {};
        char[] charArray66 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray65, charArray66);
        char[] charArray68 = new char[] {};
        char[] charArray69 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray68, charArray69);
        org.junit.Assert.assertArrayEquals(charArray66, charArray69);
        org.junit.Assert.assertArrayEquals("tests.monster", charArray62, charArray69);
        char[] charArray74 = new char[] {};
        char[] charArray75 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray74, charArray75);
        char[] charArray77 = new char[] {};
        char[] charArray78 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray77, charArray78);
        char[] charArray80 = new char[] {};
        char[] charArray81 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray80, charArray81);
        org.junit.Assert.assertArrayEquals(charArray78, charArray81);
        org.junit.Assert.assertArrayEquals("random", charArray75, charArray78);
        org.junit.Assert.assertArrayEquals("tests.badapples", charArray69, charArray78);
        org.junit.Assert.assertArrayEquals(charArray52, charArray78);
        org.junit.Assert.assertArrayEquals("tests.failfast", charArray13, charArray52);
        org.junit.Assert.assertArrayEquals(charArray7, charArray52);
        org.junit.Assert.assertNotNull("", (java.lang.Object) charArray7);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", charArray1, charArray7);
    }

    @Test
    public void test3551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3551");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("hi!", indexReader8, (int) (byte) 0, postingsEnum10, postingsEnum11);
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests0.assertTermsEquals("random", indexReader14, terms15, terms16, true);
        kuromojiAnalysisTests0.setUp();
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.nightly", postingsEnum21, postingsEnum22, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests25 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.Fields fields28 = null;
        org.apache.lucene.index.Fields fields29 = null;
        kuromojiAnalysisTests25.assertFieldsEquals("europarl.lines.txt.gz", indexReader27, fields28, fields29, false);
        kuromojiAnalysisTests25.assertPathHasBeenCleared("tests.slow");
        kuromojiAnalysisTests25.assertPathHasBeenCleared("tests.slow");
        kuromojiAnalysisTests25.ensureCleanedUp();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests25);
        long[] longArray41 = new long[] { 1 };
        long[] longArray43 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray41, longArray43);
        long[] longArray47 = new long[] { 1 };
        long[] longArray49 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray47, longArray49);
        org.junit.Assert.assertArrayEquals("random", longArray43, longArray49);
        long[] longArray55 = new long[] { 1 };
        long[] longArray57 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray55, longArray57);
        long[] longArray62 = new long[] { 1 };
        long[] longArray64 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray62, longArray64);
        long[] longArray68 = new long[] { 1 };
        long[] longArray70 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray68, longArray70);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", longArray64, longArray68);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", longArray55, longArray68);
        org.junit.Assert.assertArrayEquals(longArray49, longArray55);
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) longArray55);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests76 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader78 = null;
        org.apache.lucene.index.Fields fields79 = null;
        org.apache.lucene.index.Fields fields80 = null;
        kuromojiAnalysisTests76.assertFieldsEquals("europarl.lines.txt.gz", indexReader78, fields79, fields80, false);
        kuromojiAnalysisTests76.assertPathHasBeenCleared("tests.slow");
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests76);
        org.apache.lucene.index.IndexReader indexReader87 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum89 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum90 = null;
        kuromojiAnalysisTests76.assertPositionsSkippingEquals("tests.maxfailures", indexReader87, (-1), postingsEnum89, postingsEnum90);
        org.apache.lucene.index.PostingsEnum postingsEnum93 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum94 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests76.assertDocsAndPositionsEnumEquals("tests.slow", postingsEnum93, postingsEnum94);
    }

    @Test
    public void test3552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3552");
        java.util.concurrent.ExecutorService[] executorServiceArray1 = new java.util.concurrent.ExecutorService[] {};
        java.util.concurrent.ExecutorService[] executorServiceArray2 = new java.util.concurrent.ExecutorService[] {};
        java.util.concurrent.ExecutorService[] executorServiceArray3 = new java.util.concurrent.ExecutorService[] {};
        java.util.concurrent.ExecutorService[] executorServiceArray4 = new java.util.concurrent.ExecutorService[] {};
        java.util.concurrent.ExecutorService[] executorServiceArray5 = new java.util.concurrent.ExecutorService[] {};
        java.util.concurrent.ExecutorService[] executorServiceArray6 = new java.util.concurrent.ExecutorService[] {};
        java.util.concurrent.ExecutorService[][] executorServiceArray7 = new java.util.concurrent.ExecutorService[][] { executorServiceArray1, executorServiceArray2, executorServiceArray3, executorServiceArray4, executorServiceArray5, executorServiceArray6 };
        java.util.List<java.util.concurrent.ExecutorService[]> executorServiceArrayList8 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 0, executorServiceArray7);
        java.util.Set<java.util.concurrent.ExecutorService[]> executorServiceArraySet9 = org.apache.lucene.util.LuceneTestCase.asSet(executorServiceArray7);
        java.util.Locale locale12 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale14 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale16 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale18 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale20 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray21 = new java.util.Locale[] { locale12, locale14, locale16, locale18, locale20 };
        java.util.Set<java.util.Locale> localeSet22 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray21);
        java.util.List<java.io.Serializable> serializableList23 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray21);
        java.util.Set<java.lang.Cloneable> cloneableSet24 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray21);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray21, (java.lang.Object) (byte) -1);
        java.util.Locale locale29 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale31 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale33 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale35 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale37 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray38 = new java.util.Locale[] { locale29, locale31, locale33, locale35, locale37 };
        java.util.Set<java.util.Locale> localeSet39 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray38);
        java.util.List<java.io.Serializable> serializableList40 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray38);
        java.util.Set<java.lang.Cloneable> cloneableSet41 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray38);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray38, (java.lang.Object) (byte) -1);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray21, (java.lang.Object[]) localeArray38);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray7, (java.lang.Object[]) localeArray38);
    }

    @Test
    public void test3553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3553");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) 3, (float) (short) 100, (float) ' ');
    }

    @Test
    public void test3554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3554");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (short) 1, (double) '#');
    }

    @Test
    public void test3555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3555");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) 100, (long) 4);
    }

    @Test
    public void test3556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3556");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) ' ', (double) 0.0f);
    }

    @Test
    public void test3557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3557");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.slow", indexReader11, (int) (short) -1, postingsEnum13, postingsEnum14, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests19 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.Fields fields22 = null;
        org.apache.lucene.index.Fields fields23 = null;
        kuromojiAnalysisTests19.assertFieldsEquals("europarl.lines.txt.gz", indexReader21, fields22, fields23, false);
        kuromojiAnalysisTests19.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain28 = kuromojiAnalysisTests19.failureAndSuccessEvents;
        kuromojiAnalysisTests19.resetCheckIndexStatus();
        kuromojiAnalysisTests19.restoreIndexWriterMaxDocs();
        org.junit.rules.TestRule testRule31 = kuromojiAnalysisTests19.ruleChain;
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests19);
        org.junit.rules.RuleChain ruleChain33 = kuromojiAnalysisTests19.failureAndSuccessEvents;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain33;
        org.junit.Assert.assertNotNull((java.lang.Object) ruleChain33);
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain33;
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum39 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("", postingsEnum38, postingsEnum39);
    }

    @Test
    public void test3558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3558");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.ensureCleanedUp();
        java.lang.String str9 = kuromojiAnalysisTests0.getTestName();
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.Fields fields13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("tests.weekly", indexReader12, fields13, fields14, true);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("hi!", postingsEnum20, postingsEnum21);
    }

    @Test
    public void test3559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3559");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet2 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray1);
        int[][][][] intArray5 = new int[][][][] {};
        int[][][][] intArray6 = new int[][][][] {};
        int[][][][] intArray7 = new int[][][][] {};
        int[][][][] intArray8 = new int[][][][] {};
        int[][][][] intArray9 = new int[][][][] {};
        int[][][][][] intArray10 = new int[][][][][] { intArray5, intArray6, intArray7, intArray8, intArray9 };
        int[][][][] intArray11 = new int[][][][] {};
        int[][][][] intArray12 = new int[][][][] {};
        int[][][][] intArray13 = new int[][][][] {};
        int[][][][] intArray14 = new int[][][][] {};
        int[][][][] intArray15 = new int[][][][] {};
        int[][][][][] intArray16 = new int[][][][][] { intArray11, intArray12, intArray13, intArray14, intArray15 };
        int[][][][][][] intArray17 = new int[][][][][][] { intArray10, intArray16 };
        java.util.List<int[][][][][]> intArrayList18 = org.elasticsearch.test.ESTestCase.randomSubsetOf(0, intArray17);
        java.util.List<int[][][][][]> intArrayList19 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (byte) 0, intArray17);
        java.util.Set<int[][][][][]> intArraySet20 = org.apache.lucene.util.LuceneTestCase.asSet(intArray17);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) strArray1, (java.lang.Object[]) intArray17);
    }

    @Test
    public void test3560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3560");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("enwiki.random.lines.txt", (double) 0L, (double) 10.0f);
    }

    @Test
    public void test3561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3561");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.slow");
        kuromojiAnalysisTests0.setUp();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.nightly", indexReader11, terms12, terms13, false);
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests17 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.Fields fields20 = null;
        org.apache.lucene.index.Fields fields21 = null;
        kuromojiAnalysisTests17.assertFieldsEquals("europarl.lines.txt.gz", indexReader19, fields20, fields21, false);
        kuromojiAnalysisTests17.tearDown();
        org.junit.rules.RuleChain ruleChain25 = kuromojiAnalysisTests17.failureAndSuccessEvents;
        kuromojiAnalysisTests17.setIndexWriterMaxDocs((int) (byte) -1);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests17);
        org.junit.rules.RuleChain ruleChain29 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests31 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader33 = null;
        org.apache.lucene.index.Fields fields34 = null;
        org.apache.lucene.index.Fields fields35 = null;
        kuromojiAnalysisTests31.assertFieldsEquals("europarl.lines.txt.gz", indexReader33, fields34, fields35, false);
        kuromojiAnalysisTests31.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain40 = kuromojiAnalysisTests31.failureAndSuccessEvents;
        kuromojiAnalysisTests31.resetCheckIndexStatus();
        java.lang.String str42 = kuromojiAnalysisTests31.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests31);
        kuromojiAnalysisTests31.tearDown();
        kuromojiAnalysisTests31.setUp();
        org.apache.lucene.index.IndexReader indexReader47 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum49 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum50 = null;
        kuromojiAnalysisTests31.assertPositionsSkippingEquals("", indexReader47, (int) '#', postingsEnum49, postingsEnum50);
        org.apache.lucene.index.IndexReader indexReader53 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum55 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum56 = null;
        kuromojiAnalysisTests31.assertPositionsSkippingEquals("tests.weekly", indexReader53, (int) (short) 10, postingsEnum55, postingsEnum56);
        java.lang.String str58 = kuromojiAnalysisTests31.getTestName();
        org.junit.rules.RuleChain ruleChain59 = null;
        kuromojiAnalysisTests31.failureAndSuccessEvents = ruleChain59;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) ruleChain29, (java.lang.Object) kuromojiAnalysisTests31);
    }

    @Test
    public void test3562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3562");
        java.lang.String[] strArray1 = new java.lang.String[] {};
        java.lang.String[] strArray2 = new java.lang.String[] {};
        java.lang.String[] strArray3 = new java.lang.String[] {};
        java.lang.String[] strArray4 = new java.lang.String[] {};
        java.lang.String[][] strArray5 = new java.lang.String[][] { strArray1, strArray2, strArray3, strArray4 };
        java.util.Set<java.lang.String[]> strArraySet6 = org.apache.lucene.util.LuceneTestCase.asSet(strArray5);
        java.util.Set<java.lang.String[]> strArraySet7 = org.apache.lucene.util.LuceneTestCase.asSet(strArray5);
        java.lang.Object[] objArray8 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (java.lang.Object[]) strArray5, objArray8);
    }

    @Test
    public void test3563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3563");
        byte[] byteArray3 = new byte[] { (byte) 1, (byte) 10, (byte) 1 };
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray7 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray6, byteArray7);
        byte[] byteArray10 = new byte[] {};
        byte[] byteArray11 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray10, byteArray11);
        org.junit.Assert.assertArrayEquals(byteArray7, byteArray11);
        byte[] byteArray16 = new byte[] {};
        byte[] byteArray17 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray16, byteArray17);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray22 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray21, byteArray22);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray26 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray25, byteArray26);
        org.junit.Assert.assertArrayEquals(byteArray22, byteArray26);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray31 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray30, byteArray31);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray35 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray34, byteArray35);
        org.junit.Assert.assertArrayEquals(byteArray31, byteArray35);
        org.junit.Assert.assertArrayEquals("tests.nightly", byteArray26, byteArray35);
        org.junit.Assert.assertArrayEquals(byteArray17, byteArray26);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray42 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray41, byteArray42);
        org.junit.Assert.assertArrayEquals("tests.nightly", byteArray26, byteArray42);
        org.junit.Assert.assertArrayEquals(byteArray7, byteArray26);
        byte[] byteArray47 = new byte[] {};
        byte[] byteArray48 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray47, byteArray48);
        byte[] byteArray51 = new byte[] {};
        byte[] byteArray52 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray51, byteArray52);
        org.junit.Assert.assertArrayEquals(byteArray47, byteArray52);
        org.junit.Assert.assertArrayEquals(byteArray7, byteArray47);
        byte[] byteArray57 = new byte[] {};
        byte[] byteArray58 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray57, byteArray58);
        byte[] byteArray61 = new byte[] {};
        byte[] byteArray62 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray61, byteArray62);
        org.junit.Assert.assertArrayEquals(byteArray58, byteArray62);
        byte[] byteArray67 = new byte[] {};
        byte[] byteArray68 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray67, byteArray68);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray73 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray72, byteArray73);
        byte[] byteArray76 = new byte[] {};
        byte[] byteArray77 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray76, byteArray77);
        org.junit.Assert.assertArrayEquals(byteArray73, byteArray77);
        byte[] byteArray81 = new byte[] {};
        byte[] byteArray82 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray81, byteArray82);
        byte[] byteArray85 = new byte[] {};
        byte[] byteArray86 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray85, byteArray86);
        org.junit.Assert.assertArrayEquals(byteArray82, byteArray86);
        org.junit.Assert.assertArrayEquals("tests.nightly", byteArray77, byteArray86);
        org.junit.Assert.assertArrayEquals(byteArray68, byteArray77);
        byte[] byteArray92 = new byte[] {};
        byte[] byteArray93 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray92, byteArray93);
        org.junit.Assert.assertArrayEquals("tests.nightly", byteArray77, byteArray93);
        org.junit.Assert.assertArrayEquals(byteArray58, byteArray77);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", byteArray7, byteArray77);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(byteArray3, byteArray7);
    }

    @Test
    public void test3564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3564");
        double[] doubleArray5 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray10 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray5, doubleArray10, (double) (byte) 100);
        double[] doubleArray19 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray24 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray19, doubleArray24, (double) (byte) 100);
        double[] doubleArray32 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray37 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray32, doubleArray37, (double) (byte) 100);
        org.junit.Assert.assertArrayEquals("", doubleArray19, doubleArray32, (double) 0);
        double[] doubleArray47 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray52 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray47, doubleArray52, (double) (byte) 100);
        org.junit.Assert.assertArrayEquals(doubleArray32, doubleArray47, 0.0d);
        // during test generation this statement threw an exception of type org.junit.internal.ArrayComparisonFailure in error
        org.junit.Assert.assertArrayEquals(doubleArray10, doubleArray32, (double) '4');
    }

    @Test
    public void test3565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3565");
        java.util.concurrent.ExecutorService executorService1 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray2 = new java.util.concurrent.ExecutorService[] { executorService1 };
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests5 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.Fields fields8 = null;
        org.apache.lucene.index.Fields fields9 = null;
        kuromojiAnalysisTests5.assertFieldsEquals("europarl.lines.txt.gz", indexReader7, fields8, fields9, false);
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        kuromojiAnalysisTests5.assertPositionsSkippingEquals("tests.failfast", indexReader13, 1, postingsEnum15, postingsEnum16);
        kuromojiAnalysisTests5.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests5.setUp();
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray21 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray22 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray23 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[][] throttlingArray24 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[][] { throttlingArray21, throttlingArray22, throttlingArray23 };
        java.util.List<org.apache.lucene.store.MockDirectoryWrapper.Throttling[]> throttlingArrayList25 = org.elasticsearch.test.ESTestCase.randomSubsetOf(0, throttlingArray24);
        org.junit.Assert.assertNotSame("tests.nightly", (java.lang.Object) kuromojiAnalysisTests5, (java.lang.Object) throttlingArray24);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.maxfailures", (java.lang.Object[]) executorServiceArray2, (java.lang.Object[]) throttlingArray24);
    }

    @Test
    public void test3566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3566");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        java.lang.String[] strArray14 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet15 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray14);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests16 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests16.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet15, (java.lang.Object) kuromojiAnalysisTests16);
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        kuromojiAnalysisTests16.assertDocsEnumEquals("tests.badapples", postingsEnum21, postingsEnum22, true);
        org.junit.rules.TestRule testRule25 = kuromojiAnalysisTests16.ruleChain;
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        kuromojiAnalysisTests16.assertDocsSkippingEquals("tests.maxfailures", indexReader27, (int) (byte) 100, postingsEnum29, postingsEnum30, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests33 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader35 = null;
        org.apache.lucene.index.Fields fields36 = null;
        org.apache.lucene.index.Fields fields37 = null;
        kuromojiAnalysisTests33.assertFieldsEquals("europarl.lines.txt.gz", indexReader35, fields36, fields37, false);
        kuromojiAnalysisTests33.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain42 = kuromojiAnalysisTests33.failureAndSuccessEvents;
        kuromojiAnalysisTests16.failureAndSuccessEvents = ruleChain42;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain42;
        org.apache.lucene.index.PostingsEnum postingsEnum46 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum47 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("<unknown>", postingsEnum46, postingsEnum47, true);
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (short) 10);
        org.apache.lucene.index.IndexReader indexReader53 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum55 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum56 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.failfast", indexReader53, (int) ' ', postingsEnum55, postingsEnum56, false);
        java.lang.String str59 = kuromojiAnalysisTests0.getTestName();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test3567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3567");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (short) 0, (double) ' ');
    }

    @Test
    public void test3568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3568");
        java.lang.Object obj0 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("europarl.lines.txt.gz", indexReader4, fields5, fields6, false);
        kuromojiAnalysisTests2.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain11 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        java.lang.String str13 = kuromojiAnalysisTests2.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests2);
        kuromojiAnalysisTests2.tearDown();
        kuromojiAnalysisTests2.setUp();
        org.apache.lucene.index.IndexReader indexReader18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("", indexReader18, (int) '#', postingsEnum20, postingsEnum21);
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("tests.weekly", indexReader24, (int) (short) 10, postingsEnum26, postingsEnum27);
        org.junit.rules.RuleChain ruleChain29 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        kuromojiAnalysisTests2.ensureCheckIndexPassed();
        kuromojiAnalysisTests2.ensureCheckIndexPassed();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(obj0, (java.lang.Object) kuromojiAnalysisTests2);
    }

    @Test
    public void test3569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3569");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (double) 0.0f, (double) 0L);
    }

    @Test
    public void test3570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3570");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain9 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.monster", postingsEnum11, postingsEnum12);
    }

    @Test
    public void test3571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3571");
        java.util.Locale locale1 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale3 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale5 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale7 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale9 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray10 = new java.util.Locale[] { locale1, locale3, locale5, locale7, locale9 };
        java.util.Set<java.util.Locale> localeSet11 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray10);
        java.util.Locale locale14 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale16 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale18 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale20 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale22 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray23 = new java.util.Locale[] { locale14, locale16, locale18, locale20, locale22 };
        java.util.Set<java.util.Locale> localeSet24 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray23);
        java.util.List<java.io.Serializable> serializableList25 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray23);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray10, (java.lang.Object[]) localeArray23);
        java.util.concurrent.ExecutorService[] executorServiceArray27 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean28 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray27);
        boolean boolean29 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray27);
        boolean boolean30 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray27);
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray31 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet32 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray31);
        java.util.Set<java.lang.reflect.AnnotatedElement[]> annotatedElementArraySet33 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.reflect.AnnotatedElement[][]) genericDeclarationArray31);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray27, (java.lang.Object[]) genericDeclarationArray31);
        boolean boolean35 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray27);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) localeArray10, (java.lang.Object[]) executorServiceArray27);
    }

    @Test
    public void test3572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3572");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.maxfailures", (double) 10L, (double) ' ', (double) 100L);
    }

    @Test
    public void test3573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3573");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("hi!", (double) ' ', 0.0d, (double) ' ');
    }

    @Test
    public void test3574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3574");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) '#', (double) (byte) 0);
    }

    @Test
    public void test3575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3575");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (float) 10L, (float) '#', (float) 10L);
    }

    @Test
    public void test3576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3576");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("hi!", indexReader8, (int) (byte) 0, postingsEnum10, postingsEnum11);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        org.apache.lucene.index.PostingsEnum postingsEnum17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("", postingsEnum17, postingsEnum18, true);
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.Terms terms23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader22, terms23, terms24, true);
        org.apache.lucene.index.NumericDocValues numericDocValues29 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues30 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.slow", (int) (short) 10, numericDocValues29, numericDocValues30);
    }

    @Test
    public void test3577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3577");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) 4, (long) 2);
    }

    @Test
    public void test3578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3578");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests1.assertTermsEquals("", indexReader11, terms12, terms13, false);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.junit.rules.TestRule testRule17 = kuromojiAnalysisTests1.ruleChain;
        int[] intArray23 = new int[] { '#' };
        int[] intArray25 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray23, intArray25);
        int[] intArray28 = new int[] { '#' };
        int[] intArray30 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray28, intArray30);
        org.junit.Assert.assertArrayEquals("tests.badapples", intArray23, intArray28);
        int[] intArray35 = new int[] { '#' };
        int[] intArray37 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray35, intArray37);
        int[] intArray40 = new int[] { '#' };
        int[] intArray42 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray40, intArray42);
        org.junit.Assert.assertArrayEquals("tests.badapples", intArray35, intArray40);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", intArray23, intArray40);
        int[] intArray47 = new int[] { '#' };
        int[] intArray49 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray47, intArray49);
        org.junit.Assert.assertArrayEquals(intArray40, intArray49);
        int[] intArray54 = new int[] { '#' };
        int[] intArray56 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray54, intArray56);
        int[] intArray59 = new int[] { '#' };
        int[] intArray61 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray59, intArray61);
        org.junit.Assert.assertArrayEquals("tests.badapples", intArray54, intArray59);
        org.junit.Assert.assertArrayEquals(intArray49, intArray59);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests65 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader67 = null;
        org.apache.lucene.index.Fields fields68 = null;
        org.apache.lucene.index.Fields fields69 = null;
        kuromojiAnalysisTests65.assertFieldsEquals("europarl.lines.txt.gz", indexReader67, fields68, fields69, false);
        kuromojiAnalysisTests65.assertPathHasBeenCleared("tests.slow");
        kuromojiAnalysisTests65.setUp();
        kuromojiAnalysisTests65.ensureCheckIndexPassed();
        kuromojiAnalysisTests65.resetCheckIndexStatus();
        org.junit.Assert.assertNotSame("random", (java.lang.Object) intArray49, (java.lang.Object) kuromojiAnalysisTests65);
        int[] intArray80 = new int[] { '#' };
        int[] intArray82 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray80, intArray82);
        int[] intArray85 = new int[] { '#' };
        int[] intArray87 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray85, intArray87);
        org.junit.Assert.assertArrayEquals("tests.badapples", intArray80, intArray85);
        org.junit.Assert.assertArrayEquals("tests.slow", intArray49, intArray80);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) "tests.slow");
    }

    @Test
    public void test3579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3579");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        java.lang.String[] strArray15 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet16 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray15);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests17 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests17.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet16, (java.lang.Object) kuromojiAnalysisTests17);
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        kuromojiAnalysisTests17.assertDocsEnumEquals("tests.badapples", postingsEnum22, postingsEnum23, true);
        org.junit.rules.TestRule testRule26 = kuromojiAnalysisTests17.ruleChain;
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        kuromojiAnalysisTests17.assertDocsSkippingEquals("tests.maxfailures", indexReader28, (int) (byte) 100, postingsEnum30, postingsEnum31, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.Fields fields37 = null;
        org.apache.lucene.index.Fields fields38 = null;
        kuromojiAnalysisTests34.assertFieldsEquals("europarl.lines.txt.gz", indexReader36, fields37, fields38, false);
        kuromojiAnalysisTests34.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain43 = kuromojiAnalysisTests34.failureAndSuccessEvents;
        kuromojiAnalysisTests17.failureAndSuccessEvents = ruleChain43;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain43;
        org.apache.lucene.index.PostingsEnum postingsEnum47 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum48 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("<unknown>", postingsEnum47, postingsEnum48, true);
        kuromojiAnalysisTests1.tearDown();
        java.lang.Object obj52 = null;
        java.lang.Object obj53 = new java.lang.Object();
        org.junit.Assert.assertNotSame(obj52, obj53);
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests1, obj52);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("tests.nightly", (java.lang.Object) kuromojiAnalysisTests1);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) "tests.nightly");
    }

    @Test
    public void test3580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3580");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) 10, (float) 1L, (float) (short) 1);
    }

    @Test
    public void test3581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3581");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("hi!", indexReader9, (int) (byte) 0, postingsEnum11, postingsEnum12);
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests1.assertTermsEquals("random", indexReader15, terms16, terms17, true);
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((-1));
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) 'a');
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.badapples");
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("<unknown>", indexReader28, (int) (byte) 100, postingsEnum30, postingsEnum31, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.Fields fields37 = null;
        org.apache.lucene.index.Fields fields38 = null;
        kuromojiAnalysisTests34.assertFieldsEquals("europarl.lines.txt.gz", indexReader36, fields37, fields38, false);
        org.apache.lucene.index.IndexReader indexReader42 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum44 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        kuromojiAnalysisTests34.assertPositionsSkippingEquals("tests.failfast", indexReader42, 1, postingsEnum44, postingsEnum45);
        kuromojiAnalysisTests34.setIndexWriterMaxDocs(0);
        org.apache.lucene.index.IndexReader indexReader50 = null;
        org.apache.lucene.index.Fields fields51 = null;
        org.apache.lucene.index.Fields fields52 = null;
        kuromojiAnalysisTests34.assertFieldsEquals("tests.slow", indexReader50, fields51, fields52, false);
        org.apache.lucene.index.IndexReader indexReader56 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum58 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum59 = null;
        kuromojiAnalysisTests34.assertPositionsSkippingEquals("<unknown>", indexReader56, (int) 'a', postingsEnum58, postingsEnum59);
        kuromojiAnalysisTests34.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests34.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests34.ensureAllSearchContextsReleased();
        org.apache.lucene.index.PostingsEnum postingsEnum65 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum66 = null;
        kuromojiAnalysisTests34.assertDocsEnumEquals("tests.badapples", postingsEnum65, postingsEnum66, true);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("<unknown>", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) "tests.badapples");
    }

    @Test
    public void test3582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3582");
        java.lang.Object obj1 = null;
        java.util.Locale locale5 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale7 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale9 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale11 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale13 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray14 = new java.util.Locale[] { locale5, locale7, locale9, locale11, locale13 };
        java.util.Set<java.util.Locale> localeSet15 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray14);
        java.util.Locale locale18 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale20 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale22 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale24 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale26 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray27 = new java.util.Locale[] { locale18, locale20, locale22, locale24, locale26 };
        java.util.Set<java.util.Locale> localeSet28 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray27);
        java.util.List<java.io.Serializable> serializableList29 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray27);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray14, (java.lang.Object[]) localeArray27);
        java.util.Locale locale33 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale35 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale37 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale39 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale41 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray42 = new java.util.Locale[] { locale33, locale35, locale37, locale39, locale41 };
        java.util.Set<java.util.Locale> localeSet43 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray42);
        java.util.List<java.io.Serializable> serializableList44 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray42);
        java.util.Set<java.lang.Cloneable> cloneableSet45 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray42);
        org.junit.Assert.assertArrayEquals("tests.slow", (java.lang.Object[]) localeArray27, (java.lang.Object[]) localeArray42);
        org.junit.Assert.assertNotSame((java.lang.Object) 0.0f, (java.lang.Object) localeArray42);
        java.util.Locale locale50 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale52 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale54 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale56 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale58 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale50, locale52, locale54, locale56, locale58 };
        java.util.Set<java.util.Locale> localeSet60 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray59);
        java.util.List<java.io.Serializable> serializableList61 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray59);
        java.util.Set<java.lang.Cloneable> cloneableSet62 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray59);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray59, (java.lang.Object) (byte) -1);
        java.util.Locale locale67 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale69 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale71 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale73 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale75 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray76 = new java.util.Locale[] { locale67, locale69, locale71, locale73, locale75 };
        java.util.Set<java.util.Locale> localeSet77 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray76);
        java.util.List<java.io.Serializable> serializableList78 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray76);
        java.util.Set<java.lang.Cloneable> cloneableSet79 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray76);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray76, (java.lang.Object) (byte) -1);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray59, (java.lang.Object[]) localeArray76);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray42, (java.lang.Object[]) localeArray76);
        org.junit.Assert.assertNotEquals("tests.awaitsfix", obj1, (java.lang.Object) localeArray42);
        double[][] doubleArray85 = new double[][] {};
        double[][][] doubleArray86 = new double[][][] { doubleArray85 };
        double[][] doubleArray87 = new double[][] {};
        double[][][] doubleArray88 = new double[][][] { doubleArray87 };
        double[][] doubleArray89 = new double[][] {};
        double[][][] doubleArray90 = new double[][][] { doubleArray89 };
        double[][] doubleArray91 = new double[][] {};
        double[][][] doubleArray92 = new double[][][] { doubleArray91 };
        double[][][][] doubleArray93 = new double[][][][] { doubleArray86, doubleArray88, doubleArray90, doubleArray92 };
        java.util.Set<double[][][]> doubleArraySet94 = org.apache.lucene.util.LuceneTestCase.asSet(doubleArray93);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) localeArray42, (java.lang.Object[]) doubleArray93);
    }

    @Test
    public void test3583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3583");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("hi!", indexReader9, (int) (byte) 0, postingsEnum11, postingsEnum12);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        org.apache.lucene.index.PostingsEnum postingsEnum17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("<unknown>", postingsEnum17, postingsEnum18, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests21 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        org.apache.lucene.index.Fields fields25 = null;
        kuromojiAnalysisTests21.assertFieldsEquals("europarl.lines.txt.gz", indexReader23, fields24, fields25, false);
        kuromojiAnalysisTests21.ensureCleanedUp();
        kuromojiAnalysisTests21.resetCheckIndexStatus();
        kuromojiAnalysisTests21.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum35 = null;
        kuromojiAnalysisTests21.assertPositionsSkippingEquals("", indexReader32, (int) (byte) 0, postingsEnum34, postingsEnum35);
        kuromojiAnalysisTests21.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain38 = kuromojiAnalysisTests21.failureAndSuccessEvents;
        kuromojiAnalysisTests21.restoreIndexWriterMaxDocs();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("europarl.lines.txt.gz", (java.lang.Object) postingsEnum17, (java.lang.Object) kuromojiAnalysisTests21);
    }

    @Test
    public void test3584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3584");
        java.lang.String[] strArray8 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet9 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray8);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests10 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests10.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet9, (java.lang.Object) kuromojiAnalysisTests10);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests14 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        kuromojiAnalysisTests14.assertFieldsEquals("europarl.lines.txt.gz", indexReader16, fields17, fields18, false);
        kuromojiAnalysisTests14.ensureCleanedUp();
        kuromojiAnalysisTests14.resetCheckIndexStatus();
        kuromojiAnalysisTests14.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        kuromojiAnalysisTests14.assertPositionsSkippingEquals("", indexReader25, (int) (byte) 0, postingsEnum27, postingsEnum28);
        org.junit.Assert.assertNotEquals((java.lang.Object) "tests.failfast", (java.lang.Object) kuromojiAnalysisTests14);
        kuromojiAnalysisTests14.setUp();
        kuromojiAnalysisTests14.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests14.resetCheckIndexStatus();
        kuromojiAnalysisTests14.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.Fields fields37 = null;
        org.apache.lucene.index.Fields fields38 = null;
        kuromojiAnalysisTests14.assertFieldsEquals("tests.slow", indexReader36, fields37, fields38, false);
        org.junit.rules.RuleChain ruleChain41 = kuromojiAnalysisTests14.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("<unknown>", (java.lang.Object) kuromojiAnalysisTests14);
    }

    @Test
    public void test3585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3585");
        float[] floatArray8 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray15 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray8, floatArray15, (float) (byte) 100);
        float[] floatArray27 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray34 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray27, floatArray34, (float) (byte) 100);
        float[] floatArray44 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray51 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray44, floatArray51, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray27, floatArray44, (float) (-1));
        float[] floatArray64 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray71 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray64, floatArray71, (float) (byte) 100);
        float[] floatArray81 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray88 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray81, floatArray88, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray64, floatArray81, (float) (-1));
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", floatArray44, floatArray81, 0.0f);
        // during test generation this statement threw an exception of type org.junit.internal.ArrayComparisonFailure in error
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", floatArray15, floatArray81, (float) 4);
    }

    @Test
    public void test3586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3586");
        long[] longArray6 = new long[] { ' ', 'a', (byte) 10, 100 };
        long[] longArray11 = new long[] { ' ', 'a', (byte) 10, 100 };
        long[] longArray16 = new long[] { ' ', 'a', (byte) 10, 100 };
        long[] longArray21 = new long[] { ' ', 'a', (byte) 10, 100 };
        long[] longArray26 = new long[] { ' ', 'a', (byte) 10, 100 };
        long[][] longArray27 = new long[][] { longArray6, longArray11, longArray16, longArray21, longArray26 };
        java.util.List<long[]> longArrayList28 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, longArray27);
        java.util.Locale locale32 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale34 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale36 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale38 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale40 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray41 = new java.util.Locale[] { locale32, locale34, locale36, locale38, locale40 };
        java.util.Set<java.util.Locale> localeSet42 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray41);
        java.util.Locale locale45 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale47 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale49 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale51 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale53 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray54 = new java.util.Locale[] { locale45, locale47, locale49, locale51, locale53 };
        java.util.Set<java.util.Locale> localeSet55 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray54);
        java.util.List<java.io.Serializable> serializableList56 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray54);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray41, (java.lang.Object[]) localeArray54);
        java.util.Locale locale60 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale62 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale64 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale66 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale68 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray69 = new java.util.Locale[] { locale60, locale62, locale64, locale66, locale68 };
        java.util.Set<java.util.Locale> localeSet70 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray69);
        java.util.List<java.io.Serializable> serializableList71 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray69);
        java.util.Set<java.lang.Cloneable> cloneableSet72 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray69);
        org.junit.Assert.assertArrayEquals("tests.slow", (java.lang.Object[]) localeArray54, (java.lang.Object[]) localeArray69);
        org.junit.Assert.assertNotSame((java.lang.Object) 0.0f, (java.lang.Object) localeArray69);
        java.util.Locale locale77 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale79 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale81 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale83 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale85 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray86 = new java.util.Locale[] { locale77, locale79, locale81, locale83, locale85 };
        java.util.Set<java.util.Locale> localeSet87 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray86);
        java.util.List<java.io.Serializable> serializableList88 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray86);
        org.junit.Assert.assertEquals((java.lang.Object[]) localeArray69, (java.lang.Object[]) localeArray86);
        // during test generation this statement threw an exception of type org.junit.internal.ArrayComparisonFailure in error
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", (java.lang.Object[]) longArray27, (java.lang.Object[]) localeArray69);
    }

    @Test
    public void test3587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3587");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) (-1L), (float) 10L, (float) (byte) 0);
    }

    @Test
    public void test3588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3588");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.nightly", (double) 10.0f, (double) 100.0f, (double) 10);
    }

    @Test
    public void test3589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3589");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((-1.0f), (float) (short) 10, (float) 3);
    }

    @Test
    public void test3590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3590");
        java.util.Locale locale3 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale5 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale7 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale9 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale11 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray12 = new java.util.Locale[] { locale3, locale5, locale7, locale9, locale11 };
        java.util.Set<java.util.Locale> localeSet13 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray12);
        java.util.List<java.io.Serializable> serializableList14 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray12);
        java.util.Set<java.lang.Cloneable> cloneableSet15 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray12);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray12, (java.lang.Object) (byte) -1);
        java.util.List[] listArray19 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.io.Serializable>[] serializableListArray20 = (java.util.List<java.io.Serializable>[]) listArray19;
        java.util.Set<java.util.List<java.io.Serializable>> serializableListSet21 = org.apache.lucene.util.LuceneTestCase.asSet(serializableListArray20);
        java.util.Set<java.util.List<java.io.Serializable>> serializableListSet22 = org.apache.lucene.util.LuceneTestCase.asSet(serializableListArray20);
        java.util.Set<java.util.List<java.io.Serializable>> serializableListSet23 = org.apache.lucene.util.LuceneTestCase.asSet(serializableListArray20);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", (java.lang.Object[]) localeArray12, (java.lang.Object[]) serializableListArray20);
    }

    @Test
    public void test3591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3591");
        java.util.Locale locale4 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale6 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale8 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale10 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale12 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray13 = new java.util.Locale[] { locale4, locale6, locale8, locale10, locale12 };
        java.util.Set<java.util.Locale> localeSet14 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray13);
        java.util.List<java.io.Serializable> serializableList15 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray13);
        java.util.Set<java.lang.Cloneable> cloneableSet16 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray13);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray13, (java.lang.Object) (byte) -1);
        java.util.Locale locale21 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale23 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale25 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale27 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale29 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale21, locale23, locale25, locale27, locale29 };
        java.util.Set<java.util.Locale> localeSet31 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray30);
        java.util.List<java.io.Serializable> serializableList32 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray30);
        java.util.Set<java.lang.Cloneable> cloneableSet33 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray30);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray30, (java.lang.Object) (byte) -1);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray13, (java.lang.Object[]) localeArray30);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests37 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.Fields fields40 = null;
        org.apache.lucene.index.Fields fields41 = null;
        kuromojiAnalysisTests37.assertFieldsEquals("europarl.lines.txt.gz", indexReader39, fields40, fields41, false);
        org.apache.lucene.index.IndexReader indexReader45 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum47 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum48 = null;
        kuromojiAnalysisTests37.assertPositionsSkippingEquals("tests.failfast", indexReader45, 1, postingsEnum47, postingsEnum48);
        kuromojiAnalysisTests37.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests37.ensureCleanedUp();
        kuromojiAnalysisTests37.resetCheckIndexStatus();
        org.junit.Assert.assertNotSame("tests.badapples", (java.lang.Object) localeArray30, (java.lang.Object) kuromojiAnalysisTests37);
        java.util.Locale locale57 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale59 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale61 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale63 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale65 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray66 = new java.util.Locale[] { locale57, locale59, locale61, locale63, locale65 };
        java.util.Set<java.util.Locale> localeSet67 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray66);
        java.util.List<java.io.Serializable> serializableList68 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray66);
        java.util.Set<java.lang.Cloneable> cloneableSet69 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray66);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray66, (java.lang.Object) (byte) -1);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray30, (java.lang.Object[]) localeArray66);
        java.util.Locale locale75 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale77 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale79 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale81 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale83 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray84 = new java.util.Locale[] { locale75, locale77, locale79, locale81, locale83 };
        java.util.Set<java.util.Locale> localeSet85 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray84);
        java.util.List<java.io.Serializable> serializableList86 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray84);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray66, (java.lang.Object[]) localeArray84);
        java.util.Set<java.util.Locale> localeSet88 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray84);
        java.lang.Object[] objArray89 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (java.lang.Object[]) localeArray84, objArray89);
    }

    @Test
    public void test3592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3592");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (byte) 100, (long) '#');
    }

    @Test
    public void test3593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3593");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (byte) 100, (double) 100);
    }

    @Test
    public void test3594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3594");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (-1), (long) 'a');
    }

    @Test
    public void test3595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3595");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.weekly", 1.0d, (double) 1L, 10.0d);
    }

    @Test
    public void test3596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3596");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain9 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        java.lang.String str11 = kuromojiAnalysisTests0.getTestName();
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.slow", postingsEnum13, postingsEnum14, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test3597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3597");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        java.lang.String str11 = kuromojiAnalysisTests1.getTestName();
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum17 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader14, (int) (short) -1, postingsEnum16, postingsEnum17);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("europarl.lines.txt.gz", (java.lang.Object) (short) -1);
    }

    @Test
    public void test3598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3598");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests13 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Fields fields16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        kuromojiAnalysisTests13.assertFieldsEquals("europarl.lines.txt.gz", indexReader15, fields16, fields17, false);
        kuromojiAnalysisTests13.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain22 = kuromojiAnalysisTests13.failureAndSuccessEvents;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain22;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain22;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain22;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain22;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests27 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.Fields fields30 = null;
        org.apache.lucene.index.Fields fields31 = null;
        kuromojiAnalysisTests27.assertFieldsEquals("europarl.lines.txt.gz", indexReader29, fields30, fields31, false);
        kuromojiAnalysisTests27.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain36 = kuromojiAnalysisTests27.failureAndSuccessEvents;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain36;
        org.junit.rules.RuleChain[] ruleChainArray38 = new org.junit.rules.RuleChain[] { ruleChain22, ruleChain36 };
        java.util.Set<org.junit.rules.RuleChain> ruleChainSet39 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray38);
        java.util.Set<org.junit.rules.RuleChain> ruleChainSet40 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray38);
        org.junit.Assert.assertNotNull("", (java.lang.Object) ruleChainArray38);
        java.util.Set<org.junit.rules.RuleChain> ruleChainSet42 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray38);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests43 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader45 = null;
        org.apache.lucene.index.Fields fields46 = null;
        org.apache.lucene.index.Fields fields47 = null;
        kuromojiAnalysisTests43.assertFieldsEquals("europarl.lines.txt.gz", indexReader45, fields46, fields47, false);
        kuromojiAnalysisTests43.ensureCleanedUp();
        kuromojiAnalysisTests43.resetCheckIndexStatus();
        kuromojiAnalysisTests43.ensureCleanedUp();
        kuromojiAnalysisTests43.ensureCheckIndexPassed();
        kuromojiAnalysisTests43.restoreIndexWriterMaxDocs();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests55 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader57 = null;
        org.apache.lucene.index.Fields fields58 = null;
        org.apache.lucene.index.Fields fields59 = null;
        kuromojiAnalysisTests55.assertFieldsEquals("europarl.lines.txt.gz", indexReader57, fields58, fields59, false);
        kuromojiAnalysisTests55.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain64 = kuromojiAnalysisTests55.failureAndSuccessEvents;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain64;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain64;
        kuromojiAnalysisTests43.failureAndSuccessEvents = ruleChain64;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain64;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests69 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader71 = null;
        org.apache.lucene.index.Fields fields72 = null;
        org.apache.lucene.index.Fields fields73 = null;
        kuromojiAnalysisTests69.assertFieldsEquals("europarl.lines.txt.gz", indexReader71, fields72, fields73, false);
        kuromojiAnalysisTests69.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain78 = kuromojiAnalysisTests69.failureAndSuccessEvents;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain78;
        org.junit.rules.RuleChain[] ruleChainArray80 = new org.junit.rules.RuleChain[] { ruleChain64, ruleChain78 };
        java.util.Set<org.junit.rules.RuleChain> ruleChainSet81 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray80);
        // during test generation this statement threw an exception of type org.junit.internal.ArrayComparisonFailure in error
        org.junit.Assert.assertEquals((java.lang.Object[]) ruleChainArray38, (java.lang.Object[]) ruleChainArray80);
    }

    @Test
    public void test3599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3599");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.ensureCleanedUp();
        java.lang.String str11 = kuromojiAnalysisTests1.getTestName();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("tests.maxfailures", postingsEnum14, postingsEnum15, true);
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.failfast", indexReader19, (int) (byte) 100, postingsEnum21, postingsEnum22, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs(100);
        int[] intArray32 = new int[] { '#' };
        int[] intArray34 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray32, intArray34);
        int[] intArray37 = new int[] { '#' };
        int[] intArray39 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray37, intArray39);
        org.junit.Assert.assertArrayEquals("tests.badapples", intArray32, intArray37);
        int[] intArray44 = new int[] { '#' };
        int[] intArray46 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray44, intArray46);
        int[] intArray49 = new int[] { '#' };
        int[] intArray51 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray49, intArray51);
        org.junit.Assert.assertArrayEquals("tests.badapples", intArray44, intArray49);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", intArray32, intArray49);
        int[] intArray57 = new int[] { '#' };
        int[] intArray59 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray57, intArray59);
        int[] intArray62 = new int[] { '#' };
        int[] intArray64 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray62, intArray64);
        org.junit.Assert.assertArrayEquals("tests.badapples", intArray57, intArray62);
        org.junit.Assert.assertArrayEquals("", intArray49, intArray62);
        int[] intArray70 = new int[] { '#' };
        int[] intArray72 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray70, intArray72);
        int[] intArray75 = new int[] { '#' };
        int[] intArray77 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray75, intArray77);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray70, intArray75);
        int[] intArray81 = new int[] { '#' };
        int[] intArray83 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray81, intArray83);
        org.junit.Assert.assertArrayEquals(intArray75, intArray81);
        org.junit.Assert.assertArrayEquals(intArray62, intArray75);
        java.lang.Object obj87 = null;
        org.junit.Assert.assertNotEquals((java.lang.Object) intArray75, obj87);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) intArray75);
    }

    @Test
    public void test3600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3600");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        org.junit.Assert.assertNotNull("europarl.lines.txt.gz", (java.lang.Object) kuromojiAnalysisTests1);
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("tests.maxfailures", postingsEnum14, postingsEnum15, false);
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocsAndPositionsEnumEquals("tests.badapples", postingsEnum19, postingsEnum20);
    }

    @Test
    public void test3601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3601");
        java.util.List[] listArray1 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<java.io.Serializable>[] serializableListArray2 = (java.util.List<java.io.Serializable>[]) listArray1;
        java.util.Set<java.util.List<java.io.Serializable>> serializableListSet3 = org.apache.lucene.util.LuceneTestCase.asSet(serializableListArray2);
        java.util.Locale locale6 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale8 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale10 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale12 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale14 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray15 = new java.util.Locale[] { locale6, locale8, locale10, locale12, locale14 };
        java.util.Set<java.util.Locale> localeSet16 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray15);
        java.util.List<java.io.Serializable> serializableList17 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray15);
        java.util.Set<java.lang.Cloneable> cloneableSet18 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray15);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableListArray2, (java.lang.Object[]) localeArray15);
    }

    @Test
    public void test3602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3602");
        java.util.Locale locale4 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale6 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale8 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale10 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale12 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray13 = new java.util.Locale[] { locale4, locale6, locale8, locale10, locale12 };
        java.util.Set<java.util.Locale> localeSet14 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray13);
        java.util.List<java.io.Serializable> serializableList15 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray13);
        java.util.Set<java.lang.Cloneable> cloneableSet16 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray13);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray13, (java.lang.Object) (byte) -1);
        java.util.Locale locale21 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale23 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale25 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale27 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale29 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale21, locale23, locale25, locale27, locale29 };
        java.util.Set<java.util.Locale> localeSet31 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray30);
        java.util.List<java.io.Serializable> serializableList32 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray30);
        java.util.Set<java.lang.Cloneable> cloneableSet33 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray30);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray30, (java.lang.Object) (byte) -1);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray13, (java.lang.Object[]) localeArray30);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests37 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.Fields fields40 = null;
        org.apache.lucene.index.Fields fields41 = null;
        kuromojiAnalysisTests37.assertFieldsEquals("europarl.lines.txt.gz", indexReader39, fields40, fields41, false);
        kuromojiAnalysisTests37.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain46 = kuromojiAnalysisTests37.failureAndSuccessEvents;
        kuromojiAnalysisTests37.setUp();
        org.junit.Assert.assertNotSame("tests.nightly", (java.lang.Object) localeArray13, (java.lang.Object) kuromojiAnalysisTests37);
        org.apache.lucene.index.IndexReader indexReader50 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum52 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum53 = null;
        kuromojiAnalysisTests37.assertDocsSkippingEquals("tests.awaitsfix", indexReader50, 10, postingsEnum52, postingsEnum53, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests56 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader58 = null;
        org.apache.lucene.index.Fields fields59 = null;
        org.apache.lucene.index.Fields fields60 = null;
        kuromojiAnalysisTests56.assertFieldsEquals("europarl.lines.txt.gz", indexReader58, fields59, fields60, false);
        kuromojiAnalysisTests56.tearDown();
        org.junit.Assert.assertNotEquals((java.lang.Object) true, (java.lang.Object) kuromojiAnalysisTests56);
        kuromojiAnalysisTests56.ensureAllSearchContextsReleased();
        org.apache.lucene.index.IndexReader indexReader67 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum69 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum70 = null;
        kuromojiAnalysisTests56.assertPositionsSkippingEquals("tests.failfast", indexReader67, (int) (byte) 0, postingsEnum69, postingsEnum70);
        kuromojiAnalysisTests56.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader74 = null;
        org.apache.lucene.index.Fields fields75 = null;
        org.apache.lucene.index.Fields fields76 = null;
        kuromojiAnalysisTests56.assertFieldsEquals("tests.slow", indexReader74, fields75, fields76, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.failfast", (java.lang.Object) kuromojiAnalysisTests56);
    }

    @Test
    public void test3603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3603");
        java.util.concurrent.ExecutorService[] executorServiceArray2 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean4 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        java.util.concurrent.ExecutorService[] executorServiceArray5 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean6 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray5);
        boolean boolean7 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray5);
        boolean boolean8 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray5);
        boolean boolean9 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray5);
        boolean boolean10 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray5);
        boolean boolean11 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray5);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray2, (java.lang.Object[]) executorServiceArray5);
        boolean boolean13 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean14 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean15 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        java.lang.Iterable[] iterableArray17 = new java.lang.Iterable[0];
        @SuppressWarnings("unchecked")
        java.lang.Iterable<java.util.Locale>[] localeIterableArray18 = (java.lang.Iterable<java.util.Locale>[]) iterableArray17;
        java.util.Set<java.lang.Iterable<java.util.Locale>> localeIterableSet19 = org.apache.lucene.util.LuceneTestCase.asSet(localeIterableArray18);
        java.util.Set<java.lang.Iterable<java.util.Locale>> localeIterableSet20 = org.apache.lucene.util.LuceneTestCase.asSet(localeIterableArray18);
        org.junit.Assert.assertArrayEquals("tests.nightly", (java.lang.Object[]) executorServiceArray2, (java.lang.Object[]) localeIterableArray18);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests24 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Fields fields27 = null;
        org.apache.lucene.index.Fields fields28 = null;
        kuromojiAnalysisTests24.assertFieldsEquals("europarl.lines.txt.gz", indexReader26, fields27, fields28, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests31 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader33 = null;
        org.apache.lucene.index.Fields fields34 = null;
        org.apache.lucene.index.Fields fields35 = null;
        kuromojiAnalysisTests31.assertFieldsEquals("europarl.lines.txt.gz", indexReader33, fields34, fields35, false);
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        kuromojiAnalysisTests31.assertPositionsSkippingEquals("tests.failfast", indexReader39, 1, postingsEnum41, postingsEnum42);
        kuromojiAnalysisTests31.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests31.overrideTestDefaultQueryCache();
        org.junit.Assert.assertNotSame("tests.weekly", (java.lang.Object) "europarl.lines.txt.gz", (java.lang.Object) kuromojiAnalysisTests31);
        org.apache.lucene.index.IndexReader indexReader48 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum50 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum51 = null;
        kuromojiAnalysisTests31.assertPositionsSkippingEquals("tests.monster", indexReader48, (int) (short) -1, postingsEnum50, postingsEnum51);
        int[] intArray57 = new int[] { (short) -1, (short) 10, (short) 10, (byte) -1 };
        int[] intArray62 = new int[] { (short) -1, (short) 10, (short) 10, (byte) -1 };
        int[] intArray67 = new int[] { (short) -1, (short) 10, (short) 10, (byte) -1 };
        int[] intArray72 = new int[] { (short) -1, (short) 10, (short) 10, (byte) -1 };
        int[] intArray77 = new int[] { (short) -1, (short) 10, (short) 10, (byte) -1 };
        int[][] intArray78 = new int[][] { intArray57, intArray62, intArray67, intArray72, intArray77 };
        java.util.Set<int[]> intArraySet79 = org.apache.lucene.util.LuceneTestCase.asSet(intArray78);
        org.junit.Assert.assertNotEquals("<unknown>", (java.lang.Object) kuromojiAnalysisTests31, (java.lang.Object) intArray78);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", (java.lang.Object[]) executorServiceArray2, (java.lang.Object[]) intArray78);
    }

    @Test
    public void test3604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3604");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) ' ', (long) 3);
    }

    @Test
    public void test3605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3605");
        double[] doubleArray7 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray12 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray7, doubleArray12, (double) (byte) 100);
        double[] doubleArray20 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray25 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray20, doubleArray25, (double) (byte) 100);
        org.junit.Assert.assertArrayEquals("", doubleArray7, doubleArray20, (double) 0);
        double[] doubleArray35 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray40 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray35, doubleArray40, (double) (byte) 100);
        double[] doubleArray49 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray54 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray49, doubleArray54, (double) (byte) 100);
        double[] doubleArray62 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray67 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray62, doubleArray67, (double) (byte) 100);
        org.junit.Assert.assertArrayEquals("", doubleArray49, doubleArray62, (double) 0);
        org.junit.Assert.assertArrayEquals(doubleArray35, doubleArray49, (-1.0d));
        org.junit.Assert.assertArrayEquals(doubleArray20, doubleArray35, (double) 4);
        double[] doubleArray80 = new double[] { (-1), (-1), 3, (short) 1 };
        // during test generation this statement threw an exception of type org.junit.internal.ArrayComparisonFailure in error
        org.junit.Assert.assertArrayEquals("tests.monster", doubleArray20, doubleArray80, 10.0d);
    }

    @Test
    public void test3606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3606");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("europarl.lines.txt.gz", (double) (byte) 1, (double) 2, (double) (byte) 100);
    }

    @Test
    public void test3607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3607");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain9 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        java.lang.String str11 = kuromojiAnalysisTests0.getTestName();
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("europarl.lines.txt.gz", postingsEnum13, postingsEnum14, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.maxfailures", indexReader19, 2, postingsEnum21, postingsEnum22, true);
        org.apache.lucene.index.NumericDocValues numericDocValues27 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues28 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.weekly", 3, numericDocValues27, numericDocValues28);
    }

    @Test
    public void test3608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3608");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        java.lang.String str12 = kuromojiAnalysisTests1.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests1);
        java.lang.String str14 = kuromojiAnalysisTests1.getTestName();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.failfast", indexReader16, 0, postingsEnum18, postingsEnum19);
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.monster", indexReader22, 100, postingsEnum24, postingsEnum25, true);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotNull((java.lang.Object) postingsEnum25);
    }

    @Test
    public void test3609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3609");
        char[] charArray1 = null;
        char[] charArray2 = new char[] {};
        char[] charArray3 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray2, charArray3);
        char[] charArray6 = new char[] {};
        char[] charArray7 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray6, charArray7);
        char[] charArray9 = new char[] {};
        char[] charArray10 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray9, charArray10);
        org.junit.Assert.assertArrayEquals(charArray7, charArray10);
        char[] charArray13 = new char[] {};
        char[] charArray14 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray13, charArray14);
        char[] charArray16 = new char[] {};
        char[] charArray17 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray16, charArray17);
        org.junit.Assert.assertArrayEquals(charArray14, charArray17);
        org.junit.Assert.assertArrayEquals("tests.monster", charArray10, charArray17);
        org.junit.Assert.assertArrayEquals(charArray3, charArray10);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.slow", charArray1, charArray10);
    }

    @Test
    public void test3610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3610");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", (double) '4', 0.0d, (double) (-1.0f));
    }

    @Test
    public void test3611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3611");
        java.lang.Object obj1 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("europarl.lines.txt.gz", indexReader4, fields5, fields6, false);
        kuromojiAnalysisTests2.ensureCleanedUp();
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        kuromojiAnalysisTests2.ensureCleanedUp();
        kuromojiAnalysisTests2.ensureCheckIndexPassed();
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Fields fields16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("tests.awaitsfix", indexReader15, fields16, fields17, true);
        kuromojiAnalysisTests2.tearDown();
        kuromojiAnalysisTests2.assertPathHasBeenCleared("tests.badapples");
        kuromojiAnalysisTests2.ensureCleanedUp();
        org.junit.rules.RuleChain ruleChain24 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        kuromojiAnalysisTests2.assertPathHasBeenCleared("europarl.lines.txt.gz");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", obj1, (java.lang.Object) kuromojiAnalysisTests2);
    }

    @Test
    public void test3612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3612");
        float[] floatArray0 = null;
        float[] floatArray11 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray18 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray11, floatArray18, (float) (byte) 100);
        float[] floatArray28 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray35 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray28, floatArray35, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray11, floatArray28, (float) (-1));
        float[] floatArray48 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray55 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray48, floatArray55, (float) (byte) 100);
        float[] floatArray65 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray72 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray65, floatArray72, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray48, floatArray65, (float) (-1));
        org.junit.Assert.assertArrayEquals("tests.weekly", floatArray11, floatArray48, (float) 10L);
        float[] floatArray86 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray93 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray86, floatArray93, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals("", floatArray11, floatArray93, (float) (short) 100);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(floatArray0, floatArray11, (float) 10L);
    }

    @Test
    public void test3613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3613");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 0, (double) (byte) 10, (double) 4);
    }

    @Test
    public void test3614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3614");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule9 = kuromojiAnalysisTests0.ruleChain;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests10 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.Fields fields13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        kuromojiAnalysisTests10.assertFieldsEquals("europarl.lines.txt.gz", indexReader12, fields13, fields14, false);
        kuromojiAnalysisTests10.ensureCleanedUp();
        kuromojiAnalysisTests10.ensureCleanedUp();
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests10);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("europarl.lines.txt.gz", postingsEnum23, postingsEnum24, true);
        org.apache.lucene.index.NumericDocValues numericDocValues29 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues30 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.badapples", 10, numericDocValues29, numericDocValues30);
    }

    @Test
    public void test3615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3615");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("europarl.lines.txt.gz", indexReader4, fields5, fields6, false);
        kuromojiAnalysisTests2.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain11 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        java.lang.String str13 = kuromojiAnalysisTests2.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests2);
        kuromojiAnalysisTests2.tearDown();
        kuromojiAnalysisTests2.setUp();
        org.apache.lucene.index.IndexReader indexReader18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("", indexReader18, (int) '#', postingsEnum20, postingsEnum21);
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("tests.weekly", indexReader24, (int) (short) 10, postingsEnum26, postingsEnum27);
        org.junit.rules.RuleChain ruleChain29 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        kuromojiAnalysisTests2.ensureCheckIndexPassed();
        kuromojiAnalysisTests2.ensureCheckIndexPassed();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.failfast", (java.lang.Object) kuromojiAnalysisTests2);
    }

    @Test
    public void test3616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3616");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (short) 10, (long) (short) 0);
    }

    @Test
    public void test3617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3617");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        org.apache.lucene.index.Fields fields15 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("tests.awaitsfix", indexReader13, fields14, fields15, true);
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.failfast", postingsEnum19, postingsEnum20);
    }

    @Test
    public void test3618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3618");
        java.util.concurrent.ExecutorService[] executorServiceArray2 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        java.util.concurrent.ExecutorService[] executorServiceArray4 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean5 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        boolean boolean6 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        boolean boolean7 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        boolean boolean8 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        boolean boolean9 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        boolean boolean10 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray2, (java.lang.Object[]) executorServiceArray4);
        java.util.concurrent.ExecutorService[] executorServiceArray12 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean13 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray12);
        boolean boolean14 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray12);
        boolean boolean15 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray12);
        boolean boolean16 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray12);
        boolean boolean17 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray12);
        org.junit.Assert.assertEquals("tests.badapples", (java.lang.Object[]) executorServiceArray2, (java.lang.Object[]) executorServiceArray12);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray20 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray21 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray22 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[][] throttlingArray23 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[][] { throttlingArray20, throttlingArray21, throttlingArray22 };
        java.util.List<org.apache.lucene.store.MockDirectoryWrapper.Throttling[]> throttlingArrayList24 = org.elasticsearch.test.ESTestCase.randomSubsetOf(0, throttlingArray23);
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling[]> throttlingArraySet25 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray23);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("<unknown>", (java.lang.Object[]) executorServiceArray2, (java.lang.Object[]) throttlingArray23);
    }

    @Test
    public void test3619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3619");
        java.lang.String[] strArray7 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet8 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray7);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests9 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests9.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet8, (java.lang.Object) kuromojiAnalysisTests9);
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests9.assertDocsEnumEquals("tests.badapples", postingsEnum14, postingsEnum15, true);
        org.junit.rules.TestRule testRule18 = kuromojiAnalysisTests9.ruleChain;
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        kuromojiAnalysisTests9.assertDocsSkippingEquals("tests.maxfailures", indexReader20, (int) (byte) 100, postingsEnum22, postingsEnum23, false);
        kuromojiAnalysisTests9.resetCheckIndexStatus();
        kuromojiAnalysisTests9.ensureCleanedUp();
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests9);
        kuromojiAnalysisTests9.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        kuromojiAnalysisTests9.assertDocsSkippingEquals("", indexReader31, 0, postingsEnum33, postingsEnum34, true);
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum39 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests9.assertDocsAndPositionsEnumEquals("tests.awaitsfix", postingsEnum38, postingsEnum39);
    }

    @Test
    public void test3620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3620");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("hi!", indexReader8, (int) (byte) 0, postingsEnum10, postingsEnum11);
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests0.assertTermsEquals("random", indexReader14, terms15, terms16, true);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.apache.lucene.index.NumericDocValues numericDocValues27 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues28 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.slow", (int) (short) 1, numericDocValues27, numericDocValues28);
    }

    @Test
    public void test3621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3621");
        long[] longArray1 = null;
        long[] longArray6 = new long[] { 1 };
        long[] longArray8 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray6, longArray8);
        long[] longArray12 = new long[] { 1 };
        long[] longArray14 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray12, longArray14);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", longArray8, longArray12);
        long[] longArray19 = new long[] { 1 };
        long[] longArray21 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray19, longArray21);
        org.junit.Assert.assertArrayEquals("hi!", longArray12, longArray19);
        long[] longArray27 = new long[] { 1 };
        long[] longArray29 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray27, longArray29);
        long[] longArray33 = new long[] { 1 };
        long[] longArray35 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray33, longArray35);
        org.junit.Assert.assertArrayEquals("random", longArray29, longArray35);
        org.junit.Assert.assertArrayEquals(longArray19, longArray29);
        long[] longArray42 = new long[] { 1 };
        long[] longArray44 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray42, longArray44);
        long[] longArray48 = new long[] { 1 };
        long[] longArray50 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray48, longArray50);
        org.junit.Assert.assertArrayEquals("random", longArray44, longArray50);
        org.junit.Assert.assertArrayEquals(longArray19, longArray44);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.failfast", longArray1, longArray44);
    }

    @Test
    public void test3622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3622");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.weekly", (long) 3, (long) ' ');
    }

    @Test
    public void test3623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3623");
        java.util.concurrent.ExecutorService[] executorServiceArray0 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean1 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray0);
        boolean boolean2 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray0);
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray0);
        boolean boolean4 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray0);
        boolean boolean5 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray0);
        double[] doubleArray8 = new double[] { 100, (short) 100 };
        double[] doubleArray11 = new double[] { 100, (short) 100 };
        double[] doubleArray14 = new double[] { 100, (short) 100 };
        double[][] doubleArray15 = new double[][] { doubleArray8, doubleArray11, doubleArray14 };
        java.util.Set<double[]> doubleArraySet16 = org.apache.lucene.util.LuceneTestCase.asSet(doubleArray15);
        java.util.Set<double[]> doubleArraySet17 = org.apache.lucene.util.LuceneTestCase.asSet(doubleArray15);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests19 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.Fields fields22 = null;
        org.apache.lucene.index.Fields fields23 = null;
        kuromojiAnalysisTests19.assertFieldsEquals("europarl.lines.txt.gz", indexReader21, fields22, fields23, false);
        kuromojiAnalysisTests19.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain28 = kuromojiAnalysisTests19.failureAndSuccessEvents;
        kuromojiAnalysisTests19.resetCheckIndexStatus();
        java.lang.String str30 = kuromojiAnalysisTests19.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests19);
        kuromojiAnalysisTests19.tearDown();
        kuromojiAnalysisTests19.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain34 = kuromojiAnalysisTests19.failureAndSuccessEvents;
        java.lang.String str35 = kuromojiAnalysisTests19.getTestName();
        org.junit.Assert.assertNotSame((java.lang.Object) doubleArray15, (java.lang.Object) str35);
        java.util.Set<java.lang.Cloneable> cloneableSet37 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) doubleArray15);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray0, (java.lang.Object[]) doubleArray15);
    }

    @Test
    public void test3624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3624");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.awaitsfix", (double) '4', 10.0d);
    }

    @Test
    public void test3625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3625");
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures0 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures1 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures0);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures2 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures3 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures2);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures4 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures5 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures4);
        org.junit.rules.TestRule[] testRuleArray6 = new org.junit.rules.TestRule[] { testRuleIgnoreAfterMaxFailures0, testRuleIgnoreAfterMaxFailures3, testRuleIgnoreAfterMaxFailures5 };
        java.util.Set<org.junit.rules.TestRule> testRuleSet7 = org.apache.lucene.util.LuceneTestCase.asSet(testRuleArray6);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests8 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Fields fields11 = null;
        org.apache.lucene.index.Fields fields12 = null;
        kuromojiAnalysisTests8.assertFieldsEquals("europarl.lines.txt.gz", indexReader10, fields11, fields12, false);
        kuromojiAnalysisTests8.assertPathHasBeenCleared("tests.slow");
        kuromojiAnalysisTests8.setUp();
        kuromojiAnalysisTests8.ensureCheckIndexPassed();
        kuromojiAnalysisTests8.resetCheckIndexStatus();
        org.junit.Assert.assertNotEquals((java.lang.Object) testRuleArray6, (java.lang.Object) kuromojiAnalysisTests8);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests21 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        org.apache.lucene.index.Fields fields25 = null;
        kuromojiAnalysisTests21.assertFieldsEquals("europarl.lines.txt.gz", indexReader23, fields24, fields25, false);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests8, (java.lang.Object) fields24);
        org.apache.lucene.index.NumericDocValues numericDocValues31 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues32 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests8.assertDocValuesEquals("<unknown>", (int) '4', numericDocValues31, numericDocValues32);
    }

    @Test
    public void test3626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3626");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests9 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Fields fields12 = null;
        org.apache.lucene.index.Fields fields13 = null;
        kuromojiAnalysisTests9.assertFieldsEquals("europarl.lines.txt.gz", indexReader11, fields12, fields13, false);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests9.assertPositionsSkippingEquals("tests.failfast", indexReader17, 1, postingsEnum19, postingsEnum20);
        kuromojiAnalysisTests9.setIndexWriterMaxDocs(0);
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.Fields fields26 = null;
        org.apache.lucene.index.Fields fields27 = null;
        kuromojiAnalysisTests9.assertFieldsEquals("tests.slow", indexReader25, fields26, fields27, false);
        kuromojiAnalysisTests9.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule31 = kuromojiAnalysisTests9.ruleChain;
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) testRule31);
        org.apache.lucene.index.IndexReader indexReader34 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum36 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum37 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.weekly", indexReader34, 0, postingsEnum36, postingsEnum37, false);
        kuromojiAnalysisTests0.setUp();
        java.lang.String str41 = kuromojiAnalysisTests0.getTestName();
        java.lang.String[] strArray49 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet50 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray49);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests51 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests51.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet50, (java.lang.Object) kuromojiAnalysisTests51);
        org.apache.lucene.index.PostingsEnum postingsEnum56 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum57 = null;
        kuromojiAnalysisTests51.assertDocsEnumEquals("tests.badapples", postingsEnum56, postingsEnum57, true);
        org.junit.rules.TestRule testRule60 = kuromojiAnalysisTests51.ruleChain;
        org.apache.lucene.index.IndexReader indexReader62 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum64 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum65 = null;
        kuromojiAnalysisTests51.assertDocsSkippingEquals("tests.maxfailures", indexReader62, (int) (byte) 100, postingsEnum64, postingsEnum65, false);
        kuromojiAnalysisTests51.resetCheckIndexStatus();
        kuromojiAnalysisTests51.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader71 = null;
        org.apache.lucene.index.Terms terms72 = null;
        org.apache.lucene.index.Terms terms73 = null;
        kuromojiAnalysisTests51.assertTermsEquals("hi!", indexReader71, terms72, terms73, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests76 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader78 = null;
        org.apache.lucene.index.Fields fields79 = null;
        org.apache.lucene.index.Fields fields80 = null;
        kuromojiAnalysisTests76.assertFieldsEquals("europarl.lines.txt.gz", indexReader78, fields79, fields80, false);
        kuromojiAnalysisTests76.tearDown();
        org.junit.rules.RuleChain ruleChain84 = kuromojiAnalysisTests76.failureAndSuccessEvents;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain84;
        kuromojiAnalysisTests51.failureAndSuccessEvents = ruleChain84;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain84;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain84;
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertPathHasBeenCleared("");
    }

    @Test
    public void test3627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3627");
        int[][][][][] intArray1 = new int[][][][][] {};
        java.util.Set<int[][][][]> intArraySet2 = org.apache.lucene.util.LuceneTestCase.asSet(intArray1);
        java.lang.Object[] objArray3 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.nightly", (java.lang.Object[]) intArray1, objArray3);
    }

    @Test
    public void test3628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3628");
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray0 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet1 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray0);
        java.util.Set<java.lang.reflect.AnnotatedElement[]> annotatedElementArraySet2 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.reflect.AnnotatedElement[][]) genericDeclarationArray0);
        java.util.concurrent.ExecutorService[] executorServiceArray3 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean4 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray3);
        boolean boolean5 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray3);
        boolean boolean6 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray3);
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray7 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet8 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray7);
        java.util.Set<java.lang.reflect.AnnotatedElement[]> annotatedElementArraySet9 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.reflect.AnnotatedElement[][]) genericDeclarationArray7);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray3, (java.lang.Object[]) genericDeclarationArray7);
        org.junit.Assert.assertEquals((java.lang.Object[]) genericDeclarationArray0, (java.lang.Object[]) executorServiceArray3);
        java.util.Locale locale13 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.awaitsfix");
        java.util.Locale locale15 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.weekly");
        java.util.Locale locale17 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray18 = new java.util.Locale[] { locale13, locale15, locale17 };
        java.util.Locale locale20 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.awaitsfix");
        java.util.Locale locale22 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.weekly");
        java.util.Locale locale24 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray25 = new java.util.Locale[] { locale20, locale22, locale24 };
        java.util.Locale locale27 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.awaitsfix");
        java.util.Locale locale29 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.weekly");
        java.util.Locale locale31 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray32 = new java.util.Locale[] { locale27, locale29, locale31 };
        java.util.Locale locale34 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.awaitsfix");
        java.util.Locale locale36 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.weekly");
        java.util.Locale locale38 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray39 = new java.util.Locale[] { locale34, locale36, locale38 };
        java.util.Locale locale41 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.awaitsfix");
        java.util.Locale locale43 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.weekly");
        java.util.Locale locale45 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray46 = new java.util.Locale[] { locale41, locale43, locale45 };
        java.util.Locale locale48 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.awaitsfix");
        java.util.Locale locale50 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.weekly");
        java.util.Locale locale52 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray53 = new java.util.Locale[] { locale48, locale50, locale52 };
        java.util.Locale[][] localeArray54 = new java.util.Locale[][] { localeArray18, localeArray25, localeArray32, localeArray39, localeArray46, localeArray53 };
        java.util.Set<java.util.Locale[]> localeArraySet55 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray54);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests56 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader58 = null;
        org.apache.lucene.index.Fields fields59 = null;
        org.apache.lucene.index.Fields fields60 = null;
        kuromojiAnalysisTests56.assertFieldsEquals("europarl.lines.txt.gz", indexReader58, fields59, fields60, false);
        org.apache.lucene.index.IndexReader indexReader64 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum66 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum67 = null;
        kuromojiAnalysisTests56.assertPositionsSkippingEquals("tests.failfast", indexReader64, 1, postingsEnum66, postingsEnum67);
        kuromojiAnalysisTests56.setIndexWriterMaxDocs(0);
        org.apache.lucene.index.IndexReader indexReader72 = null;
        org.apache.lucene.index.Fields fields73 = null;
        org.apache.lucene.index.Fields fields74 = null;
        kuromojiAnalysisTests56.assertFieldsEquals("tests.slow", indexReader72, fields73, fields74, false);
        org.apache.lucene.index.IndexReader indexReader78 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum80 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum81 = null;
        kuromojiAnalysisTests56.assertPositionsSkippingEquals("<unknown>", indexReader78, (int) 'a', postingsEnum80, postingsEnum81);
        kuromojiAnalysisTests56.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain84 = kuromojiAnalysisTests56.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray54, (java.lang.Object) ruleChain84);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) genericDeclarationArray0, (java.lang.Object[]) localeArray54);
    }

    @Test
    public void test3629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3629");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (byte) 0, (long) 100);
    }

    @Test
    public void test3630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3630");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 10);
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.weekly", indexReader4, terms5, terms6, true);
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) '#');
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        java.util.concurrent.ExecutorService[] executorServiceArray13 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean14 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray13);
        boolean boolean15 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray13);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests16 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests16.setIndexWriterMaxDocs((int) (byte) 10);
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        org.apache.lucene.index.Terms terms22 = null;
        kuromojiAnalysisTests16.assertTermsEquals("tests.weekly", indexReader20, terms21, terms22, true);
        kuromojiAnalysisTests16.setIndexWriterMaxDocs((int) '#');
        kuromojiAnalysisTests16.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests16.ensureCheckIndexPassed();
        kuromojiAnalysisTests16.setUp();
        kuromojiAnalysisTests16.resetCheckIndexStatus();
        org.junit.Assert.assertNotSame((java.lang.Object) boolean15, (java.lang.Object) kuromojiAnalysisTests16);
        kuromojiAnalysisTests16.ensureCheckIndexPassed();
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests16);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests16);
    }

    @Test
    public void test3631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3631");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((long) 10, 10L);
    }

    @Test
    public void test3632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3632");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        java.lang.String str12 = kuromojiAnalysisTests1.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests1);
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader18 = null;
        org.apache.lucene.index.Terms terms19 = null;
        org.apache.lucene.index.Terms terms20 = null;
        kuromojiAnalysisTests1.assertTermsEquals("", indexReader18, terms19, terms20, false);
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader24, 2, postingsEnum26, postingsEnum27);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test3633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3633");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) (short) 10, (float) '#', 0.0f);
    }

    @Test
    public void test3634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3634");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(0L, (long) 'a');
    }

    @Test
    public void test3635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3635");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", 0L, (long) 1);
    }

    @Test
    public void test3636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3636");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("hi!", indexReader8, (int) (byte) 0, postingsEnum10, postingsEnum11);
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests0.assertTermsEquals("random", indexReader14, terms15, terms16, true);
        kuromojiAnalysisTests0.setUp();
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.nightly", postingsEnum21, postingsEnum22, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests25 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.Fields fields28 = null;
        org.apache.lucene.index.Fields fields29 = null;
        kuromojiAnalysisTests25.assertFieldsEquals("europarl.lines.txt.gz", indexReader27, fields28, fields29, false);
        kuromojiAnalysisTests25.assertPathHasBeenCleared("tests.slow");
        kuromojiAnalysisTests25.assertPathHasBeenCleared("tests.slow");
        kuromojiAnalysisTests25.ensureCleanedUp();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests25);
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.apache.lucene.index.IndexReader indexReader42 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum44 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("europarl.lines.txt.gz", indexReader42, (int) (short) 100, postingsEnum44, postingsEnum45);
        org.apache.lucene.index.IndexReader indexReader48 = null;
        org.apache.lucene.index.Terms terms49 = null;
        org.apache.lucene.index.Terms terms50 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.maxfailures", indexReader48, terms49, terms50, true);
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        org.apache.lucene.index.IndexReader indexReader55 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum57 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum58 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader55, (int) 'a', postingsEnum57, postingsEnum58);
        org.apache.lucene.index.IndexReader indexReader61 = null;
        org.apache.lucene.index.Fields fields62 = null;
        org.apache.lucene.index.Fields fields63 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("tests.awaitsfix", indexReader61, fields62, fields63, false);
        org.apache.lucene.index.NumericDocValues numericDocValues68 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues69 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.slow", (int) 'a', numericDocValues68, numericDocValues69);
    }

    @Test
    public void test3637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3637");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(0.0f, (float) (short) 100, 1.0f);
    }

    @Test
    public void test3638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3638");
        java.lang.Object obj0 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("europarl.lines.txt.gz", indexReader4, fields5, fields6, false);
        kuromojiAnalysisTests2.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain11 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        java.lang.String str13 = kuromojiAnalysisTests2.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests2);
        kuromojiAnalysisTests2.tearDown();
        kuromojiAnalysisTests2.overrideTestDefaultQueryCache();
        org.junit.Assert.assertNotSame(obj0, (java.lang.Object) kuromojiAnalysisTests2);
        kuromojiAnalysisTests2.ensureCleanedUp();
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        kuromojiAnalysisTests2.assertDocsSkippingEquals("enwiki.random.lines.txt", indexReader21, (int) ' ', postingsEnum23, postingsEnum24, true);
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests2.assertDocsAndPositionsEnumEquals("hi!", postingsEnum28, postingsEnum29);
    }

    @Test
    public void test3639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3639");
        java.lang.String[] strArray7 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet8 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray7);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests9 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests9.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet8, (java.lang.Object) kuromojiAnalysisTests9);
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests9.assertDocsEnumEquals("tests.badapples", postingsEnum14, postingsEnum15, true);
        org.junit.rules.TestRule testRule18 = kuromojiAnalysisTests9.ruleChain;
        kuromojiAnalysisTests9.setUp();
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.Terms terms22 = null;
        org.apache.lucene.index.Terms terms23 = null;
        kuromojiAnalysisTests9.assertTermsEquals("tests.badapples", indexReader21, terms22, terms23, false);
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.Fields fields28 = null;
        org.apache.lucene.index.Fields fields29 = null;
        kuromojiAnalysisTests9.assertFieldsEquals("tests.weekly", indexReader27, fields28, fields29, true);
        kuromojiAnalysisTests9.ensureAllSearchContextsReleased();
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum35 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests9.assertDocsAndPositionsEnumEquals("tests.maxfailures", postingsEnum34, postingsEnum35);
    }

    @Test
    public void test3640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3640");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", 0.0d, (double) (byte) -1);
    }

    @Test
    public void test3641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3641");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.TestRule testRule10 = kuromojiAnalysisTests1.ruleChain;
        org.junit.rules.TestRule testRule11 = kuromojiAnalysisTests1.ruleChain;
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.slow", indexReader13, (int) (short) 1, postingsEnum15, postingsEnum16);
        org.junit.rules.TestRule testRule18 = kuromojiAnalysisTests1.ruleChain;
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        org.apache.lucene.index.Terms terms22 = null;
        kuromojiAnalysisTests1.assertTermsEquals("", indexReader20, terms21, terms22, false);
        kuromojiAnalysisTests1.tearDown();
        org.junit.rules.RuleChain ruleChain26 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests1.ensureCleanedUp();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet31 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray30);
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet32 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray30);
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet33 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray30);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.badapples", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) strComparableSet33);
    }

    @Test
    public void test3642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3642");
        java.lang.String[] strArray7 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet8 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray7);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests9 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests9.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet8, (java.lang.Object) kuromojiAnalysisTests9);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests13 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Fields fields16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        kuromojiAnalysisTests13.assertFieldsEquals("europarl.lines.txt.gz", indexReader15, fields16, fields17, false);
        kuromojiAnalysisTests13.ensureCleanedUp();
        kuromojiAnalysisTests13.resetCheckIndexStatus();
        kuromojiAnalysisTests13.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        kuromojiAnalysisTests13.assertPositionsSkippingEquals("", indexReader24, (int) (byte) 0, postingsEnum26, postingsEnum27);
        org.junit.Assert.assertNotEquals((java.lang.Object) "tests.failfast", (java.lang.Object) kuromojiAnalysisTests13);
        kuromojiAnalysisTests13.setUp();
        kuromojiAnalysisTests13.overrideTestDefaultQueryCache();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests32 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader34 = null;
        org.apache.lucene.index.Fields fields35 = null;
        org.apache.lucene.index.Fields fields36 = null;
        kuromojiAnalysisTests32.assertFieldsEquals("europarl.lines.txt.gz", indexReader34, fields35, fields36, false);
        kuromojiAnalysisTests32.ensureCleanedUp();
        kuromojiAnalysisTests32.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule41 = kuromojiAnalysisTests32.ruleChain;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests42 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader44 = null;
        org.apache.lucene.index.Fields fields45 = null;
        org.apache.lucene.index.Fields fields46 = null;
        kuromojiAnalysisTests42.assertFieldsEquals("europarl.lines.txt.gz", indexReader44, fields45, fields46, false);
        kuromojiAnalysisTests42.ensureCleanedUp();
        kuromojiAnalysisTests42.ensureCleanedUp();
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests32, (java.lang.Object) kuromojiAnalysisTests42);
        org.apache.lucene.index.PostingsEnum postingsEnum53 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum54 = null;
        kuromojiAnalysisTests42.assertDocsEnumEquals("tests.badapples", postingsEnum53, postingsEnum54, false);
        kuromojiAnalysisTests42.setIndexWriterMaxDocs((int) (byte) 10);
        org.apache.lucene.index.PostingsEnum postingsEnum60 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum61 = null;
        kuromojiAnalysisTests42.assertDocsEnumEquals("tests.monster", postingsEnum60, postingsEnum61, true);
        org.junit.rules.RuleChain ruleChain64 = kuromojiAnalysisTests42.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests13, (java.lang.Object) kuromojiAnalysisTests42);
    }

    @Test
    public void test3643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3643");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.TestRule testRule10 = kuromojiAnalysisTests1.ruleChain;
        org.junit.rules.TestRule testRule11 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        java.lang.Object obj13 = null;
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests1, obj13);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotNull("", obj13);
    }

    @Test
    public void test3644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3644");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.slow");
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (short) 100);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum17 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("enwiki.random.lines.txt", postingsEnum16, postingsEnum17);
    }

    @Test
    public void test3645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3645");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("europarl.lines.txt.gz", indexReader4, fields5, fields6, false);
        kuromojiAnalysisTests2.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain11 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests14 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        kuromojiAnalysisTests14.assertFieldsEquals("europarl.lines.txt.gz", indexReader16, fields17, fields18, false);
        kuromojiAnalysisTests14.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain23 = kuromojiAnalysisTests14.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests24 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Fields fields27 = null;
        org.apache.lucene.index.Fields fields28 = null;
        kuromojiAnalysisTests24.assertFieldsEquals("europarl.lines.txt.gz", indexReader26, fields27, fields28, false);
        kuromojiAnalysisTests24.ensureCleanedUp();
        kuromojiAnalysisTests24.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule33 = kuromojiAnalysisTests24.ruleChain;
        org.junit.Assert.assertNotSame("hi!", (java.lang.Object) kuromojiAnalysisTests14, (java.lang.Object) testRule33);
        org.junit.Assert.assertNotSame("tests.badapples", (java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) "hi!");
        kuromojiAnalysisTests2.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests2.overrideTestDefaultQueryCache();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests38 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader40 = null;
        org.apache.lucene.index.Fields fields41 = null;
        org.apache.lucene.index.Fields fields42 = null;
        kuromojiAnalysisTests38.assertFieldsEquals("europarl.lines.txt.gz", indexReader40, fields41, fields42, false);
        org.apache.lucene.index.IndexReader indexReader46 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum48 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum49 = null;
        kuromojiAnalysisTests38.assertPositionsSkippingEquals("hi!", indexReader46, (int) (byte) 0, postingsEnum48, postingsEnum49);
        org.apache.lucene.index.IndexReader indexReader52 = null;
        org.apache.lucene.index.Terms terms53 = null;
        org.apache.lucene.index.Terms terms54 = null;
        kuromojiAnalysisTests38.assertTermsEquals("random", indexReader52, terms53, terms54, true);
        kuromojiAnalysisTests38.setUp();
        org.apache.lucene.index.IndexReader indexReader59 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum61 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum62 = null;
        kuromojiAnalysisTests38.assertPositionsSkippingEquals("tests.failfast", indexReader59, (int) '4', postingsEnum61, postingsEnum62);
        kuromojiAnalysisTests38.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader66 = null;
        org.apache.lucene.index.Terms terms67 = null;
        org.apache.lucene.index.Terms terms68 = null;
        kuromojiAnalysisTests38.assertTermsEquals("tests.slow", indexReader66, terms67, terms68, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("random", (java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) kuromojiAnalysisTests38);
    }

    @Test
    public void test3646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3646");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((-1.0d), 1.0d, (double) (short) 1);
    }

    @Test
    public void test3647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3647");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.failfast", indexReader8, 1, postingsEnum10, postingsEnum11);
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Fields fields15 = null;
        org.apache.lucene.index.Fields fields16 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("tests.slow", indexReader14, fields15, fields16, true);
        org.junit.rules.TestRule testRule19 = kuromojiAnalysisTests0.ruleChain;
        java.lang.String str20 = kuromojiAnalysisTests0.getTestName();
        kuromojiAnalysisTests0.setUp();
        int[][] intArray22 = new int[][] {};
        java.util.Set<int[]> intArraySet23 = org.apache.lucene.util.LuceneTestCase.asSet(intArray22);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) intArray22);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests25 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.Fields fields28 = null;
        org.apache.lucene.index.Fields fields29 = null;
        kuromojiAnalysisTests25.assertFieldsEquals("europarl.lines.txt.gz", indexReader27, fields28, fields29, false);
        kuromojiAnalysisTests25.ensureCleanedUp();
        kuromojiAnalysisTests25.resetCheckIndexStatus();
        kuromojiAnalysisTests25.ensureCleanedUp();
        kuromojiAnalysisTests25.ensureCheckIndexPassed();
        kuromojiAnalysisTests25.restoreIndexWriterMaxDocs();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests37 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.Fields fields40 = null;
        org.apache.lucene.index.Fields fields41 = null;
        kuromojiAnalysisTests37.assertFieldsEquals("europarl.lines.txt.gz", indexReader39, fields40, fields41, false);
        kuromojiAnalysisTests37.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain46 = kuromojiAnalysisTests37.failureAndSuccessEvents;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain46;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain46;
        kuromojiAnalysisTests25.failureAndSuccessEvents = ruleChain46;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain46;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain46;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests53 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader55 = null;
        org.apache.lucene.index.Fields fields56 = null;
        org.apache.lucene.index.Fields fields57 = null;
        kuromojiAnalysisTests53.assertFieldsEquals("europarl.lines.txt.gz", indexReader55, fields56, fields57, false);
        org.apache.lucene.index.IndexReader indexReader61 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum63 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum64 = null;
        kuromojiAnalysisTests53.assertPositionsSkippingEquals("tests.failfast", indexReader61, 1, postingsEnum63, postingsEnum64);
        kuromojiAnalysisTests53.setIndexWriterMaxDocs(0);
        org.apache.lucene.index.IndexReader indexReader69 = null;
        org.apache.lucene.index.Fields fields70 = null;
        org.apache.lucene.index.Fields fields71 = null;
        kuromojiAnalysisTests53.assertFieldsEquals("tests.slow", indexReader69, fields70, fields71, false);
        kuromojiAnalysisTests53.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule75 = kuromojiAnalysisTests53.ruleChain;
        org.junit.Assert.assertNotNull("hi!", (java.lang.Object) testRule75);
        org.junit.rules.TestRule[] testRuleArray77 = new org.junit.rules.TestRule[] { ruleChain46, testRule75 };
        java.util.Set<org.junit.rules.TestRule> testRuleSet78 = org.apache.lucene.util.LuceneTestCase.asSet(testRuleArray77);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) testRuleArray77);
    }

    @Test
    public void test3648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3648");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (double) (short) 10, (double) (byte) 1);
    }

    @Test
    public void test3649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3649");
        char[] charArray1 = new char[] {};
        char[] charArray2 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray1, charArray2);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.nightly", (java.lang.Object) charArray1);
    }

    @Test
    public void test3650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3650");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (double) (byte) -1, (double) 100L, (double) (byte) 100);
    }

    @Test
    public void test3651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3651");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((long) 2, (long) 2);
    }

    @Test
    public void test3652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3652");
        long[] longArray6 = new long[] { ' ', 'a', (byte) 10, 100 };
        long[] longArray11 = new long[] { ' ', 'a', (byte) 10, 100 };
        long[] longArray16 = new long[] { ' ', 'a', (byte) 10, 100 };
        long[] longArray21 = new long[] { ' ', 'a', (byte) 10, 100 };
        long[] longArray26 = new long[] { ' ', 'a', (byte) 10, 100 };
        long[][] longArray27 = new long[][] { longArray6, longArray11, longArray16, longArray21, longArray26 };
        java.util.List<long[]> longArrayList28 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, longArray27);
        java.lang.Object[] objArray29 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("<unknown>", (java.lang.Object[]) longArray27, objArray29);
    }

    @Test
    public void test3653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3653");
        java.lang.Object obj1 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotNull("", obj1);
    }

    @Test
    public void test3654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3654");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", (double) '4', (double) 10.0f);
    }

    @Test
    public void test3655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3655");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) (byte) 0, (float) 'a', (float) 2);
    }

    @Test
    public void test3656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3656");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) (short) -1, (float) 10, (float) (-1L));
    }

    @Test
    public void test3657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3657");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests3 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        org.apache.lucene.index.Fields fields7 = null;
        kuromojiAnalysisTests3.assertFieldsEquals("europarl.lines.txt.gz", indexReader5, fields6, fields7, false);
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        kuromojiAnalysisTests3.assertPositionsSkippingEquals("hi!", indexReader11, (int) (byte) 0, postingsEnum13, postingsEnum14);
        kuromojiAnalysisTests3.ensureCheckIndexPassed();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests17 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.Assert.assertNotSame("tests.slow", (java.lang.Object) kuromojiAnalysisTests3, (java.lang.Object) kuromojiAnalysisTests17);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests19 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.Fields fields22 = null;
        org.apache.lucene.index.Fields fields23 = null;
        kuromojiAnalysisTests19.assertFieldsEquals("europarl.lines.txt.gz", indexReader21, fields22, fields23, false);
        kuromojiAnalysisTests19.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.TestRule testRule28 = kuromojiAnalysisTests19.ruleChain;
        kuromojiAnalysisTests19.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotEquals("tests.maxfailures", (java.lang.Object) "tests.slow", (java.lang.Object) kuromojiAnalysisTests19);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests31 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader33 = null;
        org.apache.lucene.index.Fields fields34 = null;
        org.apache.lucene.index.Fields fields35 = null;
        kuromojiAnalysisTests31.assertFieldsEquals("europarl.lines.txt.gz", indexReader33, fields34, fields35, false);
        kuromojiAnalysisTests31.ensureCleanedUp();
        kuromojiAnalysisTests31.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader41 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum43 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum44 = null;
        kuromojiAnalysisTests31.assertPositionsSkippingEquals("hi!", indexReader41, 1, postingsEnum43, postingsEnum44);
        kuromojiAnalysisTests31.assertPathHasBeenCleared("europarl.lines.txt.gz");
        kuromojiAnalysisTests31.resetCheckIndexStatus();
        kuromojiAnalysisTests31.tearDown();
        org.junit.rules.RuleChain ruleChain50 = kuromojiAnalysisTests31.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.slow", (java.lang.Object) "tests.maxfailures", (java.lang.Object) ruleChain50);
    }

    @Test
    public void test3658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3658");
        java.lang.String[] strArray7 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet8 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray7);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests9 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests9.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet8, (java.lang.Object) kuromojiAnalysisTests9);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests13 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Fields fields16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        kuromojiAnalysisTests13.assertFieldsEquals("europarl.lines.txt.gz", indexReader15, fields16, fields17, false);
        kuromojiAnalysisTests13.ensureCleanedUp();
        kuromojiAnalysisTests13.resetCheckIndexStatus();
        kuromojiAnalysisTests13.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        kuromojiAnalysisTests13.assertPositionsSkippingEquals("", indexReader24, (int) (byte) 0, postingsEnum26, postingsEnum27);
        org.junit.Assert.assertNotEquals((java.lang.Object) "tests.failfast", (java.lang.Object) kuromojiAnalysisTests13);
        kuromojiAnalysisTests13.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.Fields fields33 = null;
        org.apache.lucene.index.Fields fields34 = null;
        kuromojiAnalysisTests13.assertFieldsEquals("random", indexReader32, fields33, fields34, true);
        org.apache.lucene.index.IndexReader indexReader38 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum40 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        kuromojiAnalysisTests13.assertDocsSkippingEquals("tests.maxfailures", indexReader38, (int) ' ', postingsEnum40, postingsEnum41, false);
        org.apache.lucene.index.NumericDocValues numericDocValues46 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues47 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests13.assertDocValuesEquals("tests.slow", (int) (short) -1, numericDocValues46, numericDocValues47);
    }

    @Test
    public void test3659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3659");
        java.lang.String[] strArray7 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet8 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray7);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests9 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests9.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet8, (java.lang.Object) kuromojiAnalysisTests9);
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests9.assertDocsEnumEquals("tests.badapples", postingsEnum14, postingsEnum15, true);
        org.junit.rules.TestRule testRule18 = kuromojiAnalysisTests9.ruleChain;
        kuromojiAnalysisTests9.setUp();
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.Terms terms22 = null;
        org.apache.lucene.index.Terms terms23 = null;
        kuromojiAnalysisTests9.assertTermsEquals("tests.badapples", indexReader21, terms22, terms23, false);
        kuromojiAnalysisTests9.ensureAllSearchContextsReleased();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests9);
    }

    @Test
    public void test3660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3660");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.weekly", (-1.0d), (double) 100L);
    }

    @Test
    public void test3661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3661");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader10, terms11, terms12, false);
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.badapples", postingsEnum20, postingsEnum21);
    }

    @Test
    public void test3662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3662");
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray1 = new java.lang.reflect.GenericDeclaration[] {};
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet2 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray1);
        java.util.concurrent.ExecutorService[] executorServiceArray4 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean5 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        java.util.concurrent.ExecutorService[] executorServiceArray6 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean7 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray6);
        boolean boolean8 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray6);
        boolean boolean9 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray6);
        boolean boolean10 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray6);
        boolean boolean11 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray6);
        boolean boolean12 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray6);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray4, (java.lang.Object[]) executorServiceArray6);
        java.util.concurrent.ExecutorService[] executorServiceArray14 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean15 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray14);
        boolean boolean16 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray14);
        boolean boolean17 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray14);
        boolean boolean18 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray14);
        boolean boolean19 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray14);
        org.junit.Assert.assertEquals("tests.badapples", (java.lang.Object[]) executorServiceArray4, (java.lang.Object[]) executorServiceArray14);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("enwiki.random.lines.txt", (java.lang.Object) genericDeclarationSet2, (java.lang.Object) "tests.badapples");
    }

    @Test
    public void test3663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3663");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        java.lang.String[] strArray15 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet16 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray15);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests17 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests17.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet16, (java.lang.Object) kuromojiAnalysisTests17);
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        kuromojiAnalysisTests17.assertDocsEnumEquals("tests.badapples", postingsEnum22, postingsEnum23, true);
        org.junit.rules.TestRule testRule26 = kuromojiAnalysisTests17.ruleChain;
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        kuromojiAnalysisTests17.assertDocsSkippingEquals("tests.maxfailures", indexReader28, (int) (byte) 100, postingsEnum30, postingsEnum31, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.Fields fields37 = null;
        org.apache.lucene.index.Fields fields38 = null;
        kuromojiAnalysisTests34.assertFieldsEquals("europarl.lines.txt.gz", indexReader36, fields37, fields38, false);
        kuromojiAnalysisTests34.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain43 = kuromojiAnalysisTests34.failureAndSuccessEvents;
        kuromojiAnalysisTests17.failureAndSuccessEvents = ruleChain43;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain43;
        org.apache.lucene.index.PostingsEnum postingsEnum47 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum48 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("<unknown>", postingsEnum47, postingsEnum48, true);
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (short) 10);
        org.apache.lucene.index.IndexReader indexReader54 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum56 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum57 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.failfast", indexReader54, (int) ' ', postingsEnum56, postingsEnum57, false);
        java.lang.String str60 = kuromojiAnalysisTests1.getTestName();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests62 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader64 = null;
        org.apache.lucene.index.Fields fields65 = null;
        org.apache.lucene.index.Fields fields66 = null;
        kuromojiAnalysisTests62.assertFieldsEquals("europarl.lines.txt.gz", indexReader64, fields65, fields66, false);
        kuromojiAnalysisTests62.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.TestRule testRule71 = kuromojiAnalysisTests62.ruleChain;
        org.junit.rules.TestRule testRule72 = kuromojiAnalysisTests62.ruleChain;
        org.apache.lucene.index.IndexReader indexReader74 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum76 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum77 = null;
        kuromojiAnalysisTests62.assertPositionsSkippingEquals("tests.slow", indexReader74, (int) (short) 1, postingsEnum76, postingsEnum77);
        org.junit.rules.TestRule testRule79 = kuromojiAnalysisTests62.ruleChain;
        org.apache.lucene.index.IndexReader indexReader81 = null;
        org.apache.lucene.index.Terms terms82 = null;
        org.apache.lucene.index.Terms terms83 = null;
        kuromojiAnalysisTests62.assertTermsEquals("", indexReader81, terms82, terms83, false);
        kuromojiAnalysisTests62.tearDown();
        org.junit.rules.RuleChain ruleChain87 = kuromojiAnalysisTests62.failureAndSuccessEvents;
        kuromojiAnalysisTests62.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests62.ensureCleanedUp();
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests62);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests62.assertPathHasBeenCleared("");
    }

    @Test
    public void test3664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3664");
        float[][][][] floatArray0 = new float[][][][] {};
        java.util.Set<float[][][]> floatArraySet1 = org.apache.lucene.util.LuceneTestCase.asSet(floatArray0);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests3 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        org.apache.lucene.index.Fields fields7 = null;
        kuromojiAnalysisTests3.assertFieldsEquals("europarl.lines.txt.gz", indexReader5, fields6, fields7, false);
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        kuromojiAnalysisTests3.assertPositionsSkippingEquals("hi!", indexReader11, (int) (byte) 0, postingsEnum13, postingsEnum14);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        org.apache.lucene.index.Terms terms19 = null;
        kuromojiAnalysisTests3.assertTermsEquals("random", indexReader17, terms18, terms19, true);
        kuromojiAnalysisTests3.setUp();
        kuromojiAnalysisTests3.tearDown();
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.Fields fields26 = null;
        org.apache.lucene.index.Fields fields27 = null;
        kuromojiAnalysisTests3.assertFieldsEquals("", indexReader25, fields26, fields27, false);
        java.lang.String str30 = kuromojiAnalysisTests3.getTestName();
        java.util.Locale locale32 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.lang.Class<?> wildcardClass33 = locale32.getClass();
        java.util.Locale locale35 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.lang.Class<?> wildcardClass36 = locale35.getClass();
        java.util.Locale locale38 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.lang.Class<?> wildcardClass39 = locale38.getClass();
        java.util.Locale locale41 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.lang.Class<?> wildcardClass42 = locale41.getClass();
        java.util.Locale locale44 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.lang.Class<?> wildcardClass45 = locale44.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray46 = new java.lang.reflect.AnnotatedElement[] { wildcardClass33, wildcardClass36, wildcardClass39, wildcardClass42, wildcardClass45 };
        java.util.Set<java.lang.reflect.AnnotatedElement> annotatedElementSet47 = org.apache.lucene.util.LuceneTestCase.asSet(annotatedElementArray46);
        java.lang.Object obj48 = null;
        org.junit.Assert.assertNotEquals((java.lang.Object) annotatedElementArray46, obj48);
        org.junit.Assert.assertNotEquals("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests3, (java.lang.Object) annotatedElementArray46);
        java.util.Set<java.lang.Object> objSet51 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Object[]) annotatedElementArray46);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) floatArray0, (java.lang.Object[]) annotatedElementArray46);
    }

    @Test
    public void test3665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3665");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        java.lang.String str10 = kuromojiAnalysisTests0.getTestName();
        kuromojiAnalysisTests0.setUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Fields fields15 = null;
        org.apache.lucene.index.Fields fields16 = null;
        kuromojiAnalysisTests12.assertFieldsEquals("europarl.lines.txt.gz", indexReader14, fields15, fields16, false);
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        kuromojiAnalysisTests12.assertPositionsSkippingEquals("tests.failfast", indexReader20, 1, postingsEnum22, postingsEnum23);
        kuromojiAnalysisTests12.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests12.ensureCheckIndexPassed();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests12);
    }

    @Test
    public void test3666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3666");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (short) 10, (double) 0L);
    }

    @Test
    public void test3667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3667");
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling3 = org.apache.lucene.util.LuceneTestCase.TEST_THROTTLING;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray4 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] { throttling3 };
        java.util.List<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingList5 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (byte) 0, throttlingArray4);
        org.junit.Assert.assertNotNull("europarl.lines.txt.gz", (java.lang.Object) throttlingArray4);
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet7 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray4);
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingSet8 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray4);
        java.util.concurrent.ExecutorService[] executorServiceArray10 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean11 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray10);
        boolean boolean12 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray10);
        boolean boolean13 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray10);
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray14 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet15 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray14);
        java.util.Set<java.lang.reflect.AnnotatedElement[]> annotatedElementArraySet16 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.reflect.AnnotatedElement[][]) genericDeclarationArray14);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray10, (java.lang.Object[]) genericDeclarationArray14);
        java.util.concurrent.ExecutorService[][][] executorServiceArray18 = new java.util.concurrent.ExecutorService[][][] {};
        java.util.Set<java.util.concurrent.ExecutorService[][]> executorServiceArraySet19 = org.apache.lucene.util.LuceneTestCase.asSet(executorServiceArray18);
        org.junit.Assert.assertEquals("random", (java.lang.Object[]) executorServiceArray10, (java.lang.Object[]) executorServiceArray18);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.monster", (java.lang.Object[]) throttlingArray4, (java.lang.Object[]) executorServiceArray18);
    }

    @Test
    public void test3668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3668");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.TestRule testRule9 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("random", postingsEnum12, postingsEnum13);
    }

    @Test
    public void test3669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3669");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("hi!", indexReader9, (int) (byte) 0, postingsEnum11, postingsEnum12);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.tearDown();
        java.util.Locale locale17 = org.apache.lucene.util.LuceneTestCase.localeForName("hi!");
        org.junit.Assert.assertNotSame("tests.badapples", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) "hi!");
        org.apache.lucene.index.NumericDocValues numericDocValues21 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues22 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocValuesEquals("hi!", 4, numericDocValues21, numericDocValues22);
    }

    @Test
    public void test3670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3670");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (byte) 10);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        org.apache.lucene.index.Terms terms9 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.badapples", indexReader7, terms8, terms9, false);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests14 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        kuromojiAnalysisTests14.assertFieldsEquals("europarl.lines.txt.gz", indexReader16, fields17, fields18, false);
        kuromojiAnalysisTests14.tearDown();
        kuromojiAnalysisTests14.overrideTestDefaultQueryCache();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests14, (java.lang.Object) "tests.awaitsfix");
        kuromojiAnalysisTests14.ensureCleanedUp();
        kuromojiAnalysisTests14.ensureCheckIndexPassed();
        kuromojiAnalysisTests14.overrideTestDefaultQueryCache();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests28 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.Fields fields31 = null;
        org.apache.lucene.index.Fields fields32 = null;
        kuromojiAnalysisTests28.assertFieldsEquals("europarl.lines.txt.gz", indexReader30, fields31, fields32, false);
        kuromojiAnalysisTests28.ensureCleanedUp();
        kuromojiAnalysisTests28.assertPathHasBeenCleared("tests.failfast");
        kuromojiAnalysisTests28.tearDown();
        kuromojiAnalysisTests28.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests28.ensureCleanedUp();
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests14, (java.lang.Object) kuromojiAnalysisTests28);
        kuromojiAnalysisTests28.ensureCleanedUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests28);
    }

    @Test
    public void test3671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3671");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (double) 100.0f, (double) (short) 0);
    }

    @Test
    public void test3672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3672");
        java.lang.Iterable[][] iterableArray2 = new java.lang.Iterable[0][];
        @SuppressWarnings("unchecked")
        java.lang.Iterable<java.util.Locale>[][] localeIterableArray3 = (java.lang.Iterable<java.util.Locale>[][]) iterableArray2;
        java.util.Set<java.lang.Iterable<java.util.Locale>[]> localeIterableArraySet4 = org.apache.lucene.util.LuceneTestCase.asSet(localeIterableArray3);
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray6 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet7 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray6);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests8 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Fields fields11 = null;
        org.apache.lucene.index.Fields fields12 = null;
        kuromojiAnalysisTests8.assertFieldsEquals("europarl.lines.txt.gz", indexReader10, fields11, fields12, false);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests8.assertPositionsSkippingEquals("tests.failfast", indexReader16, 1, postingsEnum18, postingsEnum19);
        kuromojiAnalysisTests8.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests8.ensureCleanedUp();
        kuromojiAnalysisTests8.resetCheckIndexStatus();
        kuromojiAnalysisTests8.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.Fields fields28 = null;
        org.apache.lucene.index.Fields fields29 = null;
        kuromojiAnalysisTests8.assertFieldsEquals("enwiki.random.lines.txt", indexReader27, fields28, fields29, false);
        org.apache.lucene.index.IndexReader indexReader33 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum35 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum36 = null;
        kuromojiAnalysisTests8.assertDocsSkippingEquals("tests.weekly", indexReader33, (int) (byte) 0, postingsEnum35, postingsEnum36, true);
        org.junit.Assert.assertNotSame("tests.weekly", (java.lang.Object) genericDeclarationArray6, (java.lang.Object) "tests.weekly");
        java.util.concurrent.ExecutorService[] executorServiceArray40 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean41 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray40);
        org.junit.Assert.assertEquals((java.lang.Object[]) genericDeclarationArray6, (java.lang.Object[]) executorServiceArray40);
        org.junit.Assert.assertEquals((java.lang.Object[]) localeIterableArray3, (java.lang.Object[]) genericDeclarationArray6);
        java.util.Set<java.lang.Iterable<java.util.Locale>[]> localeIterableArraySet44 = org.apache.lucene.util.LuceneTestCase.asSet(localeIterableArray3);
        java.util.concurrent.ExecutorService executorService45 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray46 = new java.util.concurrent.ExecutorService[] { executorService45 };
        boolean boolean47 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray46);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.nightly", (java.lang.Object[]) localeIterableArray3, (java.lang.Object[]) executorServiceArray46);
    }

    @Test
    public void test3673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3673");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("hi!", (double) (short) 10, (double) (-1L));
    }

    @Test
    public void test3674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3674");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(0.0f, (float) 2, (float) (byte) -1);
    }

    @Test
    public void test3675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3675");
        java.lang.String[] strArray8 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet9 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray8);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests10 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests10.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet9, (java.lang.Object) kuromojiAnalysisTests10);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests14 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        kuromojiAnalysisTests14.assertFieldsEquals("europarl.lines.txt.gz", indexReader16, fields17, fields18, false);
        kuromojiAnalysisTests14.ensureCleanedUp();
        kuromojiAnalysisTests14.resetCheckIndexStatus();
        kuromojiAnalysisTests14.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        kuromojiAnalysisTests14.assertPositionsSkippingEquals("", indexReader25, (int) (byte) 0, postingsEnum27, postingsEnum28);
        org.junit.Assert.assertNotEquals((java.lang.Object) "tests.failfast", (java.lang.Object) kuromojiAnalysisTests14);
        kuromojiAnalysisTests14.setUp();
        java.lang.String[] strArray39 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet40 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray39);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests41 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests41.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet40, (java.lang.Object) kuromojiAnalysisTests41);
        java.lang.String str45 = kuromojiAnalysisTests41.getTestName();
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests14, (java.lang.Object) kuromojiAnalysisTests41);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests48 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader50 = null;
        org.apache.lucene.index.Fields fields51 = null;
        org.apache.lucene.index.Fields fields52 = null;
        kuromojiAnalysisTests48.assertFieldsEquals("europarl.lines.txt.gz", indexReader50, fields51, fields52, false);
        kuromojiAnalysisTests48.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain57 = kuromojiAnalysisTests48.failureAndSuccessEvents;
        kuromojiAnalysisTests48.resetCheckIndexStatus();
        java.lang.String str59 = kuromojiAnalysisTests48.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests48);
        kuromojiAnalysisTests48.tearDown();
        kuromojiAnalysisTests48.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain63 = kuromojiAnalysisTests48.failureAndSuccessEvents;
        kuromojiAnalysisTests48.tearDown();
        kuromojiAnalysisTests48.setUp();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests41, (java.lang.Object) kuromojiAnalysisTests48);
        org.apache.lucene.index.PostingsEnum postingsEnum68 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum69 = null;
        kuromojiAnalysisTests48.assertDocsEnumEquals("tests.badapples", postingsEnum68, postingsEnum69, true);
        org.apache.lucene.index.IndexReader indexReader73 = null;
        org.apache.lucene.index.Terms terms74 = null;
        org.apache.lucene.index.Terms terms75 = null;
        kuromojiAnalysisTests48.assertTermsEquals("<unknown>", indexReader73, terms74, terms75, true);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotNull("tests.nightly", (java.lang.Object) indexReader73);
    }

    @Test
    public void test3676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3676");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("europarl.lines.txt.gz", indexReader4, fields5, fields6, false);
        kuromojiAnalysisTests2.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain11 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        java.lang.String str13 = kuromojiAnalysisTests2.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests2);
        kuromojiAnalysisTests2.tearDown();
        kuromojiAnalysisTests2.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain17 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        java.lang.Object obj18 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.maxfailures", (java.lang.Object) kuromojiAnalysisTests2, obj18);
    }

    @Test
    public void test3677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3677");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", (float) 1, (float) (byte) 100, (float) 2);
    }

    @Test
    public void test3678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3678");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(10.0d, 1.0d);
    }

    @Test
    public void test3679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3679");
        byte[] byteArray1 = null;
        byte[] byteArray3 = new byte[] {};
        byte[] byteArray4 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray3, byteArray4);
        byte[] byteArray8 = new byte[] {};
        byte[] byteArray9 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray8, byteArray9);
        byte[] byteArray12 = new byte[] {};
        byte[] byteArray13 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray12, byteArray13);
        org.junit.Assert.assertArrayEquals(byteArray9, byteArray13);
        byte[] byteArray17 = new byte[] {};
        byte[] byteArray18 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray17, byteArray18);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray22 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray21, byteArray22);
        org.junit.Assert.assertArrayEquals(byteArray18, byteArray22);
        org.junit.Assert.assertArrayEquals("tests.nightly", byteArray13, byteArray22);
        org.junit.Assert.assertArrayEquals(byteArray4, byteArray13);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", byteArray1, byteArray4);
    }

    @Test
    public void test3680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3680");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (byte) 0);
        org.junit.rules.RuleChain ruleChain12 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.junit.Assert.assertNotNull("tests.monster", (java.lang.Object) kuromojiAnalysisTests1);
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Fields fields16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("tests.failfast", indexReader15, fields16, fields17, true);
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocsAndPositionsEnumEquals("europarl.lines.txt.gz", postingsEnum21, postingsEnum22);
    }

    @Test
    public void test3681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3681");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 10.0f, (double) 'a');
    }

    @Test
    public void test3682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3682");
        java.lang.String[] strArray8 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet9 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray8);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests10 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests10.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet9, (java.lang.Object) kuromojiAnalysisTests10);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests14 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        kuromojiAnalysisTests14.assertFieldsEquals("europarl.lines.txt.gz", indexReader16, fields17, fields18, false);
        kuromojiAnalysisTests14.ensureCleanedUp();
        kuromojiAnalysisTests14.resetCheckIndexStatus();
        kuromojiAnalysisTests14.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        kuromojiAnalysisTests14.assertPositionsSkippingEquals("", indexReader25, (int) (byte) 0, postingsEnum27, postingsEnum28);
        org.junit.Assert.assertNotEquals((java.lang.Object) "tests.failfast", (java.lang.Object) kuromojiAnalysisTests14);
        kuromojiAnalysisTests14.setUp();
        kuromojiAnalysisTests14.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests14.resetCheckIndexStatus();
        kuromojiAnalysisTests14.ensureCleanedUp();
        kuromojiAnalysisTests14.setUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests36 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader38 = null;
        org.apache.lucene.index.Fields fields39 = null;
        org.apache.lucene.index.Fields fields40 = null;
        kuromojiAnalysisTests36.assertFieldsEquals("europarl.lines.txt.gz", indexReader38, fields39, fields40, false);
        kuromojiAnalysisTests36.ensureCleanedUp();
        kuromojiAnalysisTests36.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader46 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum48 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum49 = null;
        kuromojiAnalysisTests36.assertPositionsSkippingEquals("hi!", indexReader46, 1, postingsEnum48, postingsEnum49);
        kuromojiAnalysisTests36.setUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("<unknown>", (java.lang.Object) kuromojiAnalysisTests14, (java.lang.Object) kuromojiAnalysisTests36);
    }

    @Test
    public void test3683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3683");
        org.junit.rules.TestRule testRule0 = org.apache.lucene.util.LuceneTestCase.classRules;
        java.lang.String[] strArray8 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet9 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray8);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests10 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests10.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet9, (java.lang.Object) kuromojiAnalysisTests10);
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        kuromojiAnalysisTests10.assertDocsEnumEquals("tests.badapples", postingsEnum15, postingsEnum16, true);
        org.junit.rules.TestRule testRule19 = kuromojiAnalysisTests10.ruleChain;
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        kuromojiAnalysisTests10.assertDocsSkippingEquals("tests.maxfailures", indexReader21, (int) (byte) 100, postingsEnum23, postingsEnum24, false);
        kuromojiAnalysisTests10.resetCheckIndexStatus();
        kuromojiAnalysisTests10.setIndexWriterMaxDocs(1);
        kuromojiAnalysisTests10.setIndexWriterMaxDocs((int) (byte) 0);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) testRule0, (java.lang.Object) (byte) 0);
    }

    @Test
    public void test3684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3684");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (short) 10, (double) 0);
    }

    @Test
    public void test3685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3685");
        java.lang.String[] strArray8 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet9 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray8);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests10 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests10.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet9, (java.lang.Object) kuromojiAnalysisTests10);
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        kuromojiAnalysisTests10.assertDocsEnumEquals("tests.badapples", postingsEnum15, postingsEnum16, true);
        org.junit.rules.TestRule testRule19 = kuromojiAnalysisTests10.ruleChain;
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        kuromojiAnalysisTests10.assertDocsSkippingEquals("tests.maxfailures", indexReader21, (int) (byte) 100, postingsEnum23, postingsEnum24, false);
        java.lang.Object obj27 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotSame("europarl.lines.txt.gz", (java.lang.Object) postingsEnum23, obj27);
    }

    @Test
    public void test3686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3686");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("", indexReader12, (int) (byte) 0, postingsEnum14, postingsEnum15);
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests1.setUp();
        org.junit.rules.TestRule testRule19 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        java.lang.String str24 = kuromojiAnalysisTests1.getTestName();
        char[] charArray26 = new char[] {};
        char[] charArray27 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray26, charArray27);
        char[] charArray29 = new char[] {};
        char[] charArray30 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray29, charArray30);
        org.junit.Assert.assertArrayEquals(charArray27, charArray30);
        char[] charArray33 = new char[] {};
        char[] charArray34 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray33, charArray34);
        char[] charArray36 = new char[] {};
        char[] charArray37 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray36, charArray37);
        org.junit.Assert.assertArrayEquals(charArray34, charArray37);
        org.junit.Assert.assertArrayEquals("tests.monster", charArray30, charArray37);
        char[] charArray41 = new char[] {};
        char[] charArray42 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray41, charArray42);
        char[] charArray44 = new char[] {};
        char[] charArray45 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray44, charArray45);
        org.junit.Assert.assertArrayEquals(charArray42, charArray45);
        char[] charArray48 = new char[] {};
        char[] charArray49 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray48, charArray49);
        org.junit.Assert.assertArrayEquals(charArray42, charArray49);
        org.junit.Assert.assertArrayEquals(charArray37, charArray42);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) charArray37);
    }

    @Test
    public void test3687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3687");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("hi!", indexReader9, (int) (byte) 0, postingsEnum11, postingsEnum12);
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests1.assertTermsEquals("random", indexReader15, terms16, terms17, true);
        kuromojiAnalysisTests1.setUp();
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("tests.nightly", postingsEnum22, postingsEnum23, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests26 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.Fields fields29 = null;
        org.apache.lucene.index.Fields fields30 = null;
        kuromojiAnalysisTests26.assertFieldsEquals("europarl.lines.txt.gz", indexReader28, fields29, fields30, false);
        kuromojiAnalysisTests26.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain35 = kuromojiAnalysisTests26.failureAndSuccessEvents;
        kuromojiAnalysisTests26.ensureAllSearchContextsReleased();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests37 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.Fields fields40 = null;
        org.apache.lucene.index.Fields fields41 = null;
        kuromojiAnalysisTests37.assertFieldsEquals("europarl.lines.txt.gz", indexReader39, fields40, fields41, false);
        org.apache.lucene.index.IndexReader indexReader45 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum47 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum48 = null;
        kuromojiAnalysisTests37.assertPositionsSkippingEquals("hi!", indexReader45, (int) (byte) 0, postingsEnum47, postingsEnum48);
        kuromojiAnalysisTests37.ensureCheckIndexPassed();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests[] kuromojiAnalysisTestsArray51 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests[] { kuromojiAnalysisTests1, kuromojiAnalysisTests26, kuromojiAnalysisTests37 };
        java.util.Set<org.elasticsearch.index.analysis.KuromojiAnalysisTests> kuromojiAnalysisTestsSet52 = org.apache.lucene.util.LuceneTestCase.asSet(kuromojiAnalysisTestsArray51);
        java.util.Set<org.junit.Assert> assertSet53 = org.apache.lucene.util.LuceneTestCase.asSet((org.junit.Assert[]) kuromojiAnalysisTestsArray51);
        java.util.Set<org.elasticsearch.test.ESTestCase> eSTestCaseSet54 = org.apache.lucene.util.LuceneTestCase.asSet((org.elasticsearch.test.ESTestCase[]) kuromojiAnalysisTestsArray51);
        java.util.concurrent.ExecutorService[] executorServiceArray57 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean58 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray57);
        java.util.concurrent.ExecutorService[] executorServiceArray59 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean60 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray59);
        boolean boolean61 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray59);
        boolean boolean62 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray59);
        boolean boolean63 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray59);
        boolean boolean64 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray59);
        boolean boolean65 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray59);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray57, (java.lang.Object[]) executorServiceArray59);
        java.util.concurrent.ExecutorService[] executorServiceArray67 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean68 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray67);
        boolean boolean69 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray67);
        boolean boolean70 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray67);
        boolean boolean71 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray67);
        boolean boolean72 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray67);
        org.junit.Assert.assertEquals("tests.badapples", (java.lang.Object[]) executorServiceArray57, (java.lang.Object[]) executorServiceArray67);
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray75 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet76 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray75);
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray78 = new java.lang.reflect.GenericDeclaration[] {};
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet79 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray78);
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet80 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray78);
        org.junit.Assert.assertNotEquals((java.lang.Object) 1, (java.lang.Object) genericDeclarationArray78);
        java.util.Set<java.lang.reflect.AnnotatedElement> annotatedElementSet82 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.reflect.AnnotatedElement[]) genericDeclarationArray78);
        org.junit.Assert.assertEquals("", (java.lang.Object[]) genericDeclarationArray75, (java.lang.Object[]) genericDeclarationArray78);
        org.junit.Assert.assertEquals("random", (java.lang.Object[]) executorServiceArray67, (java.lang.Object[]) genericDeclarationArray75);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", (java.lang.Object[]) kuromojiAnalysisTestsArray51, (java.lang.Object[]) executorServiceArray67);
    }

    @Test
    public void test3688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3688");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) (byte) 1, (float) '4', (float) 3);
    }

    @Test
    public void test3689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3689");
        java.util.concurrent.ExecutorService[][][] executorServiceArray1 = new java.util.concurrent.ExecutorService[][][] {};
        java.util.Set<java.util.concurrent.ExecutorService[][]> executorServiceArraySet2 = org.apache.lucene.util.LuceneTestCase.asSet(executorServiceArray1);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests5 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.Fields fields8 = null;
        org.apache.lucene.index.Fields fields9 = null;
        kuromojiAnalysisTests5.assertFieldsEquals("europarl.lines.txt.gz", indexReader7, fields8, fields9, false);
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        kuromojiAnalysisTests5.assertPositionsSkippingEquals("hi!", indexReader13, (int) (byte) 0, postingsEnum15, postingsEnum16);
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.Terms terms20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        kuromojiAnalysisTests5.assertTermsEquals("random", indexReader19, terms20, terms21, true);
        kuromojiAnalysisTests5.setUp();
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        kuromojiAnalysisTests5.assertDocsEnumEquals("tests.nightly", postingsEnum26, postingsEnum27, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests30 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.Fields fields33 = null;
        org.apache.lucene.index.Fields fields34 = null;
        kuromojiAnalysisTests30.assertFieldsEquals("europarl.lines.txt.gz", indexReader32, fields33, fields34, false);
        kuromojiAnalysisTests30.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain39 = kuromojiAnalysisTests30.failureAndSuccessEvents;
        kuromojiAnalysisTests30.ensureAllSearchContextsReleased();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests41 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader43 = null;
        org.apache.lucene.index.Fields fields44 = null;
        org.apache.lucene.index.Fields fields45 = null;
        kuromojiAnalysisTests41.assertFieldsEquals("europarl.lines.txt.gz", indexReader43, fields44, fields45, false);
        org.apache.lucene.index.IndexReader indexReader49 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum51 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum52 = null;
        kuromojiAnalysisTests41.assertPositionsSkippingEquals("hi!", indexReader49, (int) (byte) 0, postingsEnum51, postingsEnum52);
        kuromojiAnalysisTests41.ensureCheckIndexPassed();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests[] kuromojiAnalysisTestsArray55 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests[] { kuromojiAnalysisTests5, kuromojiAnalysisTests30, kuromojiAnalysisTests41 };
        java.util.Set<org.elasticsearch.index.analysis.KuromojiAnalysisTests> kuromojiAnalysisTestsSet56 = org.apache.lucene.util.LuceneTestCase.asSet(kuromojiAnalysisTestsArray55);
        java.util.Set<org.junit.Assert> assertSet57 = org.apache.lucene.util.LuceneTestCase.asSet((org.junit.Assert[]) kuromojiAnalysisTestsArray55);
        org.junit.rules.RuleChain[] ruleChainArray58 = new org.junit.rules.RuleChain[] {};
        org.junit.rules.RuleChain[][] ruleChainArray59 = new org.junit.rules.RuleChain[][] { ruleChainArray58 };
        java.util.Set<org.junit.rules.RuleChain[]> ruleChainArraySet60 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray59);
        org.junit.Assert.assertNotEquals("tests.failfast", (java.lang.Object) kuromojiAnalysisTestsArray55, (java.lang.Object) ruleChainArray59);
        java.util.List<org.junit.Assert> assertList62 = org.elasticsearch.test.ESTestCase.randomSubsetOf(0, (org.junit.Assert[]) kuromojiAnalysisTestsArray55);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", (java.lang.Object[]) executorServiceArray1, (java.lang.Object[]) kuromojiAnalysisTestsArray55);
    }

    @Test
    public void test3690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3690");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.awaitsfix", (long) 0, (long) 100);
    }

    @Test
    public void test3691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3691");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (long) (short) 1, (long) 10);
    }

    @Test
    public void test3692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3692");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.nightly", (double) 100, (double) 0);
    }

    @Test
    public void test3693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3693");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        java.lang.String str12 = kuromojiAnalysisTests1.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests1);
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.setUp();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("", indexReader17, (int) '#', postingsEnum19, postingsEnum20);
        float[][] floatArray22 = new float[][] {};
        java.util.Set<float[]> floatArraySet23 = org.apache.lucene.util.LuceneTestCase.asSet(floatArray22);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests24 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Fields fields27 = null;
        org.apache.lucene.index.Fields fields28 = null;
        kuromojiAnalysisTests24.assertFieldsEquals("europarl.lines.txt.gz", indexReader26, fields27, fields28, false);
        kuromojiAnalysisTests24.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain33 = kuromojiAnalysisTests24.failureAndSuccessEvents;
        kuromojiAnalysisTests24.ensureAllSearchContextsReleased();
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum39 = null;
        kuromojiAnalysisTests24.assertDocsSkippingEquals("enwiki.random.lines.txt", indexReader36, 100, postingsEnum38, postingsEnum39, false);
        org.junit.Assert.assertNotSame((java.lang.Object) floatArraySet23, (java.lang.Object) "enwiki.random.lines.txt");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) "enwiki.random.lines.txt");
    }

    @Test
    public void test3694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3694");
        int[][][][][] intArray1 = new int[][][][][] {};
        java.util.Set<int[][][][]> intArraySet2 = org.apache.lucene.util.LuceneTestCase.asSet(intArray1);
        java.util.Set<int[][][][]> intArraySet3 = org.apache.lucene.util.LuceneTestCase.asSet(intArray1);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests[] kuromojiAnalysisTestsArray5 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests[] {};
        org.elasticsearch.index.analysis.KuromojiAnalysisTests[] kuromojiAnalysisTestsArray6 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests[] {};
        org.elasticsearch.index.analysis.KuromojiAnalysisTests[] kuromojiAnalysisTestsArray7 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests[] {};
        org.elasticsearch.index.analysis.KuromojiAnalysisTests[] kuromojiAnalysisTestsArray8 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests[] {};
        org.elasticsearch.index.analysis.KuromojiAnalysisTests[] kuromojiAnalysisTestsArray9 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests[] {};
        org.elasticsearch.index.analysis.KuromojiAnalysisTests[][] kuromojiAnalysisTestsArray10 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests[][] { kuromojiAnalysisTestsArray5, kuromojiAnalysisTestsArray6, kuromojiAnalysisTestsArray7, kuromojiAnalysisTestsArray8, kuromojiAnalysisTestsArray9 };
        java.util.Set<org.elasticsearch.index.analysis.KuromojiAnalysisTests[]> kuromojiAnalysisTestsArraySet11 = org.apache.lucene.util.LuceneTestCase.asSet(kuromojiAnalysisTestsArray10);
        java.util.List<org.elasticsearch.test.ESTestCase[]> eSTestCaseArrayList12 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (byte) 1, (org.elasticsearch.test.ESTestCase[][]) kuromojiAnalysisTestsArray10);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", (java.lang.Object[]) intArray1, (java.lang.Object[]) kuromojiAnalysisTestsArray10);
    }

    @Test
    public void test3695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3695");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("hi!", indexReader11, 1, postingsEnum13, postingsEnum14);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.badapples");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests18 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.Fields fields21 = null;
        org.apache.lucene.index.Fields fields22 = null;
        kuromojiAnalysisTests18.assertFieldsEquals("europarl.lines.txt.gz", indexReader20, fields21, fields22, false);
        kuromojiAnalysisTests18.ensureCleanedUp();
        kuromojiAnalysisTests18.resetCheckIndexStatus();
        kuromojiAnalysisTests18.ensureCleanedUp();
        kuromojiAnalysisTests18.ensureCheckIndexPassed();
        kuromojiAnalysisTests18.restoreIndexWriterMaxDocs();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests30 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.Fields fields33 = null;
        org.apache.lucene.index.Fields fields34 = null;
        kuromojiAnalysisTests30.assertFieldsEquals("europarl.lines.txt.gz", indexReader32, fields33, fields34, false);
        kuromojiAnalysisTests30.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain39 = kuromojiAnalysisTests30.failureAndSuccessEvents;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain39;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain39;
        kuromojiAnalysisTests18.failureAndSuccessEvents = ruleChain39;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain39;
        kuromojiAnalysisTests1.assertPathHasBeenCleared("<unknown>");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.failfast", (java.lang.Object) "<unknown>");
    }

    @Test
    public void test3696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3696");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        java.lang.String str12 = kuromojiAnalysisTests1.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests1);
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.setUp();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("", indexReader17, (int) '#', postingsEnum19, postingsEnum20);
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("tests.weekly", postingsEnum24, postingsEnum25, false);
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("enwiki.random.lines.txt", postingsEnum29, postingsEnum30, true);
        kuromojiAnalysisTests1.setUp();
        org.apache.lucene.index.IndexReader indexReader35 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum37 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.weekly", indexReader35, 10, postingsEnum37, postingsEnum38, false);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.apache.lucene.index.NumericDocValues numericDocValues44 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues45 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocValuesEquals("enwiki.random.lines.txt", 10, numericDocValues44, numericDocValues45);
    }

    @Test
    public void test3697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3697");
        java.lang.Object[] objArray0 = null;
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray3 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet4 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray3);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests5 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.Fields fields8 = null;
        org.apache.lucene.index.Fields fields9 = null;
        kuromojiAnalysisTests5.assertFieldsEquals("europarl.lines.txt.gz", indexReader7, fields8, fields9, false);
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        kuromojiAnalysisTests5.assertPositionsSkippingEquals("tests.failfast", indexReader13, 1, postingsEnum15, postingsEnum16);
        kuromojiAnalysisTests5.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests5.ensureCleanedUp();
        kuromojiAnalysisTests5.resetCheckIndexStatus();
        kuromojiAnalysisTests5.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.Fields fields25 = null;
        org.apache.lucene.index.Fields fields26 = null;
        kuromojiAnalysisTests5.assertFieldsEquals("enwiki.random.lines.txt", indexReader24, fields25, fields26, false);
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        kuromojiAnalysisTests5.assertDocsSkippingEquals("tests.weekly", indexReader30, (int) (byte) 0, postingsEnum32, postingsEnum33, true);
        org.junit.Assert.assertNotSame("tests.weekly", (java.lang.Object) genericDeclarationArray3, (java.lang.Object) "tests.weekly");
        java.util.concurrent.ExecutorService[] executorServiceArray37 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean38 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray37);
        org.junit.Assert.assertEquals((java.lang.Object[]) genericDeclarationArray3, (java.lang.Object[]) executorServiceArray37);
        java.util.List<java.lang.reflect.GenericDeclaration[]> genericDeclarationArrayList40 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (byte) 0, genericDeclarationArray3);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(objArray0, (java.lang.Object[]) genericDeclarationArray3);
    }

    @Test
    public void test3698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3698");
        float[][] floatArray0 = new float[][] {};
        java.util.Set<float[]> floatArraySet1 = org.apache.lucene.util.LuceneTestCase.asSet(floatArray0);
        java.util.Locale locale5 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale7 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale9 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale11 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale13 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray14 = new java.util.Locale[] { locale5, locale7, locale9, locale11, locale13 };
        java.util.Set<java.util.Locale> localeSet15 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray14);
        java.util.List<java.io.Serializable> serializableList16 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray14);
        java.util.Set<java.lang.Cloneable> cloneableSet17 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray14);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray14, (java.lang.Object) (byte) -1);
        java.util.Locale locale22 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale24 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale26 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale28 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale30 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray31 = new java.util.Locale[] { locale22, locale24, locale26, locale28, locale30 };
        java.util.Set<java.util.Locale> localeSet32 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray31);
        java.util.Locale locale35 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale37 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale39 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale41 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale43 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray44 = new java.util.Locale[] { locale35, locale37, locale39, locale41, locale43 };
        java.util.Set<java.util.Locale> localeSet45 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray44);
        java.util.List<java.io.Serializable> serializableList46 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray44);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray31, (java.lang.Object[]) localeArray44);
        java.util.Locale locale50 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale52 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale54 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale56 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale58 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale50, locale52, locale54, locale56, locale58 };
        java.util.Set<java.util.Locale> localeSet60 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray59);
        java.util.List<java.io.Serializable> serializableList61 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray59);
        java.util.Set<java.lang.Cloneable> cloneableSet62 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray59);
        org.junit.Assert.assertArrayEquals("tests.slow", (java.lang.Object[]) localeArray44, (java.lang.Object[]) localeArray59);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", (java.lang.Object[]) localeArray14, (java.lang.Object[]) localeArray44);
        java.util.Locale locale67 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale69 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale71 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale73 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale75 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray76 = new java.util.Locale[] { locale67, locale69, locale71, locale73, locale75 };
        java.util.Set<java.util.Locale> localeSet77 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray76);
        java.util.List<java.io.Serializable> serializableList78 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray76);
        org.junit.Assert.assertNotNull((java.lang.Object) localeArray76);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray44, (java.lang.Object[]) localeArray76);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) floatArray0, (java.lang.Object[]) localeArray76);
    }

    @Test
    public void test3699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3699");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) '#', (double) (-1L));
    }

    @Test
    public void test3700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3700");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("random", (double) 0.0f, (double) (short) 0, (double) (short) -1);
    }

    @Test
    public void test3701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3701");
        long[] longArray6 = new long[] { 1 };
        long[] longArray8 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray6, longArray8);
        long[] longArray12 = new long[] { 1 };
        long[] longArray14 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray12, longArray14);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", longArray8, longArray12);
        long[] longArray19 = new long[] { 1 };
        long[] longArray21 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray19, longArray21);
        org.junit.Assert.assertArrayEquals("hi!", longArray12, longArray19);
        long[] longArray27 = new long[] { 1 };
        long[] longArray29 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray27, longArray29);
        long[] longArray34 = new long[] { 1 };
        long[] longArray36 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray34, longArray36);
        long[] longArray40 = new long[] { 1 };
        long[] longArray42 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray40, longArray42);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", longArray36, longArray40);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", longArray27, longArray40);
        org.junit.Assert.assertArrayEquals("tests.failfast", longArray19, longArray27);
        long[] longArray49 = new long[] { 1 };
        long[] longArray51 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray49, longArray51);
        long[] longArray57 = new long[] { 1 };
        long[] longArray59 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray57, longArray59);
        long[] longArray63 = new long[] { 1 };
        long[] longArray65 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray63, longArray65);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", longArray59, longArray63);
        long[] longArray70 = new long[] { 1 };
        long[] longArray72 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray70, longArray72);
        org.junit.Assert.assertArrayEquals("hi!", longArray63, longArray70);
        org.junit.Assert.assertArrayEquals(longArray51, longArray63);
        org.junit.Assert.assertArrayEquals("tests.nightly", longArray19, longArray51);
        long[] longArray77 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(longArray51, longArray77);
    }

    @Test
    public void test3702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3702");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (byte) 10, 0L);
    }

    @Test
    public void test3703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3703");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet2 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray1);
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray5 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet6 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray5);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests7 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.Fields fields10 = null;
        org.apache.lucene.index.Fields fields11 = null;
        kuromojiAnalysisTests7.assertFieldsEquals("europarl.lines.txt.gz", indexReader9, fields10, fields11, false);
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        kuromojiAnalysisTests7.assertPositionsSkippingEquals("tests.failfast", indexReader15, 1, postingsEnum17, postingsEnum18);
        kuromojiAnalysisTests7.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests7.ensureCleanedUp();
        kuromojiAnalysisTests7.resetCheckIndexStatus();
        kuromojiAnalysisTests7.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Fields fields27 = null;
        org.apache.lucene.index.Fields fields28 = null;
        kuromojiAnalysisTests7.assertFieldsEquals("enwiki.random.lines.txt", indexReader26, fields27, fields28, false);
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum35 = null;
        kuromojiAnalysisTests7.assertDocsSkippingEquals("tests.weekly", indexReader32, (int) (byte) 0, postingsEnum34, postingsEnum35, true);
        org.junit.Assert.assertNotSame("tests.weekly", (java.lang.Object) genericDeclarationArray5, (java.lang.Object) "tests.weekly");
        java.util.concurrent.ExecutorService[] executorServiceArray39 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean40 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray39);
        org.junit.Assert.assertEquals((java.lang.Object[]) genericDeclarationArray5, (java.lang.Object[]) executorServiceArray39);
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray42 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet43 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray42);
        java.util.Set<java.lang.reflect.AnnotatedElement[]> annotatedElementArraySet44 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.reflect.AnnotatedElement[][]) genericDeclarationArray42);
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet45 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray42);
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray47 = new java.lang.reflect.GenericDeclaration[] {};
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet48 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray47);
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet49 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray47);
        org.junit.Assert.assertNotEquals((java.lang.Object) 1, (java.lang.Object) genericDeclarationArray47);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) genericDeclarationArray42, (java.lang.Object[]) genericDeclarationArray47);
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) executorServiceArray39, (java.lang.Object[]) genericDeclarationArray42);
        boolean boolean53 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray39);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) strArray1, (java.lang.Object[]) executorServiceArray39);
    }

    @Test
    public void test3704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3704");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((-1.0f), 1.0f, (float) 1);
    }

    @Test
    public void test3705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3705");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.failfast", indexReader9, 1, postingsEnum11, postingsEnum12);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.junit.rules.TestRule testRule19 = kuromojiAnalysisTests1.ruleChain;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule19;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.monster", (java.lang.Object) testRule19);
    }

    @Test
    public void test3706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3706");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(100.0f, (float) ' ', (float) (byte) 1);
    }

    @Test
    public void test3707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3707");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", 0L, (long) 10);
    }

    @Test
    public void test3708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3708");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (byte) 10, (long) (byte) 1);
    }

    @Test
    public void test3709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3709");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("hi!", indexReader8, (int) (byte) 0, postingsEnum10, postingsEnum11);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.setUp();
        org.apache.lucene.index.PostingsEnum postingsEnum17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.badapples", postingsEnum17, postingsEnum18);
    }

    @Test
    public void test3710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3710");
        byte[] byteArray1 = new byte[] {};
        byte[] byteArray2 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray1, byteArray2);
        byte[] byteArray5 = new byte[] {};
        byte[] byteArray6 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray5, byteArray6);
        byte[] byteArray9 = new byte[] {};
        byte[] byteArray10 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray9, byteArray10);
        org.junit.Assert.assertArrayEquals(byteArray6, byteArray10);
        byte[] byteArray14 = new byte[] {};
        byte[] byteArray15 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray14, byteArray15);
        byte[] byteArray18 = new byte[] {};
        byte[] byteArray19 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.maxfailures", byteArray18, byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray15, byteArray19);
        org.junit.Assert.assertArrayEquals(byteArray6, byteArray15);
        org.junit.Assert.assertArrayEquals(byteArray2, byteArray6);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests24 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Fields fields27 = null;
        org.apache.lucene.index.Fields fields28 = null;
        kuromojiAnalysisTests24.assertFieldsEquals("europarl.lines.txt.gz", indexReader26, fields27, fields28, false);
        java.lang.String[] strArray38 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet39 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray38);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests40 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests40.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet39, (java.lang.Object) kuromojiAnalysisTests40);
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum46 = null;
        kuromojiAnalysisTests40.assertDocsEnumEquals("tests.badapples", postingsEnum45, postingsEnum46, true);
        org.junit.rules.TestRule testRule49 = kuromojiAnalysisTests40.ruleChain;
        org.apache.lucene.index.IndexReader indexReader51 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum53 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum54 = null;
        kuromojiAnalysisTests40.assertDocsSkippingEquals("tests.maxfailures", indexReader51, (int) (byte) 100, postingsEnum53, postingsEnum54, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests57 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader59 = null;
        org.apache.lucene.index.Fields fields60 = null;
        org.apache.lucene.index.Fields fields61 = null;
        kuromojiAnalysisTests57.assertFieldsEquals("europarl.lines.txt.gz", indexReader59, fields60, fields61, false);
        kuromojiAnalysisTests57.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain66 = kuromojiAnalysisTests57.failureAndSuccessEvents;
        kuromojiAnalysisTests40.failureAndSuccessEvents = ruleChain66;
        kuromojiAnalysisTests24.failureAndSuccessEvents = ruleChain66;
        org.apache.lucene.index.PostingsEnum postingsEnum70 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum71 = null;
        kuromojiAnalysisTests24.assertDocsEnumEquals("<unknown>", postingsEnum70, postingsEnum71, true);
        org.apache.lucene.index.IndexReader indexReader75 = null;
        org.apache.lucene.index.Terms terms76 = null;
        org.apache.lucene.index.Terms terms77 = null;
        kuromojiAnalysisTests24.assertTermsEquals("tests.slow", indexReader75, terms76, terms77, true);
        org.apache.lucene.index.IndexReader indexReader81 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum83 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum84 = null;
        kuromojiAnalysisTests24.assertPositionsSkippingEquals("", indexReader81, (int) (byte) 0, postingsEnum83, postingsEnum84);
        org.junit.rules.TestRule testRule86 = kuromojiAnalysisTests24.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) byteArray6, (java.lang.Object) kuromojiAnalysisTests24);
    }

    @Test
    public void test3711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3711");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests9 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Fields fields12 = null;
        org.apache.lucene.index.Fields fields13 = null;
        kuromojiAnalysisTests9.assertFieldsEquals("europarl.lines.txt.gz", indexReader11, fields12, fields13, false);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests9.assertPositionsSkippingEquals("tests.failfast", indexReader17, 1, postingsEnum19, postingsEnum20);
        kuromojiAnalysisTests9.setIndexWriterMaxDocs(0);
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.Fields fields26 = null;
        org.apache.lucene.index.Fields fields27 = null;
        kuromojiAnalysisTests9.assertFieldsEquals("tests.slow", indexReader25, fields26, fields27, false);
        kuromojiAnalysisTests9.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule31 = kuromojiAnalysisTests9.ruleChain;
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) testRule31);
        org.apache.lucene.index.IndexReader indexReader34 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum36 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum37 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.weekly", indexReader34, 0, postingsEnum36, postingsEnum37, false);
        kuromojiAnalysisTests0.setUp();
        org.apache.lucene.index.IndexReader indexReader42 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum44 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("hi!", indexReader42, (int) (short) 1, postingsEnum44, postingsEnum45, true);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.apache.lucene.index.NumericDocValues numericDocValues51 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues52 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.weekly", 100, numericDocValues51, numericDocValues52);
    }

    @Test
    public void test3712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3712");
        long[] longArray5 = new long[] { 1 };
        long[] longArray7 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray5, longArray7);
        long[] longArray11 = new long[] { 1 };
        long[] longArray13 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray11, longArray13);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", longArray7, longArray11);
        long[] longArray21 = new long[] { 1 };
        long[] longArray23 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray21, longArray23);
        long[] longArray28 = new long[] { 1 };
        long[] longArray30 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray28, longArray30);
        long[] longArray34 = new long[] { 1 };
        long[] longArray36 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray34, longArray36);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", longArray30, longArray34);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", longArray21, longArray34);
        long[] longArray43 = new long[] { 1 };
        long[] longArray45 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray43, longArray45);
        long[] longArray49 = new long[] { 1 };
        long[] longArray51 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray49, longArray51);
        org.junit.Assert.assertArrayEquals("random", longArray45, longArray51);
        long[] longArray57 = new long[] { 1 };
        long[] longArray59 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray57, longArray59);
        long[] longArray64 = new long[] { 1 };
        long[] longArray66 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray64, longArray66);
        long[] longArray70 = new long[] { 1 };
        long[] longArray72 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray70, longArray72);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", longArray66, longArray70);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", longArray57, longArray70);
        org.junit.Assert.assertArrayEquals(longArray51, longArray57);
        org.junit.Assert.assertArrayEquals("tests.slow", longArray21, longArray51);
        org.junit.Assert.assertNotNull("europarl.lines.txt.gz", (java.lang.Object) longArray21);
        org.junit.Assert.assertArrayEquals("tests.failfast", longArray7, longArray21);
        long[] longArray83 = new long[] { 1 };
        long[] longArray85 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray83, longArray85);
        long[] longArray89 = new long[] { 1 };
        long[] longArray91 = new long[] { (byte) 1 };
        org.junit.Assert.assertArrayEquals("", longArray89, longArray91);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", longArray85, longArray89);
        org.junit.Assert.assertArrayEquals(longArray7, longArray85);
        long[] longArray97 = new long[] { 10L, (byte) 1 };
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", longArray7, longArray97);
    }

    @Test
    public void test3713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3713");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (byte) 0);
        org.junit.rules.RuleChain ruleChain12 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.junit.Assert.assertNotNull("tests.monster", (java.lang.Object) kuromojiAnalysisTests1);
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Fields fields16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("tests.failfast", indexReader15, fields16, fields17, true);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.apache.lucene.index.NumericDocValues numericDocValues23 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues24 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocValuesEquals("europarl.lines.txt.gz", (int) 'a', numericDocValues23, numericDocValues24);
    }

    @Test
    public void test3714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3714");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.failfast", indexReader9, 1, postingsEnum11, postingsEnum12);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        org.junit.Assert.assertNotNull("tests.badapples", (java.lang.Object) kuromojiAnalysisTests1);
        kuromojiAnalysisTests1.ensureCleanedUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test3715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3715");
        char[] charArray0 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("europarl.lines.txt.gz", indexReader4, fields5, fields6, false);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("hi!", indexReader10, (int) (byte) 0, postingsEnum12, postingsEnum13);
        kuromojiAnalysisTests2.ensureCheckIndexPassed();
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule17 = kuromojiAnalysisTests2.ruleChain;
        char[] charArray18 = new char[] {};
        char[] charArray19 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray18, charArray19);
        char[] charArray22 = new char[] {};
        char[] charArray23 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray22, charArray23);
        char[] charArray25 = new char[] {};
        char[] charArray26 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray25, charArray26);
        org.junit.Assert.assertArrayEquals(charArray23, charArray26);
        char[] charArray29 = new char[] {};
        char[] charArray30 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray29, charArray30);
        char[] charArray32 = new char[] {};
        char[] charArray33 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray32, charArray33);
        org.junit.Assert.assertArrayEquals(charArray30, charArray33);
        org.junit.Assert.assertArrayEquals("tests.monster", charArray26, charArray33);
        org.junit.Assert.assertArrayEquals(charArray19, charArray26);
        char[] charArray39 = new char[] {};
        char[] charArray40 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray39, charArray40);
        char[] charArray42 = new char[] {};
        char[] charArray43 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray42, charArray43);
        char[] charArray45 = new char[] {};
        char[] charArray46 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray45, charArray46);
        org.junit.Assert.assertArrayEquals(charArray43, charArray46);
        org.junit.Assert.assertArrayEquals("random", charArray40, charArray43);
        char[] charArray50 = new char[] {};
        char[] charArray51 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray50, charArray51);
        char[] charArray53 = new char[] {};
        char[] charArray54 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray53, charArray54);
        org.junit.Assert.assertArrayEquals(charArray51, charArray54);
        org.junit.Assert.assertArrayEquals(charArray40, charArray51);
        char[] charArray58 = new char[] {};
        char[] charArray59 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray58, charArray59);
        char[] charArray62 = new char[] {};
        char[] charArray63 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray62, charArray63);
        char[] charArray65 = new char[] {};
        char[] charArray66 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray65, charArray66);
        org.junit.Assert.assertArrayEquals(charArray63, charArray66);
        char[] charArray69 = new char[] {};
        char[] charArray70 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray69, charArray70);
        char[] charArray72 = new char[] {};
        char[] charArray73 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray72, charArray73);
        org.junit.Assert.assertArrayEquals(charArray70, charArray73);
        org.junit.Assert.assertArrayEquals("tests.monster", charArray66, charArray73);
        org.junit.Assert.assertArrayEquals(charArray59, charArray66);
        org.junit.Assert.assertArrayEquals(charArray51, charArray66);
        org.junit.Assert.assertArrayEquals(charArray19, charArray51);
        org.junit.Assert.assertNotEquals("europarl.lines.txt.gz", (java.lang.Object) testRule17, (java.lang.Object) charArray19);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(charArray0, charArray19);
    }

    @Test
    public void test3716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3716");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("europarl.lines.txt.gz", (double) (short) 1, 1.0d, 1.0d);
    }

    @Test
    public void test3717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3717");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 10, (double) (-1.0f), (-1.0d));
    }

    @Test
    public void test3718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3718");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain9 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("enwiki.random.lines.txt", indexReader12, 100, postingsEnum14, postingsEnum15, false);
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.Fields fields20 = null;
        org.apache.lucene.index.Fields fields21 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("tests.monster", indexReader19, fields20, fields21, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests24 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Fields fields27 = null;
        org.apache.lucene.index.Fields fields28 = null;
        kuromojiAnalysisTests24.assertFieldsEquals("europarl.lines.txt.gz", indexReader26, fields27, fields28, false);
        kuromojiAnalysisTests24.ensureCleanedUp();
        kuromojiAnalysisTests24.resetCheckIndexStatus();
        kuromojiAnalysisTests24.setIndexWriterMaxDocs((int) (byte) 0);
        org.junit.rules.RuleChain ruleChain35 = kuromojiAnalysisTests24.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain35;
        kuromojiAnalysisTests0.assertPathHasBeenCleared("enwiki.random.lines.txt");
        org.apache.lucene.index.PostingsEnum postingsEnum40 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.awaitsfix", postingsEnum40, postingsEnum41);
    }

    @Test
    public void test3719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3719");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader10, terms11, terms12, false);
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader18 = null;
        org.apache.lucene.index.Fields fields19 = null;
        org.apache.lucene.index.Fields fields20 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("<unknown>", indexReader18, fields19, fields20, false);
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("europarl.lines.txt.gz", indexReader24, (int) '4', postingsEnum26, postingsEnum27);
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (short) 100);
        int[] intArray35 = new int[] { '#' };
        int[] intArray37 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray35, intArray37);
        int[] intArray40 = new int[] { '#' };
        int[] intArray42 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray40, intArray42);
        org.junit.Assert.assertArrayEquals("tests.badapples", intArray35, intArray40);
        int[] intArray47 = new int[] { '#' };
        int[] intArray49 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray47, intArray49);
        int[] intArray52 = new int[] { '#' };
        int[] intArray54 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray52, intArray54);
        org.junit.Assert.assertArrayEquals("tests.badapples", intArray47, intArray52);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", intArray35, intArray52);
        int[] intArray61 = new int[] { '#' };
        int[] intArray63 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray61, intArray63);
        int[] intArray66 = new int[] { '#' };
        int[] intArray68 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray66, intArray68);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray61, intArray66);
        int[] intArray73 = new int[] { '#' };
        int[] intArray75 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray73, intArray75);
        int[] intArray78 = new int[] { '#' };
        int[] intArray80 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray78, intArray80);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray73, intArray78);
        int[] intArray84 = new int[] { '#' };
        int[] intArray86 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray84, intArray86);
        org.junit.Assert.assertArrayEquals(intArray78, intArray84);
        org.junit.Assert.assertArrayEquals("tests.badapples", intArray66, intArray78);
        org.junit.Assert.assertArrayEquals("", intArray52, intArray78);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) "");
    }

    @Test
    public void test3720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3720");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain9 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.Fields fields13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader12, fields13, fields14, false);
        org.junit.rules.TestRule testRule17 = kuromojiAnalysisTests0.ruleChain;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests18 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.Fields fields21 = null;
        org.apache.lucene.index.Fields fields22 = null;
        kuromojiAnalysisTests18.assertFieldsEquals("europarl.lines.txt.gz", indexReader20, fields21, fields22, false);
        kuromojiAnalysisTests18.ensureCleanedUp();
        kuromojiAnalysisTests18.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests18.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.Fields fields30 = null;
        org.apache.lucene.index.Fields fields31 = null;
        kuromojiAnalysisTests18.assertFieldsEquals("europarl.lines.txt.gz", indexReader29, fields30, fields31, false);
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) "europarl.lines.txt.gz");
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum39 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.slow", indexReader36, (-1), postingsEnum38, postingsEnum39);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.setUp();
        java.lang.String[] strArray50 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet51 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray50);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests52 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests52.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet51, (java.lang.Object) kuromojiAnalysisTests52);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests56 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader58 = null;
        org.apache.lucene.index.Fields fields59 = null;
        org.apache.lucene.index.Fields fields60 = null;
        kuromojiAnalysisTests56.assertFieldsEquals("europarl.lines.txt.gz", indexReader58, fields59, fields60, false);
        kuromojiAnalysisTests56.ensureCleanedUp();
        kuromojiAnalysisTests56.resetCheckIndexStatus();
        kuromojiAnalysisTests56.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader67 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum69 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum70 = null;
        kuromojiAnalysisTests56.assertPositionsSkippingEquals("", indexReader67, (int) (byte) 0, postingsEnum69, postingsEnum70);
        org.junit.Assert.assertNotEquals((java.lang.Object) "tests.failfast", (java.lang.Object) kuromojiAnalysisTests56);
        kuromojiAnalysisTests56.setUp();
        kuromojiAnalysisTests56.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests56.assertPathHasBeenCleared("random");
        org.apache.lucene.index.PostingsEnum postingsEnum78 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum79 = null;
        kuromojiAnalysisTests56.assertDocsEnumEquals("", postingsEnum78, postingsEnum79, true);
        org.apache.lucene.index.PostingsEnum postingsEnum83 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum84 = null;
        kuromojiAnalysisTests56.assertDocsEnumEquals("hi!", postingsEnum83, postingsEnum84, true);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) "hi!");
    }

    @Test
    public void test3721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3721");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (float) 0L, (float) (short) 100, (float) (byte) 1);
    }

    @Test
    public void test3722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3722");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("random", indexReader9, (int) '4', postingsEnum11, postingsEnum12);
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.weekly", indexReader15, terms16, terms17, true);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) '#');
        org.apache.lucene.index.NumericDocValues numericDocValues25 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues26 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("", 3, numericDocValues25, numericDocValues26);
    }

    @Test
    public void test3723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3723");
        java.util.Locale locale3 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale5 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale7 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale9 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale11 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray12 = new java.util.Locale[] { locale3, locale5, locale7, locale9, locale11 };
        java.util.Set<java.util.Locale> localeSet13 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray12);
        java.util.List<java.io.Serializable> serializableList14 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray12);
        java.util.Set<java.lang.Cloneable> cloneableSet15 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray12);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray12, (java.lang.Object) (byte) -1);
        java.util.Locale locale20 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale22 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale24 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale26 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale28 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray29 = new java.util.Locale[] { locale20, locale22, locale24, locale26, locale28 };
        java.util.Set<java.util.Locale> localeSet30 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray29);
        java.util.List<java.io.Serializable> serializableList31 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray29);
        java.util.Set<java.lang.Cloneable> cloneableSet32 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray29);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray29, (java.lang.Object) (byte) -1);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray12, (java.lang.Object[]) localeArray29);
        java.util.List<java.util.Locale> localeList36 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, localeArray12);
        java.lang.Object obj37 = null;
        org.junit.Assert.assertNotSame((java.lang.Object) localeArray12, obj37);
        java.lang.Object[] objArray39 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) localeArray12, objArray39);
    }

    @Test
    public void test3724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3724");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", (double) 10L, (double) (short) -1, 0.0d);
    }

    @Test
    public void test3725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3725");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("random", indexReader9, (int) '4', postingsEnum11, postingsEnum12);
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.weekly", indexReader15, terms16, terms17, true);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) '#');
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("europarl.lines.txt.gz", indexReader24, (int) (short) 1, postingsEnum26, postingsEnum27, false);
        kuromojiAnalysisTests0.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests31 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader33 = null;
        org.apache.lucene.index.Fields fields34 = null;
        org.apache.lucene.index.Fields fields35 = null;
        kuromojiAnalysisTests31.assertFieldsEquals("europarl.lines.txt.gz", indexReader33, fields34, fields35, false);
        kuromojiAnalysisTests31.ensureCleanedUp();
        kuromojiAnalysisTests31.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests31.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader42 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum44 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        kuromojiAnalysisTests31.assertDocsSkippingEquals("tests.slow", indexReader42, (int) (short) -1, postingsEnum44, postingsEnum45, false);
        kuromojiAnalysisTests31.ensureCleanedUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests31);
    }

    @Test
    public void test3726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3726");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("hi!", indexReader8, (int) (byte) 0, postingsEnum10, postingsEnum11);
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests0.assertTermsEquals("random", indexReader14, terms15, terms16, true);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((-1));
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader24, (int) (byte) -1, postingsEnum26, postingsEnum27);
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.awaitsfix", postingsEnum30, postingsEnum31);
    }

    @Test
    public void test3727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3727");
        java.lang.String[] strArray8 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet9 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray8);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests10 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests10.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet9, (java.lang.Object) kuromojiAnalysisTests10);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests14 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        kuromojiAnalysisTests14.assertFieldsEquals("europarl.lines.txt.gz", indexReader16, fields17, fields18, false);
        kuromojiAnalysisTests14.ensureCleanedUp();
        kuromojiAnalysisTests14.resetCheckIndexStatus();
        kuromojiAnalysisTests14.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        kuromojiAnalysisTests14.assertPositionsSkippingEquals("", indexReader25, (int) (byte) 0, postingsEnum27, postingsEnum28);
        org.junit.Assert.assertNotEquals((java.lang.Object) "tests.failfast", (java.lang.Object) kuromojiAnalysisTests14);
        kuromojiAnalysisTests14.setUp();
        java.lang.String[] strArray39 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet40 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray39);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests41 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests41.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet40, (java.lang.Object) kuromojiAnalysisTests41);
        java.lang.String str45 = kuromojiAnalysisTests41.getTestName();
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests14, (java.lang.Object) kuromojiAnalysisTests41);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests48 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader50 = null;
        org.apache.lucene.index.Fields fields51 = null;
        org.apache.lucene.index.Fields fields52 = null;
        kuromojiAnalysisTests48.assertFieldsEquals("europarl.lines.txt.gz", indexReader50, fields51, fields52, false);
        kuromojiAnalysisTests48.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain57 = kuromojiAnalysisTests48.failureAndSuccessEvents;
        kuromojiAnalysisTests48.resetCheckIndexStatus();
        java.lang.String str59 = kuromojiAnalysisTests48.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests48);
        kuromojiAnalysisTests48.tearDown();
        kuromojiAnalysisTests48.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain63 = kuromojiAnalysisTests48.failureAndSuccessEvents;
        kuromojiAnalysisTests48.tearDown();
        kuromojiAnalysisTests48.setUp();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests41, (java.lang.Object) kuromojiAnalysisTests48);
        kuromojiAnalysisTests41.setIndexWriterMaxDocs((int) (short) -1);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.monster", (java.lang.Object) kuromojiAnalysisTests41, (java.lang.Object) 1);
    }

    @Test
    public void test3728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3728");
        java.lang.Object[] objArray0 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray1 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean2 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean4 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray5 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet6 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray5);
        java.util.Set<java.lang.reflect.AnnotatedElement[]> annotatedElementArraySet7 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.reflect.AnnotatedElement[][]) genericDeclarationArray5);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray1, (java.lang.Object[]) genericDeclarationArray5);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(objArray0, (java.lang.Object[]) executorServiceArray1);
    }

    @Test
    public void test3729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3729");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", 0.0d, (double) (byte) -1, 0.0d);
    }

    @Test
    public void test3730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3730");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        java.lang.String str12 = kuromojiAnalysisTests1.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests1);
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.setUp();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("", indexReader17, (int) '#', postingsEnum19, postingsEnum20);
        org.junit.rules.RuleChain ruleChain22 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("<unknown>", indexReader24, (int) (byte) -1, postingsEnum26, postingsEnum27, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests31 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader33 = null;
        org.apache.lucene.index.Fields fields34 = null;
        org.apache.lucene.index.Fields fields35 = null;
        kuromojiAnalysisTests31.assertFieldsEquals("europarl.lines.txt.gz", indexReader33, fields34, fields35, false);
        kuromojiAnalysisTests31.tearDown();
        kuromojiAnalysisTests31.ensureAllSearchContextsReleased();
        org.junit.rules.RuleChain[] ruleChainArray40 = new org.junit.rules.RuleChain[] {};
        org.junit.rules.RuleChain[][] ruleChainArray41 = new org.junit.rules.RuleChain[][] { ruleChainArray40 };
        java.util.Set<org.junit.rules.RuleChain[]> ruleChainArraySet42 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray41);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests31, (java.lang.Object) ruleChainArray41);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests44 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader46 = null;
        org.apache.lucene.index.Fields fields47 = null;
        org.apache.lucene.index.Fields fields48 = null;
        kuromojiAnalysisTests44.assertFieldsEquals("europarl.lines.txt.gz", indexReader46, fields47, fields48, false);
        org.apache.lucene.index.IndexReader indexReader52 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum54 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum55 = null;
        kuromojiAnalysisTests44.assertPositionsSkippingEquals("hi!", indexReader52, (int) (byte) 0, postingsEnum54, postingsEnum55);
        org.apache.lucene.index.IndexReader indexReader58 = null;
        org.apache.lucene.index.Terms terms59 = null;
        org.apache.lucene.index.Terms terms60 = null;
        kuromojiAnalysisTests44.assertTermsEquals("random", indexReader58, terms59, terms60, true);
        kuromojiAnalysisTests44.setUp();
        kuromojiAnalysisTests44.tearDown();
        kuromojiAnalysisTests44.tearDown();
        kuromojiAnalysisTests44.setIndexWriterMaxDocs(1);
        kuromojiAnalysisTests44.tearDown();
        kuromojiAnalysisTests44.ensureCheckIndexPassed();
        org.junit.Assert.assertNotEquals("<unknown>", (java.lang.Object) ruleChainArray41, (java.lang.Object) kuromojiAnalysisTests44);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) "<unknown>", (java.lang.Object) kuromojiAnalysisTests44);
    }

    @Test
    public void test3731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3731");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 0, (double) 0.0f);
    }

    @Test
    public void test3732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3732");
        int[] intArray0 = null;
        int[] intArray5 = new int[] { '#' };
        int[] intArray7 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray5, intArray7);
        int[] intArray10 = new int[] { '#' };
        int[] intArray12 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray10, intArray12);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray5, intArray10);
        int[] intArray20 = new int[] { '#' };
        int[] intArray22 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray20, intArray22);
        int[] intArray25 = new int[] { '#' };
        int[] intArray27 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray25, intArray27);
        org.junit.Assert.assertArrayEquals("tests.badapples", intArray20, intArray25);
        int[] intArray32 = new int[] { '#' };
        int[] intArray34 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray32, intArray34);
        int[] intArray37 = new int[] { '#' };
        int[] intArray39 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray37, intArray39);
        org.junit.Assert.assertArrayEquals("tests.badapples", intArray32, intArray37);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", intArray20, intArray37);
        int[] intArray44 = new int[] { '#' };
        int[] intArray46 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray44, intArray46);
        org.junit.Assert.assertArrayEquals("tests.slow", intArray20, intArray44);
        int[] intArray50 = new int[] { '#' };
        int[] intArray52 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray50, intArray52);
        org.junit.Assert.assertArrayEquals("tests.slow", intArray20, intArray52);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", intArray5, intArray20);
        int[] intArray60 = new int[] { '#' };
        int[] intArray62 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray60, intArray62);
        int[] intArray65 = new int[] { '#' };
        int[] intArray67 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray65, intArray67);
        org.junit.Assert.assertArrayEquals("tests.badapples", intArray60, intArray65);
        int[] intArray72 = new int[] { '#' };
        int[] intArray74 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray72, intArray74);
        int[] intArray77 = new int[] { '#' };
        int[] intArray79 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray77, intArray79);
        org.junit.Assert.assertArrayEquals("tests.badapples", intArray72, intArray77);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", intArray60, intArray77);
        int[] intArray85 = new int[] { '#' };
        int[] intArray87 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray85, intArray87);
        int[] intArray90 = new int[] { '#' };
        int[] intArray92 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray90, intArray92);
        org.junit.Assert.assertArrayEquals("tests.badapples", intArray85, intArray90);
        org.junit.Assert.assertArrayEquals("", intArray77, intArray90);
        org.junit.Assert.assertArrayEquals("tests.monster", intArray20, intArray90);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(intArray0, intArray20);
    }

    @Test
    public void test3733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3733");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (short) -1, (double) 1L);
    }

    @Test
    public void test3734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3734");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) (-1L), 1.0f, (float) (byte) 0);
    }

    @Test
    public void test3735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3735");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain9 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.Fields fields13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader12, fields13, fields14, false);
        org.junit.rules.RuleChain ruleChain17 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.awaitsfix", postingsEnum19, postingsEnum20, false);
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertPathHasBeenCleared("");
    }

    @Test
    public void test3736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3736");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.failfast", indexReader8, 1, postingsEnum10, postingsEnum11);
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum17 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("<unknown>", indexReader14, (int) '#', postingsEnum16, postingsEnum17);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        java.lang.Object obj21 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) "tests.nightly", obj21);
    }

    @Test
    public void test3737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3737");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", 100L, (long) (short) 10);
    }

    @Test
    public void test3738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3738");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) 10L, (float) ' ', (float) 2);
    }

    @Test
    public void test3739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3739");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", 10.0d, (double) 1);
    }

    @Test
    public void test3740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3740");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.monster", (double) (short) 0, (double) (short) -1, (double) '#');
    }

    @Test
    public void test3741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3741");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        java.lang.String str12 = kuromojiAnalysisTests1.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests1);
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.setUp();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("", indexReader17, (int) '#', postingsEnum19, postingsEnum20);
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("tests.weekly", postingsEnum24, postingsEnum25, false);
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("enwiki.random.lines.txt", postingsEnum29, postingsEnum30, true);
        org.apache.lucene.index.IndexReader indexReader34 = null;
        org.apache.lucene.index.Terms terms35 = null;
        org.apache.lucene.index.Terms terms36 = null;
        kuromojiAnalysisTests1.assertTermsEquals("random", indexReader34, terms35, terms36, false);
        org.apache.lucene.index.NumericDocValues numericDocValues41 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues42 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocValuesEquals("tests.monster", 3, numericDocValues41, numericDocValues42);
    }

    @Test
    public void test3742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3742");
        float[] floatArray8 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray15 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray8, floatArray15, (float) (byte) 100);
        float[] floatArray26 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray33 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray26, floatArray33, (float) (byte) 100);
        float[] floatArray43 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray50 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray43, floatArray50, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray26, floatArray43, (float) (-1));
        org.junit.Assert.assertArrayEquals(floatArray8, floatArray43, (float) 1L);
        float[] floatArray65 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray72 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray65, floatArray72, (float) (byte) 100);
        float[] floatArray82 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray89 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray82, floatArray89, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals("", floatArray72, floatArray89, (float) 100);
        org.junit.Assert.assertArrayEquals("tests.failfast", floatArray43, floatArray89, (float) (byte) 100);
        float[] floatArray96 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(floatArray43, floatArray96, (float) 10);
    }

    @Test
    public void test3743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3743");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests11 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        org.apache.lucene.index.Fields fields15 = null;
        kuromojiAnalysisTests11.assertFieldsEquals("europarl.lines.txt.gz", indexReader13, fields14, fields15, false);
        kuromojiAnalysisTests11.ensureCleanedUp();
        kuromojiAnalysisTests11.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule20 = kuromojiAnalysisTests11.ruleChain;
        org.junit.Assert.assertNotSame("hi!", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) testRule20);
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (short) 100);
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("enwiki.random.lines.txt", postingsEnum26, postingsEnum27, false);
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocsAndPositionsEnumEquals("random", postingsEnum31, postingsEnum32);
    }

    @Test
    public void test3744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3744");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.failfast", indexReader8, 1, postingsEnum10, postingsEnum11);
        kuromojiAnalysisTests0.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.Fields fields20 = null;
        org.apache.lucene.index.Fields fields21 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader19, fields20, fields21, false);
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.Terms terms26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader25, terms26, terms27, false);
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.awaitsfix", indexReader31, 10, postingsEnum33, postingsEnum34);
        org.junit.rules.RuleChain ruleChain36 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.junit.rules.TestRule testRule37 = kuromojiAnalysisTests0.ruleChain;
        java.lang.String str38 = kuromojiAnalysisTests0.getTestName();
        org.apache.lucene.index.NumericDocValues numericDocValues41 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues42 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.awaitsfix", (int) '#', numericDocValues41, numericDocValues42);
    }

    @Test
    public void test3745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3745");
        java.lang.String[] strArray7 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet8 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray7);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests9 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests9.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet8, (java.lang.Object) kuromojiAnalysisTests9);
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests9.assertDocsEnumEquals("tests.badapples", postingsEnum14, postingsEnum15, true);
        org.junit.rules.TestRule testRule18 = kuromojiAnalysisTests9.ruleChain;
        kuromojiAnalysisTests9.ensureAllSearchContextsReleased();
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests9);
        kuromojiAnalysisTests9.ensureAllSearchContextsReleased();
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        kuromojiAnalysisTests9.assertDocsEnumEquals("europarl.lines.txt.gz", postingsEnum23, postingsEnum24, false);
        org.apache.lucene.index.NumericDocValues numericDocValues29 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues30 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests9.assertDocValuesEquals("", (int) (short) 100, numericDocValues29, numericDocValues30);
    }

    @Test
    public void test3746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3746");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("hi!", indexReader8, (int) (byte) 0, postingsEnum10, postingsEnum11);
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests0.assertTermsEquals("random", indexReader14, terms15, terms16, true);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((-1));
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) 'a');
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests24 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Fields fields27 = null;
        org.apache.lucene.index.Fields fields28 = null;
        kuromojiAnalysisTests24.assertFieldsEquals("europarl.lines.txt.gz", indexReader26, fields27, fields28, false);
        java.lang.String[] strArray38 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet39 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray38);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests40 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests40.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet39, (java.lang.Object) kuromojiAnalysisTests40);
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum46 = null;
        kuromojiAnalysisTests40.assertDocsEnumEquals("tests.badapples", postingsEnum45, postingsEnum46, true);
        org.junit.rules.TestRule testRule49 = kuromojiAnalysisTests40.ruleChain;
        org.apache.lucene.index.IndexReader indexReader51 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum53 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum54 = null;
        kuromojiAnalysisTests40.assertDocsSkippingEquals("tests.maxfailures", indexReader51, (int) (byte) 100, postingsEnum53, postingsEnum54, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests57 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader59 = null;
        org.apache.lucene.index.Fields fields60 = null;
        org.apache.lucene.index.Fields fields61 = null;
        kuromojiAnalysisTests57.assertFieldsEquals("europarl.lines.txt.gz", indexReader59, fields60, fields61, false);
        kuromojiAnalysisTests57.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain66 = kuromojiAnalysisTests57.failureAndSuccessEvents;
        kuromojiAnalysisTests40.failureAndSuccessEvents = ruleChain66;
        kuromojiAnalysisTests24.failureAndSuccessEvents = ruleChain66;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests69 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader71 = null;
        org.apache.lucene.index.Fields fields72 = null;
        org.apache.lucene.index.Fields fields73 = null;
        kuromojiAnalysisTests69.assertFieldsEquals("europarl.lines.txt.gz", indexReader71, fields72, fields73, false);
        org.apache.lucene.index.IndexReader indexReader77 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum79 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum80 = null;
        kuromojiAnalysisTests69.assertPositionsSkippingEquals("hi!", indexReader77, (int) (byte) 0, postingsEnum79, postingsEnum80);
        kuromojiAnalysisTests69.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotEquals((java.lang.Object) ruleChain66, (java.lang.Object) kuromojiAnalysisTests69);
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain66;
        org.apache.lucene.index.IndexReader indexReader86 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum88 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum89 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.badapples", indexReader86, (int) (byte) -1, postingsEnum88, postingsEnum89);
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test3747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3747");
        double[] doubleArray3 = new double[] { 100, (short) 100 };
        double[] doubleArray6 = new double[] { 100, (short) 100 };
        double[] doubleArray9 = new double[] { 100, (short) 100 };
        double[][] doubleArray10 = new double[][] { doubleArray3, doubleArray6, doubleArray9 };
        java.util.Set<double[]> doubleArraySet11 = org.apache.lucene.util.LuceneTestCase.asSet(doubleArray10);
        java.util.Set<double[]> doubleArraySet12 = org.apache.lucene.util.LuceneTestCase.asSet(doubleArray10);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests14 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        kuromojiAnalysisTests14.assertFieldsEquals("europarl.lines.txt.gz", indexReader16, fields17, fields18, false);
        kuromojiAnalysisTests14.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain23 = kuromojiAnalysisTests14.failureAndSuccessEvents;
        kuromojiAnalysisTests14.resetCheckIndexStatus();
        java.lang.String str25 = kuromojiAnalysisTests14.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests14);
        kuromojiAnalysisTests14.tearDown();
        kuromojiAnalysisTests14.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain29 = kuromojiAnalysisTests14.failureAndSuccessEvents;
        java.lang.String str30 = kuromojiAnalysisTests14.getTestName();
        org.junit.Assert.assertNotSame((java.lang.Object) doubleArray10, (java.lang.Object) str30);
        java.util.List<double[]> doubleArrayList32 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (byte) 0, doubleArray10);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.Fields fields37 = null;
        org.apache.lucene.index.Fields fields38 = null;
        kuromojiAnalysisTests34.assertFieldsEquals("europarl.lines.txt.gz", indexReader36, fields37, fields38, false);
        org.apache.lucene.index.IndexReader indexReader42 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum44 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        kuromojiAnalysisTests34.assertPositionsSkippingEquals("hi!", indexReader42, (int) (byte) 0, postingsEnum44, postingsEnum45);
        org.apache.lucene.index.IndexReader indexReader48 = null;
        org.apache.lucene.index.Terms terms49 = null;
        org.apache.lucene.index.Terms terms50 = null;
        kuromojiAnalysisTests34.assertTermsEquals("random", indexReader48, terms49, terms50, true);
        kuromojiAnalysisTests34.setUp();
        kuromojiAnalysisTests34.tearDown();
        org.apache.lucene.index.IndexReader indexReader56 = null;
        org.apache.lucene.index.Fields fields57 = null;
        org.apache.lucene.index.Fields fields58 = null;
        kuromojiAnalysisTests34.assertFieldsEquals("", indexReader56, fields57, fields58, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests61 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader63 = null;
        org.apache.lucene.index.Fields fields64 = null;
        org.apache.lucene.index.Fields fields65 = null;
        kuromojiAnalysisTests61.assertFieldsEquals("europarl.lines.txt.gz", indexReader63, fields64, fields65, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests68 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader70 = null;
        org.apache.lucene.index.Fields fields71 = null;
        org.apache.lucene.index.Fields fields72 = null;
        kuromojiAnalysisTests68.assertFieldsEquals("europarl.lines.txt.gz", indexReader70, fields71, fields72, false);
        org.apache.lucene.index.IndexReader indexReader76 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum78 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum79 = null;
        kuromojiAnalysisTests68.assertPositionsSkippingEquals("hi!", indexReader76, (int) (byte) 0, postingsEnum78, postingsEnum79);
        org.elasticsearch.test.ESTestCase[] eSTestCaseArray81 = new org.elasticsearch.test.ESTestCase[] { kuromojiAnalysisTests34, kuromojiAnalysisTests61, kuromojiAnalysisTests68 };
        java.util.List<org.elasticsearch.test.ESTestCase> eSTestCaseList82 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (byte) 0, eSTestCaseArray81);
        java.util.Set<org.apache.lucene.util.LuceneTestCase> luceneTestCaseSet83 = org.apache.lucene.util.LuceneTestCase.asSet((org.apache.lucene.util.LuceneTestCase[]) eSTestCaseArray81);
        // during test generation this statement threw an exception of type org.junit.internal.ArrayComparisonFailure in error
        org.junit.Assert.assertEquals((java.lang.Object[]) doubleArray10, (java.lang.Object[]) eSTestCaseArray81);
    }

    @Test
    public void test3748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3748");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(0.0d, (double) 10.0f, (double) (short) 1);
    }

    @Test
    public void test3749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3749");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) '#', 10L);
    }

    @Test
    public void test3750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3750");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("<unknown>", (double) 0, (double) 100.0f);
    }

    @Test
    public void test3751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3751");
        java.util.Locale locale2 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale4 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale6 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale8 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale10 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray11 = new java.util.Locale[] { locale2, locale4, locale6, locale8, locale10 };
        java.util.Set<java.util.Locale> localeSet12 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray11);
        java.util.Locale locale15 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale17 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale19 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale21 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale23 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray24 = new java.util.Locale[] { locale15, locale17, locale19, locale21, locale23 };
        java.util.Set<java.util.Locale> localeSet25 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray24);
        java.util.List<java.io.Serializable> serializableList26 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray24);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray11, (java.lang.Object[]) localeArray24);
        java.util.Locale locale30 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale32 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale34 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale36 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale38 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray39 = new java.util.Locale[] { locale30, locale32, locale34, locale36, locale38 };
        java.util.Set<java.util.Locale> localeSet40 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray39);
        java.util.List<java.io.Serializable> serializableList41 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray39);
        java.util.Set<java.lang.Cloneable> cloneableSet42 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray39);
        org.junit.Assert.assertArrayEquals("tests.slow", (java.lang.Object[]) localeArray24, (java.lang.Object[]) localeArray39);
        int[][][][] intArray46 = new int[][][][] {};
        int[][][][] intArray47 = new int[][][][] {};
        int[][][][] intArray48 = new int[][][][] {};
        int[][][][] intArray49 = new int[][][][] {};
        int[][][][] intArray50 = new int[][][][] {};
        int[][][][][] intArray51 = new int[][][][][] { intArray46, intArray47, intArray48, intArray49, intArray50 };
        int[][][][] intArray52 = new int[][][][] {};
        int[][][][] intArray53 = new int[][][][] {};
        int[][][][] intArray54 = new int[][][][] {};
        int[][][][] intArray55 = new int[][][][] {};
        int[][][][] intArray56 = new int[][][][] {};
        int[][][][][] intArray57 = new int[][][][][] { intArray52, intArray53, intArray54, intArray55, intArray56 };
        int[][][][][][] intArray58 = new int[][][][][][] { intArray51, intArray57 };
        java.util.List<int[][][][][]> intArrayList59 = org.elasticsearch.test.ESTestCase.randomSubsetOf(0, intArray58);
        java.util.List<int[][][][][]> intArrayList60 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (byte) 0, intArray58);
        java.util.Set<int[][][][][]> intArraySet61 = org.apache.lucene.util.LuceneTestCase.asSet(intArray58);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray39, (java.lang.Object[]) intArray58);
    }

    @Test
    public void test3752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3752");
        char[] charArray0 = new char[] {};
        char[] charArray1 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray0, charArray1);
        char[] charArray3 = new char[] {};
        char[] charArray4 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray3, charArray4);
        char[] charArray7 = new char[] {};
        char[] charArray8 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray7, charArray8);
        char[] charArray10 = new char[] {};
        char[] charArray11 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray10, charArray11);
        org.junit.Assert.assertArrayEquals(charArray8, charArray11);
        char[] charArray14 = new char[] {};
        char[] charArray15 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray14, charArray15);
        char[] charArray17 = new char[] {};
        char[] charArray18 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray17, charArray18);
        org.junit.Assert.assertArrayEquals(charArray15, charArray18);
        org.junit.Assert.assertArrayEquals("tests.monster", charArray11, charArray18);
        org.junit.Assert.assertArrayEquals(charArray4, charArray11);
        char[] charArray24 = new char[] {};
        char[] charArray25 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray24, charArray25);
        char[] charArray27 = new char[] {};
        char[] charArray28 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray27, charArray28);
        char[] charArray30 = new char[] {};
        char[] charArray31 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray30, charArray31);
        org.junit.Assert.assertArrayEquals(charArray28, charArray31);
        org.junit.Assert.assertArrayEquals("random", charArray25, charArray28);
        char[] charArray35 = new char[] {};
        char[] charArray36 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray35, charArray36);
        char[] charArray38 = new char[] {};
        char[] charArray39 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray38, charArray39);
        org.junit.Assert.assertArrayEquals(charArray36, charArray39);
        org.junit.Assert.assertArrayEquals(charArray25, charArray36);
        char[] charArray43 = new char[] {};
        char[] charArray44 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray43, charArray44);
        char[] charArray47 = new char[] {};
        char[] charArray48 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray47, charArray48);
        char[] charArray50 = new char[] {};
        char[] charArray51 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray50, charArray51);
        org.junit.Assert.assertArrayEquals(charArray48, charArray51);
        char[] charArray54 = new char[] {};
        char[] charArray55 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray54, charArray55);
        char[] charArray57 = new char[] {};
        char[] charArray58 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray57, charArray58);
        org.junit.Assert.assertArrayEquals(charArray55, charArray58);
        org.junit.Assert.assertArrayEquals("tests.monster", charArray51, charArray58);
        org.junit.Assert.assertArrayEquals(charArray44, charArray51);
        org.junit.Assert.assertArrayEquals(charArray36, charArray51);
        org.junit.Assert.assertArrayEquals(charArray4, charArray36);
        org.junit.Assert.assertArrayEquals(charArray0, charArray4);
        char[] charArray66 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(charArray4, charArray66);
    }

    @Test
    public void test3753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3753");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (double) (short) 100, (double) ' ');
    }

    @Test
    public void test3754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3754");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.junit.rules.TestRule testRule13 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.awaitsfix", indexReader16, 10, postingsEnum18, postingsEnum19);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests21 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        org.apache.lucene.index.Fields fields25 = null;
        kuromojiAnalysisTests21.assertFieldsEquals("europarl.lines.txt.gz", indexReader23, fields24, fields25, false);
        kuromojiAnalysisTests21.ensureCleanedUp();
        kuromojiAnalysisTests21.resetCheckIndexStatus();
        kuromojiAnalysisTests21.restoreIndexWriterMaxDocs();
        java.lang.String str31 = kuromojiAnalysisTests21.getTestName();
        kuromojiAnalysisTests21.resetCheckIndexStatus();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.awaitsfix", (java.lang.Object) 10, (java.lang.Object) kuromojiAnalysisTests21);
    }

    @Test
    public void test3755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3755");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (double) (short) 0, (double) (short) 10, (double) 0L);
    }

    @Test
    public void test3756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3756");
        char[] charArray0 = null;
        char[] charArray2 = new char[] {};
        char[] charArray3 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray2, charArray3);
        char[] charArray5 = new char[] {};
        char[] charArray6 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray5, charArray6);
        org.junit.Assert.assertArrayEquals(charArray3, charArray6);
        char[] charArray9 = new char[] {};
        char[] charArray10 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray9, charArray10);
        char[] charArray12 = new char[] {};
        char[] charArray13 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray12, charArray13);
        org.junit.Assert.assertArrayEquals(charArray10, charArray13);
        org.junit.Assert.assertArrayEquals("tests.monster", charArray6, charArray13);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(charArray0, charArray13);
    }

    @Test
    public void test3757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3757");
        int[] intArray4 = new int[] { (short) -1, (short) 10, (short) 10, (byte) -1 };
        int[] intArray9 = new int[] { (short) -1, (short) 10, (short) 10, (byte) -1 };
        int[] intArray14 = new int[] { (short) -1, (short) 10, (short) 10, (byte) -1 };
        int[] intArray19 = new int[] { (short) -1, (short) 10, (short) 10, (byte) -1 };
        int[] intArray24 = new int[] { (short) -1, (short) 10, (short) 10, (byte) -1 };
        int[][] intArray25 = new int[][] { intArray4, intArray9, intArray14, intArray19, intArray24 };
        java.util.Set<int[]> intArraySet26 = org.apache.lucene.util.LuceneTestCase.asSet(intArray25);
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray27 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet28 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray27);
        java.util.Set<java.lang.reflect.AnnotatedElement[]> annotatedElementArraySet29 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.reflect.AnnotatedElement[][]) genericDeclarationArray27);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) intArray25, (java.lang.Object[]) genericDeclarationArray27);
    }

    @Test
    public void test3758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3758");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.ensureCleanedUp();
        java.lang.String str10 = kuromojiAnalysisTests1.getTestName();
        org.junit.rules.RuleChain ruleChain11 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Fields fields15 = null;
        org.apache.lucene.index.Fields fields16 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("tests.weekly", indexReader14, fields15, fields16, true);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs(10);
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (short) 0);
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        java.lang.String[] strArray32 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet33 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray32);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests34.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet33, (java.lang.Object) kuromojiAnalysisTests34);
        org.apache.lucene.index.PostingsEnum postingsEnum39 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum40 = null;
        kuromojiAnalysisTests34.assertDocsEnumEquals("tests.badapples", postingsEnum39, postingsEnum40, true);
        org.junit.rules.TestRule testRule43 = kuromojiAnalysisTests34.ruleChain;
        org.apache.lucene.index.IndexReader indexReader45 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum47 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum48 = null;
        kuromojiAnalysisTests34.assertDocsSkippingEquals("tests.maxfailures", indexReader45, (int) (byte) 100, postingsEnum47, postingsEnum48, false);
        kuromojiAnalysisTests34.resetCheckIndexStatus();
        kuromojiAnalysisTests34.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader54 = null;
        org.apache.lucene.index.Terms terms55 = null;
        org.apache.lucene.index.Terms terms56 = null;
        kuromojiAnalysisTests34.assertTermsEquals("hi!", indexReader54, terms55, terms56, false);
        kuromojiAnalysisTests34.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests34.ensureCheckIndexPassed();
        kuromojiAnalysisTests34.ensureCleanedUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests34);
    }

    @Test
    public void test3759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3759");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (long) 2, (long) 1);
    }

    @Test
    public void test3760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3760");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("hi!", indexReader8, (int) (byte) 0, postingsEnum10, postingsEnum11);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        java.lang.String str14 = kuromojiAnalysisTests0.getTestName();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("hi!", indexReader16, (int) '4', postingsEnum18, postingsEnum19);
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.monster", postingsEnum22, postingsEnum23);
    }

    @Test
    public void test3761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3761");
        short[] shortArray0 = null;
        short[] shortArray3 = new short[] { (short) 10 };
        short[] shortArray5 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray3, shortArray5);
        short[] shortArray10 = new short[] { (short) 10 };
        short[] shortArray12 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray10, shortArray12);
        short[] shortArray16 = new short[] { (short) 10 };
        short[] shortArray18 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray16, shortArray18);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray12, shortArray18);
        org.junit.Assert.assertArrayEquals(shortArray5, shortArray18);
        short[] shortArray25 = new short[] { (short) 10 };
        short[] shortArray27 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray25, shortArray27);
        short[] shortArray31 = new short[] { (short) 10 };
        short[] shortArray33 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray31, shortArray33);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray27, shortArray33);
        org.junit.Assert.assertArrayEquals(shortArray5, shortArray33);
        short[] shortArray41 = new short[] { (short) 10 };
        short[] shortArray43 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray41, shortArray43);
        short[] shortArray47 = new short[] { (short) 10 };
        short[] shortArray49 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray47, shortArray49);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray43, shortArray49);
        short[] shortArray55 = new short[] { (short) 10 };
        short[] shortArray57 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray55, shortArray57);
        short[] shortArray61 = new short[] { (short) 10 };
        short[] shortArray63 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray61, shortArray63);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", shortArray57, shortArray63);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray43, shortArray63);
        org.junit.Assert.assertArrayEquals(shortArray5, shortArray63);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(shortArray0, shortArray63);
    }

    @Test
    public void test3762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3762");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum17 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.weekly", indexReader14, (int) (short) 100, postingsEnum16, postingsEnum17, true);
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("<unknown>", indexReader22, (int) (short) 10, postingsEnum24, postingsEnum25, false);
        org.junit.rules.TestRule testRule28 = kuromojiAnalysisTests1.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.failfast", (java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test3763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3763");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        java.lang.String str12 = kuromojiAnalysisTests1.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests1);
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader18 = null;
        org.apache.lucene.index.Fields fields19 = null;
        org.apache.lucene.index.Fields fields20 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("hi!", indexReader18, fields19, fields20, false);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.setUp();
        org.apache.lucene.index.NumericDocValues numericDocValues27 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues28 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocValuesEquals("tests.monster", (int) (short) 10, numericDocValues27, numericDocValues28);
    }

    @Test
    public void test3764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3764");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        org.junit.rules.RuleChain[] ruleChainArray10 = new org.junit.rules.RuleChain[] {};
        org.junit.rules.RuleChain[][] ruleChainArray11 = new org.junit.rules.RuleChain[][] { ruleChainArray10 };
        java.util.Set<org.junit.rules.RuleChain[]> ruleChainArraySet12 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray11);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) ruleChainArray11);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests15 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        org.apache.lucene.index.Fields fields19 = null;
        kuromojiAnalysisTests15.assertFieldsEquals("europarl.lines.txt.gz", indexReader17, fields18, fields19, false);
        kuromojiAnalysisTests15.ensureCleanedUp();
        kuromojiAnalysisTests15.resetCheckIndexStatus();
        kuromojiAnalysisTests15.ensureCleanedUp();
        kuromojiAnalysisTests15.ensureCheckIndexPassed();
        kuromojiAnalysisTests15.restoreIndexWriterMaxDocs();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests27 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.Fields fields30 = null;
        org.apache.lucene.index.Fields fields31 = null;
        kuromojiAnalysisTests27.assertFieldsEquals("europarl.lines.txt.gz", indexReader29, fields30, fields31, false);
        kuromojiAnalysisTests27.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain36 = kuromojiAnalysisTests27.failureAndSuccessEvents;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain36;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain36;
        kuromojiAnalysisTests15.failureAndSuccessEvents = ruleChain36;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain36;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests41 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader43 = null;
        org.apache.lucene.index.Fields fields44 = null;
        org.apache.lucene.index.Fields fields45 = null;
        kuromojiAnalysisTests41.assertFieldsEquals("europarl.lines.txt.gz", indexReader43, fields44, fields45, false);
        kuromojiAnalysisTests41.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain50 = kuromojiAnalysisTests41.failureAndSuccessEvents;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain50;
        org.junit.rules.RuleChain[] ruleChainArray52 = new org.junit.rules.RuleChain[] { ruleChain36, ruleChain50 };
        java.util.Set<org.junit.rules.RuleChain> ruleChainSet53 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray52);
        java.util.Set<org.junit.rules.RuleChain> ruleChainSet54 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray52);
        org.junit.Assert.assertNotNull("", (java.lang.Object) ruleChainArray52);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) ruleChainArray11, (java.lang.Object[]) ruleChainArray52);
    }

    @Test
    public void test3765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3765");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 4, (double) '4', 0.0d);
    }

    @Test
    public void test3766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3766");
        float[] floatArray8 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray15 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray8, floatArray15, (float) (byte) 100);
        float[] floatArray27 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray34 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray27, floatArray34, (float) (byte) 100);
        float[] floatArray44 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray51 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray44, floatArray51, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray27, floatArray44, (float) (-1));
        float[] floatArray64 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray71 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray64, floatArray71, (float) (byte) 100);
        float[] floatArray81 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray88 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray81, floatArray88, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray64, floatArray81, (float) (-1));
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", floatArray44, floatArray81, 0.0f);
        org.junit.Assert.assertArrayEquals(floatArray8, floatArray81, (float) 0L);
        float[] floatArray97 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.maxfailures", floatArray8, floatArray97, (float) (short) 0);
    }

    @Test
    public void test3767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3767");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("<unknown>", (long) (short) -1, 100L);
    }

    @Test
    public void test3768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3768");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader10, terms11, terms12, false);
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        org.apache.lucene.index.Fields fields19 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader17, fields18, fields19, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests24 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Fields fields27 = null;
        org.apache.lucene.index.Fields fields28 = null;
        kuromojiAnalysisTests24.assertFieldsEquals("europarl.lines.txt.gz", indexReader26, fields27, fields28, false);
        kuromojiAnalysisTests24.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain33 = kuromojiAnalysisTests24.failureAndSuccessEvents;
        kuromojiAnalysisTests24.resetCheckIndexStatus();
        java.lang.String str35 = kuromojiAnalysisTests24.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests24);
        kuromojiAnalysisTests24.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.PostingsEnum postingsEnum39 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum40 = null;
        kuromojiAnalysisTests24.assertDocsEnumEquals("<unknown>", postingsEnum39, postingsEnum40, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests44 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader46 = null;
        org.apache.lucene.index.Fields fields47 = null;
        org.apache.lucene.index.Fields fields48 = null;
        kuromojiAnalysisTests44.assertFieldsEquals("europarl.lines.txt.gz", indexReader46, fields47, fields48, false);
        kuromojiAnalysisTests44.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain53 = kuromojiAnalysisTests44.failureAndSuccessEvents;
        kuromojiAnalysisTests44.resetCheckIndexStatus();
        java.lang.String str55 = kuromojiAnalysisTests44.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests44);
        kuromojiAnalysisTests44.setUp();
        kuromojiAnalysisTests44.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests59 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests59.setIndexWriterMaxDocs((int) (byte) 10);
        kuromojiAnalysisTests59.ensureCleanedUp();
        kuromojiAnalysisTests59.resetCheckIndexStatus();
        org.junit.rules.RuleChain ruleChain64 = kuromojiAnalysisTests59.failureAndSuccessEvents;
        kuromojiAnalysisTests44.failureAndSuccessEvents = ruleChain64;
        kuromojiAnalysisTests24.failureAndSuccessEvents = ruleChain64;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) ruleChain64);
    }

    @Test
    public void test3769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3769");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("europarl.lines.txt.gz", indexReader4, fields5, fields6, false);
        kuromojiAnalysisTests2.ensureCleanedUp();
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        kuromojiAnalysisTests2.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("", indexReader13, (int) (byte) 0, postingsEnum15, postingsEnum16);
        kuromojiAnalysisTests2.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests2.setUp();
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests2);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests21 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        org.apache.lucene.index.Fields fields25 = null;
        kuromojiAnalysisTests21.assertFieldsEquals("europarl.lines.txt.gz", indexReader23, fields24, fields25, false);
        kuromojiAnalysisTests21.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain30 = kuromojiAnalysisTests21.failureAndSuccessEvents;
        kuromojiAnalysisTests21.setUp();
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        kuromojiAnalysisTests21.assertDocsEnumEquals("<unknown>", postingsEnum33, postingsEnum34, false);
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests21);
        org.junit.Assert.assertNotSame("tests.slow", (java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) kuromojiAnalysisTests21);
        org.apache.lucene.index.IndexReader indexReader40 = null;
        org.apache.lucene.index.Fields fields41 = null;
        org.apache.lucene.index.Fields fields42 = null;
        kuromojiAnalysisTests21.assertFieldsEquals("<unknown>", indexReader40, fields41, fields42, false);
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet47 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray46);
        java.util.Set<java.lang.reflect.AnnotatedElement[]> annotatedElementArraySet48 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.reflect.AnnotatedElement[][]) genericDeclarationArray46);
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet49 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray46);
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray50 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet51 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray50);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) genericDeclarationArray46, (java.lang.Object[]) genericDeclarationArray50);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", (java.lang.Object) fields41, (java.lang.Object) "");
    }

    @Test
    public void test3770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3770");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.weekly", (double) ' ', (double) 100, (double) 0L);
    }

    @Test
    public void test3771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3771");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.failfast", indexReader8, 1, postingsEnum10, postingsEnum11);
        kuromojiAnalysisTests0.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        org.apache.lucene.index.IndexReader indexReader18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.weekly", indexReader18, 10, postingsEnum20, postingsEnum21);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotNull((java.lang.Object) postingsEnum20);
    }

    @Test
    public void test3772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3772");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) (byte) 1, 0.0f, (float) (-1));
    }

    @Test
    public void test3773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3773");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", (float) 100L, (float) (-1), 10.0f);
    }

    @Test
    public void test3774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3774");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 100, (double) (byte) -1);
    }

    @Test
    public void test3775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3775");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.awaitsfix", (float) (byte) 1, (float) (-1), (float) (short) 0);
    }

    @Test
    public void test3776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3776");
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray0 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet1 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray0);
        java.util.Set<java.lang.reflect.AnnotatedElement[]> annotatedElementArraySet2 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.reflect.AnnotatedElement[][]) genericDeclarationArray0);
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet3 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray0);
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray5 = new java.lang.reflect.GenericDeclaration[] {};
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet6 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray5);
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet7 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray5);
        org.junit.Assert.assertNotEquals((java.lang.Object) 1, (java.lang.Object) genericDeclarationArray5);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) genericDeclarationArray0, (java.lang.Object[]) genericDeclarationArray5);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests11 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        org.apache.lucene.index.Fields fields15 = null;
        kuromojiAnalysisTests11.assertFieldsEquals("europarl.lines.txt.gz", indexReader13, fields14, fields15, false);
        kuromojiAnalysisTests11.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain20 = kuromojiAnalysisTests11.failureAndSuccessEvents;
        kuromojiAnalysisTests11.resetCheckIndexStatus();
        java.lang.String str22 = kuromojiAnalysisTests11.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests11);
        kuromojiAnalysisTests11.tearDown();
        kuromojiAnalysisTests11.setUp();
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        kuromojiAnalysisTests11.assertPositionsSkippingEquals("", indexReader27, (int) '#', postingsEnum29, postingsEnum30);
        org.apache.lucene.index.IndexReader indexReader33 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum35 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum36 = null;
        kuromojiAnalysisTests11.assertPositionsSkippingEquals("tests.weekly", indexReader33, (int) (short) 10, postingsEnum35, postingsEnum36);
        java.lang.String str38 = kuromojiAnalysisTests11.getTestName();
        kuromojiAnalysisTests11.ensureCleanedUp();
        kuromojiAnalysisTests11.setIndexWriterMaxDocs((-1));
        kuromojiAnalysisTests11.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests11.ensureCheckIndexPassed();
        kuromojiAnalysisTests11.overrideTestDefaultQueryCache();
        org.apache.lucene.index.PostingsEnum postingsEnum46 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum47 = null;
        kuromojiAnalysisTests11.assertDocsEnumEquals("<unknown>", postingsEnum46, postingsEnum47, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) genericDeclarationArray0, (java.lang.Object) kuromojiAnalysisTests11);
    }

    @Test
    public void test3777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3777");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", (-1L), (long) (short) 0);
    }

    @Test
    public void test3778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3778");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) 1, 0L);
    }

    @Test
    public void test3779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3779");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain9 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("enwiki.random.lines.txt", indexReader11, 0, postingsEnum13, postingsEnum14, false);
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("<unknown>", postingsEnum18, postingsEnum19, false);
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.slow", postingsEnum24, postingsEnum25);
    }

    @Test
    public void test3780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3780");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", 100.0f, (float) (-1), (float) (short) -1);
    }

    @Test
    public void test3781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3781");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests13 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Fields fields16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        kuromojiAnalysisTests13.assertFieldsEquals("europarl.lines.txt.gz", indexReader15, fields16, fields17, false);
        kuromojiAnalysisTests13.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain22 = kuromojiAnalysisTests13.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.Fields fields26 = null;
        org.apache.lucene.index.Fields fields27 = null;
        kuromojiAnalysisTests23.assertFieldsEquals("europarl.lines.txt.gz", indexReader25, fields26, fields27, false);
        kuromojiAnalysisTests23.ensureCleanedUp();
        kuromojiAnalysisTests23.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule32 = kuromojiAnalysisTests23.ruleChain;
        org.junit.Assert.assertNotSame("hi!", (java.lang.Object) kuromojiAnalysisTests13, (java.lang.Object) testRule32);
        org.junit.Assert.assertNotSame("tests.badapples", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) "hi!");
        java.lang.String str35 = kuromojiAnalysisTests1.getTestName();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests36 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader38 = null;
        org.apache.lucene.index.Fields fields39 = null;
        org.apache.lucene.index.Fields fields40 = null;
        kuromojiAnalysisTests36.assertFieldsEquals("europarl.lines.txt.gz", indexReader38, fields39, fields40, false);
        org.apache.lucene.index.IndexReader indexReader44 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum46 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum47 = null;
        kuromojiAnalysisTests36.assertPositionsSkippingEquals("tests.failfast", indexReader44, 1, postingsEnum46, postingsEnum47);
        kuromojiAnalysisTests36.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests36.ensureCleanedUp();
        kuromojiAnalysisTests36.resetCheckIndexStatus();
        kuromojiAnalysisTests36.restoreIndexWriterMaxDocs();
        java.lang.String str54 = kuromojiAnalysisTests36.getTestName();
        org.apache.lucene.index.IndexReader indexReader56 = null;
        org.apache.lucene.index.Terms terms57 = null;
        org.apache.lucene.index.Terms terms58 = null;
        kuromojiAnalysisTests36.assertTermsEquals("<unknown>", indexReader56, terms57, terms58, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) terms58);
    }

    @Test
    public void test3782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3782");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.failfast", indexReader9, 1, postingsEnum11, postingsEnum12);
        kuromojiAnalysisTests1.setIndexWriterMaxDocs(0);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        org.apache.lucene.index.Fields fields19 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("tests.slow", indexReader17, fields18, fields19, false);
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("hi!", postingsEnum23, postingsEnum24, true);
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.Terms terms29 = null;
        org.apache.lucene.index.Terms terms30 = null;
        kuromojiAnalysisTests1.assertTermsEquals("<unknown>", indexReader28, terms29, terms30, false);
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.maxfailures", (java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test3783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3783");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", (double) 10, (double) (short) 0);
    }

    @Test
    public void test3784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3784");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("enwiki.random.lines.txt", (double) 1, (double) 1L);
    }

    @Test
    public void test3785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3785");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) (short) 1, (float) (short) 0, (float) 0L);
    }

    @Test
    public void test3786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3786");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("hi!", indexReader8, (int) (byte) 0, postingsEnum10, postingsEnum11);
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests0.assertTermsEquals("random", indexReader14, terms15, terms16, true);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.Fields fields23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("", indexReader22, fields23, fields24, false);
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.Terms terms29 = null;
        org.apache.lucene.index.Terms terms30 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader28, terms29, terms30, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.Fields fields37 = null;
        org.apache.lucene.index.Fields fields38 = null;
        kuromojiAnalysisTests34.assertFieldsEquals("europarl.lines.txt.gz", indexReader36, fields37, fields38, false);
        kuromojiAnalysisTests34.ensureCleanedUp();
        kuromojiAnalysisTests34.resetCheckIndexStatus();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests43 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader45 = null;
        org.apache.lucene.index.Fields fields46 = null;
        org.apache.lucene.index.Fields fields47 = null;
        kuromojiAnalysisTests43.assertFieldsEquals("random", indexReader45, fields46, fields47, true);
        org.junit.Assert.assertNotSame("random", (java.lang.Object) kuromojiAnalysisTests34, (java.lang.Object) fields46);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) fields46);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.PostingsEnum postingsEnum55 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum56 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.badapples", postingsEnum55, postingsEnum56);
    }

    @Test
    public void test3787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3787");
        short[] shortArray3 = new short[] { (short) 10 };
        short[] shortArray5 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray3, shortArray5);
        short[] shortArray10 = new short[] { (short) 10 };
        short[] shortArray12 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray10, shortArray12);
        short[] shortArray16 = new short[] { (short) 10 };
        short[] shortArray18 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray16, shortArray18);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray12, shortArray18);
        org.junit.Assert.assertArrayEquals(shortArray5, shortArray18);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("europarl.lines.txt.gz", (java.lang.Object) shortArray18);
    }

    @Test
    public void test3788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3788");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (short) -1, (long) 100);
    }

    @Test
    public void test3789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3789");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.awaitsfix", (-1.0d), (double) 3);
    }

    @Test
    public void test3790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3790");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("", indexReader11, (int) (byte) 0, postingsEnum13, postingsEnum14);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("<unknown>", indexReader18, (int) ' ', postingsEnum20, postingsEnum21, false);
        kuromojiAnalysisTests0.setUp();
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.failfast", indexReader26, 1, postingsEnum28, postingsEnum29, false);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((-1));
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum39 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("<unknown>", indexReader36, (int) 'a', postingsEnum38, postingsEnum39, true);
        org.apache.lucene.index.NumericDocValues numericDocValues44 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues45 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.badapples", 0, numericDocValues44, numericDocValues45);
    }

    @Test
    public void test3791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3791");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) 'a', (long) (short) 0);
    }

    @Test
    public void test3792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3792");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", (double) (byte) -1, (double) 100L, (double) (-1L));
    }

    @Test
    public void test3793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3793");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) '#', 1.0d, 0.0d);
    }

    @Test
    public void test3794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3794");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.nightly", (double) 100L, (double) (-1.0f), (double) 3);
    }

    @Test
    public void test3795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3795");
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray4 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet5 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray4);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests6 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.Fields fields9 = null;
        org.apache.lucene.index.Fields fields10 = null;
        kuromojiAnalysisTests6.assertFieldsEquals("europarl.lines.txt.gz", indexReader8, fields9, fields10, false);
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum17 = null;
        kuromojiAnalysisTests6.assertPositionsSkippingEquals("tests.failfast", indexReader14, 1, postingsEnum16, postingsEnum17);
        kuromojiAnalysisTests6.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests6.ensureCleanedUp();
        kuromojiAnalysisTests6.resetCheckIndexStatus();
        kuromojiAnalysisTests6.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.Fields fields26 = null;
        org.apache.lucene.index.Fields fields27 = null;
        kuromojiAnalysisTests6.assertFieldsEquals("enwiki.random.lines.txt", indexReader25, fields26, fields27, false);
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        kuromojiAnalysisTests6.assertDocsSkippingEquals("tests.weekly", indexReader31, (int) (byte) 0, postingsEnum33, postingsEnum34, true);
        org.junit.Assert.assertNotSame("tests.weekly", (java.lang.Object) genericDeclarationArray4, (java.lang.Object) "tests.weekly");
        java.util.concurrent.ExecutorService[] executorServiceArray38 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean39 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray38);
        org.junit.Assert.assertEquals((java.lang.Object[]) genericDeclarationArray4, (java.lang.Object[]) executorServiceArray38);
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray41 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet42 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray41);
        java.util.Set<java.lang.reflect.AnnotatedElement[]> annotatedElementArraySet43 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.reflect.AnnotatedElement[][]) genericDeclarationArray41);
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet44 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray41);
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray46 = new java.lang.reflect.GenericDeclaration[] {};
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet47 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray46);
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet48 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray46);
        org.junit.Assert.assertNotEquals((java.lang.Object) 1, (java.lang.Object) genericDeclarationArray46);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) genericDeclarationArray41, (java.lang.Object[]) genericDeclarationArray46);
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) executorServiceArray38, (java.lang.Object[]) genericDeclarationArray41);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests53 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader55 = null;
        org.apache.lucene.index.Fields fields56 = null;
        org.apache.lucene.index.Fields fields57 = null;
        kuromojiAnalysisTests53.assertFieldsEquals("europarl.lines.txt.gz", indexReader55, fields56, fields57, false);
        kuromojiAnalysisTests53.ensureCleanedUp();
        kuromojiAnalysisTests53.resetCheckIndexStatus();
        kuromojiAnalysisTests53.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader64 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum66 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum67 = null;
        kuromojiAnalysisTests53.assertPositionsSkippingEquals("", indexReader64, (int) (byte) 0, postingsEnum66, postingsEnum67);
        kuromojiAnalysisTests53.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader71 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum73 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum74 = null;
        kuromojiAnalysisTests53.assertDocsSkippingEquals("<unknown>", indexReader71, (int) ' ', postingsEnum73, postingsEnum74, false);
        kuromojiAnalysisTests53.setUp();
        org.junit.Assert.assertNotNull("<unknown>", (java.lang.Object) kuromojiAnalysisTests53);
        org.junit.rules.TestRule testRule79 = kuromojiAnalysisTests53.ruleChain;
        org.junit.rules.TestRule testRule80 = kuromojiAnalysisTests53.ruleChain;
        kuromojiAnalysisTests53.ensureCleanedUp();
        org.junit.Assert.assertNotSame("random", (java.lang.Object) executorServiceArray38, (java.lang.Object) kuromojiAnalysisTests53);
        java.util.Locale locale85 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale87 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale89 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale91 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale93 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray94 = new java.util.Locale[] { locale85, locale87, locale89, locale91, locale93 };
        java.util.Set<java.util.Locale> localeSet95 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray94);
        java.util.List<java.io.Serializable> serializableList96 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray94);
        org.junit.Assert.assertNotNull((java.lang.Object) localeArray94);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.slow", (java.lang.Object[]) executorServiceArray38, (java.lang.Object[]) localeArray94);
    }

    @Test
    public void test3796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3796");
        java.lang.String[] strArray7 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet8 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray7);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests9 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests9.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet8, (java.lang.Object) kuromojiAnalysisTests9);
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests9.assertDocsEnumEquals("tests.badapples", postingsEnum14, postingsEnum15, true);
        org.junit.rules.TestRule testRule18 = kuromojiAnalysisTests9.ruleChain;
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        kuromojiAnalysisTests9.assertDocsSkippingEquals("tests.maxfailures", indexReader20, (int) (byte) 100, postingsEnum22, postingsEnum23, false);
        kuromojiAnalysisTests9.resetCheckIndexStatus();
        kuromojiAnalysisTests9.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests28 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.Fields fields31 = null;
        org.apache.lucene.index.Fields fields32 = null;
        kuromojiAnalysisTests28.assertFieldsEquals("europarl.lines.txt.gz", indexReader30, fields31, fields32, false);
        kuromojiAnalysisTests28.ensureCleanedUp();
        kuromojiAnalysisTests28.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader38 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum40 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        kuromojiAnalysisTests28.assertDocsSkippingEquals("tests.slow", indexReader38, (int) '#', postingsEnum40, postingsEnum41, false);
        org.apache.lucene.index.IndexReader indexReader45 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum47 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum48 = null;
        kuromojiAnalysisTests28.assertPositionsSkippingEquals("tests.maxfailures", indexReader45, (int) (short) 100, postingsEnum47, postingsEnum48);
        org.apache.lucene.index.IndexReader indexReader51 = null;
        org.apache.lucene.index.Fields fields52 = null;
        org.apache.lucene.index.Fields fields53 = null;
        kuromojiAnalysisTests28.assertFieldsEquals("enwiki.random.lines.txt", indexReader51, fields52, fields53, false);
        org.junit.rules.RuleChain ruleChain56 = kuromojiAnalysisTests28.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) kuromojiAnalysisTests9, (java.lang.Object) kuromojiAnalysisTests28);
    }

    @Test
    public void test3797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3797");
        java.lang.Object obj0 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("europarl.lines.txt.gz", indexReader4, fields5, fields6, false);
        kuromojiAnalysisTests2.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain11 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        java.lang.String str13 = kuromojiAnalysisTests2.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests2);
        kuromojiAnalysisTests2.tearDown();
        kuromojiAnalysisTests2.setUp();
        org.apache.lucene.index.IndexReader indexReader18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("", indexReader18, (int) '#', postingsEnum20, postingsEnum21);
        org.junit.rules.RuleChain ruleChain23 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        kuromojiAnalysisTests2.assertDocsSkippingEquals("<unknown>", indexReader25, (int) (byte) -1, postingsEnum27, postingsEnum28, false);
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame(obj0, (java.lang.Object) kuromojiAnalysisTests2);
    }

    @Test
    public void test3798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3798");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals(0.0d, (double) 0, (double) (short) 100);
    }

    @Test
    public void test3799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3799");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("hi!", (float) (-1L), (float) 2, (float) 2);
    }

    @Test
    public void test3800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3800");
        java.util.concurrent.ExecutorService[] executorServiceArray1 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean2 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        java.util.concurrent.ExecutorService[] executorServiceArray4 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean5 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        boolean boolean6 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        boolean boolean7 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        boolean boolean8 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        boolean boolean9 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        boolean boolean10 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray1, (java.lang.Object[]) executorServiceArray4);
        boolean boolean12 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        boolean boolean13 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray15 = new java.lang.reflect.GenericDeclaration[] {};
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet16 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray15);
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet17 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray15);
        org.junit.Assert.assertNotEquals((java.lang.Object) 1, (java.lang.Object) genericDeclarationArray15);
        java.util.Set<java.lang.reflect.AnnotatedElement> annotatedElementSet19 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.reflect.AnnotatedElement[]) genericDeclarationArray15);
        org.junit.Assert.assertEquals("random", (java.lang.Object[]) executorServiceArray4, (java.lang.Object[]) genericDeclarationArray15);
        boolean boolean21 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.Fields fields26 = null;
        org.apache.lucene.index.Fields fields27 = null;
        kuromojiAnalysisTests23.assertFieldsEquals("europarl.lines.txt.gz", indexReader25, fields26, fields27, false);
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        kuromojiAnalysisTests23.assertPositionsSkippingEquals("hi!", indexReader31, (int) (byte) 0, postingsEnum33, postingsEnum34);
        org.apache.lucene.index.IndexReader indexReader37 = null;
        org.apache.lucene.index.Terms terms38 = null;
        org.apache.lucene.index.Terms terms39 = null;
        kuromojiAnalysisTests23.assertTermsEquals("random", indexReader37, terms38, terms39, true);
        kuromojiAnalysisTests23.setUp();
        org.apache.lucene.index.PostingsEnum postingsEnum44 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        kuromojiAnalysisTests23.assertDocsEnumEquals("tests.nightly", postingsEnum44, postingsEnum45, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests48 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader50 = null;
        org.apache.lucene.index.Fields fields51 = null;
        org.apache.lucene.index.Fields fields52 = null;
        kuromojiAnalysisTests48.assertFieldsEquals("europarl.lines.txt.gz", indexReader50, fields51, fields52, false);
        kuromojiAnalysisTests48.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain57 = kuromojiAnalysisTests48.failureAndSuccessEvents;
        kuromojiAnalysisTests48.ensureAllSearchContextsReleased();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests59 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader61 = null;
        org.apache.lucene.index.Fields fields62 = null;
        org.apache.lucene.index.Fields fields63 = null;
        kuromojiAnalysisTests59.assertFieldsEquals("europarl.lines.txt.gz", indexReader61, fields62, fields63, false);
        org.apache.lucene.index.IndexReader indexReader67 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum69 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum70 = null;
        kuromojiAnalysisTests59.assertPositionsSkippingEquals("hi!", indexReader67, (int) (byte) 0, postingsEnum69, postingsEnum70);
        kuromojiAnalysisTests59.ensureCheckIndexPassed();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests[] kuromojiAnalysisTestsArray73 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests[] { kuromojiAnalysisTests23, kuromojiAnalysisTests48, kuromojiAnalysisTests59 };
        java.util.Set<org.elasticsearch.index.analysis.KuromojiAnalysisTests> kuromojiAnalysisTestsSet74 = org.apache.lucene.util.LuceneTestCase.asSet(kuromojiAnalysisTestsArray73);
        java.util.Set<org.junit.Assert> assertSet75 = org.apache.lucene.util.LuceneTestCase.asSet((org.junit.Assert[]) kuromojiAnalysisTestsArray73);
        org.junit.rules.RuleChain[] ruleChainArray76 = new org.junit.rules.RuleChain[] {};
        org.junit.rules.RuleChain[][] ruleChainArray77 = new org.junit.rules.RuleChain[][] { ruleChainArray76 };
        java.util.Set<org.junit.rules.RuleChain[]> ruleChainArraySet78 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray77);
        org.junit.Assert.assertNotEquals("tests.failfast", (java.lang.Object) kuromojiAnalysisTestsArray73, (java.lang.Object) ruleChainArray77);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray4, (java.lang.Object[]) kuromojiAnalysisTestsArray73);
    }

    @Test
    public void test3801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3801");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests13 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Fields fields16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        kuromojiAnalysisTests13.assertFieldsEquals("europarl.lines.txt.gz", indexReader15, fields16, fields17, false);
        kuromojiAnalysisTests13.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain22 = kuromojiAnalysisTests13.failureAndSuccessEvents;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain22;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain22;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain22;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain22;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests27 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.Fields fields30 = null;
        org.apache.lucene.index.Fields fields31 = null;
        kuromojiAnalysisTests27.assertFieldsEquals("europarl.lines.txt.gz", indexReader29, fields30, fields31, false);
        kuromojiAnalysisTests27.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain36 = kuromojiAnalysisTests27.failureAndSuccessEvents;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain36;
        org.junit.rules.RuleChain[] ruleChainArray38 = new org.junit.rules.RuleChain[] { ruleChain22, ruleChain36 };
        java.util.Set<org.junit.rules.RuleChain> ruleChainSet39 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray38);
        java.util.Set<org.junit.rules.RuleChain> ruleChainSet40 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray38);
        org.junit.Assert.assertNotNull("", (java.lang.Object) ruleChainArray38);
        java.util.Set<org.junit.rules.RuleChain> ruleChainSet42 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray38);
        java.util.Set<org.junit.rules.RuleChain> ruleChainSet43 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray38);
        java.util.Set<org.junit.rules.TestRule> testRuleSet44 = org.apache.lucene.util.LuceneTestCase.asSet((org.junit.rules.TestRule[]) ruleChainArray38);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests46 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader48 = null;
        org.apache.lucene.index.Fields fields49 = null;
        org.apache.lucene.index.Fields fields50 = null;
        kuromojiAnalysisTests46.assertFieldsEquals("europarl.lines.txt.gz", indexReader48, fields49, fields50, false);
        org.apache.lucene.index.IndexReader indexReader54 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum56 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum57 = null;
        kuromojiAnalysisTests46.assertPositionsSkippingEquals("hi!", indexReader54, (int) (byte) 0, postingsEnum56, postingsEnum57);
        org.apache.lucene.index.IndexReader indexReader60 = null;
        org.apache.lucene.index.Terms terms61 = null;
        org.apache.lucene.index.Terms terms62 = null;
        kuromojiAnalysisTests46.assertTermsEquals("random", indexReader60, terms61, terms62, true);
        kuromojiAnalysisTests46.setUp();
        kuromojiAnalysisTests46.tearDown();
        org.apache.lucene.index.IndexReader indexReader68 = null;
        org.apache.lucene.index.Fields fields69 = null;
        org.apache.lucene.index.Fields fields70 = null;
        kuromojiAnalysisTests46.assertFieldsEquals("", indexReader68, fields69, fields70, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests73 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader75 = null;
        org.apache.lucene.index.Fields fields76 = null;
        org.apache.lucene.index.Fields fields77 = null;
        kuromojiAnalysisTests73.assertFieldsEquals("europarl.lines.txt.gz", indexReader75, fields76, fields77, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests80 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader82 = null;
        org.apache.lucene.index.Fields fields83 = null;
        org.apache.lucene.index.Fields fields84 = null;
        kuromojiAnalysisTests80.assertFieldsEquals("europarl.lines.txt.gz", indexReader82, fields83, fields84, false);
        org.apache.lucene.index.IndexReader indexReader88 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum90 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum91 = null;
        kuromojiAnalysisTests80.assertPositionsSkippingEquals("hi!", indexReader88, (int) (byte) 0, postingsEnum90, postingsEnum91);
        org.elasticsearch.test.ESTestCase[] eSTestCaseArray93 = new org.elasticsearch.test.ESTestCase[] { kuromojiAnalysisTests46, kuromojiAnalysisTests73, kuromojiAnalysisTests80 };
        java.util.List<org.elasticsearch.test.ESTestCase> eSTestCaseList94 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (byte) 0, eSTestCaseArray93);
        java.util.Set<org.apache.lucene.util.LuceneTestCase> luceneTestCaseSet95 = org.apache.lucene.util.LuceneTestCase.asSet((org.apache.lucene.util.LuceneTestCase[]) eSTestCaseArray93);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) testRuleSet44, (java.lang.Object) eSTestCaseArray93);
    }

    @Test
    public void test3802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3802");
        java.util.Locale locale2 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale4 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale6 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale8 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale10 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray11 = new java.util.Locale[] { locale2, locale4, locale6, locale8, locale10 };
        java.util.Set<java.util.Locale> localeSet12 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray11);
        java.util.List<java.io.Serializable> serializableList13 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray11);
        java.util.Set<java.lang.Cloneable> cloneableSet14 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray11);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray11, (java.lang.Object) (byte) -1);
        java.util.Locale locale19 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale21 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale23 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale25 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale27 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray28 = new java.util.Locale[] { locale19, locale21, locale23, locale25, locale27 };
        java.util.Set<java.util.Locale> localeSet29 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray28);
        java.util.List<java.io.Serializable> serializableList30 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray28);
        java.util.Set<java.lang.Cloneable> cloneableSet31 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray28);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray28, (java.lang.Object) (byte) -1);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray11, (java.lang.Object[]) localeArray28);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests[] kuromojiAnalysisTestsArray36 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests[] {};
        org.elasticsearch.index.analysis.KuromojiAnalysisTests[] kuromojiAnalysisTestsArray37 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests[] {};
        org.elasticsearch.index.analysis.KuromojiAnalysisTests[] kuromojiAnalysisTestsArray38 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests[] {};
        org.elasticsearch.index.analysis.KuromojiAnalysisTests[] kuromojiAnalysisTestsArray39 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests[] {};
        org.elasticsearch.index.analysis.KuromojiAnalysisTests[] kuromojiAnalysisTestsArray40 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests[] {};
        org.elasticsearch.index.analysis.KuromojiAnalysisTests[][] kuromojiAnalysisTestsArray41 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests[][] { kuromojiAnalysisTestsArray36, kuromojiAnalysisTestsArray37, kuromojiAnalysisTestsArray38, kuromojiAnalysisTestsArray39, kuromojiAnalysisTestsArray40 };
        java.util.Set<org.elasticsearch.index.analysis.KuromojiAnalysisTests[]> kuromojiAnalysisTestsArraySet42 = org.apache.lucene.util.LuceneTestCase.asSet(kuromojiAnalysisTestsArray41);
        java.util.List<org.elasticsearch.test.ESTestCase[]> eSTestCaseArrayList43 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (byte) 1, (org.elasticsearch.test.ESTestCase[][]) kuromojiAnalysisTestsArray41);
        // during test generation this statement threw an exception of type org.junit.internal.ArrayComparisonFailure in error
        org.junit.Assert.assertEquals((java.lang.Object[]) localeArray11, (java.lang.Object[]) kuromojiAnalysisTestsArray41);
    }

    @Test
    public void test3803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3803");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain9 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.junit.rules.TestRule testRule12 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests0.assertTermsEquals("hi!", indexReader15, terms16, terms17, true);
        kuromojiAnalysisTests0.ensureCleanedUp();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet23 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray22);
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet24 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray22);
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet25 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray22);
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) strArray22);
        java.util.Locale locale30 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale32 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale34 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale36 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale38 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray39 = new java.util.Locale[] { locale30, locale32, locale34, locale36, locale38 };
        java.util.Set<java.util.Locale> localeSet40 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray39);
        java.util.List<java.io.Serializable> serializableList41 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray39);
        org.junit.Assert.assertNotSame("", (java.lang.Object) localeArray39, (java.lang.Object) 0.0f);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) strArray22, (java.lang.Object[]) localeArray39);
    }

    @Test
    public void test3804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3804");
        double[] doubleArray3 = new double[] { 100, (short) 100 };
        double[] doubleArray6 = new double[] { 100, (short) 100 };
        double[] doubleArray9 = new double[] { 100, (short) 100 };
        double[][] doubleArray10 = new double[][] { doubleArray3, doubleArray6, doubleArray9 };
        java.util.Set<double[]> doubleArraySet11 = org.apache.lucene.util.LuceneTestCase.asSet(doubleArray10);
        java.util.Set<double[]> doubleArraySet12 = org.apache.lucene.util.LuceneTestCase.asSet(doubleArray10);
        java.util.Locale locale15 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale17 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale19 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale21 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale23 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray24 = new java.util.Locale[] { locale15, locale17, locale19, locale21, locale23 };
        java.util.Set<java.util.Locale> localeSet25 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray24);
        java.util.List<java.io.Serializable> serializableList26 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray24);
        java.util.Set<java.lang.Cloneable> cloneableSet27 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray24);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray24, (java.lang.Object) (byte) -1);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", (java.lang.Object[]) doubleArray10, (java.lang.Object[]) localeArray24);
    }

    @Test
    public void test3805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3805");
        java.lang.Object obj0 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        java.lang.String str12 = kuromojiAnalysisTests1.getTestName();
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.setUp();
        org.junit.rules.TestRule testRule15 = kuromojiAnalysisTests1.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(obj0, (java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test3806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3806");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", (double) 100L, (double) 0L);
    }

    @Test
    public void test3807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3807");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (double) 10.0f, (double) '#');
    }

    @Test
    public void test3808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3808");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", (double) (-1), (double) (byte) 100, (double) (byte) 100);
    }

    @Test
    public void test3809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3809");
        java.util.concurrent.ExecutorService[] executorServiceArray0 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean1 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray0);
        boolean boolean2 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray0);
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray0);
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray4 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet5 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray4);
        java.util.Set<java.lang.reflect.AnnotatedElement[]> annotatedElementArraySet6 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.reflect.AnnotatedElement[][]) genericDeclarationArray4);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray0, (java.lang.Object[]) genericDeclarationArray4);
        boolean boolean8 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray0);
        boolean boolean9 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray0);
        java.util.Locale locale12 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale14 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale16 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale18 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale20 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray21 = new java.util.Locale[] { locale12, locale14, locale16, locale18, locale20 };
        java.util.Set<java.util.Locale> localeSet22 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray21);
        java.util.Locale locale25 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale27 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale29 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale31 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale33 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray34 = new java.util.Locale[] { locale25, locale27, locale29, locale31, locale33 };
        java.util.Set<java.util.Locale> localeSet35 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray34);
        java.util.List<java.io.Serializable> serializableList36 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray34);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray21, (java.lang.Object[]) localeArray34);
        java.util.Locale locale40 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale42 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale44 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale46 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale48 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray49 = new java.util.Locale[] { locale40, locale42, locale44, locale46, locale48 };
        java.util.Set<java.util.Locale> localeSet50 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray49);
        java.util.List<java.io.Serializable> serializableList51 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray49);
        java.util.Set<java.lang.Cloneable> cloneableSet52 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray49);
        org.junit.Assert.assertArrayEquals("tests.slow", (java.lang.Object[]) localeArray34, (java.lang.Object[]) localeArray49);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray0, (java.lang.Object[]) localeArray49);
    }

    @Test
    public void test3810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3810");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests11 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        org.apache.lucene.index.Fields fields15 = null;
        kuromojiAnalysisTests11.assertFieldsEquals("europarl.lines.txt.gz", indexReader13, fields14, fields15, false);
        kuromojiAnalysisTests11.ensureCleanedUp();
        kuromojiAnalysisTests11.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule20 = kuromojiAnalysisTests11.ruleChain;
        org.junit.Assert.assertNotSame("hi!", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) testRule20);
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (byte) 0);
        org.junit.rules.TestRule testRule24 = kuromojiAnalysisTests1.ruleChain;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests25 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.Fields fields28 = null;
        org.apache.lucene.index.Fields fields29 = null;
        kuromojiAnalysisTests25.assertFieldsEquals("europarl.lines.txt.gz", indexReader27, fields28, fields29, false);
        kuromojiAnalysisTests25.ensureCleanedUp();
        kuromojiAnalysisTests25.assertPathHasBeenCleared("tests.failfast");
        kuromojiAnalysisTests25.tearDown();
        kuromojiAnalysisTests25.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests25.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests38 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader40 = null;
        org.apache.lucene.index.Fields fields41 = null;
        org.apache.lucene.index.Fields fields42 = null;
        kuromojiAnalysisTests38.assertFieldsEquals("europarl.lines.txt.gz", indexReader40, fields41, fields42, false);
        kuromojiAnalysisTests38.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain47 = kuromojiAnalysisTests38.failureAndSuccessEvents;
        kuromojiAnalysisTests38.resetCheckIndexStatus();
        kuromojiAnalysisTests38.assertPathHasBeenCleared("random");
        java.lang.String str51 = kuromojiAnalysisTests38.getTestName();
        org.junit.rules.RuleChain ruleChain52 = kuromojiAnalysisTests38.failureAndSuccessEvents;
        kuromojiAnalysisTests25.failureAndSuccessEvents = ruleChain52;
        org.apache.lucene.index.IndexReader indexReader55 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum57 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum58 = null;
        kuromojiAnalysisTests25.assertDocsSkippingEquals("tests.awaitsfix", indexReader55, 100, postingsEnum57, postingsEnum58, true);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) testRule24, (java.lang.Object) postingsEnum58);
    }

    @Test
    public void test3811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3811");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.TestRule testRule9 = kuromojiAnalysisTests0.ruleChain;
        org.junit.rules.TestRule testRule10 = kuromojiAnalysisTests0.ruleChain;
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.slow", indexReader12, (int) (short) 1, postingsEnum14, postingsEnum15);
        org.junit.rules.TestRule testRule17 = kuromojiAnalysisTests0.ruleChain;
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.Terms terms20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader19, terms20, terms21, false);
        kuromojiAnalysisTests0.tearDown();
        org.junit.rules.RuleChain ruleChain25 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        org.junit.rules.RuleChain ruleChain27 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.apache.lucene.index.NumericDocValues numericDocValues30 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues31 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.badapples", 3, numericDocValues30, numericDocValues31);
    }

    @Test
    public void test3812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3812");
        java.util.Locale locale6 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale8 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale10 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale12 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale14 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray15 = new java.util.Locale[] { locale6, locale8, locale10, locale12, locale14 };
        java.util.Set<java.util.Locale> localeSet16 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray15);
        java.util.List<java.io.Serializable> serializableList17 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray15);
        org.junit.Assert.assertNotSame("", (java.lang.Object) localeArray15, (java.lang.Object) 0.0f);
        java.util.Locale locale23 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale25 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale27 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale29 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale31 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray32 = new java.util.Locale[] { locale23, locale25, locale27, locale29, locale31 };
        java.util.Set<java.util.Locale> localeSet33 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray32);
        java.util.List<java.io.Serializable> serializableList34 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray32);
        org.junit.Assert.assertNotSame("", (java.lang.Object) localeArray32, (java.lang.Object) 0.0f);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", (java.lang.Object[]) localeArray15, (java.lang.Object[]) localeArray32);
        java.util.Locale locale39 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale41 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale43 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale45 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale47 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray48 = new java.util.Locale[] { locale39, locale41, locale43, locale45, locale47 };
        java.util.Set<java.util.Locale> localeSet49 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray48);
        org.junit.Assert.assertArrayEquals("tests.nightly", (java.lang.Object[]) localeArray15, (java.lang.Object[]) localeArray48);
        java.lang.Object obj51 = new java.lang.Object();
        org.junit.Assert.assertNotSame((java.lang.Object) localeArray15, obj51);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests53 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader55 = null;
        org.apache.lucene.index.Fields fields56 = null;
        org.apache.lucene.index.Fields fields57 = null;
        kuromojiAnalysisTests53.assertFieldsEquals("europarl.lines.txt.gz", indexReader55, fields56, fields57, false);
        kuromojiAnalysisTests53.ensureCleanedUp();
        kuromojiAnalysisTests53.resetCheckIndexStatus();
        kuromojiAnalysisTests53.ensureCleanedUp();
        kuromojiAnalysisTests53.ensureCheckIndexPassed();
        kuromojiAnalysisTests53.restoreIndexWriterMaxDocs();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests65 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader67 = null;
        org.apache.lucene.index.Fields fields68 = null;
        org.apache.lucene.index.Fields fields69 = null;
        kuromojiAnalysisTests65.assertFieldsEquals("europarl.lines.txt.gz", indexReader67, fields68, fields69, false);
        kuromojiAnalysisTests65.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain74 = kuromojiAnalysisTests65.failureAndSuccessEvents;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain74;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain74;
        kuromojiAnalysisTests53.failureAndSuccessEvents = ruleChain74;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain74;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests79 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader81 = null;
        org.apache.lucene.index.Fields fields82 = null;
        org.apache.lucene.index.Fields fields83 = null;
        kuromojiAnalysisTests79.assertFieldsEquals("europarl.lines.txt.gz", indexReader81, fields82, fields83, false);
        kuromojiAnalysisTests79.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain88 = kuromojiAnalysisTests79.failureAndSuccessEvents;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain88;
        org.junit.rules.RuleChain[] ruleChainArray90 = new org.junit.rules.RuleChain[] { ruleChain74, ruleChain88 };
        java.util.Set<org.junit.rules.RuleChain> ruleChainSet91 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray90);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.badapples", (java.lang.Object[]) localeArray15, (java.lang.Object[]) ruleChainArray90);
    }

    @Test
    public void test3813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3813");
        java.lang.String[] strArray7 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet8 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray7);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests9 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests9.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet8, (java.lang.Object) kuromojiAnalysisTests9);
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests9.assertDocsEnumEquals("tests.badapples", postingsEnum14, postingsEnum15, true);
        org.junit.rules.TestRule testRule18 = kuromojiAnalysisTests9.ruleChain;
        kuromojiAnalysisTests9.setUp();
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        kuromojiAnalysisTests9.assertPositionsSkippingEquals("tests.nightly", indexReader21, (int) (short) -1, postingsEnum23, postingsEnum24);
        kuromojiAnalysisTests9.assertPathHasBeenCleared("tests.maxfailures");
        org.apache.lucene.index.NumericDocValues numericDocValues30 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues31 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests9.assertDocValuesEquals("enwiki.random.lines.txt", (int) (byte) 10, numericDocValues30, numericDocValues31);
    }

    @Test
    public void test3814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3814");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) (byte) 0, (float) 10L, (float) (byte) 1);
    }

    @Test
    public void test3815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3815");
        java.util.concurrent.ExecutorService executorService1 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray2 = new java.util.concurrent.ExecutorService[] { executorService1 };
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean4 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean5 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean6 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean7 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean8 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        java.util.Locale locale12 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale14 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale16 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale18 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale20 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray21 = new java.util.Locale[] { locale12, locale14, locale16, locale18, locale20 };
        java.util.Set<java.util.Locale> localeSet22 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray21);
        java.util.List<java.io.Serializable> serializableList23 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray21);
        org.junit.Assert.assertNotSame("", (java.lang.Object) localeArray21, (java.lang.Object) 0.0f);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("hi!", (java.lang.Object[]) executorServiceArray2, (java.lang.Object[]) localeArray21);
    }

    @Test
    public void test3816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3816");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 1.0f, (double) (byte) 10, (double) 4);
    }

    @Test
    public void test3817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3817");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.failfast");
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests14 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        kuromojiAnalysisTests14.assertFieldsEquals("europarl.lines.txt.gz", indexReader16, fields17, fields18, false);
        kuromojiAnalysisTests14.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain23 = kuromojiAnalysisTests14.failureAndSuccessEvents;
        kuromojiAnalysisTests14.resetCheckIndexStatus();
        kuromojiAnalysisTests14.assertPathHasBeenCleared("random");
        java.lang.String str27 = kuromojiAnalysisTests14.getTestName();
        org.junit.rules.RuleChain ruleChain28 = kuromojiAnalysisTests14.failureAndSuccessEvents;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain28;
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.Fields fields32 = null;
        org.apache.lucene.index.Fields fields33 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("<unknown>", indexReader31, fields32, fields33, false);
        org.apache.lucene.index.IndexReader indexReader37 = null;
        org.apache.lucene.index.Fields fields38 = null;
        org.apache.lucene.index.Fields fields39 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("", indexReader37, fields38, fields39, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("random", (java.lang.Object) "");
    }

    @Test
    public void test3818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3818");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (long) ' ', (long) 1);
    }

    @Test
    public void test3819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3819");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 'a', 10.0d);
    }

    @Test
    public void test3820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3820");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (-1.0f), (double) 2, (double) 0.0f);
    }

    @Test
    public void test3821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3821");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (-1.0f), (double) 10L);
    }

    @Test
    public void test3822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3822");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.junit.rules.TestRule testRule10 = kuromojiAnalysisTests1.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.badapples", (java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test3823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3823");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 0L, 0.0d);
    }

    @Test
    public void test3824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3824");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (long) 2, (long) (byte) 100);
    }

    @Test
    public void test3825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3825");
        java.lang.String[] strArray8 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet9 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray8);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests10 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests10.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet9, (java.lang.Object) kuromojiAnalysisTests10);
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        kuromojiAnalysisTests10.assertDocsEnumEquals("tests.badapples", postingsEnum15, postingsEnum16, true);
        org.junit.rules.TestRule testRule19 = kuromojiAnalysisTests10.ruleChain;
        kuromojiAnalysisTests10.setUp();
        kuromojiAnalysisTests10.ensureCleanedUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.maxfailures", (java.lang.Object) kuromojiAnalysisTests10);
    }

    @Test
    public void test3826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3826");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("hi!", indexReader8, (int) (byte) 0, postingsEnum10, postingsEnum11);
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests0.assertTermsEquals("random", indexReader14, terms15, terms16, true);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.slow");
        java.lang.Class<?> wildcardClass27 = kuromojiAnalysisTests0.getClass();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests28 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.Fields fields31 = null;
        org.apache.lucene.index.Fields fields32 = null;
        kuromojiAnalysisTests28.assertFieldsEquals("europarl.lines.txt.gz", indexReader30, fields31, fields32, false);
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum39 = null;
        kuromojiAnalysisTests28.assertPositionsSkippingEquals("hi!", indexReader36, (int) (byte) 0, postingsEnum38, postingsEnum39);
        org.apache.lucene.index.IndexReader indexReader42 = null;
        org.apache.lucene.index.Terms terms43 = null;
        org.apache.lucene.index.Terms terms44 = null;
        kuromojiAnalysisTests28.assertTermsEquals("random", indexReader42, terms43, terms44, true);
        kuromojiAnalysisTests28.setUp();
        org.apache.lucene.index.PostingsEnum postingsEnum49 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum50 = null;
        kuromojiAnalysisTests28.assertDocsEnumEquals("tests.nightly", postingsEnum49, postingsEnum50, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests53 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader55 = null;
        org.apache.lucene.index.Fields fields56 = null;
        org.apache.lucene.index.Fields fields57 = null;
        kuromojiAnalysisTests53.assertFieldsEquals("europarl.lines.txt.gz", indexReader55, fields56, fields57, false);
        kuromojiAnalysisTests53.assertPathHasBeenCleared("tests.slow");
        kuromojiAnalysisTests53.assertPathHasBeenCleared("tests.slow");
        kuromojiAnalysisTests53.ensureCleanedUp();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests28, (java.lang.Object) kuromojiAnalysisTests53);
        kuromojiAnalysisTests28.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests28.ensureCleanedUp();
        kuromojiAnalysisTests28.ensureCheckIndexPassed();
        org.apache.lucene.index.IndexReader indexReader70 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum72 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum73 = null;
        kuromojiAnalysisTests28.assertPositionsSkippingEquals("europarl.lines.txt.gz", indexReader70, (int) (short) 100, postingsEnum72, postingsEnum73);
        org.apache.lucene.index.IndexReader indexReader76 = null;
        org.apache.lucene.index.Terms terms77 = null;
        org.apache.lucene.index.Terms terms78 = null;
        kuromojiAnalysisTests28.assertTermsEquals("tests.maxfailures", indexReader76, terms77, terms78, true);
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests28);
        kuromojiAnalysisTests28.ensureCleanedUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) wildcardClass27, (java.lang.Object) kuromojiAnalysisTests28);
    }

    @Test
    public void test3827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3827");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(10.0d, (double) (short) 10);
    }

    @Test
    public void test3828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3828");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (double) (byte) -1, (double) 0.0f, 0.0d);
    }

    @Test
    public void test3829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3829");
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling3 = org.apache.lucene.util.LuceneTestCase.TEST_THROTTLING;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray4 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] { throttling3 };
        java.util.List<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingList5 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (byte) 0, throttlingArray4);
        org.junit.Assert.assertNotNull("europarl.lines.txt.gz", (java.lang.Object) throttlingArray4);
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet7 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray4);
        int[][] intArray8 = new int[][] {};
        java.util.Set<int[]> intArraySet9 = org.apache.lucene.util.LuceneTestCase.asSet(intArray8);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("<unknown>", (java.lang.Object[]) throttlingArray4, (java.lang.Object[]) intArray8);
    }

    @Test
    public void test3830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3830");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("hi!", indexReader8, (int) (byte) 0, postingsEnum10, postingsEnum11);
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests0.assertTermsEquals("random", indexReader14, terms15, terms16, true);
        java.lang.String str19 = kuromojiAnalysisTests0.getTestName();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (short) 0);
        java.lang.String str22 = kuromojiAnalysisTests0.getTestName();
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.setUp();
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("", postingsEnum26, postingsEnum27);
    }

    @Test
    public void test3831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3831");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 10L, (double) 1L);
    }

    @Test
    public void test3832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3832");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (byte) 10, (double) 100);
    }

    @Test
    public void test3833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3833");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.failfast", indexReader9, 1, postingsEnum11, postingsEnum12);
        kuromojiAnalysisTests1.setIndexWriterMaxDocs(0);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("", indexReader17, (int) (byte) 100, postingsEnum19, postingsEnum20);
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.Terms terms25 = null;
        org.apache.lucene.index.Terms terms26 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.weekly", indexReader24, terms25, terms26, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotNull("tests.failfast", (java.lang.Object) indexReader24);
    }

    @Test
    public void test3834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3834");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("hi!", indexReader8, (int) (byte) 0, postingsEnum10, postingsEnum11);
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests0.assertTermsEquals("random", indexReader14, terms15, terms16, true);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("europarl.lines.txt.gz", indexReader22, (int) (short) 0, postingsEnum24, postingsEnum25, false);
        java.lang.String str28 = kuromojiAnalysisTests0.getTestName();
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.slow");
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.monster", postingsEnum32, postingsEnum33);
    }

    @Test
    public void test3835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3835");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((-1.0f), (float) 100L, (float) 1L);
    }

    @Test
    public void test3836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3836");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals(0.0d, (double) (byte) -1, (double) (byte) 10);
    }

    @Test
    public void test3837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3837");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (byte) 10);
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.weekly", indexReader5, terms6, terms7, true);
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) '#');
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.awaitsfix");
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.monster");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.awaitsfix", (java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test3838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3838");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("hi!", indexReader9, (int) (byte) 0, postingsEnum11, postingsEnum12);
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests1.assertTermsEquals("random", indexReader15, terms16, terms17, true);
        kuromojiAnalysisTests1.setUp();
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("tests.nightly", postingsEnum22, postingsEnum23, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests26 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.Fields fields29 = null;
        org.apache.lucene.index.Fields fields30 = null;
        kuromojiAnalysisTests26.assertFieldsEquals("europarl.lines.txt.gz", indexReader28, fields29, fields30, false);
        kuromojiAnalysisTests26.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain35 = kuromojiAnalysisTests26.failureAndSuccessEvents;
        kuromojiAnalysisTests26.ensureAllSearchContextsReleased();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests37 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.Fields fields40 = null;
        org.apache.lucene.index.Fields fields41 = null;
        kuromojiAnalysisTests37.assertFieldsEquals("europarl.lines.txt.gz", indexReader39, fields40, fields41, false);
        org.apache.lucene.index.IndexReader indexReader45 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum47 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum48 = null;
        kuromojiAnalysisTests37.assertPositionsSkippingEquals("hi!", indexReader45, (int) (byte) 0, postingsEnum47, postingsEnum48);
        kuromojiAnalysisTests37.ensureCheckIndexPassed();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests[] kuromojiAnalysisTestsArray51 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests[] { kuromojiAnalysisTests1, kuromojiAnalysisTests26, kuromojiAnalysisTests37 };
        java.util.Set<org.elasticsearch.index.analysis.KuromojiAnalysisTests> kuromojiAnalysisTestsSet52 = org.apache.lucene.util.LuceneTestCase.asSet(kuromojiAnalysisTestsArray51);
        java.lang.Object[] objArray53 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) kuromojiAnalysisTestsArray51, objArray53);
    }

    @Test
    public void test3839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3839");
        java.util.concurrent.ExecutorService executorService0 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray1 = new java.util.concurrent.ExecutorService[] { executorService0 };
        boolean boolean2 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean4 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean5 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        java.lang.Object[] objArray6 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray1, objArray6);
    }

    @Test
    public void test3840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3840");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        java.lang.String str12 = kuromojiAnalysisTests1.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests1);
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.setUp();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("", indexReader17, (int) '#', postingsEnum19, postingsEnum20);
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.weekly", indexReader23, (int) (short) 10, postingsEnum25, postingsEnum26);
        java.lang.String str28 = kuromojiAnalysisTests1.getTestName();
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((-1));
        org.junit.rules.RuleChain ruleChain32 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.Fields fields37 = null;
        org.apache.lucene.index.Fields fields38 = null;
        kuromojiAnalysisTests34.assertFieldsEquals("europarl.lines.txt.gz", indexReader36, fields37, fields38, false);
        kuromojiAnalysisTests34.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain43 = kuromojiAnalysisTests34.failureAndSuccessEvents;
        kuromojiAnalysisTests34.resetCheckIndexStatus();
        java.lang.String str45 = kuromojiAnalysisTests34.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests34);
        kuromojiAnalysisTests34.tearDown();
        kuromojiAnalysisTests34.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests34.ensureAllSearchContextsReleased();
        org.junit.rules.RuleChain ruleChain50 = null;
        kuromojiAnalysisTests34.failureAndSuccessEvents = ruleChain50;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests52 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader54 = null;
        org.apache.lucene.index.Fields fields55 = null;
        org.apache.lucene.index.Fields fields56 = null;
        kuromojiAnalysisTests52.assertFieldsEquals("europarl.lines.txt.gz", indexReader54, fields55, fields56, false);
        org.apache.lucene.index.IndexReader indexReader60 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum62 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum63 = null;
        kuromojiAnalysisTests52.assertPositionsSkippingEquals("hi!", indexReader60, (int) (byte) 0, postingsEnum62, postingsEnum63);
        kuromojiAnalysisTests52.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests52.ensureAllSearchContextsReleased();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests67 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader69 = null;
        org.apache.lucene.index.Fields fields70 = null;
        org.apache.lucene.index.Fields fields71 = null;
        kuromojiAnalysisTests67.assertFieldsEquals("europarl.lines.txt.gz", indexReader69, fields70, fields71, false);
        kuromojiAnalysisTests67.ensureCleanedUp();
        kuromojiAnalysisTests67.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests67.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain77 = kuromojiAnalysisTests67.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests52, (java.lang.Object) kuromojiAnalysisTests67);
        org.apache.lucene.index.PostingsEnum postingsEnum80 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum81 = null;
        kuromojiAnalysisTests52.assertDocsEnumEquals("tests.maxfailures", postingsEnum80, postingsEnum81, true);
        org.junit.rules.RuleChain ruleChain84 = kuromojiAnalysisTests52.failureAndSuccessEvents;
        kuromojiAnalysisTests34.failureAndSuccessEvents = ruleChain84;
        kuromojiAnalysisTests34.ensureCleanedUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests34);
    }

    @Test
    public void test3841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3841");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 10);
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.weekly", indexReader4, terms5, terms6, true);
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) '#');
        java.lang.String str11 = kuromojiAnalysisTests0.getTestName();
        org.junit.rules.TestRule testRule12 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests15 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        org.apache.lucene.index.Fields fields19 = null;
        kuromojiAnalysisTests15.assertFieldsEquals("europarl.lines.txt.gz", indexReader17, fields18, fields19, false);
        kuromojiAnalysisTests15.ensureCleanedUp();
        kuromojiAnalysisTests15.ensureCleanedUp();
        java.lang.String str24 = kuromojiAnalysisTests15.getTestName();
        org.junit.rules.RuleChain ruleChain25 = kuromojiAnalysisTests15.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.Fields fields28 = null;
        org.apache.lucene.index.Fields fields29 = null;
        kuromojiAnalysisTests15.assertFieldsEquals("tests.weekly", indexReader27, fields28, fields29, true);
        kuromojiAnalysisTests15.ensureCleanedUp();
        kuromojiAnalysisTests15.tearDown();
        org.junit.rules.RuleChain ruleChain34 = kuromojiAnalysisTests15.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) ruleChain34);
    }

    @Test
    public void test3842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3842");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.badapples", indexReader9, 10, postingsEnum11, postingsEnum12);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests15 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        org.apache.lucene.index.Fields fields19 = null;
        kuromojiAnalysisTests15.assertFieldsEquals("europarl.lines.txt.gz", indexReader17, fields18, fields19, false);
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        kuromojiAnalysisTests15.assertPositionsSkippingEquals("tests.failfast", indexReader23, 1, postingsEnum25, postingsEnum26);
        kuromojiAnalysisTests15.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests15.ensureCleanedUp();
        kuromojiAnalysisTests15.resetCheckIndexStatus();
        kuromojiAnalysisTests15.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader34 = null;
        org.apache.lucene.index.Fields fields35 = null;
        org.apache.lucene.index.Fields fields36 = null;
        kuromojiAnalysisTests15.assertFieldsEquals("enwiki.random.lines.txt", indexReader34, fields35, fields36, false);
        org.apache.lucene.index.IndexReader indexReader40 = null;
        org.apache.lucene.index.Terms terms41 = null;
        org.apache.lucene.index.Terms terms42 = null;
        kuromojiAnalysisTests15.assertTermsEquals("tests.failfast", indexReader40, terms41, terms42, false);
        org.apache.lucene.index.IndexReader indexReader46 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum48 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum49 = null;
        kuromojiAnalysisTests15.assertPositionsSkippingEquals("tests.awaitsfix", indexReader46, 10, postingsEnum48, postingsEnum49);
        org.junit.rules.RuleChain ruleChain51 = kuromojiAnalysisTests15.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain51;
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests0);
        org.apache.lucene.index.NumericDocValues numericDocValues56 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues57 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("random", (int) (short) 1, numericDocValues56, numericDocValues57);
    }

    @Test
    public void test3843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3843");
        short[] shortArray4 = new short[] { (short) 10 };
        short[] shortArray6 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray4, shortArray6);
        short[] shortArray10 = new short[] { (short) 10 };
        short[] shortArray12 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray10, shortArray12);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray6, shortArray12);
        short[] shortArray17 = new short[] { (short) 10 };
        short[] shortArray19 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray17, shortArray19);
        org.junit.Assert.assertArrayEquals(shortArray12, shortArray17);
        java.lang.Class<?> wildcardClass22 = shortArray12.getClass();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests24 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Fields fields27 = null;
        org.apache.lucene.index.Fields fields28 = null;
        kuromojiAnalysisTests24.assertFieldsEquals("europarl.lines.txt.gz", indexReader26, fields27, fields28, false);
        kuromojiAnalysisTests24.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain33 = kuromojiAnalysisTests24.failureAndSuccessEvents;
        kuromojiAnalysisTests24.resetCheckIndexStatus();
        java.lang.String str35 = kuromojiAnalysisTests24.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests24);
        kuromojiAnalysisTests24.tearDown();
        kuromojiAnalysisTests24.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain39 = kuromojiAnalysisTests24.failureAndSuccessEvents;
        kuromojiAnalysisTests24.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests41 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader43 = null;
        org.apache.lucene.index.Fields fields44 = null;
        org.apache.lucene.index.Fields fields45 = null;
        kuromojiAnalysisTests41.assertFieldsEquals("europarl.lines.txt.gz", indexReader43, fields44, fields45, false);
        org.apache.lucene.index.IndexReader indexReader49 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum51 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum52 = null;
        kuromojiAnalysisTests41.assertPositionsSkippingEquals("tests.failfast", indexReader49, 1, postingsEnum51, postingsEnum52);
        kuromojiAnalysisTests41.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests41.overrideTestDefaultQueryCache();
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests24, (java.lang.Object) kuromojiAnalysisTests41);
        java.lang.Object obj57 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests59 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader61 = null;
        org.apache.lucene.index.Fields fields62 = null;
        org.apache.lucene.index.Fields fields63 = null;
        kuromojiAnalysisTests59.assertFieldsEquals("europarl.lines.txt.gz", indexReader61, fields62, fields63, false);
        kuromojiAnalysisTests59.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain68 = kuromojiAnalysisTests59.failureAndSuccessEvents;
        kuromojiAnalysisTests59.resetCheckIndexStatus();
        java.lang.String str70 = kuromojiAnalysisTests59.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests59);
        kuromojiAnalysisTests59.tearDown();
        kuromojiAnalysisTests59.overrideTestDefaultQueryCache();
        org.junit.Assert.assertNotSame(obj57, (java.lang.Object) kuromojiAnalysisTests59);
        org.junit.rules.RuleChain ruleChain75 = kuromojiAnalysisTests59.failureAndSuccessEvents;
        kuromojiAnalysisTests41.failureAndSuccessEvents = ruleChain75;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("hi!", (java.lang.Object) shortArray12, (java.lang.Object) kuromojiAnalysisTests41);
    }

    @Test
    public void test3844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3844");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.ensureCleanedUp();
        java.lang.String str10 = kuromojiAnalysisTests0.getTestName();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule12 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) -1);
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests21 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        org.apache.lucene.index.Fields fields25 = null;
        kuromojiAnalysisTests21.assertFieldsEquals("europarl.lines.txt.gz", indexReader23, fields24, fields25, false);
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        kuromojiAnalysisTests21.assertPositionsSkippingEquals("hi!", indexReader29, (int) (byte) 0, postingsEnum31, postingsEnum32);
        org.apache.lucene.index.IndexReader indexReader35 = null;
        org.apache.lucene.index.Terms terms36 = null;
        org.apache.lucene.index.Terms terms37 = null;
        kuromojiAnalysisTests21.assertTermsEquals("random", indexReader35, terms36, terms37, true);
        kuromojiAnalysisTests21.setUp();
        kuromojiAnalysisTests21.tearDown();
        kuromojiAnalysisTests21.tearDown();
        kuromojiAnalysisTests21.setIndexWriterMaxDocs(1);
        kuromojiAnalysisTests21.tearDown();
        org.junit.Assert.assertNotEquals("tests.badapples", (java.lang.Object) 10.0d, (java.lang.Object) kuromojiAnalysisTests21);
        org.junit.rules.RuleChain ruleChain47 = kuromojiAnalysisTests21.failureAndSuccessEvents;
        java.lang.Class<?> wildcardClass48 = ruleChain47.getClass();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) wildcardClass48);
    }

    @Test
    public void test3845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3845");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", (float) (byte) 1, (float) 10, (float) 1);
    }

    @Test
    public void test3846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3846");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests15 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        org.apache.lucene.index.Fields fields19 = null;
        kuromojiAnalysisTests15.assertFieldsEquals("europarl.lines.txt.gz", indexReader17, fields18, fields19, false);
        kuromojiAnalysisTests15.ensureCleanedUp();
        kuromojiAnalysisTests15.resetCheckIndexStatus();
        kuromojiAnalysisTests15.ensureCleanedUp();
        kuromojiAnalysisTests15.ensureCheckIndexPassed();
        kuromojiAnalysisTests15.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests15.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests15.assertPathHasBeenCleared("hi!");
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.Terms terms32 = null;
        org.apache.lucene.index.Terms terms33 = null;
        kuromojiAnalysisTests15.assertTermsEquals("tests.nightly", indexReader31, terms32, terms33, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) indexReader31);
    }

    @Test
    public void test3847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3847");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(100.0d, 1.0d);
    }

    @Test
    public void test3848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3848");
        java.util.Locale locale3 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale5 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale7 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale9 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale11 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray12 = new java.util.Locale[] { locale3, locale5, locale7, locale9, locale11 };
        java.util.Set<java.util.Locale> localeSet13 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray12);
        java.util.List<java.io.Serializable> serializableList14 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray12);
        org.junit.Assert.assertNotSame("", (java.lang.Object) localeArray12, (java.lang.Object) 0.0f);
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray19 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet20 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray19);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests21 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        org.apache.lucene.index.Fields fields25 = null;
        kuromojiAnalysisTests21.assertFieldsEquals("europarl.lines.txt.gz", indexReader23, fields24, fields25, false);
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        kuromojiAnalysisTests21.assertPositionsSkippingEquals("tests.failfast", indexReader29, 1, postingsEnum31, postingsEnum32);
        kuromojiAnalysisTests21.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests21.ensureCleanedUp();
        kuromojiAnalysisTests21.resetCheckIndexStatus();
        kuromojiAnalysisTests21.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader40 = null;
        org.apache.lucene.index.Fields fields41 = null;
        org.apache.lucene.index.Fields fields42 = null;
        kuromojiAnalysisTests21.assertFieldsEquals("enwiki.random.lines.txt", indexReader40, fields41, fields42, false);
        org.apache.lucene.index.IndexReader indexReader46 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum48 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum49 = null;
        kuromojiAnalysisTests21.assertDocsSkippingEquals("tests.weekly", indexReader46, (int) (byte) 0, postingsEnum48, postingsEnum49, true);
        org.junit.Assert.assertNotSame("tests.weekly", (java.lang.Object) genericDeclarationArray19, (java.lang.Object) "tests.weekly");
        java.util.concurrent.ExecutorService[] executorServiceArray53 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean54 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray53);
        org.junit.Assert.assertEquals((java.lang.Object[]) genericDeclarationArray19, (java.lang.Object[]) executorServiceArray53);
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray56 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet57 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray56);
        java.util.Set<java.lang.reflect.AnnotatedElement[]> annotatedElementArraySet58 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.reflect.AnnotatedElement[][]) genericDeclarationArray56);
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet59 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray56);
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray61 = new java.lang.reflect.GenericDeclaration[] {};
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet62 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray61);
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet63 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray61);
        org.junit.Assert.assertNotEquals((java.lang.Object) 1, (java.lang.Object) genericDeclarationArray61);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) genericDeclarationArray56, (java.lang.Object[]) genericDeclarationArray61);
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) executorServiceArray53, (java.lang.Object[]) genericDeclarationArray56);
        boolean boolean67 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray53);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests68 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader70 = null;
        org.apache.lucene.index.Fields fields71 = null;
        org.apache.lucene.index.Fields fields72 = null;
        kuromojiAnalysisTests68.assertFieldsEquals("europarl.lines.txt.gz", indexReader70, fields71, fields72, false);
        kuromojiAnalysisTests68.ensureCleanedUp();
        kuromojiAnalysisTests68.ensureCleanedUp();
        java.lang.String str77 = kuromojiAnalysisTests68.getTestName();
        org.apache.lucene.index.IndexReader indexReader79 = null;
        org.apache.lucene.index.Fields fields80 = null;
        org.apache.lucene.index.Fields fields81 = null;
        kuromojiAnalysisTests68.assertFieldsEquals("tests.failfast", indexReader79, fields80, fields81, false);
        kuromojiAnalysisTests68.ensureAllSearchContextsReleased();
        org.junit.Assert.assertNotEquals((java.lang.Object) executorServiceArray53, (java.lang.Object) kuromojiAnalysisTests68);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray12, (java.lang.Object[]) executorServiceArray53);
    }

    @Test
    public void test3849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3849");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("hi!", indexReader9, (int) (byte) 0, postingsEnum11, postingsEnum12);
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests1.assertTermsEquals("random", indexReader15, terms16, terms17, true);
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        org.apache.lucene.index.Fields fields25 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("tests.nightly", indexReader23, fields24, fields25, false);
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (byte) 1);
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests31 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader33 = null;
        org.apache.lucene.index.Fields fields34 = null;
        org.apache.lucene.index.Fields fields35 = null;
        kuromojiAnalysisTests31.assertFieldsEquals("random", indexReader33, fields34, fields35, true);
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        kuromojiAnalysisTests31.assertDocsSkippingEquals("tests.nightly", indexReader39, (int) (short) 1, postingsEnum41, postingsEnum42, false);
        java.lang.Class<?> wildcardClass45 = kuromojiAnalysisTests31.getClass();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("europarl.lines.txt.gz", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests31);
    }

    @Test
    public void test3850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3850");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("europarl.lines.txt.gz", indexReader4, fields5, fields6, false);
        kuromojiAnalysisTests2.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain11 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Fields fields15 = null;
        org.apache.lucene.index.Fields fields16 = null;
        kuromojiAnalysisTests12.assertFieldsEquals("europarl.lines.txt.gz", indexReader14, fields15, fields16, false);
        kuromojiAnalysisTests12.ensureCleanedUp();
        kuromojiAnalysisTests12.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule21 = kuromojiAnalysisTests12.ruleChain;
        org.junit.Assert.assertNotSame("hi!", (java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) testRule21);
        kuromojiAnalysisTests2.setIndexWriterMaxDocs((int) (byte) 0);
        org.junit.rules.TestRule testRule25 = kuromojiAnalysisTests2.ruleChain;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests26 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.Fields fields29 = null;
        org.apache.lucene.index.Fields fields30 = null;
        kuromojiAnalysisTests26.assertFieldsEquals("europarl.lines.txt.gz", indexReader28, fields29, fields30, false);
        kuromojiAnalysisTests26.ensureCleanedUp();
        kuromojiAnalysisTests26.resetCheckIndexStatus();
        kuromojiAnalysisTests26.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader37 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum39 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum40 = null;
        kuromojiAnalysisTests26.assertPositionsSkippingEquals("", indexReader37, (int) (byte) 0, postingsEnum39, postingsEnum40);
        kuromojiAnalysisTests26.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader44 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum46 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum47 = null;
        kuromojiAnalysisTests26.assertDocsSkippingEquals("<unknown>", indexReader44, (int) ' ', postingsEnum46, postingsEnum47, false);
        org.apache.lucene.index.PostingsEnum postingsEnum51 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum52 = null;
        kuromojiAnalysisTests26.assertDocsEnumEquals("random", postingsEnum51, postingsEnum52, true);
        kuromojiAnalysisTests26.tearDown();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object) testRule25, (java.lang.Object) kuromojiAnalysisTests26);
    }

    @Test
    public void test3851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3851");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("random", indexReader2, fields3, fields4, true);
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("enwiki.random.lines.txt", postingsEnum9, postingsEnum10, true);
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests0);
        java.lang.String str15 = kuromojiAnalysisTests0.getTestName();
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.monster");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests18 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.Fields fields21 = null;
        org.apache.lucene.index.Fields fields22 = null;
        kuromojiAnalysisTests18.assertFieldsEquals("europarl.lines.txt.gz", indexReader20, fields21, fields22, false);
        kuromojiAnalysisTests18.assertPathHasBeenCleared("tests.slow");
        kuromojiAnalysisTests18.setUp();
        kuromojiAnalysisTests18.ensureCheckIndexPassed();
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        kuromojiAnalysisTests18.assertDocsSkippingEquals("europarl.lines.txt.gz", indexReader30, 1, postingsEnum32, postingsEnum33, true);
        kuromojiAnalysisTests18.setUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests38 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader40 = null;
        org.apache.lucene.index.Fields fields41 = null;
        org.apache.lucene.index.Fields fields42 = null;
        kuromojiAnalysisTests38.assertFieldsEquals("europarl.lines.txt.gz", indexReader40, fields41, fields42, false);
        org.apache.lucene.index.IndexReader indexReader46 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum48 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum49 = null;
        kuromojiAnalysisTests38.assertPositionsSkippingEquals("hi!", indexReader46, (int) (byte) 0, postingsEnum48, postingsEnum49);
        kuromojiAnalysisTests38.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests38.resetCheckIndexStatus();
        kuromojiAnalysisTests38.setUp();
        kuromojiAnalysisTests38.overrideTestDefaultQueryCache();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests55 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader57 = null;
        org.apache.lucene.index.Fields fields58 = null;
        org.apache.lucene.index.Fields fields59 = null;
        kuromojiAnalysisTests55.assertFieldsEquals("europarl.lines.txt.gz", indexReader57, fields58, fields59, false);
        kuromojiAnalysisTests55.assertPathHasBeenCleared("tests.slow");
        kuromojiAnalysisTests55.assertPathHasBeenCleared("tests.slow");
        kuromojiAnalysisTests55.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests55.ensureCheckIndexPassed();
        org.junit.rules.RuleChain ruleChain68 = kuromojiAnalysisTests55.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests38, (java.lang.Object) ruleChain68);
        kuromojiAnalysisTests18.failureAndSuccessEvents = ruleChain68;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) "tests.monster", (java.lang.Object) kuromojiAnalysisTests18);
    }

    @Test
    public void test3852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3852");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.setUp();
        java.util.Locale locale14 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale16 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale18 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale20 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale22 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray23 = new java.util.Locale[] { locale14, locale16, locale18, locale20, locale22 };
        java.util.Set<java.util.Locale> localeSet24 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray23);
        java.util.Locale locale27 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale29 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale31 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale33 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale35 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray36 = new java.util.Locale[] { locale27, locale29, locale31, locale33, locale35 };
        java.util.Set<java.util.Locale> localeSet37 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray36);
        java.util.List<java.io.Serializable> serializableList38 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray36);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray23, (java.lang.Object[]) localeArray36);
        java.util.Locale locale42 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale44 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale46 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale48 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale50 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray51 = new java.util.Locale[] { locale42, locale44, locale46, locale48, locale50 };
        java.util.Set<java.util.Locale> localeSet52 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray51);
        java.util.List<java.io.Serializable> serializableList53 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray51);
        java.util.Set<java.lang.Cloneable> cloneableSet54 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray51);
        org.junit.Assert.assertArrayEquals("tests.slow", (java.lang.Object[]) localeArray36, (java.lang.Object[]) localeArray51);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) localeArray51);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests57 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader59 = null;
        org.apache.lucene.index.Fields fields60 = null;
        org.apache.lucene.index.Fields fields61 = null;
        kuromojiAnalysisTests57.assertFieldsEquals("europarl.lines.txt.gz", indexReader59, fields60, fields61, false);
        kuromojiAnalysisTests57.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain66 = kuromojiAnalysisTests57.failureAndSuccessEvents;
        kuromojiAnalysisTests57.resetCheckIndexStatus();
        kuromojiAnalysisTests57.restoreIndexWriterMaxDocs();
        org.junit.rules.TestRule testRule69 = kuromojiAnalysisTests57.ruleChain;
        kuromojiAnalysisTests57.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotEquals("tests.failfast", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests57);
        org.apache.lucene.index.PostingsEnum postingsEnum73 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum74 = null;
        kuromojiAnalysisTests57.assertDocsEnumEquals("tests.monster", postingsEnum73, postingsEnum74, false);
        kuromojiAnalysisTests57.tearDown();
        org.apache.lucene.index.PostingsEnum postingsEnum79 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum80 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests57.assertDocsAndPositionsEnumEquals("tests.weekly", postingsEnum79, postingsEnum80);
    }

    @Test
    public void test3853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3853");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader10, terms11, terms12, false);
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs(10);
        java.lang.String str19 = kuromojiAnalysisTests0.getTestName();
        org.apache.lucene.index.NumericDocValues numericDocValues22 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues23 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("europarl.lines.txt.gz", (int) (short) -1, numericDocValues22, numericDocValues23);
    }

    @Test
    public void test3854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3854");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", 0L, (long) 10);
    }

    @Test
    public void test3855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3855");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        java.lang.String str12 = kuromojiAnalysisTests1.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests1);
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain16 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests18 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.Fields fields21 = null;
        org.apache.lucene.index.Fields fields22 = null;
        kuromojiAnalysisTests18.assertFieldsEquals("europarl.lines.txt.gz", indexReader20, fields21, fields22, false);
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        kuromojiAnalysisTests18.assertPositionsSkippingEquals("tests.failfast", indexReader26, 1, postingsEnum28, postingsEnum29);
        kuromojiAnalysisTests18.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests18.overrideTestDefaultQueryCache();
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests18);
        java.lang.Object obj34 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests36 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader38 = null;
        org.apache.lucene.index.Fields fields39 = null;
        org.apache.lucene.index.Fields fields40 = null;
        kuromojiAnalysisTests36.assertFieldsEquals("europarl.lines.txt.gz", indexReader38, fields39, fields40, false);
        kuromojiAnalysisTests36.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain45 = kuromojiAnalysisTests36.failureAndSuccessEvents;
        kuromojiAnalysisTests36.resetCheckIndexStatus();
        java.lang.String str47 = kuromojiAnalysisTests36.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests36);
        kuromojiAnalysisTests36.tearDown();
        kuromojiAnalysisTests36.overrideTestDefaultQueryCache();
        org.junit.Assert.assertNotSame(obj34, (java.lang.Object) kuromojiAnalysisTests36);
        org.junit.rules.RuleChain ruleChain52 = kuromojiAnalysisTests36.failureAndSuccessEvents;
        kuromojiAnalysisTests18.failureAndSuccessEvents = ruleChain52;
        kuromojiAnalysisTests18.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader56 = null;
        org.apache.lucene.index.Terms terms57 = null;
        org.apache.lucene.index.Terms terms58 = null;
        kuromojiAnalysisTests18.assertTermsEquals("tests.slow", indexReader56, terms57, terms58, true);
        kuromojiAnalysisTests18.setUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests18);
    }

    @Test
    public void test3856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3856");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(0.0d, (double) '#');
    }

    @Test
    public void test3857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3857");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) '4', (double) (short) 10);
    }

    @Test
    public void test3858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3858");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((double) 1, 0.0d, (double) 10.0f);
    }

    @Test
    public void test3859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3859");
        java.lang.Iterable[][] iterableArray2 = new java.lang.Iterable[0][];
        @SuppressWarnings("unchecked")
        java.lang.Iterable<java.util.Locale>[][] localeIterableArray3 = (java.lang.Iterable<java.util.Locale>[][]) iterableArray2;
        java.util.Set<java.lang.Iterable<java.util.Locale>[]> localeIterableArraySet4 = org.apache.lucene.util.LuceneTestCase.asSet(localeIterableArray3);
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray6 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet7 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray6);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests8 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Fields fields11 = null;
        org.apache.lucene.index.Fields fields12 = null;
        kuromojiAnalysisTests8.assertFieldsEquals("europarl.lines.txt.gz", indexReader10, fields11, fields12, false);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests8.assertPositionsSkippingEquals("tests.failfast", indexReader16, 1, postingsEnum18, postingsEnum19);
        kuromojiAnalysisTests8.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests8.ensureCleanedUp();
        kuromojiAnalysisTests8.resetCheckIndexStatus();
        kuromojiAnalysisTests8.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.Fields fields28 = null;
        org.apache.lucene.index.Fields fields29 = null;
        kuromojiAnalysisTests8.assertFieldsEquals("enwiki.random.lines.txt", indexReader27, fields28, fields29, false);
        org.apache.lucene.index.IndexReader indexReader33 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum35 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum36 = null;
        kuromojiAnalysisTests8.assertDocsSkippingEquals("tests.weekly", indexReader33, (int) (byte) 0, postingsEnum35, postingsEnum36, true);
        org.junit.Assert.assertNotSame("tests.weekly", (java.lang.Object) genericDeclarationArray6, (java.lang.Object) "tests.weekly");
        java.util.concurrent.ExecutorService[] executorServiceArray40 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean41 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray40);
        org.junit.Assert.assertEquals((java.lang.Object[]) genericDeclarationArray6, (java.lang.Object[]) executorServiceArray40);
        org.junit.Assert.assertEquals((java.lang.Object[]) localeIterableArray3, (java.lang.Object[]) genericDeclarationArray6);
        java.lang.Object[] objArray44 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) localeIterableArray3, objArray44);
    }

    @Test
    public void test3860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3860");
        java.util.Locale locale4 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale6 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale8 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale10 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale12 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray13 = new java.util.Locale[] { locale4, locale6, locale8, locale10, locale12 };
        java.util.Set<java.util.Locale> localeSet14 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray13);
        java.util.Locale locale17 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale19 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale21 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale23 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale25 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray26 = new java.util.Locale[] { locale17, locale19, locale21, locale23, locale25 };
        java.util.Set<java.util.Locale> localeSet27 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray26);
        java.util.List<java.io.Serializable> serializableList28 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray26);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray13, (java.lang.Object[]) localeArray26);
        java.util.Locale locale32 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale34 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale36 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale38 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale40 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray41 = new java.util.Locale[] { locale32, locale34, locale36, locale38, locale40 };
        java.util.Set<java.util.Locale> localeSet42 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray41);
        java.util.List<java.io.Serializable> serializableList43 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray41);
        java.util.Set<java.lang.Cloneable> cloneableSet44 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray41);
        org.junit.Assert.assertArrayEquals("tests.slow", (java.lang.Object[]) localeArray26, (java.lang.Object[]) localeArray41);
        org.junit.Assert.assertNotSame((java.lang.Object) 0.0f, (java.lang.Object) localeArray41);
        java.util.Locale locale49 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale51 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale53 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale55 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale57 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray58 = new java.util.Locale[] { locale49, locale51, locale53, locale55, locale57 };
        java.util.Set<java.util.Locale> localeSet59 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray58);
        java.util.List<java.io.Serializable> serializableList60 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray58);
        org.junit.Assert.assertEquals((java.lang.Object[]) localeArray41, (java.lang.Object[]) localeArray58);
        java.util.concurrent.ExecutorService[] executorServiceArray62 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean63 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray62);
        boolean boolean64 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray62);
        java.util.concurrent.ExecutorService[] executorServiceArray65 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean66 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray65);
        boolean boolean67 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray65);
        boolean boolean68 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray65);
        boolean boolean69 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray65);
        boolean boolean70 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray65);
        boolean boolean71 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray65);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray62, (java.lang.Object[]) executorServiceArray65);
        boolean boolean73 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray62);
        boolean boolean74 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray62);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.slow", (java.lang.Object[]) localeArray41, (java.lang.Object[]) executorServiceArray62);
    }

    @Test
    public void test3861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3861");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) 4, (float) (short) -1, (float) (-1L));
    }

    @Test
    public void test3862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3862");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.nightly", (double) 4, 100.0d, (double) (short) 10);
    }

    @Test
    public void test3863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3863");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("<unknown>", (double) 0.0f, (double) 0L);
    }

    @Test
    public void test3864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3864");
        java.lang.Object[] objArray1 = null;
        java.util.Locale locale3 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale5 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale7 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale9 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale11 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray12 = new java.util.Locale[] { locale3, locale5, locale7, locale9, locale11 };
        java.util.Set<java.util.Locale> localeSet13 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray12);
        java.util.Locale locale16 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale18 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale20 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale22 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale24 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray25 = new java.util.Locale[] { locale16, locale18, locale20, locale22, locale24 };
        java.util.Set<java.util.Locale> localeSet26 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray25);
        java.util.List<java.io.Serializable> serializableList27 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray25);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray12, (java.lang.Object[]) localeArray25);
        java.util.Locale locale32 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale34 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale36 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale38 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale40 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray41 = new java.util.Locale[] { locale32, locale34, locale36, locale38, locale40 };
        java.util.Set<java.util.Locale> localeSet42 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray41);
        java.util.List<java.io.Serializable> serializableList43 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray41);
        java.util.Set<java.lang.Cloneable> cloneableSet44 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray41);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray41, (java.lang.Object) (byte) -1);
        java.util.Locale locale49 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale51 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale53 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale55 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale57 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray58 = new java.util.Locale[] { locale49, locale51, locale53, locale55, locale57 };
        java.util.Set<java.util.Locale> localeSet59 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray58);
        java.util.Locale locale62 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale64 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale66 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale68 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale70 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray71 = new java.util.Locale[] { locale62, locale64, locale66, locale68, locale70 };
        java.util.Set<java.util.Locale> localeSet72 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray71);
        java.util.List<java.io.Serializable> serializableList73 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray71);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray58, (java.lang.Object[]) localeArray71);
        java.util.Locale locale77 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale79 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale81 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale83 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale85 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray86 = new java.util.Locale[] { locale77, locale79, locale81, locale83, locale85 };
        java.util.Set<java.util.Locale> localeSet87 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray86);
        java.util.List<java.io.Serializable> serializableList88 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray86);
        java.util.Set<java.lang.Cloneable> cloneableSet89 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray86);
        org.junit.Assert.assertArrayEquals("tests.slow", (java.lang.Object[]) localeArray71, (java.lang.Object[]) localeArray86);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", (java.lang.Object[]) localeArray41, (java.lang.Object[]) localeArray71);
        org.junit.Assert.assertEquals((java.lang.Object[]) localeArray25, (java.lang.Object[]) localeArray41);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", objArray1, (java.lang.Object[]) localeArray25);
    }

    @Test
    public void test3865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3865");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule9 = kuromojiAnalysisTests0.ruleChain;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests11 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        org.apache.lucene.index.Fields fields15 = null;
        kuromojiAnalysisTests11.assertFieldsEquals("europarl.lines.txt.gz", indexReader13, fields14, fields15, false);
        kuromojiAnalysisTests11.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain20 = kuromojiAnalysisTests11.failureAndSuccessEvents;
        kuromojiAnalysisTests11.resetCheckIndexStatus();
        java.lang.String str22 = kuromojiAnalysisTests11.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests11);
        kuromojiAnalysisTests11.tearDown();
        kuromojiAnalysisTests11.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain26 = kuromojiAnalysisTests11.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain26;
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        org.apache.lucene.index.NumericDocValues numericDocValues31 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues32 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("<unknown>", (int) '#', numericDocValues31, numericDocValues32);
    }

    @Test
    public void test3866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3866");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (short) 0, (double) 0);
    }

    @Test
    public void test3867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3867");
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray1 = new java.lang.reflect.GenericDeclaration[] {};
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet2 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray1);
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet3 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray1);
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray5 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet6 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray5);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests7 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.Fields fields10 = null;
        org.apache.lucene.index.Fields fields11 = null;
        kuromojiAnalysisTests7.assertFieldsEquals("europarl.lines.txt.gz", indexReader9, fields10, fields11, false);
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        kuromojiAnalysisTests7.assertPositionsSkippingEquals("tests.failfast", indexReader15, 1, postingsEnum17, postingsEnum18);
        kuromojiAnalysisTests7.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests7.ensureCleanedUp();
        kuromojiAnalysisTests7.resetCheckIndexStatus();
        kuromojiAnalysisTests7.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Fields fields27 = null;
        org.apache.lucene.index.Fields fields28 = null;
        kuromojiAnalysisTests7.assertFieldsEquals("enwiki.random.lines.txt", indexReader26, fields27, fields28, false);
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum35 = null;
        kuromojiAnalysisTests7.assertDocsSkippingEquals("tests.weekly", indexReader32, (int) (byte) 0, postingsEnum34, postingsEnum35, true);
        org.junit.Assert.assertNotSame("tests.weekly", (java.lang.Object) genericDeclarationArray5, (java.lang.Object) "tests.weekly");
        java.util.concurrent.ExecutorService[] executorServiceArray39 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean40 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray39);
        org.junit.Assert.assertEquals((java.lang.Object[]) genericDeclarationArray5, (java.lang.Object[]) executorServiceArray39);
        org.junit.Assert.assertEquals("tests.badapples", (java.lang.Object[]) genericDeclarationArray1, (java.lang.Object[]) executorServiceArray39);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) "tests.badapples");
    }

    @Test
    public void test3868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3868");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.failfast", indexReader9, 1, postingsEnum11, postingsEnum12);
        kuromojiAnalysisTests1.setIndexWriterMaxDocs(0);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        org.apache.lucene.index.Fields fields19 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("tests.slow", indexReader17, fields18, fields19, false);
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("hi!", postingsEnum23, postingsEnum24, true);
        org.junit.rules.TestRule testRule27 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests29 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.Fields fields32 = null;
        org.apache.lucene.index.Fields fields33 = null;
        kuromojiAnalysisTests29.assertFieldsEquals("europarl.lines.txt.gz", indexReader31, fields32, fields33, false);
        java.lang.String[] strArray43 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet44 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray43);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests45 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests45.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet44, (java.lang.Object) kuromojiAnalysisTests45);
        org.apache.lucene.index.PostingsEnum postingsEnum50 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum51 = null;
        kuromojiAnalysisTests45.assertDocsEnumEquals("tests.badapples", postingsEnum50, postingsEnum51, true);
        org.junit.rules.TestRule testRule54 = kuromojiAnalysisTests45.ruleChain;
        org.apache.lucene.index.IndexReader indexReader56 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum58 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum59 = null;
        kuromojiAnalysisTests45.assertDocsSkippingEquals("tests.maxfailures", indexReader56, (int) (byte) 100, postingsEnum58, postingsEnum59, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests62 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader64 = null;
        org.apache.lucene.index.Fields fields65 = null;
        org.apache.lucene.index.Fields fields66 = null;
        kuromojiAnalysisTests62.assertFieldsEquals("europarl.lines.txt.gz", indexReader64, fields65, fields66, false);
        kuromojiAnalysisTests62.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain71 = kuromojiAnalysisTests62.failureAndSuccessEvents;
        kuromojiAnalysisTests45.failureAndSuccessEvents = ruleChain71;
        kuromojiAnalysisTests29.failureAndSuccessEvents = ruleChain71;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests74 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader76 = null;
        org.apache.lucene.index.Fields fields77 = null;
        org.apache.lucene.index.Fields fields78 = null;
        kuromojiAnalysisTests74.assertFieldsEquals("europarl.lines.txt.gz", indexReader76, fields77, fields78, false);
        org.apache.lucene.index.IndexReader indexReader82 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum84 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum85 = null;
        kuromojiAnalysisTests74.assertPositionsSkippingEquals("hi!", indexReader82, (int) (byte) 0, postingsEnum84, postingsEnum85);
        kuromojiAnalysisTests74.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotEquals((java.lang.Object) ruleChain71, (java.lang.Object) kuromojiAnalysisTests74);
        java.lang.Class<?> wildcardClass89 = ruleChain71.getClass();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) ruleChain71);
        kuromojiAnalysisTests1.tearDown();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.slow", (java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test3869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3869");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("hi!", indexReader8, (int) (byte) 0, postingsEnum10, postingsEnum11);
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests0.assertTermsEquals("random", indexReader14, terms15, terms16, true);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.tearDown();
        java.lang.String str22 = kuromojiAnalysisTests0.getTestName();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.awaitsfix", indexReader25, 0, postingsEnum27, postingsEnum28);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotNull((java.lang.Object) postingsEnum27);
    }

    @Test
    public void test3870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3870");
        java.lang.Object[] objArray1 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures3 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures4 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures3);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures5 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures6 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures5);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures7 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures8 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures7);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures9 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures10 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures9);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures[] testRuleIgnoreAfterMaxFailuresArray11 = new org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures[] { testRuleIgnoreAfterMaxFailures4, testRuleIgnoreAfterMaxFailures6, testRuleIgnoreAfterMaxFailures7, testRuleIgnoreAfterMaxFailures9 };
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures12 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures13 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures12);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures14 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures15 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures14);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures16 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures17 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures16);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures18 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures19 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures18);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures[] testRuleIgnoreAfterMaxFailuresArray20 = new org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures[] { testRuleIgnoreAfterMaxFailures13, testRuleIgnoreAfterMaxFailures15, testRuleIgnoreAfterMaxFailures16, testRuleIgnoreAfterMaxFailures18 };
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures21 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures22 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures21);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures23 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures24 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures23);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures25 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures26 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures25);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures27 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures28 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures27);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures[] testRuleIgnoreAfterMaxFailuresArray29 = new org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures[] { testRuleIgnoreAfterMaxFailures22, testRuleIgnoreAfterMaxFailures24, testRuleIgnoreAfterMaxFailures25, testRuleIgnoreAfterMaxFailures27 };
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures[][] testRuleIgnoreAfterMaxFailuresArray30 = new org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures[][] { testRuleIgnoreAfterMaxFailuresArray11, testRuleIgnoreAfterMaxFailuresArray20, testRuleIgnoreAfterMaxFailuresArray29 };
        java.util.Set<org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures[]> testRuleIgnoreAfterMaxFailuresArraySet31 = org.apache.lucene.util.LuceneTestCase.asSet(testRuleIgnoreAfterMaxFailuresArray30);
        int[][] intArray32 = new int[][] {};
        int[][][] intArray33 = new int[][][] { intArray32 };
        java.util.Set<int[][]> intArraySet34 = org.apache.lucene.util.LuceneTestCase.asSet(intArray33);
        org.junit.Assert.assertNotEquals((java.lang.Object) testRuleIgnoreAfterMaxFailuresArray30, (java.lang.Object) intArraySet34);
        java.util.List<org.junit.rules.TestRule[]> testRuleArrayList36 = org.elasticsearch.test.ESTestCase.randomSubsetOf(3, (org.junit.rules.TestRule[][]) testRuleIgnoreAfterMaxFailuresArray30);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", objArray1, (java.lang.Object[]) testRuleIgnoreAfterMaxFailuresArray30);
    }

    @Test
    public void test3871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3871");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("hi!", indexReader8, (int) (byte) 0, postingsEnum10, postingsEnum11);
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests0.assertTermsEquals("random", indexReader14, terms15, terms16, true);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((-1));
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.monster");
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests0);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.failfast");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) "tests.failfast");
    }

    @Test
    public void test3872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3872");
        java.lang.String[] strArray7 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet8 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray7);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests9 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests9.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet8, (java.lang.Object) kuromojiAnalysisTests9);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests13 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Fields fields16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        kuromojiAnalysisTests13.assertFieldsEquals("europarl.lines.txt.gz", indexReader15, fields16, fields17, false);
        kuromojiAnalysisTests13.ensureCleanedUp();
        kuromojiAnalysisTests13.resetCheckIndexStatus();
        kuromojiAnalysisTests13.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        kuromojiAnalysisTests13.assertPositionsSkippingEquals("", indexReader24, (int) (byte) 0, postingsEnum26, postingsEnum27);
        org.junit.Assert.assertNotEquals((java.lang.Object) "tests.failfast", (java.lang.Object) kuromojiAnalysisTests13);
        kuromojiAnalysisTests13.setUp();
        kuromojiAnalysisTests13.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests13.assertPathHasBeenCleared("random");
        kuromojiAnalysisTests13.setUp();
        org.junit.rules.TestRule testRule35 = kuromojiAnalysisTests13.ruleChain;
        java.lang.String str36 = kuromojiAnalysisTests13.getTestName();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests37 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.Fields fields40 = null;
        org.apache.lucene.index.Fields fields41 = null;
        kuromojiAnalysisTests37.assertFieldsEquals("europarl.lines.txt.gz", indexReader39, fields40, fields41, false);
        kuromojiAnalysisTests37.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain46 = kuromojiAnalysisTests37.failureAndSuccessEvents;
        kuromojiAnalysisTests37.setUp();
        java.util.Locale locale50 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale52 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale54 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale56 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale58 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray59 = new java.util.Locale[] { locale50, locale52, locale54, locale56, locale58 };
        java.util.Set<java.util.Locale> localeSet60 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray59);
        java.util.Locale locale63 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale65 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale67 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale69 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale71 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray72 = new java.util.Locale[] { locale63, locale65, locale67, locale69, locale71 };
        java.util.Set<java.util.Locale> localeSet73 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray72);
        java.util.List<java.io.Serializable> serializableList74 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray72);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray59, (java.lang.Object[]) localeArray72);
        java.util.Locale locale78 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale80 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale82 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale84 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale86 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray87 = new java.util.Locale[] { locale78, locale80, locale82, locale84, locale86 };
        java.util.Set<java.util.Locale> localeSet88 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray87);
        java.util.List<java.io.Serializable> serializableList89 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray87);
        java.util.Set<java.lang.Cloneable> cloneableSet90 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray87);
        org.junit.Assert.assertArrayEquals("tests.slow", (java.lang.Object[]) localeArray72, (java.lang.Object[]) localeArray87);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests37, (java.lang.Object) localeArray87);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) kuromojiAnalysisTests13, (java.lang.Object) localeArray87);
    }

    @Test
    public void test3873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3873");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (-1L), (long) (byte) 1);
    }

    @Test
    public void test3874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3874");
        java.util.Locale locale3 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale5 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale7 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale9 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale11 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray12 = new java.util.Locale[] { locale3, locale5, locale7, locale9, locale11 };
        java.util.Set<java.util.Locale> localeSet13 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray12);
        java.util.List<java.io.Serializable> serializableList14 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray12);
        org.junit.Assert.assertNotNull((java.lang.Object) localeArray12);
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet18 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray17);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", (java.lang.Object[]) localeArray12, (java.lang.Object[]) strArray17);
    }

    @Test
    public void test3875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3875");
        double[] doubleArray1 = null;
        double[] doubleArray7 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray12 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray7, doubleArray12, (double) (byte) 100);
        double[] doubleArray21 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray26 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray21, doubleArray26, (double) (byte) 100);
        double[] doubleArray34 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray39 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray34, doubleArray39, (double) (byte) 100);
        org.junit.Assert.assertArrayEquals("", doubleArray21, doubleArray34, (double) 0);
        org.junit.Assert.assertArrayEquals(doubleArray7, doubleArray21, (-1.0d));
        double[] doubleArray52 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray57 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray52, doubleArray57, (double) (byte) 100);
        double[] doubleArray65 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray70 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray65, doubleArray70, (double) (byte) 100);
        org.junit.Assert.assertArrayEquals("", doubleArray52, doubleArray65, (double) 0);
        org.junit.Assert.assertArrayEquals(doubleArray21, doubleArray65, 0.0d);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.badapples", doubleArray1, doubleArray65, (double) (byte) 100);
    }

    @Test
    public void test3876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3876");
        org.junit.rules.RuleChain[] ruleChainArray1 = new org.junit.rules.RuleChain[] {};
        org.junit.rules.RuleChain[][] ruleChainArray2 = new org.junit.rules.RuleChain[][] { ruleChainArray1 };
        java.util.Set<org.junit.rules.RuleChain[]> ruleChainArraySet3 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray2);
        java.lang.Iterable[][] iterableArray5 = new java.lang.Iterable[0][];
        @SuppressWarnings("unchecked")
        java.lang.Iterable<java.util.Locale>[][] localeIterableArray6 = (java.lang.Iterable<java.util.Locale>[][]) iterableArray5;
        java.util.Set<java.lang.Iterable<java.util.Locale>[]> localeIterableArraySet7 = org.apache.lucene.util.LuceneTestCase.asSet(localeIterableArray6);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", (java.lang.Object[]) ruleChainArray2, (java.lang.Object[]) localeIterableArray6);
    }

    @Test
    public void test3877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3877");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("europarl.lines.txt.gz", indexReader4, fields5, fields6, false);
        kuromojiAnalysisTests2.ensureCleanedUp();
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule11 = kuromojiAnalysisTests2.ruleChain;
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader13, (int) (short) -1, postingsEnum15, postingsEnum16);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests18 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.Fields fields21 = null;
        org.apache.lucene.index.Fields fields22 = null;
        kuromojiAnalysisTests18.assertFieldsEquals("europarl.lines.txt.gz", indexReader20, fields21, fields22, false);
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        kuromojiAnalysisTests18.assertPositionsSkippingEquals("hi!", indexReader26, (int) (byte) 0, postingsEnum28, postingsEnum29);
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.Terms terms33 = null;
        org.apache.lucene.index.Terms terms34 = null;
        kuromojiAnalysisTests18.assertTermsEquals("random", indexReader32, terms33, terms34, true);
        kuromojiAnalysisTests18.setUp();
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        kuromojiAnalysisTests18.assertPositionsSkippingEquals("tests.failfast", indexReader39, (int) '4', postingsEnum41, postingsEnum42);
        kuromojiAnalysisTests18.setIndexWriterMaxDocs(100);
        org.junit.Assert.assertNotEquals("tests.awaitsfix", (java.lang.Object) "enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests18);
        java.lang.String str47 = kuromojiAnalysisTests18.getTestName();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("", (java.lang.Object) str47);
    }

    @Test
    public void test3878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3878");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (short) -1, (double) 100L);
    }

    @Test
    public void test3879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3879");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("europarl.lines.txt.gz", indexReader4, fields5, fields6, false);
        kuromojiAnalysisTests2.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain11 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        java.lang.String str13 = kuromojiAnalysisTests2.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests2);
        kuromojiAnalysisTests2.tearDown();
        kuromojiAnalysisTests2.setUp();
        org.apache.lucene.index.IndexReader indexReader18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("", indexReader18, (int) '#', postingsEnum20, postingsEnum21);
        kuromojiAnalysisTests2.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        kuromojiAnalysisTests2.assertDocsEnumEquals("tests.weekly", postingsEnum25, postingsEnum26, false);
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        kuromojiAnalysisTests2.assertDocsEnumEquals("enwiki.random.lines.txt", postingsEnum30, postingsEnum31, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests34.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests34);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.badapples", (java.lang.Object) "enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests34);
    }

    @Test
    public void test3880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3880");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("europarl.lines.txt.gz", indexReader4, fields5, fields6, false);
        kuromojiAnalysisTests2.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain11 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        java.lang.String str13 = kuromojiAnalysisTests2.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests2);
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.PostingsEnum postingsEnum17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        kuromojiAnalysisTests2.assertDocsEnumEquals("<unknown>", postingsEnum17, postingsEnum18, false);
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        kuromojiAnalysisTests2.assertDocsEnumEquals("tests.weekly", postingsEnum22, postingsEnum23, false);
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.Fields fields28 = null;
        org.apache.lucene.index.Fields fields29 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("tests.awaitsfix", indexReader27, fields28, fields29, false);
        java.lang.Object obj32 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.awaitsfix", (java.lang.Object) "tests.awaitsfix", obj32);
    }

    @Test
    public void test3881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3881");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", 1L, (-1L));
    }

    @Test
    public void test3882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3882");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.failfast", indexReader8, 1, postingsEnum10, postingsEnum11);
        kuromojiAnalysisTests0.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.Fields fields20 = null;
        org.apache.lucene.index.Fields fields21 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader19, fields20, fields21, false);
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.Terms terms26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader25, terms26, terms27, false);
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.awaitsfix", indexReader31, 10, postingsEnum33, postingsEnum34);
        org.junit.rules.RuleChain ruleChain36 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.junit.rules.TestRule testRule37 = kuromojiAnalysisTests0.ruleChain;
        java.lang.String str38 = kuromojiAnalysisTests0.getTestName();
        org.apache.lucene.index.IndexReader indexReader40 = null;
        org.apache.lucene.index.Fields fields41 = null;
        org.apache.lucene.index.Fields fields42 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader40, fields41, fields42, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests45 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader47 = null;
        org.apache.lucene.index.Fields fields48 = null;
        org.apache.lucene.index.Fields fields49 = null;
        kuromojiAnalysisTests45.assertFieldsEquals("europarl.lines.txt.gz", indexReader47, fields48, fields49, false);
        kuromojiAnalysisTests45.ensureCleanedUp();
        kuromojiAnalysisTests45.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule54 = kuromojiAnalysisTests45.ruleChain;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests55 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader57 = null;
        org.apache.lucene.index.Fields fields58 = null;
        org.apache.lucene.index.Fields fields59 = null;
        kuromojiAnalysisTests55.assertFieldsEquals("europarl.lines.txt.gz", indexReader57, fields58, fields59, false);
        kuromojiAnalysisTests55.ensureCleanedUp();
        kuromojiAnalysisTests55.ensureCleanedUp();
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests45, (java.lang.Object) kuromojiAnalysisTests55);
        org.apache.lucene.index.PostingsEnum postingsEnum66 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum67 = null;
        kuromojiAnalysisTests55.assertDocsEnumEquals("tests.badapples", postingsEnum66, postingsEnum67, false);
        kuromojiAnalysisTests55.setIndexWriterMaxDocs((int) (byte) 10);
        org.apache.lucene.index.PostingsEnum postingsEnum73 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum74 = null;
        kuromojiAnalysisTests55.assertDocsEnumEquals("tests.monster", postingsEnum73, postingsEnum74, true);
        org.junit.rules.RuleChain ruleChain77 = kuromojiAnalysisTests55.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain77;
        org.apache.lucene.index.IndexReader indexReader80 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum82 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum83 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("europarl.lines.txt.gz", indexReader80, (int) (short) -1, postingsEnum82, postingsEnum83, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertPathHasBeenCleared("");
    }

    @Test
    public void test3883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3883");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        java.lang.String[] strArray14 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet15 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray14);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests16 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests16.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet15, (java.lang.Object) kuromojiAnalysisTests16);
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        kuromojiAnalysisTests16.assertDocsEnumEquals("tests.badapples", postingsEnum21, postingsEnum22, true);
        org.junit.rules.TestRule testRule25 = kuromojiAnalysisTests16.ruleChain;
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        kuromojiAnalysisTests16.assertDocsSkippingEquals("tests.maxfailures", indexReader27, (int) (byte) 100, postingsEnum29, postingsEnum30, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests33 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader35 = null;
        org.apache.lucene.index.Fields fields36 = null;
        org.apache.lucene.index.Fields fields37 = null;
        kuromojiAnalysisTests33.assertFieldsEquals("europarl.lines.txt.gz", indexReader35, fields36, fields37, false);
        kuromojiAnalysisTests33.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain42 = kuromojiAnalysisTests33.failureAndSuccessEvents;
        kuromojiAnalysisTests16.failureAndSuccessEvents = ruleChain42;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain42;
        org.apache.lucene.index.PostingsEnum postingsEnum46 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum47 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("<unknown>", postingsEnum46, postingsEnum47, true);
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader52 = null;
        org.apache.lucene.index.Fields fields53 = null;
        org.apache.lucene.index.Fields fields54 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("tests.awaitsfix", indexReader52, fields53, fields54, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test3884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3884");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", (float) 2, (float) 'a', 10.0f);
    }

    @Test
    public void test3885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3885");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("hi!", indexReader9, (int) (byte) 0, postingsEnum11, postingsEnum12);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests19 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.Fields fields22 = null;
        org.apache.lucene.index.Fields fields23 = null;
        kuromojiAnalysisTests19.assertFieldsEquals("europarl.lines.txt.gz", indexReader21, fields22, fields23, false);
        kuromojiAnalysisTests19.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain28 = kuromojiAnalysisTests19.failureAndSuccessEvents;
        kuromojiAnalysisTests19.setUp();
        java.util.Locale locale32 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale34 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale36 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale38 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale40 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray41 = new java.util.Locale[] { locale32, locale34, locale36, locale38, locale40 };
        java.util.Set<java.util.Locale> localeSet42 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray41);
        java.util.Locale locale45 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale47 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale49 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale51 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale53 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray54 = new java.util.Locale[] { locale45, locale47, locale49, locale51, locale53 };
        java.util.Set<java.util.Locale> localeSet55 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray54);
        java.util.List<java.io.Serializable> serializableList56 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray54);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray41, (java.lang.Object[]) localeArray54);
        java.util.Locale locale60 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale62 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale64 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale66 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale68 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray69 = new java.util.Locale[] { locale60, locale62, locale64, locale66, locale68 };
        java.util.Set<java.util.Locale> localeSet70 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray69);
        java.util.List<java.io.Serializable> serializableList71 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray69);
        java.util.Set<java.lang.Cloneable> cloneableSet72 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray69);
        org.junit.Assert.assertArrayEquals("tests.slow", (java.lang.Object[]) localeArray54, (java.lang.Object[]) localeArray69);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests19, (java.lang.Object) localeArray69);
        kuromojiAnalysisTests19.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader77 = null;
        org.apache.lucene.index.Terms terms78 = null;
        org.apache.lucene.index.Terms terms79 = null;
        kuromojiAnalysisTests19.assertTermsEquals("enwiki.random.lines.txt", indexReader77, terms78, terms79, false);
        java.lang.String str82 = kuromojiAnalysisTests19.getTestName();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests19);
    }

    @Test
    public void test3886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3886");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals(100.0d, 100.0d, (double) '#');
    }

    @Test
    public void test3887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3887");
        java.util.concurrent.ExecutorService[] executorServiceArray1 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean2 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean4 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean5 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean6 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean7 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean8 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        java.util.Locale locale11 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale13 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale15 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale17 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale19 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray20 = new java.util.Locale[] { locale11, locale13, locale15, locale17, locale19 };
        java.util.Set<java.util.Locale> localeSet21 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray20);
        java.util.List<java.io.Serializable> serializableList22 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray20);
        java.util.Set<java.lang.Object> objSet23 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Object[]) localeArray20);
        java.util.Locale locale28 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale30 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale32 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale34 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale36 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray37 = new java.util.Locale[] { locale28, locale30, locale32, locale34, locale36 };
        java.util.Set<java.util.Locale> localeSet38 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray37);
        java.util.List<java.io.Serializable> serializableList39 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray37);
        java.util.Set<java.lang.Cloneable> cloneableSet40 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray37);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray37, (java.lang.Object) (byte) -1);
        java.util.Locale locale45 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale47 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale49 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale51 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale53 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray54 = new java.util.Locale[] { locale45, locale47, locale49, locale51, locale53 };
        java.util.Set<java.util.Locale> localeSet55 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray54);
        java.util.List<java.io.Serializable> serializableList56 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray54);
        java.util.Set<java.lang.Cloneable> cloneableSet57 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray54);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray54, (java.lang.Object) (byte) -1);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray37, (java.lang.Object[]) localeArray54);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests61 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader63 = null;
        org.apache.lucene.index.Fields fields64 = null;
        org.apache.lucene.index.Fields fields65 = null;
        kuromojiAnalysisTests61.assertFieldsEquals("europarl.lines.txt.gz", indexReader63, fields64, fields65, false);
        org.apache.lucene.index.IndexReader indexReader69 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum71 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum72 = null;
        kuromojiAnalysisTests61.assertPositionsSkippingEquals("tests.failfast", indexReader69, 1, postingsEnum71, postingsEnum72);
        kuromojiAnalysisTests61.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests61.ensureCleanedUp();
        kuromojiAnalysisTests61.resetCheckIndexStatus();
        org.junit.Assert.assertNotSame("tests.badapples", (java.lang.Object) localeArray54, (java.lang.Object) kuromojiAnalysisTests61);
        java.util.Locale locale81 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale83 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale85 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale87 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale89 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray90 = new java.util.Locale[] { locale81, locale83, locale85, locale87, locale89 };
        java.util.Set<java.util.Locale> localeSet91 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray90);
        java.util.List<java.io.Serializable> serializableList92 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray90);
        org.junit.Assert.assertEquals("random", (java.lang.Object[]) localeArray54, (java.lang.Object[]) localeArray90);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray20, (java.lang.Object[]) localeArray90);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) executorServiceArray1, (java.lang.Object[]) localeArray90);
    }

    @Test
    public void test3888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3888");
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray3 = new java.lang.reflect.GenericDeclaration[] {};
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet4 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray3);
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet5 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray3);
        java.util.List<java.lang.reflect.AnnotatedElement> annotatedElementList6 = org.elasticsearch.test.ESTestCase.randomSubsetOf(0, (java.lang.reflect.AnnotatedElement[]) genericDeclarationArray3);
        org.junit.Assert.assertNotNull("europarl.lines.txt.gz", (java.lang.Object) genericDeclarationArray3);
        java.util.Locale locale10 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale12 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale14 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale16 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale18 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray19 = new java.util.Locale[] { locale10, locale12, locale14, locale16, locale18 };
        java.util.Set<java.util.Locale> localeSet20 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray19);
        java.util.List<java.io.Serializable> serializableList21 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray19);
        java.util.Set<java.lang.Cloneable> cloneableSet22 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray19);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray19, (java.lang.Object) (byte) -1);
        java.util.Locale locale27 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale29 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale31 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale33 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale35 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray36 = new java.util.Locale[] { locale27, locale29, locale31, locale33, locale35 };
        java.util.Set<java.util.Locale> localeSet37 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray36);
        java.util.List<java.io.Serializable> serializableList38 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray36);
        java.util.Set<java.lang.Cloneable> cloneableSet39 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray36);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray36, (java.lang.Object) (byte) -1);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray19, (java.lang.Object[]) localeArray36);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", (java.lang.Object[]) genericDeclarationArray3, (java.lang.Object[]) localeArray36);
    }

    @Test
    public void test3889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3889");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.failfast", indexReader8, 1, postingsEnum10, postingsEnum11);
        kuromojiAnalysisTests0.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests18 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.Fields fields21 = null;
        org.apache.lucene.index.Fields fields22 = null;
        kuromojiAnalysisTests18.assertFieldsEquals("europarl.lines.txt.gz", indexReader20, fields21, fields22, false);
        kuromojiAnalysisTests18.ensureCleanedUp();
        kuromojiAnalysisTests18.resetCheckIndexStatus();
        kuromojiAnalysisTests18.ensureCleanedUp();
        kuromojiAnalysisTests18.ensureCheckIndexPassed();
        kuromojiAnalysisTests18.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.Fields fields32 = null;
        org.apache.lucene.index.Fields fields33 = null;
        kuromojiAnalysisTests18.assertFieldsEquals("tests.awaitsfix", indexReader31, fields32, fields33, true);
        kuromojiAnalysisTests18.tearDown();
        kuromojiAnalysisTests18.assertPathHasBeenCleared("tests.badapples");
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests18);
        kuromojiAnalysisTests18.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.NumericDocValues numericDocValues43 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues44 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests18.assertDocValuesEquals("tests.weekly", (int) (byte) 10, numericDocValues43, numericDocValues44);
    }

    @Test
    public void test3890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3890");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.weekly", (double) '#', (double) 10.0f, (double) 3);
    }

    @Test
    public void test3891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3891");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("hi!", indexReader9, (int) (byte) 0, postingsEnum11, postingsEnum12);
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests1.assertTermsEquals("random", indexReader15, terms16, terms17, true);
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests21 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        org.apache.lucene.index.Fields fields25 = null;
        kuromojiAnalysisTests21.assertFieldsEquals("europarl.lines.txt.gz", indexReader23, fields24, fields25, false);
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        kuromojiAnalysisTests21.assertPositionsSkippingEquals("tests.failfast", indexReader29, 1, postingsEnum31, postingsEnum32);
        kuromojiAnalysisTests21.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests21.ensureCleanedUp();
        kuromojiAnalysisTests21.resetCheckIndexStatus();
        kuromojiAnalysisTests21.restoreIndexWriterMaxDocs();
        java.lang.String str39 = kuromojiAnalysisTests21.getTestName();
        kuromojiAnalysisTests21.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests21);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests21.assertPathHasBeenCleared("");
    }

    @Test
    public void test3892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3892");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        org.apache.lucene.index.Fields fields15 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("tests.awaitsfix", indexReader13, fields14, fields15, true);
        org.apache.lucene.index.NumericDocValues numericDocValues20 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues21 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("europarl.lines.txt.gz", (int) (short) -1, numericDocValues20, numericDocValues21);
    }

    @Test
    public void test3893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3893");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 100.0f, 10.0d, (double) 1.0f);
    }

    @Test
    public void test3894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3894");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("<unknown>", (long) (short) -1, (long) (byte) -1);
    }

    @Test
    public void test3895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3895");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("random", indexReader3, fields4, fields5, true);
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("enwiki.random.lines.txt", postingsEnum10, postingsEnum11, true);
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests1);
        org.junit.Assert.assertNotNull("tests.nightly", (java.lang.Object) kuromojiAnalysisTests1);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test3896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3896");
        java.lang.String[] strArray8 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet9 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray8);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests10 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests10.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet9, (java.lang.Object) kuromojiAnalysisTests10);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests14 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        kuromojiAnalysisTests14.assertFieldsEquals("europarl.lines.txt.gz", indexReader16, fields17, fields18, false);
        kuromojiAnalysisTests14.ensureCleanedUp();
        kuromojiAnalysisTests14.resetCheckIndexStatus();
        kuromojiAnalysisTests14.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        kuromojiAnalysisTests14.assertPositionsSkippingEquals("", indexReader25, (int) (byte) 0, postingsEnum27, postingsEnum28);
        org.junit.Assert.assertNotEquals((java.lang.Object) "tests.failfast", (java.lang.Object) kuromojiAnalysisTests14);
        kuromojiAnalysisTests14.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader33 = null;
        org.apache.lucene.index.Fields fields34 = null;
        org.apache.lucene.index.Fields fields35 = null;
        kuromojiAnalysisTests14.assertFieldsEquals("random", indexReader33, fields34, fields35, true);
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        kuromojiAnalysisTests14.assertDocsSkippingEquals("tests.maxfailures", indexReader39, (int) ' ', postingsEnum41, postingsEnum42, false);
        kuromojiAnalysisTests14.resetCheckIndexStatus();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.failfast", (java.lang.Object) kuromojiAnalysisTests14);
    }

    @Test
    public void test3897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3897");
        short[] shortArray0 = null;
        short[] shortArray4 = new short[] { (short) 10 };
        short[] shortArray6 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray4, shortArray6);
        short[] shortArray11 = new short[] { (short) 10 };
        short[] shortArray13 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray11, shortArray13);
        short[] shortArray17 = new short[] { (short) 10 };
        short[] shortArray19 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray17, shortArray19);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray13, shortArray19);
        org.junit.Assert.assertArrayEquals("tests.nightly", shortArray4, shortArray13);
        short[] shortArray26 = new short[] { (short) 10 };
        short[] shortArray28 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray26, shortArray28);
        short[] shortArray33 = new short[] { (short) 10 };
        short[] shortArray35 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray33, shortArray35);
        short[] shortArray39 = new short[] { (short) 10 };
        short[] shortArray41 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray39, shortArray41);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray35, shortArray41);
        org.junit.Assert.assertArrayEquals(shortArray28, shortArray41);
        short[] shortArray48 = new short[] { (short) 10 };
        short[] shortArray50 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray48, shortArray50);
        short[] shortArray54 = new short[] { (short) 10 };
        short[] shortArray56 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray54, shortArray56);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray50, shortArray56);
        org.junit.Assert.assertArrayEquals(shortArray28, shortArray56);
        short[] shortArray64 = new short[] { (short) 10 };
        short[] shortArray66 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray64, shortArray66);
        short[] shortArray70 = new short[] { (short) 10 };
        short[] shortArray72 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray70, shortArray72);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray66, shortArray72);
        short[] shortArray78 = new short[] { (short) 10 };
        short[] shortArray80 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray78, shortArray80);
        short[] shortArray84 = new short[] { (short) 10 };
        short[] shortArray86 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray84, shortArray86);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", shortArray80, shortArray86);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray66, shortArray86);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", shortArray56, shortArray66);
        org.junit.Assert.assertArrayEquals(shortArray13, shortArray66);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(shortArray0, shortArray13);
    }

    @Test
    public void test3898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3898");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("hi!", indexReader9, (int) (byte) 0, postingsEnum11, postingsEnum12);
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests1.assertTermsEquals("random", indexReader15, terms16, terms17, true);
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        org.apache.lucene.index.Fields fields25 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("tests.nightly", indexReader23, fields24, fields25, false);
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("tests.monster", postingsEnum29, postingsEnum30, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.Fields fields37 = null;
        org.apache.lucene.index.Fields fields38 = null;
        kuromojiAnalysisTests34.assertFieldsEquals("europarl.lines.txt.gz", indexReader36, fields37, fields38, false);
        kuromojiAnalysisTests34.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain43 = kuromojiAnalysisTests34.failureAndSuccessEvents;
        kuromojiAnalysisTests34.resetCheckIndexStatus();
        java.lang.String str45 = kuromojiAnalysisTests34.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests34);
        kuromojiAnalysisTests34.tearDown();
        kuromojiAnalysisTests34.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests34.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader51 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum53 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum54 = null;
        kuromojiAnalysisTests34.assertPositionsSkippingEquals("tests.slow", indexReader51, (-1), postingsEnum53, postingsEnum54);
        kuromojiAnalysisTests34.ensureAllSearchContextsReleased();
        org.junit.Assert.assertNotSame((java.lang.Object) postingsEnum30, (java.lang.Object) kuromojiAnalysisTests34);
        kuromojiAnalysisTests34.ensureAllSearchContextsReleased();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests59 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader61 = null;
        org.apache.lucene.index.Fields fields62 = null;
        org.apache.lucene.index.Fields fields63 = null;
        kuromojiAnalysisTests59.assertFieldsEquals("europarl.lines.txt.gz", indexReader61, fields62, fields63, false);
        org.apache.lucene.index.IndexReader indexReader67 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum69 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum70 = null;
        kuromojiAnalysisTests59.assertPositionsSkippingEquals("tests.failfast", indexReader67, 1, postingsEnum69, postingsEnum70);
        kuromojiAnalysisTests59.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests59.setUp();
        kuromojiAnalysisTests59.ensureCheckIndexPassed();
        kuromojiAnalysisTests59.setUp();
        org.apache.lucene.index.IndexReader indexReader77 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum79 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum80 = null;
        kuromojiAnalysisTests59.assertPositionsSkippingEquals("tests.weekly", indexReader77, 100, postingsEnum79, postingsEnum80);
        org.junit.rules.RuleChain ruleChain82 = kuromojiAnalysisTests59.failureAndSuccessEvents;
        org.apache.lucene.index.PostingsEnum postingsEnum84 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum85 = null;
        kuromojiAnalysisTests59.assertDocsEnumEquals("enwiki.random.lines.txt", postingsEnum84, postingsEnum85, false);
        org.junit.rules.TestRule testRule88 = kuromojiAnalysisTests59.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", (java.lang.Object) kuromojiAnalysisTests34, (java.lang.Object) testRule88);
    }

    @Test
    public void test3899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3899");
        java.util.Locale locale3 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale5 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale7 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale9 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale11 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray12 = new java.util.Locale[] { locale3, locale5, locale7, locale9, locale11 };
        java.util.Set<java.util.Locale> localeSet13 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray12);
        java.util.List<java.io.Serializable> serializableList14 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray12);
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray17 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet18 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray17);
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray20 = new java.lang.reflect.GenericDeclaration[] {};
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet21 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray20);
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet22 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray20);
        org.junit.Assert.assertNotEquals((java.lang.Object) 1, (java.lang.Object) genericDeclarationArray20);
        java.util.Set<java.lang.reflect.AnnotatedElement> annotatedElementSet24 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.reflect.AnnotatedElement[]) genericDeclarationArray20);
        org.junit.Assert.assertEquals("", (java.lang.Object[]) genericDeclarationArray17, (java.lang.Object[]) genericDeclarationArray20);
        java.util.concurrent.ExecutorService[] executorServiceArray26 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean27 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray26);
        boolean boolean28 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray26);
        boolean boolean29 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray26);
        boolean boolean30 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray26);
        boolean boolean31 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray26);
        boolean boolean32 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray26);
        org.junit.Assert.assertEquals("enwiki.random.lines.txt", (java.lang.Object[]) genericDeclarationArray20, (java.lang.Object[]) executorServiceArray26);
        boolean boolean34 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray26);
        boolean boolean35 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray26);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (java.lang.Object[]) localeArray12, (java.lang.Object[]) executorServiceArray26);
    }

    @Test
    public void test3900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3900");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain9 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("<unknown>", postingsEnum11, postingsEnum12, false);
        kuromojiAnalysisTests0.tearDown();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test3901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3901");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.TestRule testRule10 = kuromojiAnalysisTests1.ruleChain;
        int[] intArray15 = new int[] { '#' };
        int[] intArray17 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray15, intArray17);
        int[] intArray20 = new int[] { '#' };
        int[] intArray22 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray20, intArray22);
        org.junit.Assert.assertArrayEquals("tests.badapples", intArray15, intArray20);
        int[] intArray27 = new int[] { '#' };
        int[] intArray29 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray27, intArray29);
        int[] intArray32 = new int[] { '#' };
        int[] intArray34 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray32, intArray34);
        org.junit.Assert.assertArrayEquals("tests.badapples", intArray27, intArray32);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", intArray15, intArray32);
        int[] intArray41 = new int[] { '#' };
        int[] intArray43 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray41, intArray43);
        int[] intArray46 = new int[] { '#' };
        int[] intArray48 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray46, intArray48);
        org.junit.Assert.assertArrayEquals("tests.badapples", intArray41, intArray46);
        int[] intArray53 = new int[] { '#' };
        int[] intArray55 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray53, intArray55);
        int[] intArray58 = new int[] { '#' };
        int[] intArray60 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray58, intArray60);
        org.junit.Assert.assertArrayEquals("tests.badapples", intArray53, intArray58);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", intArray41, intArray58);
        org.junit.Assert.assertArrayEquals("random", intArray32, intArray41);
        org.junit.Assert.assertNotSame("tests.maxfailures", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) intArray32);
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        org.junit.rules.RuleChain ruleChain67 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) ruleChain67);
    }

    @Test
    public void test3902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3902");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) 0, (long) (short) 100);
    }

    @Test
    public void test3903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3903");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("hi!", indexReader9, (int) (byte) 0, postingsEnum11, postingsEnum12);
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests1.assertTermsEquals("random", indexReader15, terms16, terms17, true);
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        org.apache.lucene.index.Fields fields25 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("", indexReader23, fields24, fields25, false);
        java.lang.String str28 = kuromojiAnalysisTests1.getTestName();
        java.util.Locale locale30 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.lang.Class<?> wildcardClass31 = locale30.getClass();
        java.util.Locale locale33 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.lang.Class<?> wildcardClass34 = locale33.getClass();
        java.util.Locale locale36 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.lang.Class<?> wildcardClass37 = locale36.getClass();
        java.util.Locale locale39 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.lang.Class<?> wildcardClass40 = locale39.getClass();
        java.util.Locale locale42 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.lang.Class<?> wildcardClass43 = locale42.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray44 = new java.lang.reflect.AnnotatedElement[] { wildcardClass31, wildcardClass34, wildcardClass37, wildcardClass40, wildcardClass43 };
        java.util.Set<java.lang.reflect.AnnotatedElement> annotatedElementSet45 = org.apache.lucene.util.LuceneTestCase.asSet(annotatedElementArray44);
        java.lang.Object obj46 = null;
        org.junit.Assert.assertNotEquals((java.lang.Object) annotatedElementArray44, obj46);
        org.junit.Assert.assertNotEquals("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) annotatedElementArray44);
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain50 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        java.lang.String str51 = kuromojiAnalysisTests1.getTestName();
        org.apache.lucene.index.PostingsEnum postingsEnum53 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum54 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocsAndPositionsEnumEquals("tests.failfast", postingsEnum53, postingsEnum54);
    }

    @Test
    public void test3904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3904");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (short) 10, (long) '#');
    }

    @Test
    public void test3905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3905");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) 10L, (float) (byte) 0, (float) (-1L));
    }

    @Test
    public void test3906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3906");
        int[] intArray2 = new int[] { '#' };
        int[] intArray4 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray2, intArray4);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests6 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.Fields fields9 = null;
        org.apache.lucene.index.Fields fields10 = null;
        kuromojiAnalysisTests6.assertFieldsEquals("europarl.lines.txt.gz", indexReader8, fields9, fields10, false);
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum17 = null;
        kuromojiAnalysisTests6.assertPositionsSkippingEquals("hi!", indexReader14, (int) (byte) 0, postingsEnum16, postingsEnum17);
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        org.apache.lucene.index.Terms terms22 = null;
        kuromojiAnalysisTests6.assertTermsEquals("random", indexReader20, terms21, terms22, true);
        kuromojiAnalysisTests6.setUp();
        kuromojiAnalysisTests6.tearDown();
        kuromojiAnalysisTests6.tearDown();
        org.junit.rules.RuleChain ruleChain28 = kuromojiAnalysisTests6.failureAndSuccessEvents;
        org.junit.Assert.assertNotSame("tests.weekly", (java.lang.Object) intArray4, (java.lang.Object) kuromojiAnalysisTests6);
        int[] intArray32 = new int[] { '#' };
        int[] intArray34 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray32, intArray34);
        int[] intArray37 = new int[] { '#' };
        int[] intArray39 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray37, intArray39);
        org.junit.Assert.assertArrayEquals("tests.badapples", intArray32, intArray37);
        org.junit.Assert.assertArrayEquals(intArray4, intArray37);
        int[] intArray43 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(intArray4, intArray43);
    }

    @Test
    public void test3907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3907");
        java.util.Locale locale2 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.awaitsfix");
        java.util.Locale locale4 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.weekly");
        java.util.Locale locale6 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray7 = new java.util.Locale[] { locale2, locale4, locale6 };
        java.util.Locale locale9 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.awaitsfix");
        java.util.Locale locale11 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.weekly");
        java.util.Locale locale13 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray14 = new java.util.Locale[] { locale9, locale11, locale13 };
        java.util.Locale locale16 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.awaitsfix");
        java.util.Locale locale18 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.weekly");
        java.util.Locale locale20 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray21 = new java.util.Locale[] { locale16, locale18, locale20 };
        java.util.Locale locale23 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.awaitsfix");
        java.util.Locale locale25 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.weekly");
        java.util.Locale locale27 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray28 = new java.util.Locale[] { locale23, locale25, locale27 };
        java.util.Locale locale30 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.awaitsfix");
        java.util.Locale locale32 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.weekly");
        java.util.Locale locale34 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale30, locale32, locale34 };
        java.util.Locale locale37 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.awaitsfix");
        java.util.Locale locale39 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.weekly");
        java.util.Locale locale41 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray42 = new java.util.Locale[] { locale37, locale39, locale41 };
        java.util.Locale[][] localeArray43 = new java.util.Locale[][] { localeArray7, localeArray14, localeArray21, localeArray28, localeArray35, localeArray42 };
        java.util.Set<java.util.Locale[]> localeArraySet44 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray43);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests45 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader47 = null;
        org.apache.lucene.index.Fields fields48 = null;
        org.apache.lucene.index.Fields fields49 = null;
        kuromojiAnalysisTests45.assertFieldsEquals("europarl.lines.txt.gz", indexReader47, fields48, fields49, false);
        org.apache.lucene.index.IndexReader indexReader53 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum55 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum56 = null;
        kuromojiAnalysisTests45.assertPositionsSkippingEquals("tests.failfast", indexReader53, 1, postingsEnum55, postingsEnum56);
        kuromojiAnalysisTests45.setIndexWriterMaxDocs(0);
        org.apache.lucene.index.IndexReader indexReader61 = null;
        org.apache.lucene.index.Fields fields62 = null;
        org.apache.lucene.index.Fields fields63 = null;
        kuromojiAnalysisTests45.assertFieldsEquals("tests.slow", indexReader61, fields62, fields63, false);
        org.apache.lucene.index.IndexReader indexReader67 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum69 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum70 = null;
        kuromojiAnalysisTests45.assertPositionsSkippingEquals("<unknown>", indexReader67, (int) 'a', postingsEnum69, postingsEnum70);
        kuromojiAnalysisTests45.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain73 = kuromojiAnalysisTests45.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray43, (java.lang.Object) ruleChain73);
        java.util.Set<java.util.Locale[]> localeArraySet75 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray43);
        java.util.Locale locale79 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale81 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale83 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale85 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale87 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray88 = new java.util.Locale[] { locale79, locale81, locale83, locale85, locale87 };
        java.util.Set<java.util.Locale> localeSet89 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray88);
        java.util.List<java.io.Serializable> serializableList90 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray88);
        org.junit.Assert.assertNotSame("", (java.lang.Object) localeArray88, (java.lang.Object) 0.0f);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) localeArray43, (java.lang.Object[]) localeArray88);
    }

    @Test
    public void test3908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3908");
        double[] doubleArray6 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray11 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray6, doubleArray11, (double) (byte) 100);
        double[] doubleArray20 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray25 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray20, doubleArray25, (double) (byte) 100);
        double[] doubleArray34 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray39 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray34, doubleArray39, (double) (byte) 100);
        double[] doubleArray47 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray52 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray47, doubleArray52, (double) (byte) 100);
        org.junit.Assert.assertArrayEquals("", doubleArray34, doubleArray47, (double) 0);
        org.junit.Assert.assertArrayEquals(doubleArray20, doubleArray34, (-1.0d));
        double[] doubleArray65 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray70 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray65, doubleArray70, (double) (byte) 100);
        double[] doubleArray78 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray83 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray78, doubleArray83, (double) (byte) 100);
        org.junit.Assert.assertArrayEquals("", doubleArray65, doubleArray78, (double) 0);
        org.junit.Assert.assertArrayEquals("random", doubleArray20, doubleArray78, (double) 10.0f);
        org.junit.Assert.assertArrayEquals(doubleArray6, doubleArray20, (double) 0);
        double[] doubleArray92 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.failfast", doubleArray6, doubleArray92, (double) 100);
    }

    @Test
    public void test3909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3909");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) (-1L), (float) '4', 1.0f);
    }

    @Test
    public void test3910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3910");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) 2, (float) '4', (float) 10);
    }

    @Test
    public void test3911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3911");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((-1.0f), (float) (byte) 0, (-1.0f));
    }

    @Test
    public void test3912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3912");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", 100.0d, (double) '4', (double) (byte) -1);
    }

    @Test
    public void test3913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3913");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("hi!", indexReader9, (int) (byte) 0, postingsEnum11, postingsEnum12);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests16 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader18 = null;
        org.apache.lucene.index.Fields fields19 = null;
        org.apache.lucene.index.Fields fields20 = null;
        kuromojiAnalysisTests16.assertFieldsEquals("europarl.lines.txt.gz", indexReader18, fields19, fields20, false);
        kuromojiAnalysisTests16.ensureCleanedUp();
        kuromojiAnalysisTests16.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests16.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain26 = kuromojiAnalysisTests16.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests16);
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("tests.maxfailures", postingsEnum29, postingsEnum30, true);
        org.junit.rules.RuleChain ruleChain33 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        java.util.Locale locale37 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale39 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale41 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale43 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale45 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray46 = new java.util.Locale[] { locale37, locale39, locale41, locale43, locale45 };
        java.util.Set<java.util.Locale> localeSet47 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray46);
        java.util.List<java.io.Serializable> serializableList48 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray46);
        java.util.Set<java.lang.Cloneable> cloneableSet49 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray46);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray46, (java.lang.Object) (byte) -1);
        java.util.Locale locale54 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale56 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale58 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale60 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale62 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray63 = new java.util.Locale[] { locale54, locale56, locale58, locale60, locale62 };
        java.util.Set<java.util.Locale> localeSet64 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray63);
        java.util.List<java.io.Serializable> serializableList65 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray63);
        java.util.Set<java.lang.Cloneable> cloneableSet66 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray63);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray63, (java.lang.Object) (byte) -1);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray46, (java.lang.Object[]) localeArray63);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests70 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader72 = null;
        org.apache.lucene.index.Fields fields73 = null;
        org.apache.lucene.index.Fields fields74 = null;
        kuromojiAnalysisTests70.assertFieldsEquals("europarl.lines.txt.gz", indexReader72, fields73, fields74, false);
        kuromojiAnalysisTests70.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain79 = kuromojiAnalysisTests70.failureAndSuccessEvents;
        kuromojiAnalysisTests70.setUp();
        org.junit.Assert.assertNotSame("tests.nightly", (java.lang.Object) localeArray46, (java.lang.Object) kuromojiAnalysisTests70);
        org.apache.lucene.index.IndexReader indexReader83 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum85 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum86 = null;
        kuromojiAnalysisTests70.assertDocsSkippingEquals("tests.awaitsfix", indexReader83, 10, postingsEnum85, postingsEnum86, true);
        org.apache.lucene.index.IndexReader indexReader90 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum92 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum93 = null;
        kuromojiAnalysisTests70.assertPositionsSkippingEquals("tests.badapples", indexReader90, (int) 'a', postingsEnum92, postingsEnum93);
        org.junit.rules.RuleChain ruleChain95 = kuromojiAnalysisTests70.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("<unknown>", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) ruleChain95);
    }

    @Test
    public void test3914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3914");
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray1 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet2 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray1);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests3 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        org.apache.lucene.index.Fields fields7 = null;
        kuromojiAnalysisTests3.assertFieldsEquals("europarl.lines.txt.gz", indexReader5, fields6, fields7, false);
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        kuromojiAnalysisTests3.assertPositionsSkippingEquals("tests.failfast", indexReader11, 1, postingsEnum13, postingsEnum14);
        kuromojiAnalysisTests3.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests3.ensureCleanedUp();
        kuromojiAnalysisTests3.resetCheckIndexStatus();
        kuromojiAnalysisTests3.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.Fields fields23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        kuromojiAnalysisTests3.assertFieldsEquals("enwiki.random.lines.txt", indexReader22, fields23, fields24, false);
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        kuromojiAnalysisTests3.assertDocsSkippingEquals("tests.weekly", indexReader28, (int) (byte) 0, postingsEnum30, postingsEnum31, true);
        org.junit.Assert.assertNotSame("tests.weekly", (java.lang.Object) genericDeclarationArray1, (java.lang.Object) "tests.weekly");
        java.util.concurrent.ExecutorService[] executorServiceArray35 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean36 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray35);
        org.junit.Assert.assertEquals((java.lang.Object[]) genericDeclarationArray1, (java.lang.Object[]) executorServiceArray35);
        java.lang.Object[] objArray38 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) genericDeclarationArray1, objArray38);
    }

    @Test
    public void test3915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3915");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("", indexReader11, (int) (byte) 0, postingsEnum13, postingsEnum14);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.setUp();
        org.junit.rules.TestRule testRule18 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.Fields fields23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        kuromojiAnalysisTests20.assertFieldsEquals("europarl.lines.txt.gz", indexReader22, fields23, fields24, false);
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        kuromojiAnalysisTests20.assertPositionsSkippingEquals("hi!", indexReader28, (int) (byte) 0, postingsEnum30, postingsEnum31);
        kuromojiAnalysisTests20.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum35 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum36 = null;
        kuromojiAnalysisTests20.assertDocsEnumEquals("tests.failfast", postingsEnum35, postingsEnum36, false);
        org.apache.lucene.index.IndexReader indexReader40 = null;
        org.apache.lucene.index.Fields fields41 = null;
        org.apache.lucene.index.Fields fields42 = null;
        kuromojiAnalysisTests20.assertFieldsEquals("hi!", indexReader40, fields41, fields42, true);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) true);
    }

    @Test
    public void test3916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3916");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("random", postingsEnum13, postingsEnum14, false);
        kuromojiAnalysisTests0.tearDown();
        java.util.Locale locale21 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale23 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale25 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale27 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale29 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale21, locale23, locale25, locale27, locale29 };
        java.util.Set<java.util.Locale> localeSet31 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray30);
        java.util.List<java.io.Serializable> serializableList32 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray30);
        java.util.Set<java.lang.Cloneable> cloneableSet33 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray30);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray30, (java.lang.Object) (byte) -1);
        java.util.Locale locale38 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale40 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale42 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale44 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale46 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray47 = new java.util.Locale[] { locale38, locale40, locale42, locale44, locale46 };
        java.util.Set<java.util.Locale> localeSet48 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray47);
        java.util.List<java.io.Serializable> serializableList49 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray47);
        java.util.Set<java.lang.Cloneable> cloneableSet50 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray47);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray47, (java.lang.Object) (byte) -1);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray30, (java.lang.Object[]) localeArray47);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests54 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader56 = null;
        org.apache.lucene.index.Fields fields57 = null;
        org.apache.lucene.index.Fields fields58 = null;
        kuromojiAnalysisTests54.assertFieldsEquals("europarl.lines.txt.gz", indexReader56, fields57, fields58, false);
        kuromojiAnalysisTests54.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain63 = kuromojiAnalysisTests54.failureAndSuccessEvents;
        kuromojiAnalysisTests54.setUp();
        org.junit.Assert.assertNotSame("tests.nightly", (java.lang.Object) localeArray30, (java.lang.Object) kuromojiAnalysisTests54);
        org.apache.lucene.index.IndexReader indexReader67 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum69 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum70 = null;
        kuromojiAnalysisTests54.assertDocsSkippingEquals("tests.awaitsfix", indexReader67, 10, postingsEnum69, postingsEnum70, true);
        kuromojiAnalysisTests54.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests54.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests54.resetCheckIndexStatus();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests54);
    }

    @Test
    public void test3917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3917");
        short[] shortArray4 = new short[] { (short) 10 };
        short[] shortArray6 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray4, shortArray6);
        short[] shortArray11 = new short[] { (short) 10 };
        short[] shortArray13 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray11, shortArray13);
        short[] shortArray17 = new short[] { (short) 10 };
        short[] shortArray19 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray17, shortArray19);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray13, shortArray19);
        org.junit.Assert.assertArrayEquals(shortArray6, shortArray19);
        short[] shortArray28 = new short[] { (short) 10 };
        short[] shortArray30 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray28, shortArray30);
        short[] shortArray35 = new short[] { (short) 10 };
        short[] shortArray37 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray35, shortArray37);
        short[] shortArray41 = new short[] { (short) 10 };
        short[] shortArray43 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray41, shortArray43);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray37, shortArray43);
        org.junit.Assert.assertArrayEquals("tests.nightly", shortArray28, shortArray37);
        short[] shortArray49 = new short[] { (short) 10 };
        short[] shortArray51 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray49, shortArray51);
        short[] shortArray56 = new short[] { (short) 10 };
        short[] shortArray58 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray56, shortArray58);
        short[] shortArray62 = new short[] { (short) 10 };
        short[] shortArray64 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray62, shortArray64);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray58, shortArray64);
        org.junit.Assert.assertArrayEquals(shortArray51, shortArray64);
        org.junit.Assert.assertArrayEquals("tests.failfast", shortArray28, shortArray51);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests69 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader71 = null;
        org.apache.lucene.index.Fields fields72 = null;
        org.apache.lucene.index.Fields fields73 = null;
        kuromojiAnalysisTests69.assertFieldsEquals("europarl.lines.txt.gz", indexReader71, fields72, fields73, false);
        kuromojiAnalysisTests69.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.TestRule testRule78 = kuromojiAnalysisTests69.ruleChain;
        org.junit.rules.TestRule testRule79 = kuromojiAnalysisTests69.ruleChain;
        org.apache.lucene.index.IndexReader indexReader81 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum83 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum84 = null;
        kuromojiAnalysisTests69.assertPositionsSkippingEquals("tests.slow", indexReader81, (int) (short) 1, postingsEnum83, postingsEnum84);
        org.junit.rules.TestRule testRule86 = kuromojiAnalysisTests69.ruleChain;
        org.junit.Assert.assertNotEquals("tests.maxfailures", (java.lang.Object) shortArray28, (java.lang.Object) kuromojiAnalysisTests69);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray6, shortArray28);
        short[] shortArray89 = new short[] {};
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", shortArray28, shortArray89);
    }

    @Test
    public void test3918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3918");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.nightly", (long) (byte) 10, (long) (-1));
    }

    @Test
    public void test3919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3919");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 4, (double) 2);
    }

    @Test
    public void test3920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3920");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("<unknown>", (float) (short) -1, (float) (byte) 10, (float) (short) 10);
    }

    @Test
    public void test3921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3921");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.awaitsfix", (double) (-1), (double) (short) 0, 1.0d);
    }

    @Test
    public void test3922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3922");
        java.lang.Object obj0 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("europarl.lines.txt.gz", indexReader4, fields5, fields6, false);
        kuromojiAnalysisTests2.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain11 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        java.lang.String str13 = kuromojiAnalysisTests2.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests2);
        kuromojiAnalysisTests2.tearDown();
        kuromojiAnalysisTests2.overrideTestDefaultQueryCache();
        org.junit.Assert.assertNotSame(obj0, (java.lang.Object) kuromojiAnalysisTests2);
        kuromojiAnalysisTests2.ensureCheckIndexPassed();
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests2.assertDocsAndPositionsEnumEquals("hi!", postingsEnum20, postingsEnum21);
    }

    @Test
    public void test3923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3923");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.failfast", indexReader9, 1, postingsEnum11, postingsEnum12);
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Fields fields16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("tests.slow", indexReader15, fields16, fields17, true);
        org.junit.rules.TestRule testRule20 = kuromojiAnalysisTests1.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.maxfailures", (java.lang.Object) testRule20);
    }

    @Test
    public void test3924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3924");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", 0.0f, (float) 10L, (-1.0f));
    }

    @Test
    public void test3925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3925");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.slow", indexReader12, (int) (short) -1, postingsEnum14, postingsEnum15, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.awaitsfix", indexReader21, (int) 'a', postingsEnum23, postingsEnum24);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("hi!");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("random", (java.lang.Object) "hi!");
    }

    @Test
    public void test3926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3926");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.failfast", indexReader8, 1, postingsEnum10, postingsEnum11);
        kuromojiAnalysisTests0.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.Fields fields20 = null;
        org.apache.lucene.index.Fields fields21 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader19, fields20, fields21, false);
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.Terms terms26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader25, terms26, terms27, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.Terms terms33 = null;
        org.apache.lucene.index.Terms terms34 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.weekly", indexReader32, terms33, terms34, true);
        char[] charArray39 = new char[] {};
        char[] charArray40 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray39, charArray40);
        char[] charArray42 = new char[] {};
        char[] charArray43 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray42, charArray43);
        org.junit.Assert.assertArrayEquals(charArray40, charArray43);
        char[] charArray46 = new char[] {};
        char[] charArray47 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray46, charArray47);
        char[] charArray49 = new char[] {};
        char[] charArray50 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray49, charArray50);
        org.junit.Assert.assertArrayEquals(charArray47, charArray50);
        org.junit.Assert.assertArrayEquals("tests.monster", charArray43, charArray50);
        char[] charArray55 = new char[] {};
        char[] charArray56 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray55, charArray56);
        char[] charArray58 = new char[] {};
        char[] charArray59 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray58, charArray59);
        char[] charArray61 = new char[] {};
        char[] charArray62 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray61, charArray62);
        org.junit.Assert.assertArrayEquals(charArray59, charArray62);
        org.junit.Assert.assertArrayEquals("random", charArray56, charArray59);
        org.junit.Assert.assertArrayEquals("tests.badapples", charArray50, charArray59);
        org.junit.Assert.assertNotEquals((java.lang.Object) "tests.weekly", (java.lang.Object) charArray59);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests69 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader71 = null;
        org.apache.lucene.index.Fields fields72 = null;
        org.apache.lucene.index.Fields fields73 = null;
        kuromojiAnalysisTests69.assertFieldsEquals("europarl.lines.txt.gz", indexReader71, fields72, fields73, false);
        kuromojiAnalysisTests69.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain78 = kuromojiAnalysisTests69.failureAndSuccessEvents;
        kuromojiAnalysisTests69.resetCheckIndexStatus();
        java.lang.String str80 = kuromojiAnalysisTests69.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests69);
        kuromojiAnalysisTests69.setUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) "tests.weekly", (java.lang.Object) kuromojiAnalysisTests69);
    }

    @Test
    public void test3927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3927");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) 100L, (float) (byte) -1, (float) 1L);
    }

    @Test
    public void test3928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3928");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (byte) 1, (double) 100L, (double) (byte) 0);
    }

    @Test
    public void test3929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3929");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("hi!", indexReader8, (int) (byte) 0, postingsEnum10, postingsEnum11);
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests0.assertTermsEquals("random", indexReader14, terms15, terms16, true);
        java.lang.String str19 = kuromojiAnalysisTests0.getTestName();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (short) 0);
        java.lang.String str22 = kuromojiAnalysisTests0.getTestName();
        kuromojiAnalysisTests0.setUp();
        org.apache.lucene.index.NumericDocValues numericDocValues26 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues27 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("enwiki.random.lines.txt", (int) (short) 100, numericDocValues26, numericDocValues27);
    }

    @Test
    public void test3930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3930");
        java.util.concurrent.ExecutorService[] executorServiceArray1 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean2 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean4 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        java.util.Locale locale6 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.lang.Class<?> wildcardClass7 = locale6.getClass();
        java.util.Locale locale9 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.lang.Class<?> wildcardClass10 = locale9.getClass();
        java.util.Locale locale12 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.lang.Class<?> wildcardClass13 = locale12.getClass();
        java.util.Locale locale15 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.lang.Class<?> wildcardClass16 = locale15.getClass();
        java.util.Locale locale18 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.lang.Class<?> wildcardClass19 = locale18.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray20 = new java.lang.reflect.AnnotatedElement[] { wildcardClass7, wildcardClass10, wildcardClass13, wildcardClass16, wildcardClass19 };
        java.util.Set<java.lang.reflect.AnnotatedElement> annotatedElementSet21 = org.apache.lucene.util.LuceneTestCase.asSet(annotatedElementArray20);
        java.lang.Object obj22 = null;
        org.junit.Assert.assertNotEquals((java.lang.Object) annotatedElementArray20, obj22);
        org.junit.Assert.assertNotEquals((java.lang.Object) boolean4, (java.lang.Object) annotatedElementArray20);
        org.junit.Assert.assertNotNull("<unknown>", (java.lang.Object) annotatedElementArray20);
        int[] intArray27 = new int[] { (byte) 10 };
        int[] intArray29 = new int[] { (byte) 10 };
        int[] intArray31 = new int[] { (byte) 10 };
        int[] intArray33 = new int[] { (byte) 10 };
        int[][] intArray34 = new int[][] { intArray27, intArray29, intArray31, intArray33 };
        int[] intArray36 = new int[] { (byte) 10 };
        int[] intArray38 = new int[] { (byte) 10 };
        int[] intArray40 = new int[] { (byte) 10 };
        int[] intArray42 = new int[] { (byte) 10 };
        int[][] intArray43 = new int[][] { intArray36, intArray38, intArray40, intArray42 };
        int[] intArray45 = new int[] { (byte) 10 };
        int[] intArray47 = new int[] { (byte) 10 };
        int[] intArray49 = new int[] { (byte) 10 };
        int[] intArray51 = new int[] { (byte) 10 };
        int[][] intArray52 = new int[][] { intArray45, intArray47, intArray49, intArray51 };
        int[] intArray54 = new int[] { (byte) 10 };
        int[] intArray56 = new int[] { (byte) 10 };
        int[] intArray58 = new int[] { (byte) 10 };
        int[] intArray60 = new int[] { (byte) 10 };
        int[][] intArray61 = new int[][] { intArray54, intArray56, intArray58, intArray60 };
        int[][][] intArray62 = new int[][][] { intArray34, intArray43, intArray52, intArray61 };
        java.util.Set<int[][]> intArraySet63 = org.apache.lucene.util.LuceneTestCase.asSet(intArray62);
        java.util.Set<int[][]> intArraySet64 = org.apache.lucene.util.LuceneTestCase.asSet(intArray62);
        org.junit.Assert.assertNotNull((java.lang.Object) intArray62);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) annotatedElementArray20, (java.lang.Object[]) intArray62);
    }

    @Test
    public void test3931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3931");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 10);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests8 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Fields fields11 = null;
        org.apache.lucene.index.Fields fields12 = null;
        kuromojiAnalysisTests8.assertFieldsEquals("europarl.lines.txt.gz", indexReader10, fields11, fields12, false);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests8.assertPositionsSkippingEquals("hi!", indexReader16, (int) (byte) 0, postingsEnum18, postingsEnum19);
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.Terms terms23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        kuromojiAnalysisTests8.assertTermsEquals("random", indexReader22, terms23, terms24, true);
        kuromojiAnalysisTests8.setUp();
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        kuromojiAnalysisTests8.assertPositionsSkippingEquals("tests.failfast", indexReader29, (int) '4', postingsEnum31, postingsEnum32);
        kuromojiAnalysisTests8.setIndexWriterMaxDocs(100);
        org.apache.lucene.index.IndexReader indexReader37 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum39 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum40 = null;
        kuromojiAnalysisTests8.assertDocsSkippingEquals("tests.badapples", indexReader37, (int) (short) 10, postingsEnum39, postingsEnum40, true);
        kuromojiAnalysisTests8.tearDown();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests8);
    }

    @Test
    public void test3932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3932");
        double[] doubleArray1 = null;
        double[] doubleArray7 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray12 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray7, doubleArray12, (double) (byte) 100);
        double[] doubleArray21 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray26 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray21, doubleArray26, (double) (byte) 100);
        double[] doubleArray34 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray39 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray34, doubleArray39, (double) (byte) 100);
        org.junit.Assert.assertArrayEquals("", doubleArray21, doubleArray34, (double) 0);
        org.junit.Assert.assertArrayEquals(doubleArray7, doubleArray21, (-1.0d));
        double[] doubleArray52 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray57 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray52, doubleArray57, (double) (byte) 100);
        double[] doubleArray65 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray70 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray65, doubleArray70, (double) (byte) 100);
        org.junit.Assert.assertArrayEquals("", doubleArray52, doubleArray65, (double) 0);
        double[] doubleArray80 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray85 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray80, doubleArray85, (double) (byte) 100);
        org.junit.Assert.assertArrayEquals(doubleArray65, doubleArray80, 0.0d);
        org.junit.Assert.assertArrayEquals(doubleArray21, doubleArray65, 0.0d);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.weekly", doubleArray1, doubleArray21, 100.0d);
    }

    @Test
    public void test3933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3933");
        float[] floatArray5 = new float[] { 100.0f, 100L, (byte) -1, 0.0f };
        float[] floatArray14 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray21 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray14, floatArray21, (float) (byte) 100);
        float[] floatArray32 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray39 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray32, floatArray39, (float) (byte) 100);
        float[] floatArray49 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray56 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray49, floatArray56, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray32, floatArray49, (float) (-1));
        org.junit.Assert.assertArrayEquals(floatArray14, floatArray49, (float) 1L);
        float[] floatArray70 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray77 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray70, floatArray77, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals("tests.badapples", floatArray14, floatArray77, 100.0f);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("hi!", floatArray5, floatArray77, (float) 0);
    }

    @Test
    public void test3934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3934");
        char[] charArray1 = new char[] {};
        char[] charArray2 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray1, charArray2);
        char[] charArray4 = new char[] {};
        char[] charArray5 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray4, charArray5);
        char[] charArray7 = new char[] {};
        char[] charArray8 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray7, charArray8);
        org.junit.Assert.assertArrayEquals(charArray5, charArray8);
        org.junit.Assert.assertArrayEquals("random", charArray2, charArray5);
        char[] charArray12 = new char[] {};
        char[] charArray13 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray12, charArray13);
        char[] charArray15 = new char[] {};
        char[] charArray16 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray15, charArray16);
        org.junit.Assert.assertArrayEquals(charArray13, charArray16);
        org.junit.Assert.assertArrayEquals(charArray5, charArray13);
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray21 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet22 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray21);
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray24 = new java.lang.reflect.GenericDeclaration[] {};
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet25 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray24);
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet26 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray24);
        org.junit.Assert.assertNotEquals((java.lang.Object) 1, (java.lang.Object) genericDeclarationArray24);
        java.util.Set<java.lang.reflect.AnnotatedElement> annotatedElementSet28 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.reflect.AnnotatedElement[]) genericDeclarationArray24);
        org.junit.Assert.assertEquals("", (java.lang.Object[]) genericDeclarationArray21, (java.lang.Object[]) genericDeclarationArray24);
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray30 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet31 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray30);
        org.junit.Assert.assertEquals((java.lang.Object[]) genericDeclarationArray21, (java.lang.Object[]) genericDeclarationArray30);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) charArray13, (java.lang.Object) genericDeclarationArray21);
    }

    @Test
    public void test3935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3935");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        java.lang.String str12 = kuromojiAnalysisTests1.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests1);
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.setUp();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("", indexReader17, (int) '#', postingsEnum19, postingsEnum20);
        org.junit.rules.RuleChain ruleChain22 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.Fields fields26 = null;
        org.apache.lucene.index.Fields fields27 = null;
        kuromojiAnalysisTests23.assertFieldsEquals("europarl.lines.txt.gz", indexReader25, fields26, fields27, false);
        kuromojiAnalysisTests23.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.TestRule testRule32 = kuromojiAnalysisTests23.ruleChain;
        org.junit.rules.TestRule testRule33 = kuromojiAnalysisTests23.ruleChain;
        kuromojiAnalysisTests23.resetCheckIndexStatus();
        kuromojiAnalysisTests23.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader37 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum39 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum40 = null;
        kuromojiAnalysisTests23.assertDocsSkippingEquals("", indexReader37, (int) (short) 1, postingsEnum39, postingsEnum40, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) postingsEnum40);
    }

    @Test
    public void test3936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3936");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.monster", (double) (-1), (-1.0d), (double) (byte) 100);
    }

    @Test
    public void test3937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3937");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (double) 0.0f, (double) 'a', (double) (byte) 10);
    }

    @Test
    public void test3938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3938");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", (long) (short) 100, (long) (byte) 1);
    }

    @Test
    public void test3939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3939");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.failfast", indexReader9, 1, postingsEnum11, postingsEnum12);
        kuromojiAnalysisTests1.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.junit.rules.TestRule testRule19 = kuromojiAnalysisTests1.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.monster", (java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test3940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3940");
        java.util.concurrent.ExecutorService[] executorServiceArray1 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean2 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        java.util.concurrent.ExecutorService[] executorServiceArray4 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean5 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        boolean boolean6 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        boolean boolean7 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        boolean boolean8 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        boolean boolean9 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        boolean boolean10 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray1, (java.lang.Object[]) executorServiceArray4);
        java.util.Locale locale13 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale15 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale17 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale19 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale21 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray22 = new java.util.Locale[] { locale13, locale15, locale17, locale19, locale21 };
        java.util.Set<java.util.Locale> localeSet23 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray22);
        java.util.Locale locale26 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale28 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale30 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale32 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale34 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray35 = new java.util.Locale[] { locale26, locale28, locale30, locale32, locale34 };
        java.util.Set<java.util.Locale> localeSet36 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray35);
        java.util.List<java.io.Serializable> serializableList37 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray35);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray22, (java.lang.Object[]) localeArray35);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests39 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests39.setIndexWriterMaxDocs((int) (byte) 10);
        org.apache.lucene.index.IndexReader indexReader43 = null;
        org.apache.lucene.index.Terms terms44 = null;
        org.apache.lucene.index.Terms terms45 = null;
        kuromojiAnalysisTests39.assertTermsEquals("tests.weekly", indexReader43, terms44, terms45, true);
        kuromojiAnalysisTests39.setIndexWriterMaxDocs((int) '#');
        kuromojiAnalysisTests39.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests39.ensureCheckIndexPassed();
        kuromojiAnalysisTests39.setUp();
        kuromojiAnalysisTests39.resetCheckIndexStatus();
        org.junit.rules.RuleChain ruleChain54 = kuromojiAnalysisTests39.failureAndSuccessEvents;
        kuromojiAnalysisTests39.ensureCheckIndexPassed();
        org.junit.Assert.assertNotSame((java.lang.Object) localeArray22, (java.lang.Object) kuromojiAnalysisTests39);
        java.util.Set<java.io.Serializable> serializableSet57 = org.apache.lucene.util.LuceneTestCase.asSet((java.io.Serializable[]) localeArray22);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) executorServiceArray1, (java.lang.Object[]) localeArray22);
    }

    @Test
    public void test3941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3941");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("hi!", (double) (short) 0, (double) 10L, (double) (short) 10);
    }

    @Test
    public void test3942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3942");
        java.util.concurrent.ExecutorService executorService1 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray2 = new java.util.concurrent.ExecutorService[] { executorService1 };
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean4 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean5 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean6 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray8 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet9 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray8);
        java.util.Set<java.lang.reflect.AnnotatedElement[]> annotatedElementArraySet10 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.reflect.AnnotatedElement[][]) genericDeclarationArray8);
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet11 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray8);
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray13 = new java.lang.reflect.GenericDeclaration[] {};
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet14 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray13);
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet15 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray13);
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray17 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet18 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray17);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests19 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.Fields fields22 = null;
        org.apache.lucene.index.Fields fields23 = null;
        kuromojiAnalysisTests19.assertFieldsEquals("europarl.lines.txt.gz", indexReader21, fields22, fields23, false);
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        kuromojiAnalysisTests19.assertPositionsSkippingEquals("tests.failfast", indexReader27, 1, postingsEnum29, postingsEnum30);
        kuromojiAnalysisTests19.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests19.ensureCleanedUp();
        kuromojiAnalysisTests19.resetCheckIndexStatus();
        kuromojiAnalysisTests19.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader38 = null;
        org.apache.lucene.index.Fields fields39 = null;
        org.apache.lucene.index.Fields fields40 = null;
        kuromojiAnalysisTests19.assertFieldsEquals("enwiki.random.lines.txt", indexReader38, fields39, fields40, false);
        org.apache.lucene.index.IndexReader indexReader44 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum46 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum47 = null;
        kuromojiAnalysisTests19.assertDocsSkippingEquals("tests.weekly", indexReader44, (int) (byte) 0, postingsEnum46, postingsEnum47, true);
        org.junit.Assert.assertNotSame("tests.weekly", (java.lang.Object) genericDeclarationArray17, (java.lang.Object) "tests.weekly");
        java.util.concurrent.ExecutorService[] executorServiceArray51 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean52 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray51);
        org.junit.Assert.assertEquals((java.lang.Object[]) genericDeclarationArray17, (java.lang.Object[]) executorServiceArray51);
        org.junit.Assert.assertEquals("tests.badapples", (java.lang.Object[]) genericDeclarationArray13, (java.lang.Object[]) executorServiceArray51);
        boolean boolean55 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray51);
        org.junit.Assert.assertArrayEquals("tests.monster", (java.lang.Object[]) genericDeclarationArray8, (java.lang.Object[]) executorServiceArray51);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) executorServiceArray2, (java.lang.Object[]) executorServiceArray51);
    }

    @Test
    public void test3943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3943");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(10.0d, (double) '4');
    }

    @Test
    public void test3944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3944");
        short[] shortArray1 = null;
        short[] shortArray6 = new short[] { (short) 10 };
        short[] shortArray8 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray6, shortArray8);
        short[] shortArray12 = new short[] { (short) 10 };
        short[] shortArray14 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray12, shortArray14);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray8, shortArray14);
        short[] shortArray20 = new short[] { (short) 10 };
        short[] shortArray22 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray20, shortArray22);
        short[] shortArray27 = new short[] { (short) 10 };
        short[] shortArray29 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray27, shortArray29);
        short[] shortArray33 = new short[] { (short) 10 };
        short[] shortArray35 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray33, shortArray35);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray29, shortArray35);
        org.junit.Assert.assertArrayEquals(shortArray22, shortArray35);
        short[] shortArray42 = new short[] { (short) 10 };
        short[] shortArray44 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray42, shortArray44);
        short[] shortArray48 = new short[] { (short) 10 };
        short[] shortArray50 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray48, shortArray50);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray44, shortArray50);
        org.junit.Assert.assertArrayEquals(shortArray22, shortArray50);
        short[] shortArray58 = new short[] { (short) 10 };
        short[] shortArray60 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray58, shortArray60);
        short[] shortArray64 = new short[] { (short) 10 };
        short[] shortArray66 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray64, shortArray66);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray60, shortArray66);
        short[] shortArray72 = new short[] { (short) 10 };
        short[] shortArray74 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray72, shortArray74);
        short[] shortArray78 = new short[] { (short) 10 };
        short[] shortArray80 = new short[] { (short) 10 };
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray78, shortArray80);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", shortArray74, shortArray80);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray60, shortArray80);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", shortArray50, shortArray60);
        org.junit.Assert.assertArrayEquals("", shortArray8, shortArray60);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("<unknown>", shortArray1, shortArray60);
    }

    @Test
    public void test3945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3945");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", (long) (byte) 0, (long) 10);
    }

    @Test
    public void test3946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3946");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (double) 4, (double) 3);
    }

    @Test
    public void test3947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3947");
        java.util.Locale locale4 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale6 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale8 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale10 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale12 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray13 = new java.util.Locale[] { locale4, locale6, locale8, locale10, locale12 };
        java.util.Set<java.util.Locale> localeSet14 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray13);
        java.util.List<java.io.Serializable> serializableList15 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray13);
        java.util.Set<java.lang.Cloneable> cloneableSet16 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray13);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray13, (java.lang.Object) (byte) -1);
        java.util.Locale locale21 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale23 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale25 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale27 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale29 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale21, locale23, locale25, locale27, locale29 };
        java.util.Set<java.util.Locale> localeSet31 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray30);
        java.util.List<java.io.Serializable> serializableList32 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray30);
        java.util.Set<java.lang.Cloneable> cloneableSet33 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[]) localeArray30);
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray30, (java.lang.Object) (byte) -1);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeArray13, (java.lang.Object[]) localeArray30);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests37 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.Fields fields40 = null;
        org.apache.lucene.index.Fields fields41 = null;
        kuromojiAnalysisTests37.assertFieldsEquals("europarl.lines.txt.gz", indexReader39, fields40, fields41, false);
        kuromojiAnalysisTests37.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain46 = kuromojiAnalysisTests37.failureAndSuccessEvents;
        kuromojiAnalysisTests37.setUp();
        org.junit.Assert.assertNotSame("tests.nightly", (java.lang.Object) localeArray13, (java.lang.Object) kuromojiAnalysisTests37);
        org.apache.lucene.index.IndexReader indexReader50 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum52 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum53 = null;
        kuromojiAnalysisTests37.assertDocsSkippingEquals("tests.awaitsfix", indexReader50, 10, postingsEnum52, postingsEnum53, true);
        kuromojiAnalysisTests37.resetCheckIndexStatus();
        java.lang.Object obj57 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object) kuromojiAnalysisTests37, obj57);
    }

    @Test
    public void test3948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3948");
        java.util.concurrent.ExecutorService[] executorServiceArray1 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean2 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean4 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        java.lang.Object[] objArray5 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) executorServiceArray1, objArray5);
    }

    @Test
    public void test3949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3949");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.failfast");
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.slow", indexReader11, (int) (short) 10, postingsEnum13, postingsEnum14);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        org.apache.lucene.index.Terms terms19 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader17, terms18, terms19, false);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.apache.lucene.index.NumericDocValues numericDocValues25 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues26 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.nightly", 100, numericDocValues25, numericDocValues26);
    }

    @Test
    public void test3950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3950");
        java.lang.Object obj1 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("europarl.lines.txt.gz", indexReader4, fields5, fields6, false);
        kuromojiAnalysisTests2.ensureCleanedUp();
        kuromojiAnalysisTests2.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("hi!", indexReader12, 1, postingsEnum14, postingsEnum15);
        kuromojiAnalysisTests2.assertPathHasBeenCleared("tests.badapples");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.Fields fields23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        kuromojiAnalysisTests20.assertFieldsEquals("europarl.lines.txt.gz", indexReader22, fields23, fields24, false);
        kuromojiAnalysisTests20.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain29 = kuromojiAnalysisTests20.failureAndSuccessEvents;
        kuromojiAnalysisTests20.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.Fields fields33 = null;
        org.apache.lucene.index.Fields fields34 = null;
        kuromojiAnalysisTests20.assertFieldsEquals("enwiki.random.lines.txt", indexReader32, fields33, fields34, false);
        org.junit.rules.TestRule testRule37 = kuromojiAnalysisTests20.ruleChain;
        org.junit.Assert.assertNotEquals((java.lang.Object) (-1.0d), (java.lang.Object) kuromojiAnalysisTests20);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests39 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader41 = null;
        org.apache.lucene.index.Fields fields42 = null;
        org.apache.lucene.index.Fields fields43 = null;
        kuromojiAnalysisTests39.assertFieldsEquals("europarl.lines.txt.gz", indexReader41, fields42, fields43, false);
        kuromojiAnalysisTests39.ensureCleanedUp();
        kuromojiAnalysisTests39.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests39.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader50 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum52 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum53 = null;
        kuromojiAnalysisTests39.assertDocsSkippingEquals("tests.slow", indexReader50, (int) (short) -1, postingsEnum52, postingsEnum53, false);
        kuromojiAnalysisTests39.assertPathHasBeenCleared("tests.slow");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests58 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader60 = null;
        org.apache.lucene.index.Fields fields61 = null;
        org.apache.lucene.index.Fields fields62 = null;
        kuromojiAnalysisTests58.assertFieldsEquals("europarl.lines.txt.gz", indexReader60, fields61, fields62, false);
        kuromojiAnalysisTests58.ensureCleanedUp();
        kuromojiAnalysisTests58.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests58.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader69 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum71 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum72 = null;
        kuromojiAnalysisTests58.assertDocsSkippingEquals("tests.slow", indexReader69, (int) (short) -1, postingsEnum71, postingsEnum72, false);
        kuromojiAnalysisTests58.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum77 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum78 = null;
        kuromojiAnalysisTests58.assertDocsEnumEquals("", postingsEnum77, postingsEnum78, false);
        org.junit.rules.RuleChain ruleChain81 = kuromojiAnalysisTests58.failureAndSuccessEvents;
        kuromojiAnalysisTests39.failureAndSuccessEvents = ruleChain81;
        kuromojiAnalysisTests20.failureAndSuccessEvents = ruleChain81;
        kuromojiAnalysisTests2.failureAndSuccessEvents = ruleChain81;
        kuromojiAnalysisTests2.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests2.ensureCleanedUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.badapples", obj1, (java.lang.Object) kuromojiAnalysisTests2);
    }

    @Test
    public void test3951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3951");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((double) (byte) -1, 10.0d, (double) 100L);
    }

    @Test
    public void test3952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3952");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (float) 10, (float) (byte) 0, (float) (short) 1);
    }

    @Test
    public void test3953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3953");
        java.util.concurrent.ExecutorService[] executorServiceArray0 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean1 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray0);
        boolean boolean2 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray0);
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray0);
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray4 = new java.lang.reflect.GenericDeclaration[][] {};
        java.util.Set<java.lang.reflect.GenericDeclaration[]> genericDeclarationArraySet5 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray4);
        java.util.Set<java.lang.reflect.AnnotatedElement[]> annotatedElementArraySet6 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.reflect.AnnotatedElement[][]) genericDeclarationArray4);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray0, (java.lang.Object[]) genericDeclarationArray4);
        boolean boolean8 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray0);
        boolean boolean9 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray0);
        java.util.concurrent.ExecutorService executorService10 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray11 = new java.util.concurrent.ExecutorService[] { executorService10 };
        boolean boolean12 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray11);
        boolean boolean13 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray11);
        boolean boolean14 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray11);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray0, (java.lang.Object[]) executorServiceArray11);
    }

    @Test
    public void test3954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3954");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("europarl.lines.txt.gz", indexReader4, fields5, fields6, false);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("tests.failfast", indexReader10, 1, postingsEnum12, postingsEnum13);
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests2.tearDown();
        kuromojiAnalysisTests2.ensureAllSearchContextsReleased();
        java.lang.Object obj18 = null;
        org.junit.Assert.assertNotSame("tests.nightly", (java.lang.Object) kuromojiAnalysisTests2, obj18);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.Fields fields23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        kuromojiAnalysisTests20.assertFieldsEquals("europarl.lines.txt.gz", indexReader22, fields23, fields24, false);
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        kuromojiAnalysisTests20.assertPositionsSkippingEquals("hi!", indexReader28, (int) (byte) 0, postingsEnum30, postingsEnum31);
        org.apache.lucene.index.IndexReader indexReader34 = null;
        org.apache.lucene.index.Terms terms35 = null;
        org.apache.lucene.index.Terms terms36 = null;
        kuromojiAnalysisTests20.assertTermsEquals("random", indexReader34, terms35, terms36, true);
        kuromojiAnalysisTests20.setUp();
        org.apache.lucene.index.IndexReader indexReader41 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum43 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum44 = null;
        kuromojiAnalysisTests20.assertPositionsSkippingEquals("tests.failfast", indexReader41, (int) '4', postingsEnum43, postingsEnum44);
        kuromojiAnalysisTests20.setIndexWriterMaxDocs(100);
        kuromojiAnalysisTests20.resetCheckIndexStatus();
        kuromojiAnalysisTests20.ensureCheckIndexPassed();
        kuromojiAnalysisTests20.ensureCleanedUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) kuromojiAnalysisTests20);
    }

    @Test
    public void test3955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3955");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 10, (double) 0, (double) 3);
    }

    @Test
    public void test3956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3956");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(0.0d, (double) 10L, 1.0d);
    }

    @Test
    public void test3957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3957");
        java.util.concurrent.ExecutorService[] executorServiceArray1 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean2 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        java.util.concurrent.ExecutorService[] executorServiceArray4 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean5 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        boolean boolean6 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        boolean boolean7 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        boolean boolean8 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        boolean boolean9 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        boolean boolean10 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray1, (java.lang.Object[]) executorServiceArray4);
        boolean boolean12 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        boolean boolean13 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray4);
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray15 = new java.lang.reflect.GenericDeclaration[] {};
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet16 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray15);
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet17 = org.apache.lucene.util.LuceneTestCase.asSet(genericDeclarationArray15);
        org.junit.Assert.assertNotEquals((java.lang.Object) 1, (java.lang.Object) genericDeclarationArray15);
        java.util.Set<java.lang.reflect.AnnotatedElement> annotatedElementSet19 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.reflect.AnnotatedElement[]) genericDeclarationArray15);
        org.junit.Assert.assertEquals("random", (java.lang.Object[]) executorServiceArray4, (java.lang.Object[]) genericDeclarationArray15);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) "random");
    }

    @Test
    public void test3958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3958");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.failfast", indexReader9, 1, postingsEnum11, postingsEnum12);
        kuromojiAnalysisTests1.setIndexWriterMaxDocs(0);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("", indexReader17, (int) (byte) 100, postingsEnum19, postingsEnum20);
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        org.apache.lucene.index.Fields fields25 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("tests.failfast", indexReader23, fields24, fields25, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.ensureCleanedUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test3959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3959");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("random", indexReader2, fields3, fields4, true);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader8, (int) (short) 1, postingsEnum10, postingsEnum11, false);
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Fields fields16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("tests.weekly", indexReader15, fields16, fields17, false);
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.Fields fields22 = null;
        org.apache.lucene.index.Fields fields23 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("tests.failfast", indexReader21, fields22, fields23, false);
        java.lang.String str26 = kuromojiAnalysisTests0.getTestName();
        org.apache.lucene.index.NumericDocValues numericDocValues29 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues30 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.weekly", 2, numericDocValues29, numericDocValues30);
    }

    @Test
    public void test3960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3960");
        double[] doubleArray0 = null;
        double[] doubleArray8 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray13 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray8, doubleArray13, (double) (byte) 100);
        double[] doubleArray22 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray27 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray22, doubleArray27, (double) (byte) 100);
        double[] doubleArray35 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray40 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray35, doubleArray40, (double) (byte) 100);
        org.junit.Assert.assertArrayEquals("", doubleArray22, doubleArray35, (double) 0);
        org.junit.Assert.assertArrayEquals(doubleArray8, doubleArray22, (-1.0d));
        double[] doubleArray53 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray58 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray53, doubleArray58, (double) (byte) 100);
        double[] doubleArray66 = new double[] { 0, (-1), 100L, 1.0f };
        double[] doubleArray71 = new double[] { (byte) 10, 10.0d, 10.0f, (short) 100 };
        org.junit.Assert.assertArrayEquals("", doubleArray66, doubleArray71, (double) (byte) 100);
        org.junit.Assert.assertArrayEquals("", doubleArray53, doubleArray66, (double) 0);
        org.junit.Assert.assertArrayEquals("random", doubleArray8, doubleArray66, (double) 10.0f);
        java.lang.String[] strArray84 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet85 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray84);
        org.junit.Assert.assertNotEquals("hi!", (java.lang.Object) doubleArray8, (java.lang.Object) strArray84);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(doubleArray0, doubleArray8, (double) ' ');
    }

    @Test
    public void test3961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3961");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 100.0f, (double) (byte) 10, (double) 10);
    }

    @Test
    public void test3962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3962");
        java.util.concurrent.ExecutorService[] executorServiceArray1 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean2 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean4 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean5 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean6 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean7 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        java.lang.Object[] objArray8 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) executorServiceArray1, objArray8);
    }

    @Test
    public void test3963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3963");
        java.util.Locale locale1 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.awaitsfix");
        java.util.Locale locale3 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.weekly");
        java.util.Locale locale5 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray6 = new java.util.Locale[] { locale1, locale3, locale5 };
        java.util.Locale locale8 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.awaitsfix");
        java.util.Locale locale10 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.weekly");
        java.util.Locale locale12 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray13 = new java.util.Locale[] { locale8, locale10, locale12 };
        java.util.Locale locale15 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.awaitsfix");
        java.util.Locale locale17 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.weekly");
        java.util.Locale locale19 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray20 = new java.util.Locale[] { locale15, locale17, locale19 };
        java.util.Locale locale22 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.awaitsfix");
        java.util.Locale locale24 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.weekly");
        java.util.Locale locale26 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray27 = new java.util.Locale[] { locale22, locale24, locale26 };
        java.util.Locale locale29 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.awaitsfix");
        java.util.Locale locale31 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.weekly");
        java.util.Locale locale33 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray34 = new java.util.Locale[] { locale29, locale31, locale33 };
        java.util.Locale locale36 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.awaitsfix");
        java.util.Locale locale38 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.weekly");
        java.util.Locale locale40 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray41 = new java.util.Locale[] { locale36, locale38, locale40 };
        java.util.Locale[][] localeArray42 = new java.util.Locale[][] { localeArray6, localeArray13, localeArray20, localeArray27, localeArray34, localeArray41 };
        java.util.Set<java.util.Locale[]> localeArraySet43 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray42);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests44 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader46 = null;
        org.apache.lucene.index.Fields fields47 = null;
        org.apache.lucene.index.Fields fields48 = null;
        kuromojiAnalysisTests44.assertFieldsEquals("europarl.lines.txt.gz", indexReader46, fields47, fields48, false);
        org.apache.lucene.index.IndexReader indexReader52 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum54 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum55 = null;
        kuromojiAnalysisTests44.assertPositionsSkippingEquals("tests.failfast", indexReader52, 1, postingsEnum54, postingsEnum55);
        kuromojiAnalysisTests44.setIndexWriterMaxDocs(0);
        org.apache.lucene.index.IndexReader indexReader60 = null;
        org.apache.lucene.index.Fields fields61 = null;
        org.apache.lucene.index.Fields fields62 = null;
        kuromojiAnalysisTests44.assertFieldsEquals("tests.slow", indexReader60, fields61, fields62, false);
        org.apache.lucene.index.IndexReader indexReader66 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum68 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum69 = null;
        kuromojiAnalysisTests44.assertPositionsSkippingEquals("<unknown>", indexReader66, (int) 'a', postingsEnum68, postingsEnum69);
        kuromojiAnalysisTests44.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain72 = kuromojiAnalysisTests44.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals((java.lang.Object) localeArray42, (java.lang.Object) ruleChain72);
        java.util.Set<java.util.Locale[]> localeArraySet74 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray42);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) localeArray42);
    }

    @Test
    public void test3964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3964");
        java.lang.String[] strArray7 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet8 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray7);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests9 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests9.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet8, (java.lang.Object) kuromojiAnalysisTests9);
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests9.assertDocsEnumEquals("tests.badapples", postingsEnum14, postingsEnum15, true);
        org.junit.rules.TestRule testRule18 = kuromojiAnalysisTests9.ruleChain;
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        kuromojiAnalysisTests9.assertDocsSkippingEquals("tests.maxfailures", indexReader20, (int) (byte) 100, postingsEnum22, postingsEnum23, false);
        kuromojiAnalysisTests9.resetCheckIndexStatus();
        kuromojiAnalysisTests9.ensureCleanedUp();
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests9);
        kuromojiAnalysisTests9.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        kuromojiAnalysisTests9.assertDocsSkippingEquals("", indexReader31, 0, postingsEnum33, postingsEnum34, true);
        org.apache.lucene.index.NumericDocValues numericDocValues39 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues40 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests9.assertDocValuesEquals("tests.failfast", 10, numericDocValues39, numericDocValues40);
    }

    @Test
    public void test3965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3965");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) 10, 100L);
    }

    @Test
    public void test3966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3966");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 0, (double) 10L);
    }

    @Test
    public void test3967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3967");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) '#', (double) (-1.0f));
    }

    @Test
    public void test3968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3968");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.failfast", indexReader8, 1, postingsEnum10, postingsEnum11);
        kuromojiAnalysisTests0.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests18 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.Fields fields21 = null;
        org.apache.lucene.index.Fields fields22 = null;
        kuromojiAnalysisTests18.assertFieldsEquals("europarl.lines.txt.gz", indexReader20, fields21, fields22, false);
        kuromojiAnalysisTests18.ensureCleanedUp();
        kuromojiAnalysisTests18.resetCheckIndexStatus();
        kuromojiAnalysisTests18.ensureCleanedUp();
        kuromojiAnalysisTests18.ensureCheckIndexPassed();
        kuromojiAnalysisTests18.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.Fields fields32 = null;
        org.apache.lucene.index.Fields fields33 = null;
        kuromojiAnalysisTests18.assertFieldsEquals("tests.awaitsfix", indexReader31, fields32, fields33, true);
        kuromojiAnalysisTests18.tearDown();
        kuromojiAnalysisTests18.assertPathHasBeenCleared("tests.badapples");
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests18);
        kuromojiAnalysisTests18.setUp();
        kuromojiAnalysisTests18.ensureCheckIndexPassed();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests42 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader44 = null;
        org.apache.lucene.index.Fields fields45 = null;
        org.apache.lucene.index.Fields fields46 = null;
        kuromojiAnalysisTests42.assertFieldsEquals("europarl.lines.txt.gz", indexReader44, fields45, fields46, false);
        org.apache.lucene.index.IndexReader indexReader50 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum52 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum53 = null;
        kuromojiAnalysisTests42.assertPositionsSkippingEquals("hi!", indexReader50, (int) (byte) 0, postingsEnum52, postingsEnum53);
        java.lang.Class<?> wildcardClass55 = kuromojiAnalysisTests42.getClass();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests18, (java.lang.Object) kuromojiAnalysisTests42);
    }

    @Test
    public void test3969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3969");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (byte) 1, (double) (short) -1);
    }

    @Test
    public void test3970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3970");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        java.lang.String str12 = kuromojiAnalysisTests1.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests1);
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.tearDown();
        java.lang.String str16 = kuromojiAnalysisTests1.getTestName();
        java.lang.String str17 = kuromojiAnalysisTests1.getTestName();
        org.apache.lucene.index.NumericDocValues numericDocValues20 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues21 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocValuesEquals("", (int) '#', numericDocValues20, numericDocValues21);
    }

    @Test
    public void test3971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3971");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Fields fields15 = null;
        org.apache.lucene.index.Fields fields16 = null;
        kuromojiAnalysisTests12.assertFieldsEquals("europarl.lines.txt.gz", indexReader14, fields15, fields16, false);
        kuromojiAnalysisTests12.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.TestRule testRule21 = kuromojiAnalysisTests12.ruleChain;
        org.junit.rules.TestRule testRule22 = kuromojiAnalysisTests12.ruleChain;
        org.junit.rules.RuleChain ruleChain23 = kuromojiAnalysisTests12.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain23;
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.awaitsfix", postingsEnum27, postingsEnum28);
    }

    @Test
    public void test3972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3972");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((-1.0d), (double) 10.0f, (double) (short) 0);
    }

    @Test
    public void test3973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3973");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.failfast", indexReader9, 1, postingsEnum11, postingsEnum12);
        kuromojiAnalysisTests1.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.Fields fields21 = null;
        org.apache.lucene.index.Fields fields22 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("enwiki.random.lines.txt", indexReader20, fields21, fields22, false);
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.failfast", indexReader26, (int) (byte) 0, postingsEnum28, postingsEnum29, false);
        org.junit.rules.TestRule testRule32 = kuromojiAnalysisTests1.ruleChain;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule32;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.weekly", (java.lang.Object) testRule32);
    }

    @Test
    public void test3974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3974");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.awaitsfix", (double) 3, 1.0d);
    }

    @Test
    public void test3975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3975");
        char[] charArray4 = new char[] {};
        char[] charArray5 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray4, charArray5);
        char[] charArray7 = new char[] {};
        char[] charArray8 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray7, charArray8);
        char[] charArray10 = new char[] {};
        char[] charArray11 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray10, charArray11);
        org.junit.Assert.assertArrayEquals(charArray8, charArray11);
        char[] charArray14 = new char[] {};
        char[] charArray15 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray14, charArray15);
        org.junit.Assert.assertArrayEquals(charArray8, charArray15);
        org.junit.Assert.assertArrayEquals("tests.slow", charArray5, charArray15);
        char[] charArray19 = new char[] {};
        char[] charArray20 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray19, charArray20);
        char[] charArray22 = new char[] {};
        char[] charArray23 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray22, charArray23);
        org.junit.Assert.assertArrayEquals(charArray19, charArray23);
        org.junit.Assert.assertArrayEquals("tests.badapples", charArray5, charArray23);
        char[] charArray27 = new char[] {};
        char[] charArray28 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray27, charArray28);
        char[] charArray30 = new char[] {};
        char[] charArray31 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray30, charArray31);
        org.junit.Assert.assertArrayEquals(charArray28, charArray31);
        org.junit.Assert.assertArrayEquals("tests.slow", charArray23, charArray28);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.nightly", (java.lang.Object) charArray28);
    }

    @Test
    public void test3976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3976");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        java.lang.String[] strArray14 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet15 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray14);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests16 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests16.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet15, (java.lang.Object) kuromojiAnalysisTests16);
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        kuromojiAnalysisTests16.assertDocsEnumEquals("tests.badapples", postingsEnum21, postingsEnum22, true);
        org.junit.rules.TestRule testRule25 = kuromojiAnalysisTests16.ruleChain;
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        kuromojiAnalysisTests16.assertDocsSkippingEquals("tests.maxfailures", indexReader27, (int) (byte) 100, postingsEnum29, postingsEnum30, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests33 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader35 = null;
        org.apache.lucene.index.Fields fields36 = null;
        org.apache.lucene.index.Fields fields37 = null;
        kuromojiAnalysisTests33.assertFieldsEquals("europarl.lines.txt.gz", indexReader35, fields36, fields37, false);
        kuromojiAnalysisTests33.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain42 = kuromojiAnalysisTests33.failureAndSuccessEvents;
        kuromojiAnalysisTests16.failureAndSuccessEvents = ruleChain42;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain42;
        org.apache.lucene.index.PostingsEnum postingsEnum46 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum47 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("<unknown>", postingsEnum46, postingsEnum47, true);
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests51 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader53 = null;
        org.apache.lucene.index.Fields fields54 = null;
        org.apache.lucene.index.Fields fields55 = null;
        kuromojiAnalysisTests51.assertFieldsEquals("europarl.lines.txt.gz", indexReader53, fields54, fields55, false);
        kuromojiAnalysisTests51.ensureCleanedUp();
        kuromojiAnalysisTests51.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests60 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader62 = null;
        org.apache.lucene.index.Fields fields63 = null;
        org.apache.lucene.index.Fields fields64 = null;
        kuromojiAnalysisTests60.assertFieldsEquals("europarl.lines.txt.gz", indexReader62, fields63, fields64, false);
        org.apache.lucene.index.IndexReader indexReader68 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum70 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum71 = null;
        kuromojiAnalysisTests60.assertPositionsSkippingEquals("tests.failfast", indexReader68, 1, postingsEnum70, postingsEnum71);
        kuromojiAnalysisTests60.setIndexWriterMaxDocs(0);
        org.apache.lucene.index.IndexReader indexReader76 = null;
        org.apache.lucene.index.Fields fields77 = null;
        org.apache.lucene.index.Fields fields78 = null;
        kuromojiAnalysisTests60.assertFieldsEquals("tests.slow", indexReader76, fields77, fields78, false);
        kuromojiAnalysisTests60.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule82 = kuromojiAnalysisTests60.ruleChain;
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests51, (java.lang.Object) testRule82);
        kuromojiAnalysisTests51.ensureCleanedUp();
        org.junit.rules.RuleChain ruleChain85 = kuromojiAnalysisTests51.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain86 = kuromojiAnalysisTests51.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain86;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) ruleChain86);
    }

    @Test
    public void test3977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3977");
        char[] charArray1 = null;
        char[] charArray4 = new char[] {};
        char[] charArray5 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray4, charArray5);
        char[] charArray7 = new char[] {};
        char[] charArray8 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray7, charArray8);
        char[] charArray10 = new char[] {};
        char[] charArray11 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray10, charArray11);
        org.junit.Assert.assertArrayEquals(charArray8, charArray11);
        org.junit.Assert.assertArrayEquals("random", charArray5, charArray8);
        char[] charArray15 = new char[] {};
        char[] charArray16 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray15, charArray16);
        char[] charArray18 = new char[] {};
        char[] charArray19 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray18, charArray19);
        org.junit.Assert.assertArrayEquals(charArray16, charArray19);
        org.junit.Assert.assertArrayEquals(charArray5, charArray16);
        char[] charArray23 = new char[] {};
        char[] charArray24 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray23, charArray24);
        char[] charArray27 = new char[] {};
        char[] charArray28 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray27, charArray28);
        char[] charArray30 = new char[] {};
        char[] charArray31 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray30, charArray31);
        org.junit.Assert.assertArrayEquals(charArray28, charArray31);
        char[] charArray34 = new char[] {};
        char[] charArray35 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray34, charArray35);
        char[] charArray37 = new char[] {};
        char[] charArray38 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray37, charArray38);
        org.junit.Assert.assertArrayEquals(charArray35, charArray38);
        org.junit.Assert.assertArrayEquals("tests.monster", charArray31, charArray38);
        org.junit.Assert.assertArrayEquals(charArray24, charArray31);
        org.junit.Assert.assertArrayEquals(charArray16, charArray31);
        char[] charArray44 = new char[] {};
        char[] charArray45 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray44, charArray45);
        char[] charArray47 = new char[] {};
        char[] charArray48 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray47, charArray48);
        org.junit.Assert.assertArrayEquals(charArray44, charArray48);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", charArray31, charArray44);
        char[] charArray53 = new char[] {};
        char[] charArray54 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray53, charArray54);
        char[] charArray56 = new char[] {};
        char[] charArray57 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray56, charArray57);
        char[] charArray59 = new char[] {};
        char[] charArray60 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray59, charArray60);
        org.junit.Assert.assertArrayEquals(charArray57, charArray60);
        char[] charArray63 = new char[] {};
        char[] charArray64 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray63, charArray64);
        org.junit.Assert.assertArrayEquals(charArray57, charArray64);
        org.junit.Assert.assertArrayEquals("tests.slow", charArray54, charArray64);
        org.junit.Assert.assertArrayEquals(charArray44, charArray64);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("random", charArray1, charArray64);
    }

    @Test
    public void test3978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3978");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (-1L), (double) (-1));
    }

    @Test
    public void test3979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3979");
        java.util.Set[] setArray1 = new java.util.Set[0];
        @SuppressWarnings("unchecked")
        java.util.Set<java.util.Locale>[] localeSetArray2 = (java.util.Set<java.util.Locale>[]) setArray1;
        java.util.Set<java.util.Set<java.util.Locale>> localeSetSet3 = org.apache.lucene.util.LuceneTestCase.asSet(localeSetArray2);
        java.lang.Object[] objArray4 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) localeSetArray2, objArray4);
    }

    @Test
    public void test3980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3980");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", (double) 100L, 10.0d, (double) 1L);
    }

    @Test
    public void test3981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3981");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("hi!", indexReader9, (int) (byte) 0, postingsEnum11, postingsEnum12);
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests1.assertTermsEquals("random", indexReader15, terms16, terms17, true);
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("europarl.lines.txt.gz", indexReader23, (int) (short) 0, postingsEnum25, postingsEnum26, false);
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("<unknown>", indexReader30, (int) (byte) 1, postingsEnum32, postingsEnum33);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests36 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader38 = null;
        org.apache.lucene.index.Fields fields39 = null;
        org.apache.lucene.index.Fields fields40 = null;
        kuromojiAnalysisTests36.assertFieldsEquals("europarl.lines.txt.gz", indexReader38, fields39, fields40, false);
        java.lang.String[] strArray50 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet51 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray50);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests52 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests52.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet51, (java.lang.Object) kuromojiAnalysisTests52);
        org.apache.lucene.index.PostingsEnum postingsEnum57 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum58 = null;
        kuromojiAnalysisTests52.assertDocsEnumEquals("tests.badapples", postingsEnum57, postingsEnum58, true);
        org.junit.rules.TestRule testRule61 = kuromojiAnalysisTests52.ruleChain;
        org.apache.lucene.index.IndexReader indexReader63 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum65 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum66 = null;
        kuromojiAnalysisTests52.assertDocsSkippingEquals("tests.maxfailures", indexReader63, (int) (byte) 100, postingsEnum65, postingsEnum66, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests69 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader71 = null;
        org.apache.lucene.index.Fields fields72 = null;
        org.apache.lucene.index.Fields fields73 = null;
        kuromojiAnalysisTests69.assertFieldsEquals("europarl.lines.txt.gz", indexReader71, fields72, fields73, false);
        kuromojiAnalysisTests69.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain78 = kuromojiAnalysisTests69.failureAndSuccessEvents;
        kuromojiAnalysisTests52.failureAndSuccessEvents = ruleChain78;
        kuromojiAnalysisTests36.failureAndSuccessEvents = ruleChain78;
        org.apache.lucene.index.PostingsEnum postingsEnum82 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum83 = null;
        kuromojiAnalysisTests36.assertDocsEnumEquals("<unknown>", postingsEnum82, postingsEnum83, true);
        kuromojiAnalysisTests36.setIndexWriterMaxDocs((int) (short) 10);
        kuromojiAnalysisTests36.ensureCleanedUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests36);
    }

    @Test
    public void test3982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3982");
        java.util.Locale locale3 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale5 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale7 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale9 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale locale11 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray12 = new java.util.Locale[] { locale3, locale5, locale7, locale9, locale11 };
        java.util.Set<java.util.Locale> localeSet13 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray12);
        java.util.List<java.io.Serializable> serializableList14 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, (java.io.Serializable[]) localeArray12);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests15 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        org.apache.lucene.index.Fields fields19 = null;
        kuromojiAnalysisTests15.assertFieldsEquals("europarl.lines.txt.gz", indexReader17, fields18, fields19, false);
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        kuromojiAnalysisTests15.assertPositionsSkippingEquals("tests.failfast", indexReader23, 1, postingsEnum25, postingsEnum26);
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.Fields fields30 = null;
        org.apache.lucene.index.Fields fields31 = null;
        kuromojiAnalysisTests15.assertFieldsEquals("tests.slow", indexReader29, fields30, fields31, true);
        org.junit.rules.TestRule testRule34 = kuromojiAnalysisTests15.ruleChain;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests35 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader37 = null;
        org.apache.lucene.index.Fields fields38 = null;
        org.apache.lucene.index.Fields fields39 = null;
        kuromojiAnalysisTests35.assertFieldsEquals("europarl.lines.txt.gz", indexReader37, fields38, fields39, false);
        java.lang.String[] strArray49 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet50 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray49);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests51 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests51.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet50, (java.lang.Object) kuromojiAnalysisTests51);
        org.apache.lucene.index.PostingsEnum postingsEnum56 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum57 = null;
        kuromojiAnalysisTests51.assertDocsEnumEquals("tests.badapples", postingsEnum56, postingsEnum57, true);
        org.junit.rules.TestRule testRule60 = kuromojiAnalysisTests51.ruleChain;
        org.apache.lucene.index.IndexReader indexReader62 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum64 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum65 = null;
        kuromojiAnalysisTests51.assertDocsSkippingEquals("tests.maxfailures", indexReader62, (int) (byte) 100, postingsEnum64, postingsEnum65, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests68 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader70 = null;
        org.apache.lucene.index.Fields fields71 = null;
        org.apache.lucene.index.Fields fields72 = null;
        kuromojiAnalysisTests68.assertFieldsEquals("europarl.lines.txt.gz", indexReader70, fields71, fields72, false);
        kuromojiAnalysisTests68.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain77 = kuromojiAnalysisTests68.failureAndSuccessEvents;
        kuromojiAnalysisTests51.failureAndSuccessEvents = ruleChain77;
        kuromojiAnalysisTests35.failureAndSuccessEvents = ruleChain77;
        kuromojiAnalysisTests15.failureAndSuccessEvents = ruleChain77;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain77;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.badapples", (java.lang.Object) (short) 1, (java.lang.Object) ruleChain77);
    }

    @Test
    public void test3983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3983");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.failfast", indexReader8, 1, postingsEnum10, postingsEnum11);
        kuromojiAnalysisTests0.setIndexWriterMaxDocs(0);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("tests.slow", indexReader16, fields17, fields18, false);
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("<unknown>", indexReader22, (int) 'a', postingsEnum24, postingsEnum25);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        java.lang.Object obj28 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) kuromojiAnalysisTests0, obj28);
    }

    @Test
    public void test3984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3984");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 10L, (double) (short) 10);
    }

    @Test
    public void test3985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3985");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((-1L), (long) (byte) -1);
    }

    @Test
    public void test3986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3986");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain9 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.Fields fields13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader12, fields13, fields14, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests18 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.Fields fields21 = null;
        org.apache.lucene.index.Fields fields22 = null;
        kuromojiAnalysisTests18.assertFieldsEquals("europarl.lines.txt.gz", indexReader20, fields21, fields22, false);
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        kuromojiAnalysisTests18.assertPositionsSkippingEquals("hi!", indexReader26, (int) (byte) 0, postingsEnum28, postingsEnum29);
        kuromojiAnalysisTests18.ensureCheckIndexPassed();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests32 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.Assert.assertNotSame("tests.slow", (java.lang.Object) kuromojiAnalysisTests18, (java.lang.Object) kuromojiAnalysisTests32);
        kuromojiAnalysisTests32.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests32.ensureAllSearchContextsReleased();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests37 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.Fields fields40 = null;
        org.apache.lucene.index.Fields fields41 = null;
        kuromojiAnalysisTests37.assertFieldsEquals("europarl.lines.txt.gz", indexReader39, fields40, fields41, false);
        kuromojiAnalysisTests37.ensureCleanedUp();
        kuromojiAnalysisTests37.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests37.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader48 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum50 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum51 = null;
        kuromojiAnalysisTests37.assertDocsSkippingEquals("tests.slow", indexReader48, (int) (short) -1, postingsEnum50, postingsEnum51, false);
        kuromojiAnalysisTests37.assertPathHasBeenCleared("tests.slow");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests56 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader58 = null;
        org.apache.lucene.index.Fields fields59 = null;
        org.apache.lucene.index.Fields fields60 = null;
        kuromojiAnalysisTests56.assertFieldsEquals("europarl.lines.txt.gz", indexReader58, fields59, fields60, false);
        kuromojiAnalysisTests56.ensureCleanedUp();
        kuromojiAnalysisTests56.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests56.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader67 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum69 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum70 = null;
        kuromojiAnalysisTests56.assertDocsSkippingEquals("tests.slow", indexReader67, (int) (short) -1, postingsEnum69, postingsEnum70, false);
        kuromojiAnalysisTests56.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum75 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum76 = null;
        kuromojiAnalysisTests56.assertDocsEnumEquals("", postingsEnum75, postingsEnum76, false);
        org.junit.rules.RuleChain ruleChain79 = kuromojiAnalysisTests56.failureAndSuccessEvents;
        kuromojiAnalysisTests37.failureAndSuccessEvents = ruleChain79;
        org.junit.Assert.assertNotNull("tests.badapples", (java.lang.Object) kuromojiAnalysisTests37);
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests32, (java.lang.Object) kuromojiAnalysisTests37);
        org.junit.rules.RuleChain ruleChain83 = kuromojiAnalysisTests32.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) fields13, (java.lang.Object) ruleChain83);
    }

    @Test
    public void test3987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3987");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) '4', (-1L));
    }

    @Test
    public void test3988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3988");
        java.lang.Iterable[][] iterableArray3 = new java.lang.Iterable[0][];
        @SuppressWarnings("unchecked")
        java.lang.Iterable<java.util.Locale>[][] localeIterableArray4 = (java.lang.Iterable<java.util.Locale>[][]) iterableArray3;
        java.util.Set<java.lang.Iterable<java.util.Locale>[]> localeIterableArraySet5 = org.apache.lucene.util.LuceneTestCase.asSet(localeIterableArray4);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests6 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.Fields fields9 = null;
        org.apache.lucene.index.Fields fields10 = null;
        kuromojiAnalysisTests6.assertFieldsEquals("europarl.lines.txt.gz", indexReader8, fields9, fields10, false);
        kuromojiAnalysisTests6.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.TestRule testRule15 = kuromojiAnalysisTests6.ruleChain;
        java.lang.String[] strArray23 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet24 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray23);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests25 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests25.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet24, (java.lang.Object) kuromojiAnalysisTests25);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests29 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.Fields fields32 = null;
        org.apache.lucene.index.Fields fields33 = null;
        kuromojiAnalysisTests29.assertFieldsEquals("europarl.lines.txt.gz", indexReader31, fields32, fields33, false);
        kuromojiAnalysisTests29.ensureCleanedUp();
        kuromojiAnalysisTests29.resetCheckIndexStatus();
        kuromojiAnalysisTests29.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader40 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum43 = null;
        kuromojiAnalysisTests29.assertPositionsSkippingEquals("", indexReader40, (int) (byte) 0, postingsEnum42, postingsEnum43);
        org.junit.Assert.assertNotEquals((java.lang.Object) "tests.failfast", (java.lang.Object) kuromojiAnalysisTests29);
        kuromojiAnalysisTests29.setUp();
        kuromojiAnalysisTests29.resetCheckIndexStatus();
        kuromojiAnalysisTests29.assertPathHasBeenCleared("tests.weekly");
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests6, (java.lang.Object) "tests.weekly");
        org.junit.Assert.assertNotEquals("europarl.lines.txt.gz", (java.lang.Object) localeIterableArray4, (java.lang.Object) "tests.weekly");
        int[] intArray56 = new int[] { (byte) -1, ' ', 100, (short) 1 };
        int[] intArray61 = new int[] { (byte) -1, ' ', 100, (short) 1 };
        int[][] intArray62 = new int[][] { intArray56, intArray61 };
        java.util.Set<int[]> intArraySet63 = org.apache.lucene.util.LuceneTestCase.asSet(intArray62);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", (java.lang.Object[]) localeIterableArray4, (java.lang.Object[]) intArray62);
    }

    @Test
    public void test3989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3989");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        java.lang.String str12 = kuromojiAnalysisTests1.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests1);
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain16 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.Fields fields23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        kuromojiAnalysisTests20.assertFieldsEquals("europarl.lines.txt.gz", indexReader22, fields23, fields24, false);
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        kuromojiAnalysisTests20.assertPositionsSkippingEquals("hi!", indexReader28, (int) (byte) 0, postingsEnum30, postingsEnum31);
        org.apache.lucene.index.IndexReader indexReader34 = null;
        org.apache.lucene.index.Terms terms35 = null;
        org.apache.lucene.index.Terms terms36 = null;
        kuromojiAnalysisTests20.assertTermsEquals("random", indexReader34, terms35, terms36, true);
        kuromojiAnalysisTests20.ensureAllSearchContextsReleased();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests40 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader42 = null;
        org.apache.lucene.index.Fields fields43 = null;
        org.apache.lucene.index.Fields fields44 = null;
        kuromojiAnalysisTests40.assertFieldsEquals("europarl.lines.txt.gz", indexReader42, fields43, fields44, false);
        org.apache.lucene.index.IndexReader indexReader48 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum50 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum51 = null;
        kuromojiAnalysisTests40.assertPositionsSkippingEquals("tests.failfast", indexReader48, 1, postingsEnum50, postingsEnum51);
        kuromojiAnalysisTests40.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests40.ensureCleanedUp();
        kuromojiAnalysisTests40.resetCheckIndexStatus();
        kuromojiAnalysisTests40.restoreIndexWriterMaxDocs();
        java.lang.String str58 = kuromojiAnalysisTests40.getTestName();
        kuromojiAnalysisTests40.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests20, (java.lang.Object) kuromojiAnalysisTests40);
        org.apache.lucene.index.IndexReader indexReader62 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum64 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum65 = null;
        kuromojiAnalysisTests20.assertPositionsSkippingEquals("random", indexReader62, (int) ' ', postingsEnum64, postingsEnum65);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) postingsEnum65);
    }

    @Test
    public void test3990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3990");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((double) 4, (double) (byte) 0, (double) (byte) 100);
    }

    @Test
    public void test3991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3991");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Fields fields3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader2, fields3, fields4, false);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.failfast", indexReader8, 1, postingsEnum10, postingsEnum11);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests14 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        kuromojiAnalysisTests14.assertFieldsEquals("europarl.lines.txt.gz", indexReader16, fields17, fields18, false);
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        kuromojiAnalysisTests14.assertPositionsSkippingEquals("hi!", indexReader22, (int) (byte) 0, postingsEnum24, postingsEnum25);
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.Terms terms29 = null;
        org.apache.lucene.index.Terms terms30 = null;
        kuromojiAnalysisTests14.assertTermsEquals("random", indexReader28, terms29, terms30, true);
        kuromojiAnalysisTests14.setUp();
        org.apache.lucene.index.PostingsEnum postingsEnum35 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum36 = null;
        kuromojiAnalysisTests14.assertDocsEnumEquals("tests.nightly", postingsEnum35, postingsEnum36, true);
        kuromojiAnalysisTests14.tearDown();
        java.lang.Object obj40 = null;
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests14, obj40);
        kuromojiAnalysisTests14.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests14);
        kuromojiAnalysisTests14.setIndexWriterMaxDocs(10);
        kuromojiAnalysisTests14.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader49 = null;
        org.apache.lucene.index.Fields fields50 = null;
        org.apache.lucene.index.Fields fields51 = null;
        kuromojiAnalysisTests14.assertFieldsEquals("tests.failfast", indexReader49, fields50, fields51, true);
        org.apache.lucene.index.NumericDocValues numericDocValues56 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues57 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests14.assertDocValuesEquals("europarl.lines.txt.gz", 0, numericDocValues56, numericDocValues57);
    }

    @Test
    public void test3992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3992");
        int[][][][][] intArray0 = new int[][][][][] {};
        java.util.Set<int[][][][]> intArraySet1 = org.apache.lucene.util.LuceneTestCase.asSet(intArray0);
        java.util.Set<int[][][][]> intArraySet2 = org.apache.lucene.util.LuceneTestCase.asSet(intArray0);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling4 = org.apache.lucene.util.LuceneTestCase.TEST_THROTTLING;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray5 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] { throttling4 };
        java.util.List<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingList6 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (byte) 0, throttlingArray5);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) intArray0, (java.lang.Object[]) throttlingArray5);
    }

    @Test
    public void test3993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3993");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.weekly", indexReader3, terms4, terms5, false);
        org.junit.rules.TestRule testRule8 = kuromojiAnalysisTests1.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("", (java.lang.Object) testRule8);
    }

    @Test
    public void test3994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3994");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("europarl.lines.txt.gz", indexReader4, fields5, fields6, false);
        kuromojiAnalysisTests2.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain11 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        java.lang.String str13 = kuromojiAnalysisTests2.getTestName();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests2);
        kuromojiAnalysisTests2.tearDown();
        kuromojiAnalysisTests2.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain17 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        kuromojiAnalysisTests2.tearDown();
        kuromojiAnalysisTests2.overrideTestDefaultQueryCache();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        kuromojiAnalysisTests20.assertDocsEnumEquals("", postingsEnum22, postingsEnum23, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests26 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.Fields fields29 = null;
        org.apache.lucene.index.Fields fields30 = null;
        kuromojiAnalysisTests26.assertFieldsEquals("europarl.lines.txt.gz", indexReader28, fields29, fields30, false);
        kuromojiAnalysisTests26.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain35 = kuromojiAnalysisTests26.failureAndSuccessEvents;
        kuromojiAnalysisTests26.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader38 = null;
        org.apache.lucene.index.Fields fields39 = null;
        org.apache.lucene.index.Fields fields40 = null;
        kuromojiAnalysisTests26.assertFieldsEquals("enwiki.random.lines.txt", indexReader38, fields39, fields40, false);
        kuromojiAnalysisTests26.setIndexWriterMaxDocs((int) (byte) 0);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests45 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader47 = null;
        org.apache.lucene.index.Fields fields48 = null;
        org.apache.lucene.index.Fields fields49 = null;
        kuromojiAnalysisTests45.assertFieldsEquals("europarl.lines.txt.gz", indexReader47, fields48, fields49, false);
        kuromojiAnalysisTests45.ensureCleanedUp();
        kuromojiAnalysisTests45.resetCheckIndexStatus();
        kuromojiAnalysisTests45.ensureCleanedUp();
        kuromojiAnalysisTests45.ensureCheckIndexPassed();
        kuromojiAnalysisTests45.restoreIndexWriterMaxDocs();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests57 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader59 = null;
        org.apache.lucene.index.Fields fields60 = null;
        org.apache.lucene.index.Fields fields61 = null;
        kuromojiAnalysisTests57.assertFieldsEquals("europarl.lines.txt.gz", indexReader59, fields60, fields61, false);
        kuromojiAnalysisTests57.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain66 = kuromojiAnalysisTests57.failureAndSuccessEvents;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain66;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain66;
        kuromojiAnalysisTests45.failureAndSuccessEvents = ruleChain66;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain66;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain66;
        kuromojiAnalysisTests26.failureAndSuccessEvents = ruleChain66;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain66;
        kuromojiAnalysisTests20.failureAndSuccessEvents = ruleChain66;
        kuromojiAnalysisTests2.failureAndSuccessEvents = ruleChain66;
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests2);
        kuromojiAnalysisTests2.setIndexWriterMaxDocs(10);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("<unknown>", (java.lang.Object) kuromojiAnalysisTests2);
    }

    @Test
    public void test3995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3995");
        int[] intArray1 = null;
        int[] intArray5 = new int[] { '#' };
        int[] intArray7 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray5, intArray7);
        int[] intArray10 = new int[] { '#' };
        int[] intArray12 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray10, intArray12);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray5, intArray10);
        int[] intArray17 = new int[] { '#' };
        int[] intArray19 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray17, intArray19);
        int[] intArray22 = new int[] { '#' };
        int[] intArray24 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray22, intArray24);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray17, intArray22);
        int[] intArray28 = new int[] { '#' };
        int[] intArray30 = new int[] { '#' };
        org.junit.Assert.assertArrayEquals(intArray28, intArray30);
        org.junit.Assert.assertArrayEquals(intArray22, intArray28);
        org.junit.Assert.assertArrayEquals("tests.badapples", intArray10, intArray22);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", intArray1, intArray22);
    }

    @Test
    public void test3996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3996");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (double) 'a', (double) 3);
    }

    @Test
    public void test3997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3997");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (byte) 10);
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.weekly", indexReader5, terms6, terms7, true);
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) '#');
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests14 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        kuromojiAnalysisTests14.assertFieldsEquals("europarl.lines.txt.gz", indexReader16, fields17, fields18, false);
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        kuromojiAnalysisTests14.assertPositionsSkippingEquals("hi!", indexReader22, (int) (byte) 0, postingsEnum24, postingsEnum25);
        kuromojiAnalysisTests14.restoreIndexWriterMaxDocs();
        java.lang.String str28 = kuromojiAnalysisTests14.getTestName();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests29 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.Fields fields32 = null;
        org.apache.lucene.index.Fields fields33 = null;
        kuromojiAnalysisTests29.assertFieldsEquals("europarl.lines.txt.gz", indexReader31, fields32, fields33, false);
        kuromojiAnalysisTests29.ensureCleanedUp();
        kuromojiAnalysisTests29.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.Terms terms40 = null;
        org.apache.lucene.index.Terms terms41 = null;
        kuromojiAnalysisTests29.assertTermsEquals("", indexReader39, terms40, terms41, false);
        kuromojiAnalysisTests29.ensureCheckIndexPassed();
        org.junit.Assert.assertNotSame((java.lang.Object) str28, (java.lang.Object) kuromojiAnalysisTests29);
        kuromojiAnalysisTests29.tearDown();
        org.junit.rules.TestRule testRule47 = kuromojiAnalysisTests29.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests29);
    }

    @Test
    public void test3998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3998");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) '4', (double) (byte) 100);
    }

    @Test
    public void test3999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3999");
        java.lang.Object obj1 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("europarl.lines.txt.gz", indexReader4, fields5, fields6, false);
        kuromojiAnalysisTests2.ensureCleanedUp();
        kuromojiAnalysisTests2.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests2.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        org.apache.lucene.index.Fields fields15 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("europarl.lines.txt.gz", indexReader13, fields14, fields15, false);
        kuromojiAnalysisTests2.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests19 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.Fields fields22 = null;
        org.apache.lucene.index.Fields fields23 = null;
        kuromojiAnalysisTests19.assertFieldsEquals("europarl.lines.txt.gz", indexReader21, fields22, fields23, false);
        java.lang.String[] strArray33 = new java.lang.String[] { "tests.awaitsfix", "europarl.lines.txt.gz", "tests.slow", "tests.maxfailures", "", "hi!" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet34 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray33);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests35 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests35.setIndexWriterMaxDocs((int) (byte) 10);
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) strComparableSet34, (java.lang.Object) kuromojiAnalysisTests35);
        org.apache.lucene.index.PostingsEnum postingsEnum40 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        kuromojiAnalysisTests35.assertDocsEnumEquals("tests.badapples", postingsEnum40, postingsEnum41, true);
        org.junit.rules.TestRule testRule44 = kuromojiAnalysisTests35.ruleChain;
        org.apache.lucene.index.IndexReader indexReader46 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum48 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum49 = null;
        kuromojiAnalysisTests35.assertDocsSkippingEquals("tests.maxfailures", indexReader46, (int) (byte) 100, postingsEnum48, postingsEnum49, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests52 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader54 = null;
        org.apache.lucene.index.Fields fields55 = null;
        org.apache.lucene.index.Fields fields56 = null;
        kuromojiAnalysisTests52.assertFieldsEquals("europarl.lines.txt.gz", indexReader54, fields55, fields56, false);
        kuromojiAnalysisTests52.assertPathHasBeenCleared("tests.slow");
        org.junit.rules.RuleChain ruleChain61 = kuromojiAnalysisTests52.failureAndSuccessEvents;
        kuromojiAnalysisTests35.failureAndSuccessEvents = ruleChain61;
        kuromojiAnalysisTests19.failureAndSuccessEvents = ruleChain61;
        kuromojiAnalysisTests2.failureAndSuccessEvents = ruleChain61;
        kuromojiAnalysisTests2.assertPathHasBeenCleared("random");
        org.apache.lucene.index.PostingsEnum postingsEnum68 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum69 = null;
        kuromojiAnalysisTests2.assertDocsEnumEquals("tests.awaitsfix", postingsEnum68, postingsEnum69, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", obj1, (java.lang.Object) false);
    }

    @Test
    public void test4000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test4000");
        float[] floatArray10 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray17 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray10, floatArray17, (float) (byte) 100);
        float[] floatArray27 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray34 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray27, floatArray34, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray10, floatArray27, (float) (-1));
        float[] floatArray46 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray53 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray46, floatArray53, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals("", floatArray27, floatArray46, (float) (-1L));
        float[] floatArray65 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray72 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray65, floatArray72, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray46, floatArray65, (float) (short) -1);
        float[] floatArray84 = new float[] { (short) 10, (-1.0f), 100.0f, (byte) 0, (short) 100, 1L };
        float[] floatArray91 = new float[] { (byte) -1, (short) -1, 100, (byte) -1, '4', (byte) 100 };
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray84, floatArray91, (float) (byte) 100);
        // during test generation this statement threw an exception of type org.junit.internal.ArrayComparisonFailure in error
        org.junit.Assert.assertArrayEquals("", floatArray46, floatArray91, (float) 'a');
    }
}

