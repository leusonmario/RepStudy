import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ErrorTest7 {

    public static boolean debug = false;

    @Test
    public void test3501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3501");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("hi!", (double) 'a', (double) 4, 1.0d);
    }

    @Test
    public void test3502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3502");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (-1.0f), (float) (short) 100, (float) ' ');
    }

    @Test
    public void test3503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3503");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) (byte) 0, (float) 100L, (float) (short) 1);
    }

    @Test
    public void test3504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3504");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (short) 0, (double) 10L, (double) 3);
    }

    @Test
    public void test3505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3505");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.nightly", indexReader10, (int) (byte) -1, postingsEnum12, postingsEnum13, false);
        org.junit.rules.RuleChain ruleChain16 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("hi!", indexReader18, 4, postingsEnum20, postingsEnum21);
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.junit.rules.TestRule testRule24 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.assertPathHasBeenCleared("hi!");
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("<unknown>", indexReader28, (int) (short) 0, postingsEnum30, postingsEnum31);
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test3506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3506");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (long) 4, (long) 2);
    }

    @Test
    public void test3507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3507");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(100.0f, (float) '#', (float) (byte) 0);
    }

    @Test
    public void test3508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3508");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("enwiki.random.lines.txt", indexReader4, fields5, fields6, true);
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (byte) 1);
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        org.apache.lucene.index.Fields fields15 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("enwiki.random.lines.txt", indexReader13, fields14, fields15, false);
        org.junit.rules.TestRule testRule18 = kuromojiAnalysisTests1.ruleChain;
        java.lang.String str19 = kuromojiAnalysisTests1.getTestName();
        org.junit.rules.RuleChain ruleChain20 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.junit.rules.TestRule testRule21 = null;
        org.junit.rules.RuleChain ruleChain22 = ruleChain20.around(testRule21);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests24 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule25 = kuromojiAnalysisTests24.ruleChain;
        kuromojiAnalysisTests24.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests24.tearDown();
        kuromojiAnalysisTests24.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests24.setUp();
        kuromojiAnalysisTests24.ensureCleanedUp();
        kuromojiAnalysisTests24.setUp();
        org.junit.rules.TestRule testRule32 = kuromojiAnalysisTests24.ruleChain;
        org.junit.rules.RuleChain ruleChain33 = org.junit.rules.RuleChain.outerRule(testRule32);
        org.junit.Assert.assertNotEquals((java.lang.Object) "enwiki.random.lines.txt", (java.lang.Object) ruleChain33);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.awaitsfix", (java.lang.Object) ruleChain20, (java.lang.Object) ruleChain33);
    }

    @Test
    public void test3509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3509");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (byte) 10, (double) 0L);
    }

    @Test
    public void test3510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3510");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule3 = kuromojiAnalysisTests2.ruleChain;
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2);
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        org.apache.lucene.index.Terms terms9 = null;
        kuromojiAnalysisTests2.assertTermsEquals("random", indexReader7, terms8, terms9, false);
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        kuromojiAnalysisTests2.assertDocsEnumEquals("tests.failfast", postingsEnum13, postingsEnum14, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests17 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule18 = kuromojiAnalysisTests17.ruleChain;
        java.lang.String str19 = kuromojiAnalysisTests17.getTestName();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) kuromojiAnalysisTests17);
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.Fields fields23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        kuromojiAnalysisTests17.assertFieldsEquals("", indexReader22, fields23, fields24, true);
        kuromojiAnalysisTests17.ensureCheckIndexPassed();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.badapples", (java.lang.Object) kuromojiAnalysisTests17);
    }

    @Test
    public void test3511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3511");
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling3 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.SOMETIMES;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray4 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] { throttling3 };
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingSet5 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray4);
        java.util.List<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingList6 = org.elasticsearch.test.ESTestCase.randomSubsetOf(0, throttlingArray4);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling7 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.SOMETIMES;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray8 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] { throttling7 };
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingSet9 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray8);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray4, (java.lang.Object[]) throttlingArray8);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests11 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests11.tearDown();
        kuromojiAnalysisTests11.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests11.tearDown();
        kuromojiAnalysisTests11.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests11.assertPositionsSkippingEquals("tests.nightly", indexReader17, (int) ' ', postingsEnum19, postingsEnum20);
        org.junit.Assert.assertNotEquals((java.lang.Object) throttlingArray4, (java.lang.Object) kuromojiAnalysisTests11);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests23.tearDown();
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        org.apache.lucene.index.Terms terms28 = null;
        kuromojiAnalysisTests23.assertTermsEquals("tests.failfast", indexReader26, terms27, terms28, false);
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum35 = null;
        kuromojiAnalysisTests23.assertDocsSkippingEquals("tests.nightly", indexReader32, (int) (byte) -1, postingsEnum34, postingsEnum35, false);
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        kuromojiAnalysisTests23.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader39, (int) (short) -1, postingsEnum41, postingsEnum42);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests45 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule46 = kuromojiAnalysisTests45.ruleChain;
        kuromojiAnalysisTests45.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests45);
        org.junit.rules.RuleChain ruleChain49 = kuromojiAnalysisTests45.failureAndSuccessEvents;
        kuromojiAnalysisTests23.failureAndSuccessEvents = ruleChain49;
        org.apache.lucene.index.IndexReader indexReader52 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum54 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum55 = null;
        kuromojiAnalysisTests23.assertDocsSkippingEquals("tests.badapples", indexReader52, 0, postingsEnum54, postingsEnum55, true);
        kuromojiAnalysisTests23.ensureCheckIndexPassed();
        kuromojiAnalysisTests23.ensureCheckIndexPassed();
        kuromojiAnalysisTests23.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotEquals("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests11, (java.lang.Object) kuromojiAnalysisTests23);
        kuromojiAnalysisTests11.ensureCleanedUp();
        kuromojiAnalysisTests11.ensureCheckIndexPassed();
        kuromojiAnalysisTests11.ensureCheckIndexPassed();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests65 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests65.tearDown();
        org.apache.lucene.index.IndexReader indexReader68 = null;
        org.apache.lucene.index.Terms terms69 = null;
        org.apache.lucene.index.Terms terms70 = null;
        kuromojiAnalysisTests65.assertTermsEquals("tests.failfast", indexReader68, terms69, terms70, false);
        org.apache.lucene.index.IndexReader indexReader74 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum76 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum77 = null;
        kuromojiAnalysisTests65.assertDocsSkippingEquals("tests.nightly", indexReader74, (int) (byte) -1, postingsEnum76, postingsEnum77, false);
        org.junit.rules.RuleChain ruleChain80 = kuromojiAnalysisTests65.failureAndSuccessEvents;
        kuromojiAnalysisTests65.resetCheckIndexStatus();
        kuromojiAnalysisTests65.ensureAllSearchContextsReleased();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (java.lang.Object) kuromojiAnalysisTests11, (java.lang.Object) kuromojiAnalysisTests65);
    }

    @Test
    public void test3512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3512");
        short[] shortArray4 = new short[] { (byte) 10, (short) 1, (short) 100, (byte) 10 };
        short[][] shortArray5 = new short[][] { shortArray4 };
        java.util.Set<short[]> shortArraySet6 = org.apache.lucene.util.LuceneTestCase.asSet(shortArray5);
        java.util.concurrent.ExecutorService[] executorServiceArray7 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean8 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray7);
        boolean boolean9 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray7);
        boolean boolean10 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray7);
        boolean boolean11 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray7);
        java.io.Serializable[] serializableArray15 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet16 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray15);
        java.io.Serializable[] serializableArray18 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet19 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray18);
        java.io.Serializable[] serializableArray20 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet21 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray20);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray18, (java.lang.Object[]) serializableArray20);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray15, (java.lang.Object[]) serializableArray20);
        java.io.Serializable[] serializableArray25 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet26 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray25);
        java.io.Serializable[] serializableArray28 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet29 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray28);
        java.io.Serializable[] serializableArray30 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet31 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray30);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray28, (java.lang.Object[]) serializableArray30);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray25, (java.lang.Object[]) serializableArray30);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray15, (java.lang.Object[]) serializableArray25);
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet38 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray37);
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet41 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray40);
        java.io.Serializable[] serializableArray42 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet43 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray42);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray40, (java.lang.Object[]) serializableArray42);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray37, (java.lang.Object[]) serializableArray42);
        java.io.Serializable[] serializableArray47 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet48 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray47);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet51 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray50);
        java.io.Serializable[] serializableArray52 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet53 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray52);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray50, (java.lang.Object[]) serializableArray52);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray47, (java.lang.Object[]) serializableArray52);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray37, (java.lang.Object[]) serializableArray47);
        java.io.Serializable[] serializableArray58 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet59 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray58);
        java.io.Serializable[] serializableArray60 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet61 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray60);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray58, (java.lang.Object[]) serializableArray60);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray37, (java.lang.Object[]) serializableArray58);
        org.junit.Assert.assertEquals("tests.failfast", (java.lang.Object[]) serializableArray15, (java.lang.Object[]) serializableArray58);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray7, (java.lang.Object[]) serializableArray58);
        java.util.concurrent.ExecutorService[] executorServiceArray66 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean67 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray66);
        java.io.Serializable[] serializableArray69 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet70 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray69);
        java.io.Serializable[] serializableArray72 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet73 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray72);
        java.io.Serializable[] serializableArray75 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet76 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray75);
        java.io.Serializable[] serializableArray77 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet78 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray77);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray75, (java.lang.Object[]) serializableArray77);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray72, (java.lang.Object[]) serializableArray77);
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) serializableArray69, (java.lang.Object[]) serializableArray77);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray66, (java.lang.Object[]) serializableArray69);
        java.io.Serializable[] serializableArray84 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet85 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray84);
        java.io.Serializable[] serializableArray86 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet87 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray86);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray84, (java.lang.Object[]) serializableArray86);
        java.util.concurrent.ExecutorService[] executorServiceArray89 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean90 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray89);
        boolean boolean91 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray89);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray84, (java.lang.Object[]) executorServiceArray89);
        boolean boolean93 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray89);
        boolean boolean94 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray89);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray66, (java.lang.Object[]) executorServiceArray89);
        boolean boolean96 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray66);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray58, (java.lang.Object[]) executorServiceArray66);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) shortArray5, (java.lang.Object[]) executorServiceArray66);
    }

    @Test
    public void test3513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3513");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain4 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.junit.Assert.assertNotNull((java.lang.Object) ruleChain4);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.failfast", (java.lang.Object) ruleChain4);
    }

    @Test
    public void test3514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3514");
        double[] doubleArray1 = new double[] {};
        double[] doubleArray2 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray1, doubleArray2, (double) '4');
        double[] doubleArray5 = new double[] {};
        double[] doubleArray6 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray5, doubleArray6, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray2, doubleArray6, (double) (byte) -1);
        double[] doubleArray11 = new double[] {};
        double[] doubleArray12 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray11, doubleArray12, (double) '4');
        double[] doubleArray15 = new double[] {};
        double[] doubleArray16 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray15, doubleArray16, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray12, doubleArray16, (double) (byte) -1);
        org.junit.Assert.assertArrayEquals("tests.badapples", doubleArray2, doubleArray16, (-1.0d));
        double[] doubleArray24 = new double[] {};
        double[] doubleArray25 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray24, doubleArray25, (double) '4');
        double[] doubleArray28 = new double[] {};
        double[] doubleArray29 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray28, doubleArray29, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray24, doubleArray29, (double) (short) 10);
        double[] doubleArray34 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray24, doubleArray34, (double) 10L);
        double[] doubleArray37 = new double[] {};
        double[] doubleArray38 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray37, doubleArray38, (double) '4');
        double[] doubleArray41 = new double[] {};
        double[] doubleArray42 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray41, doubleArray42, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray38, doubleArray42, (double) (byte) -1);
        double[] doubleArray47 = new double[] {};
        double[] doubleArray48 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray47, doubleArray48, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray38, doubleArray47, (double) 2);
        org.junit.Assert.assertArrayEquals("tests.weekly", doubleArray24, doubleArray47, 10.0d);
        org.junit.Assert.assertArrayEquals(doubleArray2, doubleArray47, (double) (byte) -1);
        double[] doubleArray57 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(doubleArray47, doubleArray57, (double) 10L);
    }

    @Test
    public void test3515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3515");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.nightly", indexReader10, (int) (byte) -1, postingsEnum12, postingsEnum13, false);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader17, (int) (short) -1, postingsEnum19, postingsEnum20);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule24 = kuromojiAnalysisTests23.ruleChain;
        kuromojiAnalysisTests23.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests23);
        org.junit.rules.RuleChain ruleChain27 = kuromojiAnalysisTests23.failureAndSuccessEvents;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain27;
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.badapples", indexReader30, 0, postingsEnum32, postingsEnum33, true);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.junit.rules.TestRule testRule37 = kuromojiAnalysisTests1.ruleChain;
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.awaitsfix", indexReader39, (int) (byte) 0, postingsEnum41, postingsEnum42);
        org.junit.rules.TestRule testRule44 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.junit.rules.RuleChain ruleChain45 = org.junit.rules.RuleChain.outerRule(testRule44);
        org.junit.rules.RuleChain ruleChain46 = org.junit.rules.RuleChain.outerRule(testRule44);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain46;
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        org.apache.lucene.index.IndexReader indexReader50 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum52 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum53 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.slow", indexReader50, (int) (byte) -1, postingsEnum52, postingsEnum53);
        org.apache.lucene.index.IndexReader indexReader56 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum58 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum59 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.slow", indexReader56, 1, postingsEnum58, postingsEnum59);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests61 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests61.tearDown();
        org.apache.lucene.index.IndexReader indexReader64 = null;
        org.apache.lucene.index.Terms terms65 = null;
        org.apache.lucene.index.Terms terms66 = null;
        kuromojiAnalysisTests61.assertTermsEquals("tests.failfast", indexReader64, terms65, terms66, false);
        org.apache.lucene.index.IndexReader indexReader70 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum72 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum73 = null;
        kuromojiAnalysisTests61.assertDocsSkippingEquals("tests.nightly", indexReader70, (int) (byte) -1, postingsEnum72, postingsEnum73, false);
        org.junit.rules.RuleChain ruleChain76 = kuromojiAnalysisTests61.failureAndSuccessEvents;
        kuromojiAnalysisTests61.resetCheckIndexStatus();
        org.apache.lucene.index.PostingsEnum postingsEnum79 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum80 = null;
        kuromojiAnalysisTests61.assertDocsEnumEquals("tests.maxfailures", postingsEnum79, postingsEnum80, false);
        org.apache.lucene.index.IndexReader indexReader84 = null;
        org.apache.lucene.index.Fields fields85 = null;
        org.apache.lucene.index.Fields fields86 = null;
        kuromojiAnalysisTests61.assertFieldsEquals("tests.badapples", indexReader84, fields85, fields86, false);
        kuromojiAnalysisTests61.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule90 = kuromojiAnalysisTests61.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object) postingsEnum59, (java.lang.Object) kuromojiAnalysisTests61);
    }

    @Test
    public void test3516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3516");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1);
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        kuromojiAnalysisTests1.assertTermsEquals("random", indexReader6, terms7, terms8, false);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("enwiki.random.lines.txt", postingsEnum14, postingsEnum15, true);
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("hi!", indexReader19, (int) (byte) 100, postingsEnum21, postingsEnum22);
        java.lang.String str24 = kuromojiAnalysisTests1.getTestName();
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocsAndPositionsEnumEquals("tests.nightly", postingsEnum26, postingsEnum27);
    }

    @Test
    public void test3517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3517");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule3 = kuromojiAnalysisTests2.ruleChain;
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2);
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        org.apache.lucene.index.Terms terms9 = null;
        kuromojiAnalysisTests2.assertTermsEquals("random", indexReader7, terms8, terms9, false);
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        kuromojiAnalysisTests2.assertDocsEnumEquals("tests.failfast", postingsEnum13, postingsEnum14, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests17 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule18 = kuromojiAnalysisTests17.ruleChain;
        java.lang.String str19 = kuromojiAnalysisTests17.getTestName();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) kuromojiAnalysisTests17);
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.Fields fields23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        kuromojiAnalysisTests17.assertFieldsEquals("", indexReader22, fields23, fields24, true);
        kuromojiAnalysisTests17.ensureCheckIndexPassed();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.awaitsfix", (java.lang.Object) kuromojiAnalysisTests17);
    }

    @Test
    public void test3518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3518");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests2.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        kuromojiAnalysisTests2.assertTermsEquals("tests.failfast", indexReader5, terms6, terms7, false);
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests2.assertTermsEquals("", indexReader11, terms12, terms13, false);
        org.junit.rules.RuleChain ruleChain16 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests2);
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.Terms terms20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.maxfailures", indexReader19, terms20, terms21, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests25 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule26 = kuromojiAnalysisTests25.ruleChain;
        kuromojiAnalysisTests25.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests25);
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        kuromojiAnalysisTests25.assertPositionsSkippingEquals("tests.weekly", indexReader30, (int) (short) 1, postingsEnum32, postingsEnum33);
        java.lang.String str35 = kuromojiAnalysisTests25.getTestName();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests[] kuromojiAnalysisTestsArray36 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests[] { kuromojiAnalysisTests0, kuromojiAnalysisTests25 };
        java.util.Set<org.elasticsearch.index.analysis.KuromojiAnalysisTests> kuromojiAnalysisTestsSet37 = org.apache.lucene.util.LuceneTestCase.asSet(kuromojiAnalysisTestsArray36);
        java.util.Set<org.elasticsearch.index.analysis.KuromojiAnalysisTests> kuromojiAnalysisTestsSet38 = org.apache.lucene.util.LuceneTestCase.asSet(kuromojiAnalysisTestsArray36);
        java.util.Set<org.elasticsearch.index.analysis.KuromojiAnalysisTests> kuromojiAnalysisTestsSet39 = org.apache.lucene.util.LuceneTestCase.asSet(kuromojiAnalysisTestsArray36);
        java.util.concurrent.ExecutorService executorService41 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray42 = new java.util.concurrent.ExecutorService[] { executorService41 };
        boolean boolean43 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray42);
        java.util.concurrent.ExecutorService[] executorServiceArray45 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean46 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray45);
        java.io.Serializable[] serializableArray48 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet49 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray48);
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet52 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray51);
        java.io.Serializable[] serializableArray54 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet55 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray54);
        java.io.Serializable[] serializableArray56 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet57 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray56);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray54, (java.lang.Object[]) serializableArray56);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray51, (java.lang.Object[]) serializableArray56);
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) serializableArray48, (java.lang.Object[]) serializableArray56);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray45, (java.lang.Object[]) serializableArray48);
        org.junit.Assert.assertNotNull("europarl.lines.txt.gz", (java.lang.Object) executorServiceArray45);
        boolean boolean63 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray45);
        org.junit.Assert.assertNotEquals((java.lang.Object) executorServiceArray42, (java.lang.Object) executorServiceArray45);
        java.util.concurrent.ExecutorService[] executorServiceArray66 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean67 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray66);
        java.io.Serializable[] serializableArray69 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet70 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray69);
        java.io.Serializable[] serializableArray71 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet72 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray71);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray69, (java.lang.Object[]) serializableArray71);
        org.junit.Assert.assertArrayEquals("tests.badapples", (java.lang.Object[]) executorServiceArray66, (java.lang.Object[]) serializableArray71);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray45, (java.lang.Object[]) executorServiceArray66);
        boolean boolean76 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray66);
        java.io.Serializable[] serializableArray78 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet79 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray78);
        java.io.Serializable[] serializableArray81 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet82 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray81);
        java.io.Serializable[] serializableArray84 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet85 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray84);
        java.io.Serializable[] serializableArray86 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet87 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray86);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray84, (java.lang.Object[]) serializableArray86);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray81, (java.lang.Object[]) serializableArray86);
        org.junit.Assert.assertArrayEquals("tests.nightly", (java.lang.Object[]) serializableArray78, (java.lang.Object[]) serializableArray86);
        org.junit.Assert.assertArrayEquals("tests.slow", (java.lang.Object[]) executorServiceArray66, (java.lang.Object[]) serializableArray78);
        boolean boolean92 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray66);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) kuromojiAnalysisTestsArray36, (java.lang.Object[]) executorServiceArray66);
    }

    @Test
    public void test3519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3519");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (byte) 100, (double) (byte) -1, (double) 2);
    }

    @Test
    public void test3520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3520");
        long[] longArray3 = new long[] { (byte) 0 };
        long[] longArray5 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray3, longArray5);
        long[] longArray8 = new long[] { (byte) 0 };
        long[] longArray10 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray8, longArray10);
        org.junit.Assert.assertArrayEquals("", longArray3, longArray10);
        long[] longArray15 = new long[] { (byte) 0 };
        long[] longArray17 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray15, longArray17);
        long[] longArray20 = new long[] { (byte) 0 };
        long[] longArray22 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray20, longArray22);
        org.junit.Assert.assertArrayEquals(longArray15, longArray22);
        long[] longArray26 = new long[] { (byte) 0 };
        long[] longArray28 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray26, longArray28);
        long[] longArray31 = new long[] { (byte) 0 };
        long[] longArray33 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray31, longArray33);
        org.junit.Assert.assertArrayEquals(longArray26, longArray33);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", longArray15, longArray26);
        org.junit.Assert.assertArrayEquals(longArray3, longArray26);
        long[] longArray39 = new long[] { (byte) 0 };
        long[] longArray41 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray39, longArray41);
        long[] longArray44 = new long[] { (byte) 0 };
        long[] longArray46 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray44, longArray46);
        org.junit.Assert.assertArrayEquals(longArray39, longArray46);
        org.junit.Assert.assertArrayEquals("tests.failfast", longArray3, longArray39);
        long[] longArray53 = new long[] { (byte) 0 };
        long[] longArray55 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray53, longArray55);
        long[] longArray58 = new long[] { (byte) 0 };
        long[] longArray60 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray58, longArray60);
        org.junit.Assert.assertArrayEquals("", longArray53, longArray60);
        long[] longArray65 = new long[] { (byte) 0 };
        long[] longArray67 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray65, longArray67);
        long[] longArray70 = new long[] { (byte) 0 };
        long[] longArray72 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray70, longArray72);
        org.junit.Assert.assertArrayEquals("", longArray65, longArray72);
        org.junit.Assert.assertArrayEquals("tests.failfast", longArray53, longArray72);
        org.junit.Assert.assertArrayEquals(longArray39, longArray53);
        long[] longArray77 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(longArray39, longArray77);
    }

    @Test
    public void test3521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3521");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.nightly", indexReader10, (int) (byte) -1, postingsEnum12, postingsEnum13, false);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader17, (int) (short) -1, postingsEnum19, postingsEnum20);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule24 = kuromojiAnalysisTests23.ruleChain;
        kuromojiAnalysisTests23.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests23);
        org.junit.rules.RuleChain ruleChain27 = kuromojiAnalysisTests23.failureAndSuccessEvents;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain27;
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.badapples", indexReader30, 0, postingsEnum32, postingsEnum33, true);
        org.apache.lucene.index.IndexReader indexReader37 = null;
        org.apache.lucene.index.Terms terms38 = null;
        org.apache.lucene.index.Terms terms39 = null;
        kuromojiAnalysisTests1.assertTermsEquals("random", indexReader37, terms38, terms39, false);
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain43 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader45 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum47 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum48 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.weekly", indexReader45, (int) (short) 100, postingsEnum47, postingsEnum48);
        org.junit.rules.TestRule testRule50 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.nightly");
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1);
        java.lang.String str54 = kuromojiAnalysisTests1.getTestName();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) str54);
    }

    @Test
    public void test3522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3522");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("hi!", 100.0d, (double) 0L, 0.0d);
    }

    @Test
    public void test3523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3523");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!", "europarl.lines.txt.gz" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet4 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray3);
        java.lang.Object[] objArray5 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.monster", (java.lang.Object[]) strArray3, objArray5);
    }

    @Test
    public void test3524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3524");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (short) 10, (long) (byte) 1);
    }

    @Test
    public void test3525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3525");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.nightly", indexReader10, (int) (byte) -1, postingsEnum12, postingsEnum13, false);
        org.junit.rules.RuleChain ruleChain16 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.junit.rules.TestRule testRule17 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule17;
        org.junit.rules.RuleChain ruleChain19 = ruleChain16.around(testRule17);
        org.apache.lucene.util.LuceneTestCase.classRules = testRule17;
        org.junit.rules.RuleChain ruleChain21 = org.junit.rules.RuleChain.emptyRuleChain();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule24 = kuromojiAnalysisTests23.ruleChain;
        kuromojiAnalysisTests23.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests23);
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.Terms terms29 = null;
        org.apache.lucene.index.Terms terms30 = null;
        kuromojiAnalysisTests23.assertTermsEquals("random", indexReader28, terms29, terms30, false);
        org.junit.rules.RuleChain ruleChain33 = kuromojiAnalysisTests23.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement34 = null;
        org.junit.runner.Description description35 = null;
        org.junit.runners.model.Statement statement36 = ruleChain33.apply(statement34, description35);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests38 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule39 = kuromojiAnalysisTests38.ruleChain;
        kuromojiAnalysisTests38.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests38);
        org.apache.lucene.index.IndexReader indexReader43 = null;
        org.apache.lucene.index.Terms terms44 = null;
        org.apache.lucene.index.Terms terms45 = null;
        kuromojiAnalysisTests38.assertTermsEquals("random", indexReader43, terms44, terms45, false);
        org.junit.rules.RuleChain ruleChain48 = kuromojiAnalysisTests38.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement49 = null;
        org.junit.runner.Description description50 = null;
        org.junit.runners.model.Statement statement51 = ruleChain48.apply(statement49, description50);
        org.junit.runner.Description description52 = null;
        org.junit.runners.model.Statement statement53 = ruleChain33.apply(statement51, description52);
        org.junit.runner.Description description54 = null;
        org.junit.runners.model.Statement statement55 = ruleChain21.apply(statement51, description54);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests56 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests56.tearDown();
        org.apache.lucene.index.IndexReader indexReader59 = null;
        org.apache.lucene.index.Terms terms60 = null;
        org.apache.lucene.index.Terms terms61 = null;
        kuromojiAnalysisTests56.assertTermsEquals("tests.failfast", indexReader59, terms60, terms61, false);
        org.apache.lucene.index.IndexReader indexReader65 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum67 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum68 = null;
        kuromojiAnalysisTests56.assertDocsSkippingEquals("tests.nightly", indexReader65, (int) (byte) -1, postingsEnum67, postingsEnum68, false);
        org.apache.lucene.index.IndexReader indexReader72 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum74 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum75 = null;
        kuromojiAnalysisTests56.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader72, (int) (short) -1, postingsEnum74, postingsEnum75);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests78 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule79 = kuromojiAnalysisTests78.ruleChain;
        kuromojiAnalysisTests78.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests78);
        org.junit.rules.RuleChain ruleChain82 = kuromojiAnalysisTests78.failureAndSuccessEvents;
        kuromojiAnalysisTests56.failureAndSuccessEvents = ruleChain82;
        org.apache.lucene.index.IndexReader indexReader85 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum87 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum88 = null;
        kuromojiAnalysisTests56.assertDocsSkippingEquals("tests.badapples", indexReader85, 0, postingsEnum87, postingsEnum88, true);
        kuromojiAnalysisTests56.resetCheckIndexStatus();
        org.junit.Assert.assertNotEquals((java.lang.Object) ruleChain21, (java.lang.Object) kuromojiAnalysisTests56);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests93 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule94 = kuromojiAnalysisTests93.ruleChain;
        org.junit.rules.RuleChain ruleChain95 = org.junit.rules.RuleChain.outerRule(testRule94);
        org.junit.rules.RuleChain ruleChain96 = ruleChain21.around(testRule94);
        org.junit.rules.RuleChain ruleChain97 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain21);
        org.junit.rules.RuleChain ruleChain98 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain97);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.badapples", (java.lang.Object) testRule17, (java.lang.Object) ruleChain97);
    }

    @Test
    public void test3526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3526");
        int[] intArray7 = new int[] { 2, '4', (short) 0, 0, 2, 4 };
        int[] intArray11 = new int[] {};
        int[] intArray12 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray11, intArray12);
        int[] intArray15 = new int[] {};
        int[] intArray16 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray15, intArray16);
        org.junit.Assert.assertArrayEquals(intArray12, intArray15);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray12, (java.lang.Object) 100.0d);
        int[] intArray24 = new int[] {};
        int[] intArray25 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray24, intArray25);
        int[] intArray28 = new int[] {};
        int[] intArray29 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray28, intArray29);
        org.junit.Assert.assertArrayEquals(intArray25, intArray28);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray25, (java.lang.Object) 100.0d);
        int[] intArray37 = new int[] {};
        int[] intArray38 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray37, intArray38);
        int[] intArray41 = new int[] {};
        int[] intArray42 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray41, intArray42);
        org.junit.Assert.assertArrayEquals(intArray38, intArray41);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray38, (java.lang.Object) 100.0d);
        int[] intArray48 = new int[] {};
        int[] intArray49 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray48, intArray49);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray38, intArray48);
        org.junit.Assert.assertArrayEquals("random", intArray25, intArray38);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray12, intArray25);
        int[] intArray55 = new int[] {};
        int[] intArray56 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray55, intArray56);
        org.junit.Assert.assertArrayEquals(intArray25, intArray56);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray7, intArray56);
    }

    @Test
    public void test3527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3527");
        org.junit.rules.TestRule testRule1 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule1;
        org.junit.rules.RuleChain ruleChain3 = org.junit.rules.RuleChain.outerRule(testRule1);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain3;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests5 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests5.tearDown();
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.Fields fields9 = null;
        org.apache.lucene.index.Fields fields10 = null;
        kuromojiAnalysisTests5.assertFieldsEquals("enwiki.random.lines.txt", indexReader8, fields9, fields10, true);
        kuromojiAnalysisTests5.setUp();
        kuromojiAnalysisTests5.setIndexWriterMaxDocs((int) (byte) 1);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        org.apache.lucene.index.Fields fields19 = null;
        kuromojiAnalysisTests5.assertFieldsEquals("enwiki.random.lines.txt", indexReader17, fields18, fields19, false);
        org.junit.rules.TestRule testRule22 = kuromojiAnalysisTests5.ruleChain;
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        kuromojiAnalysisTests5.assertDocsSkippingEquals("tests.weekly", indexReader24, 1, postingsEnum26, postingsEnum27, false);
        kuromojiAnalysisTests5.ensureAllSearchContextsReleased();
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.Terms terms33 = null;
        org.apache.lucene.index.Terms terms34 = null;
        kuromojiAnalysisTests5.assertTermsEquals("tests.weekly", indexReader32, terms33, terms34, false);
        org.apache.lucene.index.IndexReader indexReader38 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum40 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        kuromojiAnalysisTests5.assertPositionsSkippingEquals("random", indexReader38, 3, postingsEnum40, postingsEnum41);
        org.junit.rules.TestRule testRule43 = kuromojiAnalysisTests5.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object) ruleChain3, (java.lang.Object) testRule43);
    }

    @Test
    public void test3528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3528");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule3 = kuromojiAnalysisTests2.ruleChain;
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests2.tearDown();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) (-1));
        kuromojiAnalysisTests2.overrideTestDefaultQueryCache();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests10 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests10.tearDown();
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.Terms terms14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        kuromojiAnalysisTests10.assertTermsEquals("tests.failfast", indexReader13, terms14, terms15, false);
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.Terms terms20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        kuromojiAnalysisTests10.assertTermsEquals("", indexReader19, terms20, terms21, false);
        kuromojiAnalysisTests10.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests10.tearDown();
        java.lang.Object obj26 = null;
        org.junit.Assert.assertNotEquals("tests.slow", (java.lang.Object) kuromojiAnalysisTests10, obj26);
        org.junit.rules.TestRule testRule28 = kuromojiAnalysisTests10.ruleChain;
        org.junit.Assert.assertNotSame("tests.weekly", (java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) testRule28);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("", (java.lang.Object) "tests.weekly");
    }

    @Test
    public void test3529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3529");
        java.util.concurrent.ExecutorService executorService1 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray2 = new java.util.concurrent.ExecutorService[] { executorService1 };
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        java.util.concurrent.ExecutorService[] executorServiceArray5 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean6 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray5);
        java.io.Serializable[] serializableArray8 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet9 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray8);
        java.io.Serializable[] serializableArray11 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet12 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray11);
        java.io.Serializable[] serializableArray14 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet15 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray14);
        java.io.Serializable[] serializableArray16 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet17 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray16);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray14, (java.lang.Object[]) serializableArray16);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray11, (java.lang.Object[]) serializableArray16);
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) serializableArray8, (java.lang.Object[]) serializableArray16);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray5, (java.lang.Object[]) serializableArray8);
        org.junit.Assert.assertNotNull("europarl.lines.txt.gz", (java.lang.Object) executorServiceArray5);
        boolean boolean23 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray5);
        org.junit.Assert.assertNotEquals((java.lang.Object) executorServiceArray2, (java.lang.Object) executorServiceArray5);
        java.util.concurrent.ExecutorService[] executorServiceArray26 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean27 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray26);
        java.io.Serializable[] serializableArray29 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet30 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray29);
        java.io.Serializable[] serializableArray31 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet32 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray31);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray29, (java.lang.Object[]) serializableArray31);
        org.junit.Assert.assertArrayEquals("tests.badapples", (java.lang.Object[]) executorServiceArray26, (java.lang.Object[]) serializableArray31);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray5, (java.lang.Object[]) executorServiceArray26);
        boolean boolean36 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray26);
        java.io.Serializable[] serializableArray38 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet39 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray38);
        java.io.Serializable[] serializableArray41 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet42 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray41);
        java.io.Serializable[] serializableArray44 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet45 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray44);
        java.io.Serializable[] serializableArray46 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet47 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray46);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray44, (java.lang.Object[]) serializableArray46);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray41, (java.lang.Object[]) serializableArray46);
        org.junit.Assert.assertArrayEquals("tests.nightly", (java.lang.Object[]) serializableArray38, (java.lang.Object[]) serializableArray46);
        org.junit.Assert.assertArrayEquals("tests.slow", (java.lang.Object[]) executorServiceArray26, (java.lang.Object[]) serializableArray38);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests52 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule53 = kuromojiAnalysisTests52.ruleChain;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule53;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule53;
        org.junit.rules.RuleChain ruleChain56 = org.junit.rules.RuleChain.outerRule(testRule53);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests57 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule58 = kuromojiAnalysisTests57.ruleChain;
        org.junit.rules.RuleChain ruleChain59 = org.junit.rules.RuleChain.outerRule(testRule58);
        org.junit.rules.RuleChain ruleChain60 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain59);
        org.junit.rules.RuleChain ruleChain61 = ruleChain56.around((org.junit.rules.TestRule) ruleChain60);
        int[] intArray65 = new int[] { (-1), 1, 2 };
        int[] intArray69 = new int[] { (-1), 1, 2 };
        int[] intArray73 = new int[] { (-1), 1, 2 };
        int[] intArray77 = new int[] { (-1), 1, 2 };
        int[] intArray81 = new int[] { (-1), 1, 2 };
        int[][] intArray82 = new int[][] { intArray65, intArray69, intArray73, intArray77, intArray81 };
        java.util.Set<int[]> intArraySet83 = org.apache.lucene.util.LuceneTestCase.asSet(intArray82);
        org.junit.Assert.assertNotEquals((java.lang.Object) ruleChain60, (java.lang.Object) intArray82);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray26, (java.lang.Object[]) intArray82);
    }

    @Test
    public void test3530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3530");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule3 = kuromojiAnalysisTests2.ruleChain;
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2);
        org.junit.rules.RuleChain ruleChain6 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests7 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests7.tearDown();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests7.assertTermsEquals("tests.failfast", indexReader10, terms11, terms12, false);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        kuromojiAnalysisTests7.assertTermsEquals("", indexReader16, terms17, terms18, false);
        org.junit.rules.RuleChain ruleChain21 = kuromojiAnalysisTests7.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement22 = null;
        org.junit.runner.Description description23 = null;
        org.junit.runners.model.Statement statement24 = ruleChain21.apply(statement22, description23);
        org.junit.runner.Description description25 = null;
        org.junit.runners.model.Statement statement26 = ruleChain6.apply(statement24, description25);
        org.junit.rules.RuleChain ruleChain27 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain6);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain27;
        org.junit.Assert.assertNotNull((java.lang.Object) ruleChain27);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("<unknown>", (java.lang.Object) ruleChain27);
    }

    @Test
    public void test3531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3531");
        short[] shortArray3 = new short[] { (byte) 100, (byte) 10, (short) 10 };
        short[] shortArray7 = new short[] {};
        short[] shortArray8 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray7, shortArray8);
        short[] shortArray12 = new short[] {};
        short[] shortArray13 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray12, shortArray13);
        short[] shortArray17 = new short[] {};
        short[] shortArray18 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray17, shortArray18);
        short[] shortArray21 = new short[] {};
        short[] shortArray22 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray21, shortArray22);
        org.junit.Assert.assertArrayEquals(shortArray17, shortArray21);
        short[] shortArray26 = new short[] {};
        short[] shortArray27 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray26, shortArray27);
        short[] shortArray30 = new short[] {};
        short[] shortArray31 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray30, shortArray31);
        org.junit.Assert.assertArrayEquals(shortArray26, shortArray30);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray17, shortArray30);
        org.junit.Assert.assertArrayEquals("tests.nightly", shortArray12, shortArray17);
        short[] shortArray37 = new short[] {};
        short[] shortArray38 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray37, shortArray38);
        short[] shortArray41 = new short[] {};
        short[] shortArray42 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray41, shortArray42);
        org.junit.Assert.assertArrayEquals(shortArray37, shortArray41);
        org.junit.Assert.assertArrayEquals(shortArray17, shortArray37);
        org.junit.Assert.assertArrayEquals("hi!", shortArray7, shortArray17);
        short[] shortArray50 = new short[] {};
        short[] shortArray51 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray50, shortArray51);
        short[] shortArray54 = new short[] {};
        short[] shortArray55 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray54, shortArray55);
        org.junit.Assert.assertArrayEquals(shortArray50, shortArray54);
        short[] shortArray59 = new short[] {};
        short[] shortArray60 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray59, shortArray60);
        short[] shortArray63 = new short[] {};
        short[] shortArray64 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray63, shortArray64);
        org.junit.Assert.assertArrayEquals(shortArray59, shortArray63);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray50, shortArray63);
        short[] shortArray70 = new short[] {};
        short[] shortArray71 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray70, shortArray71);
        short[] shortArray74 = new short[] {};
        short[] shortArray75 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray74, shortArray75);
        org.junit.Assert.assertArrayEquals(shortArray70, shortArray74);
        short[] shortArray79 = new short[] {};
        short[] shortArray80 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray79, shortArray80);
        short[] shortArray83 = new short[] {};
        short[] shortArray84 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray83, shortArray84);
        org.junit.Assert.assertArrayEquals(shortArray79, shortArray83);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray70, shortArray83);
        org.junit.Assert.assertArrayEquals("", shortArray63, shortArray83);
        org.junit.Assert.assertArrayEquals("random", shortArray7, shortArray83);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(shortArray3, shortArray7);
    }

    @Test
    public void test3532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3532");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.weekly", (long) 10, (long) (short) 10);
    }

    @Test
    public void test3533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3533");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (double) (-1), (double) 100);
    }

    @Test
    public void test3534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3534");
        short[] shortArray0 = null;
        short[] shortArray5 = new short[] {};
        short[] shortArray6 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray5, shortArray6);
        short[] shortArray9 = new short[] {};
        short[] shortArray10 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray9, shortArray10);
        org.junit.Assert.assertArrayEquals(shortArray5, shortArray9);
        short[] shortArray14 = new short[] {};
        short[] shortArray15 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray14, shortArray15);
        short[] shortArray18 = new short[] {};
        short[] shortArray19 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray18, shortArray19);
        org.junit.Assert.assertArrayEquals(shortArray14, shortArray18);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray5, shortArray18);
        short[] shortArray25 = new short[] {};
        short[] shortArray26 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray25, shortArray26);
        short[] shortArray29 = new short[] {};
        short[] shortArray30 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray29, shortArray30);
        org.junit.Assert.assertArrayEquals(shortArray25, shortArray29);
        short[] shortArray34 = new short[] {};
        short[] shortArray35 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray34, shortArray35);
        short[] shortArray38 = new short[] {};
        short[] shortArray39 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray38, shortArray39);
        org.junit.Assert.assertArrayEquals(shortArray34, shortArray38);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray25, shortArray38);
        org.junit.Assert.assertArrayEquals("", shortArray18, shortArray38);
        short[] shortArray46 = new short[] {};
        short[] shortArray47 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray46, shortArray47);
        short[] shortArray50 = new short[] {};
        short[] shortArray51 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray50, shortArray51);
        org.junit.Assert.assertArrayEquals(shortArray46, shortArray50);
        short[] shortArray55 = new short[] {};
        short[] shortArray56 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray55, shortArray56);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray46, shortArray56);
        org.junit.Assert.assertArrayEquals("random", shortArray38, shortArray56);
        short[] shortArray62 = new short[] {};
        short[] shortArray63 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray62, shortArray63);
        short[] shortArray67 = new short[] {};
        short[] shortArray68 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray67, shortArray68);
        short[] shortArray71 = new short[] {};
        short[] shortArray72 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray71, shortArray72);
        org.junit.Assert.assertArrayEquals(shortArray67, shortArray71);
        short[] shortArray76 = new short[] {};
        short[] shortArray77 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray76, shortArray77);
        short[] shortArray80 = new short[] {};
        short[] shortArray81 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray80, shortArray81);
        org.junit.Assert.assertArrayEquals(shortArray76, shortArray80);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray67, shortArray80);
        org.junit.Assert.assertArrayEquals("tests.nightly", shortArray62, shortArray67);
        org.junit.Assert.assertArrayEquals(shortArray38, shortArray62);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(shortArray0, shortArray38);
    }

    @Test
    public void test3535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3535");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 0.0f, (double) (byte) 100);
    }

    @Test
    public void test3536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3536");
        float[] floatArray0 = null;
        float[] floatArray8 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray15 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray8, floatArray15, (float) (byte) 100);
        float[] floatArray25 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray32 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray25, floatArray32, (float) (byte) 100);
        float[] floatArray42 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray49 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray42, floatArray49, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray32, floatArray49, 1.0f);
        float[] floatArray61 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray68 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray61, floatArray68, (float) (byte) 100);
        float[] floatArray78 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray85 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray78, floatArray85, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray68, floatArray85, 1.0f);
        org.junit.Assert.assertArrayEquals(floatArray49, floatArray85, (float) 0);
        org.junit.Assert.assertArrayEquals(floatArray8, floatArray85, (float) (short) 100);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(floatArray0, floatArray8, (float) 100L);
    }

    @Test
    public void test3537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3537");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (byte) 0, (long) (byte) 100);
    }

    @Test
    public void test3538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3538");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1);
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        kuromojiAnalysisTests1.assertTermsEquals("random", indexReader6, terms7, terms8, false);
        kuromojiAnalysisTests1.setUp();
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        org.apache.lucene.index.Fields fields15 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader13, fields14, fields15, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests19 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests19.tearDown();
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.Fields fields23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        kuromojiAnalysisTests19.assertFieldsEquals("enwiki.random.lines.txt", indexReader22, fields23, fields24, true);
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        kuromojiAnalysisTests19.assertDocsEnumEquals("tests.monster", postingsEnum28, postingsEnum29, true);
        org.junit.rules.RuleChain ruleChain32 = kuromojiAnalysisTests19.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule35 = kuromojiAnalysisTests34.ruleChain;
        kuromojiAnalysisTests34.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests34);
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.Terms terms40 = null;
        org.apache.lucene.index.Terms terms41 = null;
        kuromojiAnalysisTests34.assertTermsEquals("random", indexReader39, terms40, terms41, false);
        org.junit.rules.RuleChain ruleChain44 = kuromojiAnalysisTests34.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement45 = null;
        org.junit.runner.Description description46 = null;
        org.junit.runners.model.Statement statement47 = ruleChain44.apply(statement45, description46);
        kuromojiAnalysisTests19.failureAndSuccessEvents = ruleChain44;
        org.junit.Assert.assertNotNull("tests.awaitsfix", (java.lang.Object) ruleChain44);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain44;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain44;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) ruleChain44);
    }

    @Test
    public void test3539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3539");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.nightly", indexReader10, (int) (byte) -1, postingsEnum12, postingsEnum13, false);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader17, (int) (short) -1, postingsEnum19, postingsEnum20);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule24 = kuromojiAnalysisTests23.ruleChain;
        kuromojiAnalysisTests23.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests23);
        org.junit.rules.RuleChain ruleChain27 = kuromojiAnalysisTests23.failureAndSuccessEvents;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain27;
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.badapples", indexReader30, 0, postingsEnum32, postingsEnum33, true);
        org.apache.lucene.index.IndexReader indexReader37 = null;
        org.apache.lucene.index.Terms terms38 = null;
        org.apache.lucene.index.Terms terms39 = null;
        kuromojiAnalysisTests1.assertTermsEquals("random", indexReader37, terms38, terms39, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests42 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests42.tearDown();
        org.apache.lucene.index.IndexReader indexReader45 = null;
        org.apache.lucene.index.Terms terms46 = null;
        org.apache.lucene.index.Terms terms47 = null;
        kuromojiAnalysisTests42.assertTermsEquals("tests.failfast", indexReader45, terms46, terms47, false);
        org.apache.lucene.index.IndexReader indexReader51 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum53 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum54 = null;
        kuromojiAnalysisTests42.assertDocsSkippingEquals("tests.nightly", indexReader51, (int) (byte) -1, postingsEnum53, postingsEnum54, false);
        org.junit.rules.RuleChain ruleChain57 = kuromojiAnalysisTests42.failureAndSuccessEvents;
        kuromojiAnalysisTests42.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests42.overrideTestDefaultQueryCache();
        org.junit.Assert.assertNotSame("hi!", (java.lang.Object) terms38, (java.lang.Object) kuromojiAnalysisTests42);
        kuromojiAnalysisTests42.tearDown();
        kuromojiAnalysisTests42.ensureAllSearchContextsReleased();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests63 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule64 = kuromojiAnalysisTests63.ruleChain;
        kuromojiAnalysisTests63.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain66 = kuromojiAnalysisTests63.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader68 = null;
        org.apache.lucene.index.Fields fields69 = null;
        org.apache.lucene.index.Fields fields70 = null;
        kuromojiAnalysisTests63.assertFieldsEquals("", indexReader68, fields69, fields70, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests73 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests73.tearDown();
        org.apache.lucene.index.IndexReader indexReader76 = null;
        org.apache.lucene.index.Terms terms77 = null;
        org.apache.lucene.index.Terms terms78 = null;
        kuromojiAnalysisTests73.assertTermsEquals("tests.failfast", indexReader76, terms77, terms78, false);
        org.apache.lucene.index.IndexReader indexReader82 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum84 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum85 = null;
        kuromojiAnalysisTests73.assertDocsSkippingEquals("tests.nightly", indexReader82, (int) (byte) -1, postingsEnum84, postingsEnum85, false);
        org.junit.rules.RuleChain ruleChain88 = kuromojiAnalysisTests73.failureAndSuccessEvents;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures89 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures90 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures89);
        org.junit.rules.RuleChain ruleChain91 = ruleChain88.around((org.junit.rules.TestRule) testRuleIgnoreAfterMaxFailures90);
        kuromojiAnalysisTests63.failureAndSuccessEvents = ruleChain88;
        kuromojiAnalysisTests42.failureAndSuccessEvents = ruleChain88;
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests42);
        org.apache.lucene.index.NumericDocValues numericDocValues97 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues98 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests42.assertDocValuesEquals("random", (int) (byte) 0, numericDocValues97, numericDocValues98);
    }

    @Test
    public void test3540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3540");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("<unknown>", (double) 3, (double) 10L, (double) ' ');
    }

    @Test
    public void test3541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3541");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals(1.0d, 1.0d, (double) 1);
    }

    @Test
    public void test3542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3542");
        short[] shortArray3 = new short[] {};
        short[] shortArray4 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray3, shortArray4);
        short[] shortArray7 = new short[] {};
        short[] shortArray8 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray7, shortArray8);
        org.junit.Assert.assertArrayEquals(shortArray3, shortArray7);
        short[] shortArray13 = new short[] {};
        short[] shortArray14 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray13, shortArray14);
        short[] shortArray17 = new short[] {};
        short[] shortArray18 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray17, shortArray18);
        org.junit.Assert.assertArrayEquals(shortArray13, shortArray17);
        short[] shortArray22 = new short[] {};
        short[] shortArray23 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray22, shortArray23);
        short[] shortArray26 = new short[] {};
        short[] shortArray27 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray26, shortArray27);
        org.junit.Assert.assertArrayEquals(shortArray22, shortArray26);
        org.junit.Assert.assertArrayEquals("<unknown>", shortArray13, shortArray26);
        org.junit.Assert.assertArrayEquals("", shortArray7, shortArray13);
        short[] shortArray34 = new short[] {};
        short[] shortArray35 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray34, shortArray35);
        short[] shortArray38 = new short[] {};
        short[] shortArray39 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray38, shortArray39);
        org.junit.Assert.assertArrayEquals("", shortArray35, shortArray38);
        org.junit.Assert.assertArrayEquals(shortArray13, shortArray38);
        short[] shortArray46 = new short[] {};
        short[] shortArray47 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray46, shortArray47);
        short[] shortArray51 = new short[] {};
        short[] shortArray52 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray51, shortArray52);
        short[] shortArray55 = new short[] {};
        short[] shortArray56 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray55, shortArray56);
        org.junit.Assert.assertArrayEquals(shortArray51, shortArray55);
        short[] shortArray60 = new short[] {};
        short[] shortArray61 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray60, shortArray61);
        short[] shortArray64 = new short[] {};
        short[] shortArray65 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray64, shortArray65);
        org.junit.Assert.assertArrayEquals(shortArray60, shortArray64);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray51, shortArray64);
        org.junit.Assert.assertArrayEquals("tests.nightly", shortArray46, shortArray51);
        short[] shortArray72 = new short[] {};
        short[] shortArray73 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray72, shortArray73);
        short[] shortArray76 = new short[] {};
        short[] shortArray77 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray76, shortArray77);
        org.junit.Assert.assertArrayEquals(shortArray72, shortArray76);
        short[] shortArray81 = new short[] {};
        short[] shortArray82 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray81, shortArray82);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray72, shortArray82);
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray51, shortArray82);
        org.junit.Assert.assertArrayEquals("", shortArray38, shortArray51);
        short[] shortArray87 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(shortArray38, shortArray87);
    }

    @Test
    public void test3543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3543");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (-1), (double) '4', 0.0d);
    }

    @Test
    public void test3544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3544");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (byte) 1, (double) '4');
    }

    @Test
    public void test3545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3545");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader9, (int) (byte) -1, postingsEnum11, postingsEnum12, false);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader16, (int) (short) -1, postingsEnum18, postingsEnum19);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests22 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule23 = kuromojiAnalysisTests22.ruleChain;
        kuromojiAnalysisTests22.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests22);
        org.junit.rules.RuleChain ruleChain26 = kuromojiAnalysisTests22.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain26;
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.badapples", indexReader29, 0, postingsEnum31, postingsEnum32, true);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.junit.rules.TestRule testRule36 = kuromojiAnalysisTests0.ruleChain;
        org.apache.lucene.index.IndexReader indexReader38 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum40 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.awaitsfix", indexReader38, (int) (byte) 0, postingsEnum40, postingsEnum41);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.junit.rules.TestRule testRule44 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests46 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule47 = kuromojiAnalysisTests46.ruleChain;
        kuromojiAnalysisTests46.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests46.tearDown();
        kuromojiAnalysisTests46.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests46.setUp();
        kuromojiAnalysisTests46.ensureCleanedUp();
        kuromojiAnalysisTests46.assertPathHasBeenCleared("random");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests46);
    }

    @Test
    public void test3546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3546");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.maxfailures", (double) (short) 0, (double) (-1.0f), (double) '#');
    }

    @Test
    public void test3547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3547");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(0.0d, (double) 100L);
    }

    @Test
    public void test3548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3548");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader3, fields4, fields5, true);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 1);
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.Fields fields13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader12, fields13, fields14, false);
        org.junit.rules.TestRule testRule17 = kuromojiAnalysisTests0.ruleChain;
        java.lang.String str18 = kuromojiAnalysisTests0.getTestName();
        org.junit.rules.RuleChain ruleChain19 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests20.tearDown();
        kuromojiAnalysisTests20.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests20.ensureCleanedUp();
        org.junit.rules.TestRule testRule24 = kuromojiAnalysisTests20.ruleChain;
        kuromojiAnalysisTests20.assertPathHasBeenCleared("europarl.lines.txt.gz");
        org.junit.Assert.assertNotSame((java.lang.Object) ruleChain19, (java.lang.Object) kuromojiAnalysisTests20);
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests20);
        org.apache.lucene.index.NumericDocValues numericDocValues31 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues32 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests20.assertDocValuesEquals("europarl.lines.txt.gz", (int) 'a', numericDocValues31, numericDocValues32);
    }

    @Test
    public void test3549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3549");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader3, fields4, fields5, true);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 1);
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.Fields fields13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader12, fields13, fields14, false);
        org.junit.rules.TestRule testRule17 = kuromojiAnalysisTests0.ruleChain;
        java.lang.String str18 = kuromojiAnalysisTests0.getTestName();
        org.junit.rules.RuleChain ruleChain19 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests20.tearDown();
        kuromojiAnalysisTests20.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests20.ensureCleanedUp();
        org.junit.rules.TestRule testRule24 = kuromojiAnalysisTests20.ruleChain;
        kuromojiAnalysisTests20.assertPathHasBeenCleared("europarl.lines.txt.gz");
        org.junit.Assert.assertNotSame((java.lang.Object) ruleChain19, (java.lang.Object) kuromojiAnalysisTests20);
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests20);
        org.apache.lucene.index.NumericDocValues numericDocValues31 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues32 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests20.assertDocValuesEquals("tests.badapples", 0, numericDocValues31, numericDocValues32);
    }

    @Test
    public void test3550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3550");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.weekly", (long) 'a', (long) (byte) 0);
    }

    @Test
    public void test3551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3551");
        long[] longArray1 = null;
        long[] longArray4 = new long[] { (byte) 0 };
        long[] longArray6 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray4, longArray6);
        long[] longArray9 = new long[] { (byte) 0 };
        long[] longArray11 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray9, longArray11);
        org.junit.Assert.assertArrayEquals(longArray4, longArray11);
        long[] longArray16 = new long[] { (byte) 0 };
        long[] longArray18 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray16, longArray18);
        long[] longArray21 = new long[] { (byte) 0 };
        long[] longArray23 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray21, longArray23);
        org.junit.Assert.assertArrayEquals(longArray16, longArray23);
        long[] longArray27 = new long[] { (byte) 0 };
        long[] longArray29 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray27, longArray29);
        long[] longArray32 = new long[] { (byte) 0 };
        long[] longArray34 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray32, longArray34);
        org.junit.Assert.assertArrayEquals(longArray27, longArray34);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", longArray16, longArray27);
        org.junit.Assert.assertArrayEquals(longArray11, longArray27);
        long[] longArray40 = new long[] { (byte) 0 };
        long[] longArray42 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray40, longArray42);
        org.junit.Assert.assertArrayEquals("tests.monster", longArray27, longArray42);
        org.junit.rules.RuleChain ruleChain46 = org.junit.rules.RuleChain.emptyRuleChain();
        long[] longArray48 = new long[] { (byte) 0 };
        long[] longArray50 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray48, longArray50);
        org.junit.Assert.assertNotEquals("tests.maxfailures", (java.lang.Object) ruleChain46, (java.lang.Object) longArray48);
        org.junit.Assert.assertArrayEquals(longArray42, longArray48);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.slow", longArray1, longArray48);
    }

    @Test
    public void test3552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3552");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.nightly", indexReader10, (int) (byte) -1, postingsEnum12, postingsEnum13, false);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader17, (int) (short) -1, postingsEnum19, postingsEnum20);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule24 = kuromojiAnalysisTests23.ruleChain;
        kuromojiAnalysisTests23.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests23);
        org.junit.rules.RuleChain ruleChain27 = kuromojiAnalysisTests23.failureAndSuccessEvents;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain27;
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.Fields fields31 = null;
        org.apache.lucene.index.Fields fields32 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("tests.nightly", indexReader30, fields31, fields32, false);
        org.junit.rules.RuleChain ruleChain35 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.apache.lucene.index.PostingsEnum postingsEnum37 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("europarl.lines.txt.gz", postingsEnum37, postingsEnum38, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("", (java.lang.Object) "europarl.lines.txt.gz");
    }

    @Test
    public void test3553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3553");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (byte) -1, (double) (-1.0f));
    }

    @Test
    public void test3554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3554");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule3 = kuromojiAnalysisTests2.ruleChain;
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2);
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        org.apache.lucene.index.Terms terms9 = null;
        kuromojiAnalysisTests2.assertTermsEquals("random", indexReader7, terms8, terms9, false);
        org.junit.rules.RuleChain ruleChain12 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests2.assertTermsEquals("europarl.lines.txt.gz", indexReader14, terms15, terms16, false);
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        kuromojiAnalysisTests2.ensureCheckIndexPassed();
        kuromojiAnalysisTests2.ensureCleanedUp();
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2);
        kuromojiAnalysisTests2.setUp();
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        org.apache.lucene.index.Terms terms28 = null;
        kuromojiAnalysisTests2.assertTermsEquals("tests.badapples", indexReader26, terms27, terms28, true);
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests2.assertDocsAndPositionsEnumEquals("", postingsEnum32, postingsEnum33);
    }

    @Test
    public void test3555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3555");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) (short) 1, (float) '#', (float) 4);
    }

    @Test
    public void test3556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3556");
        java.io.Serializable[] serializableArray3 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet4 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray3);
        java.io.Serializable[] serializableArray5 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet6 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray5);
        java.io.Serializable[] serializableArray7 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet8 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray7);
        java.io.Serializable[] serializableArray9 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet10 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray9);
        java.io.Serializable[] serializableArray11 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet12 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray11);
        java.util.Set[] setArray14 = new java.util.Set[5];
        @SuppressWarnings("unchecked")
        java.util.Set<java.io.Serializable>[] serializableSetArray15 = (java.util.Set<java.io.Serializable>[]) setArray14;
        serializableSetArray15[0] = serializableSet4;
        serializableSetArray15[1] = serializableSet6;
        serializableSetArray15[2] = serializableSet8;
        serializableSetArray15[3] = serializableSet10;
        serializableSetArray15[4] = serializableSet12;
        java.util.Set<java.util.Set<java.io.Serializable>> serializableSetSet26 = org.apache.lucene.util.LuceneTestCase.asSet(serializableSetArray15);
        java.util.Set<java.util.Set<java.io.Serializable>> serializableSetSet27 = org.apache.lucene.util.LuceneTestCase.asSet(serializableSetArray15);
        java.util.List<java.util.Set<java.io.Serializable>> serializableSetList28 = org.elasticsearch.test.ESTestCase.randomSubsetOf(4, serializableSetArray15);
        java.util.List<java.util.Set<java.io.Serializable>> serializableSetList29 = org.elasticsearch.test.ESTestCase.randomSubsetOf(1, serializableSetArray15);
        java.util.Set<java.util.Set<java.io.Serializable>> serializableSetSet30 = org.apache.lucene.util.LuceneTestCase.asSet(serializableSetArray15);
        java.util.concurrent.ExecutorService executorService31 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray32 = new java.util.concurrent.ExecutorService[] { executorService31 };
        boolean boolean33 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray32);
        java.util.concurrent.ExecutorService[] executorServiceArray35 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean36 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray35);
        java.io.Serializable[] serializableArray38 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet39 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray38);
        java.io.Serializable[] serializableArray41 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet42 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray41);
        java.io.Serializable[] serializableArray44 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet45 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray44);
        java.io.Serializable[] serializableArray46 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet47 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray46);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray44, (java.lang.Object[]) serializableArray46);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray41, (java.lang.Object[]) serializableArray46);
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) serializableArray38, (java.lang.Object[]) serializableArray46);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray35, (java.lang.Object[]) serializableArray38);
        org.junit.Assert.assertNotNull("europarl.lines.txt.gz", (java.lang.Object) executorServiceArray35);
        boolean boolean53 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray35);
        org.junit.Assert.assertNotEquals((java.lang.Object) executorServiceArray32, (java.lang.Object) executorServiceArray35);
        boolean boolean55 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray32);
        boolean boolean56 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray32);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableSetArray15, (java.lang.Object[]) executorServiceArray32);
    }

    @Test
    public void test3557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3557");
        java.lang.Object[] objArray1 = null;
        java.io.Serializable[] serializableArray4 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet5 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray4);
        java.io.Serializable[] serializableArray6 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet7 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray6);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray4, (java.lang.Object[]) serializableArray6);
        java.util.concurrent.ExecutorService[] executorServiceArray9 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean10 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray9);
        boolean boolean11 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray9);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray4, (java.lang.Object[]) executorServiceArray9);
        org.junit.Assert.assertNotNull("tests.nightly", (java.lang.Object) executorServiceArray9);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.slow", objArray1, (java.lang.Object[]) executorServiceArray9);
    }

    @Test
    public void test3558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3558");
        double[] doubleArray2 = new double[] {};
        double[] doubleArray3 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray2, doubleArray3, (double) '4');
        double[] doubleArray6 = new double[] {};
        double[] doubleArray7 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray6, doubleArray7, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray3, doubleArray7, (double) (byte) -1);
        double[] doubleArray12 = new double[] {};
        double[] doubleArray13 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray12, doubleArray13, (double) '4');
        double[] doubleArray16 = new double[] {};
        double[] doubleArray17 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray16, doubleArray17, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray12, doubleArray17, (double) (short) 10);
        org.junit.Assert.assertArrayEquals(doubleArray3, doubleArray12, (double) 100);
        double[] doubleArray24 = new double[] {};
        double[] doubleArray25 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray24, doubleArray25, (double) '4');
        double[] doubleArray28 = new double[] {};
        double[] doubleArray29 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray28, doubleArray29, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray24, doubleArray29, (double) (short) 10);
        org.junit.Assert.assertArrayEquals("tests.slow", doubleArray12, doubleArray29, (double) (byte) 100);
        double[] doubleArray37 = new double[] {};
        double[] doubleArray38 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray37, doubleArray38, (double) '4');
        double[] doubleArray41 = new double[] {};
        double[] doubleArray42 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray41, doubleArray42, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray37, doubleArray42, (double) (short) 10);
        double[] doubleArray47 = new double[] {};
        double[] doubleArray48 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray47, doubleArray48, (double) '4');
        double[] doubleArray51 = new double[] {};
        double[] doubleArray52 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray51, doubleArray52, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray47, doubleArray52, (double) (short) 10);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", doubleArray42, doubleArray47, (double) 4);
        org.junit.Assert.assertArrayEquals("", doubleArray29, doubleArray47, (double) (short) -1);
        double[] doubleArray61 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(doubleArray47, doubleArray61, (double) 1.0f);
    }

    @Test
    public void test3559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3559");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("random", 0L, 0L);
    }

    @Test
    public void test3560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3560");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Terms terms3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader2, terms3, terms4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.setUp();
        org.apache.lucene.index.NumericDocValues numericDocValues13 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues14 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.awaitsfix", (int) (byte) 0, numericDocValues13, numericDocValues14);
    }

    @Test
    public void test3561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3561");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) (short) 0, (float) ' ', (float) (byte) 10);
    }

    @Test
    public void test3562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3562");
        short[] shortArray0 = null;
        short[] shortArray2 = new short[] {};
        short[] shortArray3 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray2, shortArray3);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(shortArray0, shortArray3);
    }

    @Test
    public void test3563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3563");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.nightly", indexReader10, (int) (byte) -1, postingsEnum12, postingsEnum13, false);
        org.junit.rules.RuleChain ruleChain16 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        java.lang.String str18 = kuromojiAnalysisTests1.getTestName();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        java.io.Serializable[] serializableArray22 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet23 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray22);
        java.io.Serializable[] serializableArray24 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet25 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray24);
        java.io.Serializable[] serializableArray26 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet27 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray26);
        java.io.Serializable[] serializableArray28 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet29 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray28);
        java.io.Serializable[] serializableArray30 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet31 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray30);
        java.util.Set[] setArray33 = new java.util.Set[5];
        @SuppressWarnings("unchecked")
        java.util.Set<java.io.Serializable>[] serializableSetArray34 = (java.util.Set<java.io.Serializable>[]) setArray33;
        serializableSetArray34[0] = serializableSet23;
        serializableSetArray34[1] = serializableSet25;
        serializableSetArray34[2] = serializableSet27;
        serializableSetArray34[3] = serializableSet29;
        serializableSetArray34[4] = serializableSet31;
        java.util.Set<java.util.Set<java.io.Serializable>> serializableSetSet45 = org.apache.lucene.util.LuceneTestCase.asSet(serializableSetArray34);
        java.util.List<java.util.Set<java.io.Serializable>> serializableSetList46 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, serializableSetArray34);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.failfast", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) serializableSetArray34);
    }

    @Test
    public void test3564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3564");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("<unknown>", (long) 1, (long) (short) 100);
    }

    @Test
    public void test3565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3565");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 2, (double) (-1L), 1.0d);
    }

    @Test
    public void test3566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3566");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (float) (byte) 10, (float) 3, 0.0f);
    }

    @Test
    public void test3567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3567");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Terms terms3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader2, terms3, terms4, false);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 10);
        kuromojiAnalysisTests0.setUp();
        java.lang.String str12 = kuromojiAnalysisTests0.getTestName();
        org.junit.Assert[] assertArray13 = new org.junit.Assert[] { kuromojiAnalysisTests0 };
        java.util.Set<org.junit.Assert> assertSet14 = org.apache.lucene.util.LuceneTestCase.asSet(assertArray13);
        java.util.concurrent.ExecutorService executorService15 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray16 = new java.util.concurrent.ExecutorService[] { executorService15 };
        boolean boolean17 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray16);
        java.util.concurrent.ExecutorService[] executorServiceArray19 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean20 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray19);
        java.io.Serializable[] serializableArray22 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet23 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray22);
        java.io.Serializable[] serializableArray25 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet26 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray25);
        java.io.Serializable[] serializableArray28 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet29 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray28);
        java.io.Serializable[] serializableArray30 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet31 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray30);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray28, (java.lang.Object[]) serializableArray30);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray25, (java.lang.Object[]) serializableArray30);
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) serializableArray22, (java.lang.Object[]) serializableArray30);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray19, (java.lang.Object[]) serializableArray22);
        org.junit.Assert.assertNotNull("europarl.lines.txt.gz", (java.lang.Object) executorServiceArray19);
        boolean boolean37 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray19);
        org.junit.Assert.assertNotEquals((java.lang.Object) executorServiceArray16, (java.lang.Object) executorServiceArray19);
        java.util.concurrent.ExecutorService[] executorServiceArray40 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean41 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray40);
        java.io.Serializable[] serializableArray43 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet44 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray43);
        java.io.Serializable[] serializableArray45 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet46 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray45);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray43, (java.lang.Object[]) serializableArray45);
        org.junit.Assert.assertArrayEquals("tests.badapples", (java.lang.Object[]) executorServiceArray40, (java.lang.Object[]) serializableArray45);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray19, (java.lang.Object[]) executorServiceArray40);
        boolean boolean50 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray19);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) assertSet14, (java.lang.Object) boolean50);
    }

    @Test
    public void test3568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3568");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.awaitsfix", (float) ' ', (float) (byte) -1, (float) (byte) 1);
    }

    @Test
    public void test3569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3569");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(0L, (long) 10);
    }

    @Test
    public void test3570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3570");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) (short) 100, 1.0f, (-1.0f));
    }

    @Test
    public void test3571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3571");
        org.junit.rules.RuleChain ruleChain1 = org.junit.rules.RuleChain.emptyRuleChain();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests3 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule4 = kuromojiAnalysisTests3.ruleChain;
        kuromojiAnalysisTests3.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests3);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.Terms terms9 = null;
        org.apache.lucene.index.Terms terms10 = null;
        kuromojiAnalysisTests3.assertTermsEquals("random", indexReader8, terms9, terms10, false);
        org.junit.rules.RuleChain ruleChain13 = kuromojiAnalysisTests3.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement14 = null;
        org.junit.runner.Description description15 = null;
        org.junit.runners.model.Statement statement16 = ruleChain13.apply(statement14, description15);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests18 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule19 = kuromojiAnalysisTests18.ruleChain;
        kuromojiAnalysisTests18.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests18);
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        org.apache.lucene.index.Terms terms25 = null;
        kuromojiAnalysisTests18.assertTermsEquals("random", indexReader23, terms24, terms25, false);
        org.junit.rules.RuleChain ruleChain28 = kuromojiAnalysisTests18.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement29 = null;
        org.junit.runner.Description description30 = null;
        org.junit.runners.model.Statement statement31 = ruleChain28.apply(statement29, description30);
        org.junit.runner.Description description32 = null;
        org.junit.runners.model.Statement statement33 = ruleChain13.apply(statement31, description32);
        org.junit.runner.Description description34 = null;
        org.junit.runners.model.Statement statement35 = ruleChain1.apply(statement31, description34);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests36 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests36.tearDown();
        kuromojiAnalysisTests36.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests36.tearDown();
        kuromojiAnalysisTests36.setUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests41 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule42 = kuromojiAnalysisTests41.ruleChain;
        kuromojiAnalysisTests41.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain44 = kuromojiAnalysisTests41.failureAndSuccessEvents;
        kuromojiAnalysisTests36.failureAndSuccessEvents = ruleChain44;
        org.junit.rules.RuleChain ruleChain46 = ruleChain1.around((org.junit.rules.TestRule) ruleChain44);
        org.junit.Assert.assertNotNull((java.lang.Object) ruleChain44);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain44;
        org.junit.rules.RuleChain ruleChain49 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain44);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("hi!", (java.lang.Object) ruleChain44);
    }

    @Test
    public void test3572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3572");
        java.io.Serializable[] serializableArray4 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet5 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray4);
        java.io.Serializable[] serializableArray7 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet8 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray7);
        java.io.Serializable[] serializableArray9 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet10 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray9);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray7, (java.lang.Object[]) serializableArray9);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray4, (java.lang.Object[]) serializableArray9);
        java.io.Serializable[] serializableArray14 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet15 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray14);
        java.io.Serializable[] serializableArray17 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet18 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray17);
        java.io.Serializable[] serializableArray19 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet20 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray19);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray17, (java.lang.Object[]) serializableArray19);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray14, (java.lang.Object[]) serializableArray19);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray4, (java.lang.Object[]) serializableArray14);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests24 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule25 = kuromojiAnalysisTests24.ruleChain;
        kuromojiAnalysisTests24.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests24.tearDown();
        kuromojiAnalysisTests24.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests24.setUp();
        org.junit.Assert.assertNotEquals("tests.weekly", (java.lang.Object) serializableArray14, (java.lang.Object) kuromojiAnalysisTests24);
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.Terms terms33 = null;
        org.apache.lucene.index.Terms terms34 = null;
        kuromojiAnalysisTests24.assertTermsEquals("tests.failfast", indexReader32, terms33, terms34, true);
        kuromojiAnalysisTests24.tearDown();
        kuromojiAnalysisTests24.setUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.weekly", (java.lang.Object) kuromojiAnalysisTests24);
    }

    @Test
    public void test3573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3573");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((long) (byte) -1, (long) (byte) -1);
    }

    @Test
    public void test3574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3574");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("enwiki.random.lines.txt", (double) 10L, (double) '#', (double) 10L);
    }

    @Test
    public void test3575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3575");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.weekly", (float) (byte) 10, 0.0f, (float) 1L);
    }

    @Test
    public void test3576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3576");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", 0.0d, (double) 100.0f, 1.0d);
    }

    @Test
    public void test3577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3577");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests6 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule7 = kuromojiAnalysisTests6.ruleChain;
        kuromojiAnalysisTests6.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests6);
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests6.assertTermsEquals("random", indexReader11, terms12, terms13, false);
        org.junit.rules.RuleChain ruleChain16 = kuromojiAnalysisTests6.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement17 = null;
        org.junit.runner.Description description18 = null;
        org.junit.runners.model.Statement statement19 = ruleChain16.apply(statement17, description18);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests21 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule22 = kuromojiAnalysisTests21.ruleChain;
        kuromojiAnalysisTests21.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests21);
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        org.apache.lucene.index.Terms terms28 = null;
        kuromojiAnalysisTests21.assertTermsEquals("random", indexReader26, terms27, terms28, false);
        org.junit.rules.RuleChain ruleChain31 = kuromojiAnalysisTests21.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement32 = null;
        org.junit.runner.Description description33 = null;
        org.junit.runners.model.Statement statement34 = ruleChain31.apply(statement32, description33);
        org.junit.runner.Description description35 = null;
        org.junit.runners.model.Statement statement36 = ruleChain16.apply(statement34, description35);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain16;
        org.junit.Assert.assertNotNull((java.lang.Object) ruleChain16);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.slow", (java.lang.Object) ruleChain16);
    }

    @Test
    public void test3578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3578");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader9, (int) (byte) -1, postingsEnum11, postingsEnum12, false);
        org.junit.rules.RuleChain ruleChain15 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain17 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test3579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3579");
        java.io.Serializable[] serializableArray6 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet7 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray6);
        java.io.Serializable[] serializableArray9 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet10 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray9);
        java.io.Serializable[] serializableArray11 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet12 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray11);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray9, (java.lang.Object[]) serializableArray11);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray6, (java.lang.Object[]) serializableArray11);
        java.io.Serializable[] serializableArray16 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet17 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray16);
        java.io.Serializable[] serializableArray19 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet20 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray19);
        java.io.Serializable[] serializableArray21 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet22 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray21);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray19, (java.lang.Object[]) serializableArray21);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray16, (java.lang.Object[]) serializableArray21);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray6, (java.lang.Object[]) serializableArray16);
        java.util.concurrent.ExecutorService[] executorServiceArray26 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean27 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray26);
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) serializableArray6, (java.lang.Object[]) executorServiceArray26);
        java.io.Serializable[] serializableArray30 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet31 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray30);
        java.io.Serializable[] serializableArray33 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet34 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray33);
        java.io.Serializable[] serializableArray36 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet37 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray36);
        java.io.Serializable[] serializableArray38 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet39 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray38);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray36, (java.lang.Object[]) serializableArray38);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray33, (java.lang.Object[]) serializableArray38);
        org.junit.Assert.assertArrayEquals("tests.nightly", (java.lang.Object[]) serializableArray30, (java.lang.Object[]) serializableArray38);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray6, (java.lang.Object[]) serializableArray30);
        java.util.concurrent.ExecutorService[] executorServiceArray44 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean45 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray44);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", (java.lang.Object[]) serializableArray6, (java.lang.Object[]) executorServiceArray44);
        org.elasticsearch.test.ESTestCase[][] eSTestCaseArray47 = new org.elasticsearch.test.ESTestCase[][] {};
        java.util.Set<org.elasticsearch.test.ESTestCase[]> eSTestCaseArraySet48 = org.apache.lucene.util.LuceneTestCase.asSet(eSTestCaseArray47);
        org.junit.Assert.assertEquals("", (java.lang.Object[]) serializableArray6, (java.lang.Object[]) eSTestCaseArray47);
        org.elasticsearch.test.ESTestCase[][] eSTestCaseArray50 = new org.elasticsearch.test.ESTestCase[][] {};
        java.util.Set<org.elasticsearch.test.ESTestCase[]> eSTestCaseArraySet51 = org.apache.lucene.util.LuceneTestCase.asSet(eSTestCaseArray50);
        java.util.Set<org.elasticsearch.test.ESTestCase[]> eSTestCaseArraySet52 = org.apache.lucene.util.LuceneTestCase.asSet(eSTestCaseArray50);
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) eSTestCaseArray47, (java.lang.Object[]) eSTestCaseArray50);
        java.util.concurrent.ExecutorService executorService54 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray55 = new java.util.concurrent.ExecutorService[] { executorService54 };
        boolean boolean56 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray55);
        boolean boolean57 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray55);
        boolean boolean58 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray55);
        boolean boolean59 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray55);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) eSTestCaseArray50, (java.lang.Object[]) executorServiceArray55);
    }

    @Test
    public void test3580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3580");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((double) ' ', (double) (byte) 0, (double) 'a');
    }

    @Test
    public void test3581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3581");
        double[] doubleArray1 = null;
        double[] doubleArray3 = new double[] {};
        double[] doubleArray4 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray3, doubleArray4, (double) '4');
        double[] doubleArray7 = new double[] {};
        double[] doubleArray8 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray7, doubleArray8, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray3, doubleArray8, (double) (short) 10);
        double[] doubleArray13 = new double[] {};
        double[] doubleArray14 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray13, doubleArray14, (double) '4');
        double[] doubleArray17 = new double[] {};
        double[] doubleArray18 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray17, doubleArray18, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray14, doubleArray18, (double) (byte) -1);
        org.junit.Assert.assertArrayEquals("", doubleArray3, doubleArray18, (double) (short) 100);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("<unknown>", doubleArray1, doubleArray3, (double) 1);
    }

    @Test
    public void test3582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3582");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum7 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum8 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("europarl.lines.txt.gz", indexReader5, (int) (short) 100, postingsEnum7, postingsEnum8);
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        org.apache.lucene.index.NumericDocValues numericDocValues13 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues14 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.maxfailures", 0, numericDocValues13, numericDocValues14);
    }

    @Test
    public void test3583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3583");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader3, fields4, fields5, true);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 1);
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.Fields fields13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader12, fields13, fields14, false);
        java.lang.String str17 = kuromojiAnalysisTests0.getTestName();
        java.lang.String str18 = kuromojiAnalysisTests0.getTestName();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests19 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.Terms terms22 = null;
        org.apache.lucene.index.Terms terms23 = null;
        kuromojiAnalysisTests19.assertTermsEquals("", indexReader21, terms22, terms23, false);
        kuromojiAnalysisTests19.ensureCheckIndexPassed();
        kuromojiAnalysisTests19.tearDown();
        kuromojiAnalysisTests19.tearDown();
        org.junit.Assert.assertNotEquals((java.lang.Object) str18, (java.lang.Object) kuromojiAnalysisTests19);
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests19.assertDocsAndPositionsEnumEquals("tests.maxfailures", postingsEnum31, postingsEnum32);
    }

    @Test
    public void test3584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3584");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader9, (int) (byte) -1, postingsEnum11, postingsEnum12, false);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader16, (int) (short) -1, postingsEnum18, postingsEnum19);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests22 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule23 = kuromojiAnalysisTests22.ruleChain;
        kuromojiAnalysisTests22.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests22);
        org.junit.rules.RuleChain ruleChain26 = kuromojiAnalysisTests22.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain26;
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.badapples", indexReader29, 0, postingsEnum31, postingsEnum32, true);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.Fields fields40 = null;
        org.apache.lucene.index.Fields fields41 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("hi!", indexReader39, fields40, fields41, true);
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum46 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("random", postingsEnum45, postingsEnum46);
    }

    @Test
    public void test3585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3585");
        java.io.Serializable[] serializableArray3 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet4 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray3);
        java.io.Serializable[] serializableArray6 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet7 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray6);
        java.io.Serializable[] serializableArray9 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet10 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray9);
        java.io.Serializable[] serializableArray11 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet12 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray11);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray9, (java.lang.Object[]) serializableArray11);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray6, (java.lang.Object[]) serializableArray11);
        org.junit.Assert.assertArrayEquals("tests.nightly", (java.lang.Object[]) serializableArray3, (java.lang.Object[]) serializableArray11);
        java.io.Serializable[] serializableArray19 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet20 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray19);
        java.io.Serializable[] serializableArray22 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet23 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray22);
        java.io.Serializable[] serializableArray24 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet25 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray24);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray22, (java.lang.Object[]) serializableArray24);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray19, (java.lang.Object[]) serializableArray24);
        java.io.Serializable[] serializableArray29 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet30 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray29);
        java.io.Serializable[] serializableArray32 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet33 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray32);
        java.io.Serializable[] serializableArray34 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet35 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray34);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray32, (java.lang.Object[]) serializableArray34);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray29, (java.lang.Object[]) serializableArray34);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray19, (java.lang.Object[]) serializableArray29);
        java.io.Serializable[] serializableArray41 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet42 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray41);
        java.io.Serializable[] serializableArray44 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet45 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray44);
        java.io.Serializable[] serializableArray46 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet47 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray46);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray44, (java.lang.Object[]) serializableArray46);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray41, (java.lang.Object[]) serializableArray46);
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet52 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray51);
        java.io.Serializable[] serializableArray54 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet55 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray54);
        java.io.Serializable[] serializableArray56 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet57 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray56);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray54, (java.lang.Object[]) serializableArray56);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray51, (java.lang.Object[]) serializableArray56);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray41, (java.lang.Object[]) serializableArray51);
        java.io.Serializable[] serializableArray62 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet63 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray62);
        java.io.Serializable[] serializableArray64 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet65 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray64);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray62, (java.lang.Object[]) serializableArray64);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray41, (java.lang.Object[]) serializableArray62);
        org.junit.Assert.assertEquals("tests.failfast", (java.lang.Object[]) serializableArray19, (java.lang.Object[]) serializableArray62);
        org.junit.Assert.assertArrayEquals("hi!", (java.lang.Object[]) serializableArray11, (java.lang.Object[]) serializableArray19);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.failfast", (java.lang.Object) serializableArray11);
    }

    @Test
    public void test3586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3586");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (long) 2, (long) '4');
    }

    @Test
    public void test3587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3587");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader9, (int) (byte) -1, postingsEnum11, postingsEnum12, false);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader16, (int) (short) -1, postingsEnum18, postingsEnum19);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests22 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule23 = kuromojiAnalysisTests22.ruleChain;
        kuromojiAnalysisTests22.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests22);
        org.junit.rules.RuleChain ruleChain26 = kuromojiAnalysisTests22.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain26;
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.badapples", indexReader29, 0, postingsEnum31, postingsEnum32, true);
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.apache.lucene.index.PostingsEnum postingsEnum37 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("", postingsEnum37, postingsEnum38, false);
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum43 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.slow", postingsEnum42, postingsEnum43, true);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.apache.lucene.index.PostingsEnum postingsEnum48 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum49 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.badapples", postingsEnum48, postingsEnum49);
    }

    @Test
    public void test3588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3588");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", 10L, (long) (byte) 100);
    }

    @Test
    public void test3589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3589");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", 0L, (long) 10);
    }

    @Test
    public void test3590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3590");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) (short) 1, (float) 2, 0.0f);
    }

    @Test
    public void test3591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3591");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (double) 2, (double) 1L, (double) (-1L));
    }

    @Test
    public void test3592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3592");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests1.assertTermsEquals("", indexReader10, terms11, terms12, false);
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests1.tearDown();
        java.lang.Object obj17 = null;
        org.junit.Assert.assertNotEquals("tests.slow", (java.lang.Object) kuromojiAnalysisTests1, obj17);
        org.junit.rules.TestRule testRule19 = kuromojiAnalysisTests1.ruleChain;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests21 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule22 = kuromojiAnalysisTests21.ruleChain;
        kuromojiAnalysisTests21.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests21);
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        org.apache.lucene.index.Terms terms28 = null;
        kuromojiAnalysisTests21.assertTermsEquals("random", indexReader26, terms27, terms28, false);
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        kuromojiAnalysisTests21.assertDocsEnumEquals("tests.failfast", postingsEnum32, postingsEnum33, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests36 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule37 = kuromojiAnalysisTests36.ruleChain;
        java.lang.String str38 = kuromojiAnalysisTests36.getTestName();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests21, (java.lang.Object) kuromojiAnalysisTests36);
        org.apache.lucene.index.IndexReader indexReader41 = null;
        org.apache.lucene.index.Fields fields42 = null;
        org.apache.lucene.index.Fields fields43 = null;
        kuromojiAnalysisTests36.assertFieldsEquals("", indexReader41, fields42, fields43, true);
        kuromojiAnalysisTests36.ensureCheckIndexPassed();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) testRule19, (java.lang.Object) kuromojiAnalysisTests36);
    }

    @Test
    public void test3593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3593");
        int[] intArray5 = new int[] {};
        int[] intArray6 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray5, intArray6);
        int[] intArray9 = new int[] {};
        int[] intArray10 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray9, intArray10);
        org.junit.Assert.assertArrayEquals(intArray6, intArray9);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray6, (java.lang.Object) 100.0d);
        int[] intArray18 = new int[] {};
        int[] intArray19 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray18, intArray19);
        int[] intArray22 = new int[] {};
        int[] intArray23 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray22, intArray23);
        org.junit.Assert.assertArrayEquals(intArray19, intArray22);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray19, (java.lang.Object) 100.0d);
        int[] intArray29 = new int[] {};
        int[] intArray30 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray29, intArray30);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray19, intArray29);
        org.junit.Assert.assertArrayEquals("random", intArray6, intArray19);
        int[] intArray36 = new int[] {};
        int[] intArray37 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray36, intArray37);
        int[] intArray40 = new int[] {};
        int[] intArray41 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray40, intArray41);
        org.junit.Assert.assertArrayEquals(intArray37, intArray40);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray37, (java.lang.Object) 100.0d);
        org.junit.Assert.assertArrayEquals(intArray19, intArray37);
        int[] intArray48 = new int[] {};
        int[] intArray49 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray48, intArray49);
        org.junit.Assert.assertArrayEquals("<unknown>", intArray19, intArray48);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests52 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests52.tearDown();
        org.apache.lucene.index.IndexReader indexReader55 = null;
        org.apache.lucene.index.Terms terms56 = null;
        org.apache.lucene.index.Terms terms57 = null;
        kuromojiAnalysisTests52.assertTermsEquals("tests.failfast", indexReader55, terms56, terms57, false);
        org.apache.lucene.index.IndexReader indexReader61 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum63 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum64 = null;
        kuromojiAnalysisTests52.assertDocsSkippingEquals("tests.nightly", indexReader61, (int) (byte) -1, postingsEnum63, postingsEnum64, false);
        org.apache.lucene.index.IndexReader indexReader68 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum70 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum71 = null;
        kuromojiAnalysisTests52.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader68, (int) (short) -1, postingsEnum70, postingsEnum71);
        java.lang.String str73 = kuromojiAnalysisTests52.getTestName();
        kuromojiAnalysisTests52.setUp();
        org.junit.Assert.assertNotSame("random", (java.lang.Object) intArray48, (java.lang.Object) kuromojiAnalysisTests52);
        org.apache.lucene.index.IndexReader indexReader77 = null;
        org.apache.lucene.index.Fields fields78 = null;
        org.apache.lucene.index.Fields fields79 = null;
        kuromojiAnalysisTests52.assertFieldsEquals("tests.weekly", indexReader77, fields78, fields79, false);
        kuromojiAnalysisTests52.ensureAllSearchContextsReleased();
        org.apache.lucene.index.PostingsEnum postingsEnum84 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum85 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests52.assertDocsAndPositionsEnumEquals("<unknown>", postingsEnum84, postingsEnum85);
    }

    @Test
    public void test3594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3594");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (-1), (long) '#');
    }

    @Test
    public void test3595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3595");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("enwiki.random.lines.txt", 10L, (long) ' ');
    }

    @Test
    public void test3596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3596");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule3 = kuromojiAnalysisTests2.ruleChain;
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2);
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        org.apache.lucene.index.Terms terms9 = null;
        kuromojiAnalysisTests2.assertTermsEquals("random", indexReader7, terms8, terms9, false);
        kuromojiAnalysisTests2.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests2.assertDocsEnumEquals("tests.awaitsfix", postingsEnum14, postingsEnum15, false);
        org.junit.rules.TestRule testRule18 = kuromojiAnalysisTests2.ruleChain;
        org.junit.rules.TestRule testRule19 = kuromojiAnalysisTests2.ruleChain;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests20.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests22 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests22.tearDown();
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.Terms terms26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        kuromojiAnalysisTests22.assertTermsEquals("tests.failfast", indexReader25, terms26, terms27, false);
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.Terms terms32 = null;
        org.apache.lucene.index.Terms terms33 = null;
        kuromojiAnalysisTests22.assertTermsEquals("", indexReader31, terms32, terms33, false);
        org.junit.rules.RuleChain ruleChain36 = kuromojiAnalysisTests22.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests20, (java.lang.Object) kuromojiAnalysisTests22);
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        kuromojiAnalysisTests22.assertDocsSkippingEquals("tests.weekly", indexReader39, (int) (byte) 10, postingsEnum41, postingsEnum42, true);
        org.apache.lucene.index.IndexReader indexReader46 = null;
        org.apache.lucene.index.Fields fields47 = null;
        org.apache.lucene.index.Fields fields48 = null;
        kuromojiAnalysisTests22.assertFieldsEquals("", indexReader46, fields47, fields48, true);
        org.apache.lucene.index.PostingsEnum postingsEnum52 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum53 = null;
        kuromojiAnalysisTests22.assertDocsEnumEquals("", postingsEnum52, postingsEnum53, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) false);
    }

    @Test
    public void test3597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3597");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 0L, (double) 10L);
    }

    @Test
    public void test3598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3598");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.monster", 10.0d, (double) 1L, (double) 10);
    }

    @Test
    public void test3599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3599");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader3, fields4, fields5, true);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 1);
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.awaitsfix");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test3600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3600");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(0.0d, (double) '4', 0.0d);
    }

    @Test
    public void test3601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3601");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests0);
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader6, terms7, terms8, true);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.apache.lucene.index.NumericDocValues numericDocValues14 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues15 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("random", (-1), numericDocValues14, numericDocValues15);
    }

    @Test
    public void test3602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3602");
        java.io.Serializable[] serializableArray3 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet4 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray3);
        java.io.Serializable[] serializableArray6 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet7 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray6);
        java.io.Serializable[] serializableArray8 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet9 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray8);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray6, (java.lang.Object[]) serializableArray8);
        org.junit.Assert.assertEquals("tests.badapples", (java.lang.Object[]) serializableArray3, (java.lang.Object[]) serializableArray8);
        java.io.Serializable[] serializableArray12 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet13 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray12);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray8, (java.lang.Object[]) serializableArray12);
        java.util.concurrent.ExecutorService[] executorServiceArray16 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean17 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray16);
        java.io.Serializable[] serializableArray19 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet20 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray19);
        java.io.Serializable[] serializableArray21 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet22 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray21);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray19, (java.lang.Object[]) serializableArray21);
        org.junit.Assert.assertArrayEquals("tests.badapples", (java.lang.Object[]) executorServiceArray16, (java.lang.Object[]) serializableArray21);
        boolean boolean25 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray16);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray12, (java.lang.Object[]) executorServiceArray16);
        java.io.Serializable[] serializableArray33 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet34 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray33);
        java.io.Serializable[] serializableArray36 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet37 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray36);
        java.io.Serializable[] serializableArray38 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet39 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray38);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray36, (java.lang.Object[]) serializableArray38);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray33, (java.lang.Object[]) serializableArray38);
        java.io.Serializable[] serializableArray43 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet44 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray43);
        java.io.Serializable[] serializableArray46 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet47 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray46);
        java.io.Serializable[] serializableArray48 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet49 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray48);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray46, (java.lang.Object[]) serializableArray48);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray43, (java.lang.Object[]) serializableArray48);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray33, (java.lang.Object[]) serializableArray43);
        java.util.concurrent.ExecutorService[] executorServiceArray53 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean54 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray53);
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) serializableArray33, (java.lang.Object[]) executorServiceArray53);
        java.io.Serializable[] serializableArray57 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet58 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray57);
        java.io.Serializable[] serializableArray60 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet61 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray60);
        java.io.Serializable[] serializableArray63 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet64 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray63);
        java.io.Serializable[] serializableArray65 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet66 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray65);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray63, (java.lang.Object[]) serializableArray65);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray60, (java.lang.Object[]) serializableArray65);
        org.junit.Assert.assertArrayEquals("tests.nightly", (java.lang.Object[]) serializableArray57, (java.lang.Object[]) serializableArray65);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray33, (java.lang.Object[]) serializableArray57);
        java.util.concurrent.ExecutorService[] executorServiceArray71 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean72 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray71);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", (java.lang.Object[]) serializableArray33, (java.lang.Object[]) executorServiceArray71);
        org.elasticsearch.test.ESTestCase[][] eSTestCaseArray74 = new org.elasticsearch.test.ESTestCase[][] {};
        java.util.Set<org.elasticsearch.test.ESTestCase[]> eSTestCaseArraySet75 = org.apache.lucene.util.LuceneTestCase.asSet(eSTestCaseArray74);
        org.junit.Assert.assertEquals("", (java.lang.Object[]) serializableArray33, (java.lang.Object[]) eSTestCaseArray74);
        java.util.concurrent.ExecutorService[] executorServiceArray78 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean79 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray78);
        java.io.Serializable[] serializableArray81 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet82 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray81);
        java.io.Serializable[] serializableArray83 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet84 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray83);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray81, (java.lang.Object[]) serializableArray83);
        org.junit.Assert.assertArrayEquals("tests.badapples", (java.lang.Object[]) executorServiceArray78, (java.lang.Object[]) serializableArray83);
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) serializableArray33, (java.lang.Object[]) executorServiceArray78);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray12, (java.lang.Object[]) executorServiceArray78);
        java.lang.Object[] objArray89 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (java.lang.Object[]) executorServiceArray78, objArray89);
    }

    @Test
    public void test3603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3603");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("hi!", (double) 1L, (double) 'a', (double) (byte) 100);
    }

    @Test
    public void test3604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3604");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (double) 3, (double) 0.0f);
    }

    @Test
    public void test3605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3605");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((double) 0.0f, (double) ' ', 100.0d);
    }

    @Test
    public void test3606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3606");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("hi!", (double) (byte) -1, (double) 100.0f);
    }

    @Test
    public void test3607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3607");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader3, fields4, fields5, true);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 1);
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.Fields fields13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader12, fields13, fields14, false);
        org.junit.rules.TestRule testRule17 = kuromojiAnalysisTests0.ruleChain;
        java.lang.String str18 = kuromojiAnalysisTests0.getTestName();
        org.junit.rules.RuleChain ruleChain19 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests20.tearDown();
        kuromojiAnalysisTests20.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests20.ensureCleanedUp();
        org.junit.rules.TestRule testRule24 = kuromojiAnalysisTests20.ruleChain;
        kuromojiAnalysisTests20.assertPathHasBeenCleared("europarl.lines.txt.gz");
        org.junit.Assert.assertNotSame((java.lang.Object) ruleChain19, (java.lang.Object) kuromojiAnalysisTests20);
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests20);
        kuromojiAnalysisTests20.ensureCheckIndexPassed();
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.Terms terms32 = null;
        org.apache.lucene.index.Terms terms33 = null;
        kuromojiAnalysisTests20.assertTermsEquals("tests.badapples", indexReader31, terms32, terms33, false);
        kuromojiAnalysisTests20.resetCheckIndexStatus();
        org.apache.lucene.index.NumericDocValues numericDocValues39 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues40 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests20.assertDocValuesEquals("tests.slow", (int) '#', numericDocValues39, numericDocValues40);
    }

    @Test
    public void test3608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3608");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.maxfailures", (double) 10.0f, 0.0d, (double) (short) 10);
    }

    @Test
    public void test3609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3609");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("enwiki.random.lines.txt", indexReader4, fields5, fields6, true);
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.slow", indexReader12, (int) (short) 10, postingsEnum14, postingsEnum15);
        org.junit.rules.TestRule testRule17 = null;
        org.junit.rules.RuleChain ruleChain18 = org.junit.rules.RuleChain.outerRule(testRule17);
        org.junit.rules.RuleChain ruleChain19 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain18);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests21 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule22 = kuromojiAnalysisTests21.ruleChain;
        kuromojiAnalysisTests21.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests21);
        org.junit.rules.RuleChain ruleChain25 = kuromojiAnalysisTests21.failureAndSuccessEvents;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain25;
        org.junit.rules.RuleChain ruleChain27 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain25);
        org.junit.rules.RuleChain ruleChain28 = ruleChain19.around((org.junit.rules.TestRule) ruleChain27);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain28;
        org.junit.Assert.assertNotEquals((java.lang.Object) postingsEnum14, (java.lang.Object) ruleChain28);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling33 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.SOMETIMES;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray34 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] { throttling33 };
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingSet35 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray34);
        java.util.List<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingList36 = org.elasticsearch.test.ESTestCase.randomSubsetOf(0, throttlingArray34);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling37 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.SOMETIMES;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray38 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] { throttling37 };
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingSet39 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray38);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray34, (java.lang.Object[]) throttlingArray38);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests41 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests41.tearDown();
        kuromojiAnalysisTests41.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests41.tearDown();
        kuromojiAnalysisTests41.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader47 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum49 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum50 = null;
        kuromojiAnalysisTests41.assertPositionsSkippingEquals("tests.nightly", indexReader47, (int) ' ', postingsEnum49, postingsEnum50);
        org.junit.Assert.assertNotEquals((java.lang.Object) throttlingArray34, (java.lang.Object) kuromojiAnalysisTests41);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests53 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests53.tearDown();
        org.apache.lucene.index.IndexReader indexReader56 = null;
        org.apache.lucene.index.Terms terms57 = null;
        org.apache.lucene.index.Terms terms58 = null;
        kuromojiAnalysisTests53.assertTermsEquals("tests.failfast", indexReader56, terms57, terms58, false);
        org.apache.lucene.index.IndexReader indexReader62 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum64 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum65 = null;
        kuromojiAnalysisTests53.assertDocsSkippingEquals("tests.nightly", indexReader62, (int) (byte) -1, postingsEnum64, postingsEnum65, false);
        org.apache.lucene.index.IndexReader indexReader69 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum71 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum72 = null;
        kuromojiAnalysisTests53.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader69, (int) (short) -1, postingsEnum71, postingsEnum72);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests75 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule76 = kuromojiAnalysisTests75.ruleChain;
        kuromojiAnalysisTests75.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests75);
        org.junit.rules.RuleChain ruleChain79 = kuromojiAnalysisTests75.failureAndSuccessEvents;
        kuromojiAnalysisTests53.failureAndSuccessEvents = ruleChain79;
        org.apache.lucene.index.IndexReader indexReader82 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum84 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum85 = null;
        kuromojiAnalysisTests53.assertDocsSkippingEquals("tests.badapples", indexReader82, 0, postingsEnum84, postingsEnum85, true);
        kuromojiAnalysisTests53.ensureCheckIndexPassed();
        kuromojiAnalysisTests53.ensureCheckIndexPassed();
        kuromojiAnalysisTests53.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotEquals("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests41, (java.lang.Object) kuromojiAnalysisTests53);
        kuromojiAnalysisTests41.ensureCleanedUp();
        kuromojiAnalysisTests41.restoreIndexWriterMaxDocs();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("", (java.lang.Object) ruleChain28, (java.lang.Object) kuromojiAnalysisTests41);
    }

    @Test
    public void test3610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3610");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) "");
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.apache.lucene.index.NumericDocValues numericDocValues10 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues11 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocValuesEquals("tests.awaitsfix", 0, numericDocValues10, numericDocValues11);
    }

    @Test
    public void test3611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3611");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) '#', (double) 1.0f);
    }

    @Test
    public void test3612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3612");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) 1, (float) 100L, (float) (byte) 0);
    }

    @Test
    public void test3613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3613");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.maxfailures", (long) (byte) 1, (long) 1);
    }

    @Test
    public void test3614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3614");
        java.lang.Object[] objArray0 = null;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling1 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.SOMETIMES;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray2 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] { throttling1 };
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingSet3 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray2);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(objArray0, (java.lang.Object[]) throttlingArray2);
    }

    @Test
    public void test3615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3615");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (long) (byte) -1, 10L);
    }

    @Test
    public void test3616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3616");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((double) 1.0f, (double) (short) 0, (double) 3);
    }

    @Test
    public void test3617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3617");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) 2, (long) (byte) -1);
    }

    @Test
    public void test3618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3618");
        double[] doubleArray1 = new double[] {};
        double[] doubleArray2 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray1, doubleArray2, (double) '4');
        double[] doubleArray5 = new double[] {};
        double[] doubleArray6 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray5, doubleArray6, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray1, doubleArray6, (double) (short) 10);
        double[] doubleArray11 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray1, doubleArray11, (double) 10L);
        double[] doubleArray14 = new double[] {};
        double[] doubleArray15 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray14, doubleArray15, (double) '4');
        double[] doubleArray18 = new double[] {};
        double[] doubleArray19 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray18, doubleArray19, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray15, doubleArray19, (double) (byte) -1);
        double[] doubleArray24 = new double[] {};
        double[] doubleArray25 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray24, doubleArray25, (double) '4');
        double[] doubleArray28 = new double[] {};
        double[] doubleArray29 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray28, doubleArray29, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray24, doubleArray29, (double) (short) 10);
        org.junit.Assert.assertArrayEquals(doubleArray15, doubleArray24, (double) 100);
        org.junit.Assert.assertArrayEquals(doubleArray11, doubleArray24, (double) '4');
        double[] doubleArray38 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.badapples", doubleArray24, doubleArray38, (double) (-1L));
    }

    @Test
    public void test3619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3619");
        float[] floatArray0 = null;
        float[] floatArray8 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray15 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray8, floatArray15, (float) (byte) 100);
        float[] floatArray25 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray32 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray25, floatArray32, (float) (byte) 100);
        float[] floatArray42 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray49 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray42, floatArray49, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray32, floatArray49, 1.0f);
        org.junit.Assert.assertArrayEquals(floatArray15, floatArray49, (float) 5);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(floatArray0, floatArray15, (float) 5);
    }

    @Test
    public void test3620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3620");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("hi!", (double) 'a', (double) 100, (double) 100.0f);
    }

    @Test
    public void test3621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3621");
        char[] charArray1 = new char[] {};
        char[] charArray2 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray1, charArray2);
        char[] charArray5 = new char[] {};
        char[] charArray6 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray5, charArray6);
        char[] charArray8 = new char[] {};
        char[] charArray9 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray8, charArray9);
        org.junit.Assert.assertArrayEquals(charArray6, charArray9);
        char[] charArray14 = new char[] {};
        char[] charArray15 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray14, charArray15);
        char[] charArray17 = new char[] {};
        char[] charArray18 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray17, charArray18);
        org.junit.Assert.assertArrayEquals(charArray15, charArray18);
        char[] charArray21 = new char[] {};
        char[] charArray22 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray21, charArray22);
        char[] charArray24 = new char[] {};
        char[] charArray25 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray24, charArray25);
        org.junit.Assert.assertArrayEquals(charArray22, charArray25);
        org.junit.Assert.assertArrayEquals("random", charArray15, charArray22);
        char[] charArray29 = new char[] {};
        char[] charArray30 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray29, charArray30);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", charArray22, charArray30);
        org.junit.Assert.assertArrayEquals(charArray9, charArray30);
        char[] charArray36 = new char[] {};
        char[] charArray37 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray36, charArray37);
        char[] charArray39 = new char[] {};
        char[] charArray40 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray39, charArray40);
        org.junit.Assert.assertArrayEquals(charArray37, charArray40);
        char[] charArray43 = new char[] {};
        char[] charArray44 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray43, charArray44);
        char[] charArray46 = new char[] {};
        char[] charArray47 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray46, charArray47);
        org.junit.Assert.assertArrayEquals(charArray44, charArray47);
        org.junit.Assert.assertArrayEquals("random", charArray37, charArray44);
        char[] charArray51 = new char[] {};
        char[] charArray52 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray51, charArray52);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", charArray44, charArray52);
        org.junit.Assert.assertArrayEquals("tests.nightly", charArray30, charArray52);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", charArray2, charArray30);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) "europarl.lines.txt.gz");
    }

    @Test
    public void test3622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3622");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum7 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum8 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("europarl.lines.txt.gz", indexReader5, (int) (short) 100, postingsEnum7, postingsEnum8);
        org.apache.lucene.index.NumericDocValues numericDocValues12 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues13 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.slow", (int) (byte) 0, numericDocValues12, numericDocValues13);
    }

    @Test
    public void test3623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3623");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests1.assertTermsEquals("", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests10 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule11 = kuromojiAnalysisTests10.ruleChain;
        kuromojiAnalysisTests10.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests10.tearDown();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests10, (java.lang.Object) (-1));
        kuromojiAnalysisTests10.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain17 = org.junit.rules.RuleChain.emptyRuleChain();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests19 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule20 = kuromojiAnalysisTests19.ruleChain;
        kuromojiAnalysisTests19.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests19);
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.Terms terms25 = null;
        org.apache.lucene.index.Terms terms26 = null;
        kuromojiAnalysisTests19.assertTermsEquals("random", indexReader24, terms25, terms26, false);
        org.junit.rules.RuleChain ruleChain29 = kuromojiAnalysisTests19.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement30 = null;
        org.junit.runner.Description description31 = null;
        org.junit.runners.model.Statement statement32 = ruleChain29.apply(statement30, description31);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule35 = kuromojiAnalysisTests34.ruleChain;
        kuromojiAnalysisTests34.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests34);
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.Terms terms40 = null;
        org.apache.lucene.index.Terms terms41 = null;
        kuromojiAnalysisTests34.assertTermsEquals("random", indexReader39, terms40, terms41, false);
        org.junit.rules.RuleChain ruleChain44 = kuromojiAnalysisTests34.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement45 = null;
        org.junit.runner.Description description46 = null;
        org.junit.runners.model.Statement statement47 = ruleChain44.apply(statement45, description46);
        org.junit.runner.Description description48 = null;
        org.junit.runners.model.Statement statement49 = ruleChain29.apply(statement47, description48);
        org.junit.runner.Description description50 = null;
        org.junit.runners.model.Statement statement51 = ruleChain17.apply(statement47, description50);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests52 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests52.tearDown();
        org.apache.lucene.index.IndexReader indexReader55 = null;
        org.apache.lucene.index.Terms terms56 = null;
        org.apache.lucene.index.Terms terms57 = null;
        kuromojiAnalysisTests52.assertTermsEquals("tests.failfast", indexReader55, terms56, terms57, false);
        org.apache.lucene.index.IndexReader indexReader61 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum63 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum64 = null;
        kuromojiAnalysisTests52.assertDocsSkippingEquals("tests.nightly", indexReader61, (int) (byte) -1, postingsEnum63, postingsEnum64, false);
        org.apache.lucene.index.IndexReader indexReader68 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum70 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum71 = null;
        kuromojiAnalysisTests52.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader68, (int) (short) -1, postingsEnum70, postingsEnum71);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests74 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule75 = kuromojiAnalysisTests74.ruleChain;
        kuromojiAnalysisTests74.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests74);
        org.junit.rules.RuleChain ruleChain78 = kuromojiAnalysisTests74.failureAndSuccessEvents;
        kuromojiAnalysisTests52.failureAndSuccessEvents = ruleChain78;
        org.apache.lucene.index.IndexReader indexReader81 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum83 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum84 = null;
        kuromojiAnalysisTests52.assertDocsSkippingEquals("tests.badapples", indexReader81, 0, postingsEnum83, postingsEnum84, true);
        kuromojiAnalysisTests52.resetCheckIndexStatus();
        org.junit.Assert.assertNotEquals((java.lang.Object) ruleChain17, (java.lang.Object) kuromojiAnalysisTests52);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests89 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule90 = kuromojiAnalysisTests89.ruleChain;
        org.junit.rules.RuleChain ruleChain91 = org.junit.rules.RuleChain.outerRule(testRule90);
        org.junit.rules.RuleChain ruleChain92 = ruleChain17.around(testRule90);
        kuromojiAnalysisTests10.failureAndSuccessEvents = ruleChain17;
        org.junit.rules.RuleChain ruleChain94 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain17);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain17;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("random", (java.lang.Object) ruleChain17);
    }

    @Test
    public void test3624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3624");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.nightly", indexReader10, (int) (byte) -1, postingsEnum12, postingsEnum13, false);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader17, (int) (short) -1, postingsEnum19, postingsEnum20);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule24 = kuromojiAnalysisTests23.ruleChain;
        kuromojiAnalysisTests23.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests23);
        org.junit.rules.RuleChain ruleChain27 = kuromojiAnalysisTests23.failureAndSuccessEvents;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain27;
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.badapples", indexReader30, 0, postingsEnum32, postingsEnum33, true);
        org.apache.lucene.index.IndexReader indexReader37 = null;
        org.apache.lucene.index.Terms terms38 = null;
        org.apache.lucene.index.Terms terms39 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.awaitsfix", indexReader37, terms38, terms39, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests42 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests42.tearDown();
        org.apache.lucene.index.IndexReader indexReader45 = null;
        org.apache.lucene.index.Fields fields46 = null;
        org.apache.lucene.index.Fields fields47 = null;
        kuromojiAnalysisTests42.assertFieldsEquals("enwiki.random.lines.txt", indexReader45, fields46, fields47, true);
        kuromojiAnalysisTests42.setUp();
        kuromojiAnalysisTests42.setIndexWriterMaxDocs((int) (byte) 1);
        org.apache.lucene.index.IndexReader indexReader54 = null;
        org.apache.lucene.index.Fields fields55 = null;
        org.apache.lucene.index.Fields fields56 = null;
        kuromojiAnalysisTests42.assertFieldsEquals("enwiki.random.lines.txt", indexReader54, fields55, fields56, false);
        org.junit.rules.TestRule testRule59 = kuromojiAnalysisTests42.ruleChain;
        java.lang.String str60 = kuromojiAnalysisTests42.getTestName();
        org.junit.rules.RuleChain ruleChain61 = kuromojiAnalysisTests42.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests62 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests62.tearDown();
        kuromojiAnalysisTests62.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests62.ensureCleanedUp();
        org.junit.rules.TestRule testRule66 = kuromojiAnalysisTests62.ruleChain;
        kuromojiAnalysisTests62.assertPathHasBeenCleared("europarl.lines.txt.gz");
        org.junit.Assert.assertNotSame((java.lang.Object) ruleChain61, (java.lang.Object) kuromojiAnalysisTests62);
        org.apache.lucene.index.IndexReader indexReader71 = null;
        org.apache.lucene.index.Terms terms72 = null;
        org.apache.lucene.index.Terms terms73 = null;
        kuromojiAnalysisTests62.assertTermsEquals("tests.monster", indexReader71, terms72, terms73, false);
        org.junit.rules.TestRule testRule76 = kuromojiAnalysisTests62.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", (java.lang.Object) indexReader37, (java.lang.Object) testRule76);
    }

    @Test
    public void test3625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3625");
        double[] doubleArray4 = new double[] {};
        double[] doubleArray5 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray4, doubleArray5, (double) '4');
        double[] doubleArray8 = new double[] {};
        double[] doubleArray9 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray8, doubleArray9, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray5, doubleArray9, (double) (byte) -1);
        double[] doubleArray14 = new double[] {};
        double[] doubleArray15 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray14, doubleArray15, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray5, doubleArray14, (double) 2);
        double[] doubleArray20 = new double[] {};
        double[] doubleArray21 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray20, doubleArray21, (double) '4');
        org.junit.Assert.assertArrayEquals("", doubleArray14, doubleArray20, (double) 1.0f);
        double[] doubleArray27 = new double[] {};
        double[] doubleArray28 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray27, doubleArray28, (double) '4');
        double[] doubleArray31 = new double[] {};
        double[] doubleArray32 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray31, doubleArray32, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray28, doubleArray32, (double) (byte) -1);
        double[] doubleArray37 = new double[] {};
        double[] doubleArray38 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray37, doubleArray38, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray28, doubleArray37, (double) 2);
        double[] doubleArray43 = new double[] {};
        double[] doubleArray44 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray43, doubleArray44, (double) '4');
        org.junit.Assert.assertArrayEquals("", doubleArray37, doubleArray43, (double) 1.0f);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", doubleArray14, doubleArray43, (-1.0d));
        double[] doubleArray51 = new double[] {};
        double[] doubleArray52 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray51, doubleArray52, (double) '4');
        double[] doubleArray55 = new double[] {};
        double[] doubleArray56 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray55, doubleArray56, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray52, doubleArray56, (double) (byte) -1);
        double[] doubleArray61 = new double[] {};
        double[] doubleArray62 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray61, doubleArray62, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray52, doubleArray61, (double) 2);
        org.junit.Assert.assertArrayEquals(doubleArray14, doubleArray61, (double) 'a');
        double[] doubleArray69 = new double[] {};
        double[] doubleArray70 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray69, doubleArray70, (double) '4');
        double[] doubleArray73 = new double[] {};
        double[] doubleArray74 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray73, doubleArray74, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray69, doubleArray74, (double) (short) 10);
        org.junit.Assert.assertArrayEquals("tests.weekly", doubleArray61, doubleArray69, (double) (byte) 1);
        double[] doubleArray83 = new double[] { 1, (byte) 1 };
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.slow", doubleArray69, doubleArray83, (double) (byte) 0);
    }

    @Test
    public void test3626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3626");
        char[] charArray3 = new char[] {};
        char[] charArray4 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray3, charArray4);
        char[] charArray6 = new char[] {};
        char[] charArray7 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray6, charArray7);
        org.junit.Assert.assertArrayEquals(charArray4, charArray7);
        char[] charArray11 = new char[] {};
        char[] charArray12 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray11, charArray12);
        char[] charArray14 = new char[] {};
        char[] charArray15 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray14, charArray15);
        org.junit.Assert.assertArrayEquals(charArray12, charArray15);
        char[] charArray18 = new char[] {};
        char[] charArray19 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray18, charArray19);
        char[] charArray21 = new char[] {};
        char[] charArray22 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray21, charArray22);
        org.junit.Assert.assertArrayEquals(charArray19, charArray22);
        org.junit.Assert.assertArrayEquals("random", charArray12, charArray19);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", charArray7, charArray19);
        char[] charArray28 = new char[] {};
        char[] charArray29 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray28, charArray29);
        char[] charArray31 = new char[] {};
        char[] charArray32 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray31, charArray32);
        org.junit.Assert.assertArrayEquals(charArray29, charArray32);
        char[] charArray36 = new char[] {};
        char[] charArray37 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray36, charArray37);
        char[] charArray39 = new char[] {};
        char[] charArray40 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray39, charArray40);
        org.junit.Assert.assertArrayEquals(charArray37, charArray40);
        char[] charArray43 = new char[] {};
        char[] charArray44 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray43, charArray44);
        char[] charArray46 = new char[] {};
        char[] charArray47 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray46, charArray47);
        org.junit.Assert.assertArrayEquals(charArray44, charArray47);
        org.junit.Assert.assertArrayEquals("random", charArray37, charArray44);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", charArray32, charArray44);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", charArray7, charArray32);
        char[] charArray53 = new char[] {};
        char[] charArray54 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray53, charArray54);
        org.junit.Assert.assertArrayEquals(charArray32, charArray54);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests57 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests57.tearDown();
        org.apache.lucene.index.IndexReader indexReader60 = null;
        org.apache.lucene.index.Fields fields61 = null;
        org.apache.lucene.index.Fields fields62 = null;
        kuromojiAnalysisTests57.assertFieldsEquals("enwiki.random.lines.txt", indexReader60, fields61, fields62, true);
        org.junit.rules.RuleChain ruleChain65 = kuromojiAnalysisTests57.failureAndSuccessEvents;
        org.apache.lucene.index.PostingsEnum postingsEnum67 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum68 = null;
        kuromojiAnalysisTests57.assertDocsEnumEquals("tests.maxfailures", postingsEnum67, postingsEnum68, true);
        kuromojiAnalysisTests57.assertPathHasBeenCleared("enwiki.random.lines.txt");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("random", (java.lang.Object) charArray54, (java.lang.Object) kuromojiAnalysisTests57);
    }

    @Test
    public void test3627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3627");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals(10.0d, 0.0d, 100.0d);
    }

    @Test
    public void test3628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3628");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "tests.nightly", "europarl.lines.txt.gz", "tests.maxfailures", "tests.badapples", "tests.failfast" };
        java.util.Set<java.lang.CharSequence> charSequenceSet7 = org.apache.lucene.util.LuceneTestCase.asSet(charSequenceArray6);
        java.util.Set<java.lang.CharSequence> charSequenceSet8 = org.apache.lucene.util.LuceneTestCase.asSet(charSequenceArray6);
        java.io.Serializable[] serializableArray10 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet11 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray10);
        java.io.Serializable[] serializableArray12 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet13 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray12);
        java.io.Serializable[] serializableArray14 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet15 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray14);
        java.io.Serializable[] serializableArray16 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet17 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray16);
        java.io.Serializable[] serializableArray18 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet19 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray18);
        java.util.Set[] setArray21 = new java.util.Set[5];
        @SuppressWarnings("unchecked")
        java.util.Set<java.io.Serializable>[] serializableSetArray22 = (java.util.Set<java.io.Serializable>[]) setArray21;
        serializableSetArray22[0] = serializableSet11;
        serializableSetArray22[1] = serializableSet13;
        serializableSetArray22[2] = serializableSet15;
        serializableSetArray22[3] = serializableSet17;
        serializableSetArray22[4] = serializableSet19;
        java.util.Set<java.util.Set<java.io.Serializable>> serializableSetSet33 = org.apache.lucene.util.LuceneTestCase.asSet(serializableSetArray22);
        java.util.Set<java.util.Set<java.io.Serializable>> serializableSetSet34 = org.apache.lucene.util.LuceneTestCase.asSet(serializableSetArray22);
        java.util.List<java.util.Set<java.io.Serializable>> serializableSetList35 = org.elasticsearch.test.ESTestCase.randomSubsetOf(4, serializableSetArray22);
        // during test generation this statement threw an exception of type org.junit.internal.ArrayComparisonFailure in error
        org.junit.Assert.assertEquals("tests.awaitsfix", (java.lang.Object[]) charSequenceArray6, (java.lang.Object[]) serializableSetArray22);
    }

    @Test
    public void test3629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3629");
        java.lang.Object[] objArray0 = null;
        java.io.Serializable[] serializableArray8 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet9 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray8);
        java.io.Serializable[] serializableArray11 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet12 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray11);
        java.io.Serializable[] serializableArray13 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet14 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray13);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray11, (java.lang.Object[]) serializableArray13);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray8, (java.lang.Object[]) serializableArray13);
        java.io.Serializable[] serializableArray18 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet19 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray18);
        java.io.Serializable[] serializableArray21 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet22 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray21);
        java.io.Serializable[] serializableArray23 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet24 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray23);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray21, (java.lang.Object[]) serializableArray23);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray18, (java.lang.Object[]) serializableArray23);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray8, (java.lang.Object[]) serializableArray18);
        java.util.concurrent.ExecutorService[] executorServiceArray28 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean29 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray28);
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) serializableArray8, (java.lang.Object[]) executorServiceArray28);
        java.io.Serializable[] serializableArray32 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet33 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray32);
        java.io.Serializable[] serializableArray35 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet36 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray35);
        java.io.Serializable[] serializableArray38 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet39 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray38);
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet41 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray40);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray38, (java.lang.Object[]) serializableArray40);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray35, (java.lang.Object[]) serializableArray40);
        org.junit.Assert.assertArrayEquals("tests.nightly", (java.lang.Object[]) serializableArray32, (java.lang.Object[]) serializableArray40);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray8, (java.lang.Object[]) serializableArray32);
        java.util.concurrent.ExecutorService[] executorServiceArray46 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean47 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray46);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", (java.lang.Object[]) serializableArray8, (java.lang.Object[]) executorServiceArray46);
        org.elasticsearch.test.ESTestCase[][] eSTestCaseArray49 = new org.elasticsearch.test.ESTestCase[][] {};
        java.util.Set<org.elasticsearch.test.ESTestCase[]> eSTestCaseArraySet50 = org.apache.lucene.util.LuceneTestCase.asSet(eSTestCaseArray49);
        org.junit.Assert.assertEquals("", (java.lang.Object[]) serializableArray8, (java.lang.Object[]) eSTestCaseArray49);
        java.util.concurrent.ExecutorService[] executorServiceArray53 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean54 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray53);
        java.io.Serializable[] serializableArray56 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet57 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray56);
        java.io.Serializable[] serializableArray58 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet59 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray58);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray56, (java.lang.Object[]) serializableArray58);
        org.junit.Assert.assertArrayEquals("tests.badapples", (java.lang.Object[]) executorServiceArray53, (java.lang.Object[]) serializableArray58);
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) serializableArray8, (java.lang.Object[]) executorServiceArray53);
        java.util.concurrent.ExecutorService[] executorServiceArray64 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean65 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray64);
        java.io.Serializable[] serializableArray67 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet68 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray67);
        java.io.Serializable[] serializableArray70 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet71 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray70);
        java.io.Serializable[] serializableArray73 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet74 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray73);
        java.io.Serializable[] serializableArray75 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet76 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray75);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray73, (java.lang.Object[]) serializableArray75);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray70, (java.lang.Object[]) serializableArray75);
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) serializableArray67, (java.lang.Object[]) serializableArray75);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray64, (java.lang.Object[]) serializableArray67);
        boolean boolean81 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray64);
        boolean boolean82 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray64);
        org.junit.Assert.assertNotNull("<unknown>", (java.lang.Object) executorServiceArray64);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) executorServiceArray53, (java.lang.Object[]) executorServiceArray64);
        boolean boolean85 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray53);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(objArray0, (java.lang.Object[]) executorServiceArray53);
    }

    @Test
    public void test3630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3630");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader9, (int) (byte) -1, postingsEnum11, postingsEnum12, false);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader16, (int) (short) -1, postingsEnum18, postingsEnum19);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests22 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule23 = kuromojiAnalysisTests22.ruleChain;
        kuromojiAnalysisTests22.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests22);
        org.junit.rules.RuleChain ruleChain26 = kuromojiAnalysisTests22.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain26;
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.badapples", indexReader29, 0, postingsEnum31, postingsEnum32, true);
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.Terms terms37 = null;
        org.apache.lucene.index.Terms terms38 = null;
        kuromojiAnalysisTests0.assertTermsEquals("random", indexReader36, terms37, terms38, false);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        java.lang.String str42 = kuromojiAnalysisTests0.getTestName();
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests0);
        org.apache.lucene.index.IndexReader indexReader45 = null;
        org.apache.lucene.index.Fields fields46 = null;
        org.apache.lucene.index.Fields fields47 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("tests.badapples", indexReader45, fields46, fields47, true);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test3631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3631");
        java.io.Serializable[] serializableArray6 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet7 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray6);
        java.io.Serializable[] serializableArray9 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet10 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray9);
        java.io.Serializable[] serializableArray11 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet12 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray11);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray9, (java.lang.Object[]) serializableArray11);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray6, (java.lang.Object[]) serializableArray11);
        java.io.Serializable[] serializableArray16 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet17 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray16);
        java.io.Serializable[] serializableArray19 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet20 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray19);
        java.io.Serializable[] serializableArray21 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet22 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray21);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray19, (java.lang.Object[]) serializableArray21);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray16, (java.lang.Object[]) serializableArray21);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray6, (java.lang.Object[]) serializableArray16);
        java.util.concurrent.ExecutorService[] executorServiceArray26 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean27 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray26);
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) serializableArray6, (java.lang.Object[]) executorServiceArray26);
        boolean boolean29 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray26);
        org.junit.Assert.assertNotNull("tests.failfast", (java.lang.Object) executorServiceArray26);
        boolean boolean31 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray26);
        org.elasticsearch.test.ESTestCase[][] eSTestCaseArray32 = new org.elasticsearch.test.ESTestCase[][] {};
        java.util.Set<org.elasticsearch.test.ESTestCase[]> eSTestCaseArraySet33 = org.apache.lucene.util.LuceneTestCase.asSet(eSTestCaseArray32);
        java.util.Set<org.elasticsearch.test.ESTestCase[]> eSTestCaseArraySet34 = org.apache.lucene.util.LuceneTestCase.asSet(eSTestCaseArray32);
        org.junit.Assert.assertEquals("", (java.lang.Object[]) executorServiceArray26, (java.lang.Object[]) eSTestCaseArray32);
        org.apache.lucene.search.QueryCachingPolicy[] queryCachingPolicyArray36 = new org.apache.lucene.search.QueryCachingPolicy[] {};
        org.apache.lucene.search.QueryCachingPolicy[] queryCachingPolicyArray37 = new org.apache.lucene.search.QueryCachingPolicy[] {};
        org.apache.lucene.search.QueryCachingPolicy[] queryCachingPolicyArray38 = new org.apache.lucene.search.QueryCachingPolicy[] {};
        org.apache.lucene.search.QueryCachingPolicy[] queryCachingPolicyArray39 = new org.apache.lucene.search.QueryCachingPolicy[] {};
        org.apache.lucene.search.QueryCachingPolicy[] queryCachingPolicyArray40 = new org.apache.lucene.search.QueryCachingPolicy[] {};
        org.apache.lucene.search.QueryCachingPolicy[] queryCachingPolicyArray41 = new org.apache.lucene.search.QueryCachingPolicy[] {};
        org.apache.lucene.search.QueryCachingPolicy[][] queryCachingPolicyArray42 = new org.apache.lucene.search.QueryCachingPolicy[][] { queryCachingPolicyArray36, queryCachingPolicyArray37, queryCachingPolicyArray38, queryCachingPolicyArray39, queryCachingPolicyArray40, queryCachingPolicyArray41 };
        java.util.Set<org.apache.lucene.search.QueryCachingPolicy[]> queryCachingPolicyArraySet43 = org.apache.lucene.util.LuceneTestCase.asSet(queryCachingPolicyArray42);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", (java.lang.Object[]) executorServiceArray26, (java.lang.Object[]) queryCachingPolicyArray42);
    }

    @Test
    public void test3632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3632");
        java.io.Serializable[] serializableArray4 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet5 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray4);
        java.io.Serializable[] serializableArray7 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet8 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray7);
        java.io.Serializable[] serializableArray9 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet10 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray9);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray7, (java.lang.Object[]) serializableArray9);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray4, (java.lang.Object[]) serializableArray9);
        java.io.Serializable[] serializableArray14 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet15 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray14);
        java.io.Serializable[] serializableArray17 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet18 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray17);
        java.io.Serializable[] serializableArray19 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet20 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray19);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray17, (java.lang.Object[]) serializableArray19);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray14, (java.lang.Object[]) serializableArray19);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray4, (java.lang.Object[]) serializableArray14);
        java.util.concurrent.ExecutorService[] executorServiceArray24 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean25 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray24);
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) serializableArray4, (java.lang.Object[]) executorServiceArray24);
        java.io.Serializable[] serializableArray29 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet30 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray29);
        java.io.Serializable[] serializableArray31 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet32 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray31);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray29, (java.lang.Object[]) serializableArray31);
        java.util.concurrent.ExecutorService[] executorServiceArray34 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean35 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray34);
        boolean boolean36 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray34);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray29, (java.lang.Object[]) executorServiceArray34);
        org.junit.Assert.assertNotNull("tests.nightly", (java.lang.Object) executorServiceArray34);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray4, (java.lang.Object[]) executorServiceArray34);
        org.junit.Assert.assertNotNull("tests.nightly", (java.lang.Object) serializableArray4);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) serializableArray4);
    }

    @Test
    public void test3633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3633");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) '4', (long) 'a');
    }

    @Test
    public void test3634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3634");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader9, (int) (byte) -1, postingsEnum11, postingsEnum12, false);
        org.junit.rules.RuleChain ruleChain15 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.maxfailures", postingsEnum18, postingsEnum19, false);
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        org.apache.lucene.index.Fields fields25 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("", indexReader23, fields24, fields25, true);
        kuromojiAnalysisTests0.setIndexWriterMaxDocs(0);
        org.junit.rules.TestRule testRule30 = kuromojiAnalysisTests0.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test3635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3635");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1);
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.weekly", indexReader6, (int) (short) 1, postingsEnum8, postingsEnum9);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests11 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests11.tearDown();
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests11.assertTermsEquals("tests.failfast", indexReader14, terms15, terms16, false);
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        kuromojiAnalysisTests11.assertDocsSkippingEquals("tests.nightly", indexReader20, (int) (byte) -1, postingsEnum22, postingsEnum23, false);
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        kuromojiAnalysisTests11.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader27, (int) (short) -1, postingsEnum29, postingsEnum30);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests33 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule34 = kuromojiAnalysisTests33.ruleChain;
        kuromojiAnalysisTests33.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests33);
        org.junit.rules.RuleChain ruleChain37 = kuromojiAnalysisTests33.failureAndSuccessEvents;
        kuromojiAnalysisTests11.failureAndSuccessEvents = ruleChain37;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain37;
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader42 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum44 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.weekly", indexReader42, (int) 'a', postingsEnum44, postingsEnum45, true);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.apache.lucene.index.NumericDocValues numericDocValues53 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues54 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocValuesEquals("<unknown>", (int) (byte) 1, numericDocValues53, numericDocValues54);
    }

    @Test
    public void test3636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3636");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.nightly", indexReader7, (int) ' ', postingsEnum9, postingsEnum10);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule13 = kuromojiAnalysisTests12.ruleChain;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule13;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule13;
        org.junit.rules.RuleChain ruleChain16 = org.junit.rules.RuleChain.outerRule(testRule13);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain16;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests18 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests18.tearDown();
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.Terms terms22 = null;
        org.apache.lucene.index.Terms terms23 = null;
        kuromojiAnalysisTests18.assertTermsEquals("tests.failfast", indexReader21, terms22, terms23, false);
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        kuromojiAnalysisTests18.assertDocsSkippingEquals("tests.nightly", indexReader27, (int) (byte) -1, postingsEnum29, postingsEnum30, false);
        org.junit.rules.RuleChain ruleChain33 = kuromojiAnalysisTests18.failureAndSuccessEvents;
        org.junit.rules.TestRule testRule34 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule34;
        org.junit.rules.RuleChain ruleChain36 = ruleChain33.around(testRule34);
        org.junit.rules.RuleChain ruleChain37 = ruleChain16.around((org.junit.rules.TestRule) ruleChain36);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests39 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader41 = null;
        org.apache.lucene.index.Terms terms42 = null;
        org.apache.lucene.index.Terms terms43 = null;
        kuromojiAnalysisTests39.assertTermsEquals("", indexReader41, terms42, terms43, false);
        kuromojiAnalysisTests39.setUp();
        kuromojiAnalysisTests39.resetCheckIndexStatus();
        kuromojiAnalysisTests39.setIndexWriterMaxDocs((int) (byte) 10);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests50 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests50.tearDown();
        org.apache.lucene.index.IndexReader indexReader53 = null;
        org.apache.lucene.index.Fields fields54 = null;
        org.apache.lucene.index.Fields fields55 = null;
        kuromojiAnalysisTests50.assertFieldsEquals("enwiki.random.lines.txt", indexReader53, fields54, fields55, true);
        kuromojiAnalysisTests50.setUp();
        kuromojiAnalysisTests50.setIndexWriterMaxDocs((int) (byte) 1);
        kuromojiAnalysisTests50.resetCheckIndexStatus();
        kuromojiAnalysisTests50.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests50.ensureCleanedUp();
        kuromojiAnalysisTests50.ensureCheckIndexPassed();
        kuromojiAnalysisTests50.ensureAllSearchContextsReleased();
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) (byte) 10, (java.lang.Object) kuromojiAnalysisTests50);
        org.junit.rules.TestRule testRule68 = kuromojiAnalysisTests50.ruleChain;
        org.junit.rules.RuleChain ruleChain69 = org.junit.rules.RuleChain.outerRule(testRule68);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.badapples", (java.lang.Object) ruleChain16, (java.lang.Object) ruleChain69);
    }

    @Test
    public void test3637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3637");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.Terms terms10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader9, terms10, terms11, false);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("", indexReader16, (int) (short) 10, postingsEnum18, postingsEnum19);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) "");
    }

    @Test
    public void test3638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3638");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", (double) 'a', (double) 100, (double) 0.0f);
    }

    @Test
    public void test3639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3639");
        float[] floatArray0 = null;
        float[] floatArray9 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray16 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray9, floatArray16, (float) (byte) 100);
        float[] floatArray26 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray33 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray26, floatArray33, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray16, floatArray33, 1.0f);
        float[] floatArray45 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray52 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray45, floatArray52, (float) (byte) 100);
        float[] floatArray62 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray69 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray62, floatArray69, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray52, floatArray69, 1.0f);
        org.junit.Assert.assertArrayEquals("tests.failfast", floatArray16, floatArray69, (float) (-1));
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(floatArray0, floatArray69, 1.0f);
    }

    @Test
    public void test3640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3640");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests2.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        org.apache.lucene.index.Fields fields7 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("enwiki.random.lines.txt", indexReader5, fields6, fields7, true);
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests2.assertDocsEnumEquals("tests.monster", postingsEnum11, postingsEnum12, true);
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        kuromojiAnalysisTests2.ensureCleanedUp();
        java.io.Serializable[] serializableArray18 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet19 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray18);
        java.io.Serializable[] serializableArray20 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet21 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray20);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray18, (java.lang.Object[]) serializableArray20);
        java.util.concurrent.ExecutorService[] executorServiceArray23 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean24 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray23);
        boolean boolean25 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray23);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray18, (java.lang.Object[]) executorServiceArray23);
        boolean boolean27 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray23);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) executorServiceArray23);
        java.util.concurrent.ExecutorService[] executorServiceArray29 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean30 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray29);
        boolean boolean31 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray29);
        boolean boolean32 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray29);
        boolean boolean33 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray29);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) executorServiceArray23, (java.lang.Object[]) executorServiceArray29);
        java.io.Serializable[] serializableArray36 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet37 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray36);
        java.io.Serializable[] serializableArray39 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet40 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray39);
        java.io.Serializable[] serializableArray41 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet42 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray41);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray39, (java.lang.Object[]) serializableArray41);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray36, (java.lang.Object[]) serializableArray41);
        java.io.Serializable[] serializableArray47 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet48 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray47);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet51 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray50);
        java.io.Serializable[] serializableArray52 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet53 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray52);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray50, (java.lang.Object[]) serializableArray52);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray47, (java.lang.Object[]) serializableArray52);
        java.io.Serializable[] serializableArray57 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet58 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray57);
        java.io.Serializable[] serializableArray60 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet61 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray60);
        java.io.Serializable[] serializableArray62 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet63 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray62);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray60, (java.lang.Object[]) serializableArray62);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray57, (java.lang.Object[]) serializableArray62);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray47, (java.lang.Object[]) serializableArray57);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray41, (java.lang.Object[]) serializableArray57);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray29, (java.lang.Object[]) serializableArray57);
        java.io.Serializable[] serializableArray69 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet70 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray69);
        java.io.Serializable[] serializableArray71 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet72 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray71);
        java.io.Serializable[] serializableArray73 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet74 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray73);
        java.io.Serializable[] serializableArray75 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet76 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray75);
        java.io.Serializable[] serializableArray77 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet78 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray77);
        java.util.Set[] setArray80 = new java.util.Set[5];
        @SuppressWarnings("unchecked")
        java.util.Set<java.io.Serializable>[] serializableSetArray81 = (java.util.Set<java.io.Serializable>[]) setArray80;
        serializableSetArray81[0] = serializableSet70;
        serializableSetArray81[1] = serializableSet72;
        serializableSetArray81[2] = serializableSet74;
        serializableSetArray81[3] = serializableSet76;
        serializableSetArray81[4] = serializableSet78;
        java.util.Set<java.util.Set<java.io.Serializable>> serializableSetSet92 = org.apache.lucene.util.LuceneTestCase.asSet(serializableSetArray81);
        java.util.Set<java.util.Set<java.io.Serializable>> serializableSetSet93 = org.apache.lucene.util.LuceneTestCase.asSet(serializableSetArray81);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", (java.lang.Object[]) executorServiceArray29, (java.lang.Object[]) serializableSetArray81);
    }

    @Test
    public void test3641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3641");
        byte[] byteArray3 = new byte[] {};
        byte[] byteArray4 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray3, byteArray4);
        byte[] byteArray8 = new byte[] {};
        byte[] byteArray9 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray8, byteArray9);
        byte[] byteArray12 = new byte[] {};
        byte[] byteArray13 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray12, byteArray13);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray8, byteArray12);
        byte[] byteArray18 = new byte[] {};
        byte[] byteArray19 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray18, byteArray19);
        byte[] byteArray22 = new byte[] {};
        byte[] byteArray23 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray22, byteArray23);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray18, byteArray22);
        org.junit.Assert.assertArrayEquals(byteArray12, byteArray18);
        org.junit.Assert.assertArrayEquals("", byteArray3, byteArray12);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests28 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests28.tearDown();
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.Terms terms32 = null;
        org.apache.lucene.index.Terms terms33 = null;
        kuromojiAnalysisTests28.assertTermsEquals("tests.failfast", indexReader31, terms32, terms33, false);
        org.apache.lucene.index.IndexReader indexReader37 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum39 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum40 = null;
        kuromojiAnalysisTests28.assertDocsSkippingEquals("tests.nightly", indexReader37, (int) (byte) -1, postingsEnum39, postingsEnum40, false);
        org.junit.rules.RuleChain ruleChain43 = kuromojiAnalysisTests28.failureAndSuccessEvents;
        kuromojiAnalysisTests28.resetCheckIndexStatus();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests46 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule47 = kuromojiAnalysisTests46.ruleChain;
        kuromojiAnalysisTests46.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests46);
        org.junit.rules.RuleChain ruleChain50 = kuromojiAnalysisTests46.failureAndSuccessEvents;
        kuromojiAnalysisTests46.setUp();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests28, (java.lang.Object) kuromojiAnalysisTests46);
        org.junit.Assert.assertNotEquals("tests.maxfailures", (java.lang.Object) byteArray12, (java.lang.Object) kuromojiAnalysisTests46);
        org.apache.lucene.index.IndexReader indexReader55 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum57 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum58 = null;
        kuromojiAnalysisTests46.assertPositionsSkippingEquals("tests.badapples", indexReader55, (int) ' ', postingsEnum57, postingsEnum58);
        kuromojiAnalysisTests46.ensureCheckIndexPassed();
        kuromojiAnalysisTests46.ensureCheckIndexPassed();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests62 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests62.tearDown();
        org.apache.lucene.index.IndexReader indexReader65 = null;
        org.apache.lucene.index.Terms terms66 = null;
        org.apache.lucene.index.Terms terms67 = null;
        kuromojiAnalysisTests62.assertTermsEquals("tests.failfast", indexReader65, terms66, terms67, false);
        org.apache.lucene.index.IndexReader indexReader71 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum73 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum74 = null;
        kuromojiAnalysisTests62.assertDocsSkippingEquals("tests.nightly", indexReader71, (int) (byte) -1, postingsEnum73, postingsEnum74, false);
        org.junit.rules.RuleChain ruleChain77 = kuromojiAnalysisTests62.failureAndSuccessEvents;
        kuromojiAnalysisTests62.resetCheckIndexStatus();
        org.apache.lucene.index.PostingsEnum postingsEnum80 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum81 = null;
        kuromojiAnalysisTests62.assertDocsEnumEquals("tests.maxfailures", postingsEnum80, postingsEnum81, false);
        org.apache.lucene.index.IndexReader indexReader85 = null;
        org.apache.lucene.index.Fields fields86 = null;
        org.apache.lucene.index.Fields fields87 = null;
        kuromojiAnalysisTests62.assertFieldsEquals("tests.badapples", indexReader85, fields86, fields87, false);
        kuromojiAnalysisTests62.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule91 = kuromojiAnalysisTests62.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) kuromojiAnalysisTests46, (java.lang.Object) testRule91);
    }

    @Test
    public void test3642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3642");
        org.elasticsearch.test.ESTestCase[][] eSTestCaseArray2 = new org.elasticsearch.test.ESTestCase[][] {};
        java.util.Set<org.elasticsearch.test.ESTestCase[]> eSTestCaseArraySet3 = org.apache.lucene.util.LuceneTestCase.asSet(eSTestCaseArray2);
        java.io.Serializable[] serializableArray8 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet9 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray8);
        java.io.Serializable[] serializableArray11 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet12 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray11);
        java.io.Serializable[] serializableArray13 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet14 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray13);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray11, (java.lang.Object[]) serializableArray13);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray8, (java.lang.Object[]) serializableArray13);
        java.io.Serializable[] serializableArray18 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet19 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray18);
        java.io.Serializable[] serializableArray21 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet22 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray21);
        java.io.Serializable[] serializableArray23 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet24 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray23);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray21, (java.lang.Object[]) serializableArray23);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray18, (java.lang.Object[]) serializableArray23);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray8, (java.lang.Object[]) serializableArray18);
        org.junit.Assert.assertNotNull((java.lang.Object) serializableArray18);
        org.junit.Assert.assertNotEquals((java.lang.Object) 2, (java.lang.Object) serializableArray18);
        java.util.concurrent.ExecutorService[] executorServiceArray30 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean31 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray30);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray18, (java.lang.Object[]) executorServiceArray30);
        org.junit.Assert.assertEquals("tests.maxfailures", (java.lang.Object[]) eSTestCaseArray2, (java.lang.Object[]) executorServiceArray30);
        java.lang.Object[] objArray34 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", (java.lang.Object[]) executorServiceArray30, objArray34);
    }

    @Test
    public void test3643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3643");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests2.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        kuromojiAnalysisTests2.assertTermsEquals("tests.failfast", indexReader5, terms6, terms7, false);
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests2.assertTermsEquals("", indexReader11, terms12, terms13, false);
        org.junit.rules.RuleChain ruleChain16 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests2);
        kuromojiAnalysisTests2.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests2.assertDocsAndPositionsEnumEquals("tests.badapples", postingsEnum20, postingsEnum21);
    }

    @Test
    public void test3644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3644");
        java.lang.Object[] objArray0 = null;
        java.io.Serializable[] serializableArray5 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet6 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray5);
        java.io.Serializable[] serializableArray8 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet9 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray8);
        java.io.Serializable[] serializableArray10 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet11 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray10);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray8, (java.lang.Object[]) serializableArray10);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray5, (java.lang.Object[]) serializableArray10);
        java.io.Serializable[] serializableArray15 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet16 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray15);
        java.io.Serializable[] serializableArray18 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet19 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray18);
        java.io.Serializable[] serializableArray20 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet21 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray20);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray18, (java.lang.Object[]) serializableArray20);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray15, (java.lang.Object[]) serializableArray20);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray5, (java.lang.Object[]) serializableArray15);
        java.io.Serializable[] serializableArray28 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet29 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray28);
        java.io.Serializable[] serializableArray31 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet32 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray31);
        java.io.Serializable[] serializableArray33 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet34 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray33);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray31, (java.lang.Object[]) serializableArray33);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray28, (java.lang.Object[]) serializableArray33);
        java.io.Serializable[] serializableArray38 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet39 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray38);
        java.io.Serializable[] serializableArray41 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet42 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray41);
        java.io.Serializable[] serializableArray43 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet44 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray43);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray41, (java.lang.Object[]) serializableArray43);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray38, (java.lang.Object[]) serializableArray43);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray28, (java.lang.Object[]) serializableArray38);
        java.io.Serializable[] serializableArray49 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet50 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray49);
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet52 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray51);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray49, (java.lang.Object[]) serializableArray51);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray28, (java.lang.Object[]) serializableArray49);
        org.junit.Assert.assertNotNull("tests.awaitsfix", (java.lang.Object) serializableArray49);
        org.junit.Assert.assertArrayEquals("tests.nightly", (java.lang.Object[]) serializableArray15, (java.lang.Object[]) serializableArray49);
        java.util.concurrent.ExecutorService[] executorServiceArray57 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean58 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray57);
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) serializableArray49, (java.lang.Object[]) executorServiceArray57);
        java.io.Serializable[] serializableArray63 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet64 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray63);
        java.io.Serializable[] serializableArray66 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet67 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray66);
        java.io.Serializable[] serializableArray68 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet69 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray68);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray66, (java.lang.Object[]) serializableArray68);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray63, (java.lang.Object[]) serializableArray68);
        java.io.Serializable[] serializableArray73 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet74 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray73);
        java.io.Serializable[] serializableArray76 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet77 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray76);
        java.io.Serializable[] serializableArray78 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet79 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray78);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray76, (java.lang.Object[]) serializableArray78);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray73, (java.lang.Object[]) serializableArray78);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray63, (java.lang.Object[]) serializableArray73);
        java.util.concurrent.ExecutorService[] executorServiceArray83 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean84 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray83);
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) serializableArray63, (java.lang.Object[]) executorServiceArray83);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray57, (java.lang.Object[]) executorServiceArray83);
        boolean boolean87 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray57);
        boolean boolean88 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray57);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(objArray0, (java.lang.Object[]) executorServiceArray57);
    }

    @Test
    public void test3645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3645");
        java.lang.Object obj0 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests1.assertTermsEquals("", indexReader10, terms11, terms12, false);
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        java.lang.String str16 = kuromojiAnalysisTests1.getTestName();
        org.junit.rules.RuleChain ruleChain17 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(obj0, (java.lang.Object) ruleChain17);
    }

    @Test
    public void test3646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3646");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (-1L), (double) 0.0f);
    }

    @Test
    public void test3647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3647");
        double[] doubleArray1 = null;
        double[] doubleArray3 = new double[] {};
        double[] doubleArray4 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray3, doubleArray4, (double) '4');
        double[] doubleArray7 = new double[] {};
        double[] doubleArray8 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray7, doubleArray8, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray4, doubleArray8, (double) (byte) -1);
        double[] doubleArray13 = new double[] {};
        double[] doubleArray14 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray13, doubleArray14, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray4, doubleArray13, (double) 2);
        double[] doubleArray19 = new double[] {};
        double[] doubleArray20 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray19, doubleArray20, (double) '4');
        double[] doubleArray23 = new double[] {};
        double[] doubleArray24 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray23, doubleArray24, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray20, doubleArray24, (double) (byte) -1);
        double[] doubleArray29 = new double[] {};
        double[] doubleArray30 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray29, doubleArray30, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray20, doubleArray29, (double) 2);
        org.junit.Assert.assertArrayEquals(doubleArray13, doubleArray20, (double) (short) 0);
        double[] doubleArray37 = new double[] {};
        double[] doubleArray38 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray37, doubleArray38, (double) '4');
        double[] doubleArray41 = new double[] {};
        double[] doubleArray42 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray41, doubleArray42, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray37, doubleArray42, (double) (short) 10);
        double[] doubleArray47 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray37, doubleArray47, (double) 10L);
        double[] doubleArray50 = new double[] {};
        double[] doubleArray51 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray50, doubleArray51, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray47, doubleArray51, (double) (byte) 1);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", doubleArray20, doubleArray47, (double) 2);
        double[] doubleArray58 = new double[] {};
        double[] doubleArray59 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray58, doubleArray59, (double) '4');
        double[] doubleArray62 = new double[] {};
        double[] doubleArray63 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray62, doubleArray63, (double) '4');
        double[] doubleArray66 = new double[] {};
        double[] doubleArray67 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray66, doubleArray67, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray63, doubleArray67, (double) (byte) -1);
        double[] doubleArray72 = new double[] {};
        double[] doubleArray73 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray72, doubleArray73, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray63, doubleArray72, (double) 2);
        org.junit.Assert.assertArrayEquals(doubleArray58, doubleArray63, 0.0d);
        org.junit.Assert.assertArrayEquals(doubleArray20, doubleArray58, (double) '#');
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("", doubleArray1, doubleArray20, 0.0d);
    }

    @Test
    public void test3648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3648");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((-1.0f), (float) 10L, 0.0f);
    }

    @Test
    public void test3649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3649");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 1.0f, 0.0d);
    }

    @Test
    public void test3650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3650");
        java.io.Serializable[] serializableArray3 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet4 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray3);
        java.io.Serializable[] serializableArray6 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet7 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray6);
        java.io.Serializable[] serializableArray9 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet10 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray9);
        java.io.Serializable[] serializableArray11 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet12 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray11);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray9, (java.lang.Object[]) serializableArray11);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray6, (java.lang.Object[]) serializableArray11);
        org.junit.Assert.assertArrayEquals("tests.nightly", (java.lang.Object[]) serializableArray3, (java.lang.Object[]) serializableArray11);
        java.io.Serializable[] serializableArray17 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet18 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray17);
        java.io.Serializable[] serializableArray20 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet21 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray20);
        java.io.Serializable[] serializableArray23 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet24 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray23);
        java.io.Serializable[] serializableArray25 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet26 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray25);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray23, (java.lang.Object[]) serializableArray25);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray20, (java.lang.Object[]) serializableArray25);
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) serializableArray17, (java.lang.Object[]) serializableArray25);
        org.junit.Assert.assertArrayEquals("tests.badapples", (java.lang.Object[]) serializableArray3, (java.lang.Object[]) serializableArray17);
        byte[] byteArray37 = new byte[] { (byte) 0, (byte) 1, (byte) 10, (byte) 100, (byte) 0, (byte) 0 };
        byte[] byteArray44 = new byte[] { (byte) 0, (byte) 1, (byte) 10, (byte) 100, (byte) 0, (byte) 0 };
        byte[] byteArray51 = new byte[] { (byte) 0, (byte) 1, (byte) 10, (byte) 100, (byte) 0, (byte) 0 };
        byte[] byteArray58 = new byte[] { (byte) 0, (byte) 1, (byte) 10, (byte) 100, (byte) 0, (byte) 0 };
        byte[] byteArray65 = new byte[] { (byte) 0, (byte) 1, (byte) 10, (byte) 100, (byte) 0, (byte) 0 };
        byte[] byteArray72 = new byte[] { (byte) 0, (byte) 1, (byte) 10, (byte) 100, (byte) 0, (byte) 0 };
        byte[][] byteArray73 = new byte[][] { byteArray37, byteArray44, byteArray51, byteArray58, byteArray65, byteArray72 };
        java.util.Set<byte[]> byteArraySet74 = org.apache.lucene.util.LuceneTestCase.asSet(byteArray73);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.badapples", (java.lang.Object[]) serializableArray3, (java.lang.Object[]) byteArray73);
    }

    @Test
    public void test3651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3651");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[][] strArray18 = new java.lang.String[][] { strArray5, strArray9, strArray13, strArray17 };
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[][] strArray35 = new java.lang.String[][] { strArray22, strArray26, strArray30, strArray34 };
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[][] strArray52 = new java.lang.String[][] { strArray39, strArray43, strArray47, strArray51 };
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[][] strArray69 = new java.lang.String[][] { strArray56, strArray60, strArray64, strArray68 };
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray85 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[][] strArray86 = new java.lang.String[][] { strArray73, strArray77, strArray81, strArray85 };
        java.lang.String[][][] strArray87 = new java.lang.String[][][] { strArray18, strArray35, strArray52, strArray69, strArray86 };
        java.util.List<java.lang.String[][]> strArrayList88 = org.elasticsearch.test.ESTestCase.randomSubsetOf(3, strArray87);
        java.util.Set<java.lang.Cloneable[]> cloneableArraySet89 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[][]) strArray87);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.awaitsfix", (java.lang.Object) cloneableArraySet89);
    }

    @Test
    public void test3652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3652");
        java.lang.Object[] objArray1 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests2.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        kuromojiAnalysisTests2.assertTermsEquals("tests.failfast", indexReader5, terms6, terms7, false);
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        kuromojiAnalysisTests2.assertDocsSkippingEquals("tests.nightly", indexReader11, (int) (byte) -1, postingsEnum13, postingsEnum14, false);
        org.junit.rules.RuleChain ruleChain17 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        org.junit.rules.TestRule testRule18 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule18;
        org.junit.rules.RuleChain ruleChain20 = ruleChain17.around(testRule18);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests22 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule23 = kuromojiAnalysisTests22.ruleChain;
        kuromojiAnalysisTests22.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests22);
        org.junit.rules.RuleChain ruleChain26 = kuromojiAnalysisTests22.failureAndSuccessEvents;
        org.junit.rules.TestRule testRule27 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.junit.rules.RuleChain ruleChain28 = org.junit.rules.RuleChain.outerRule(testRule27);
        org.junit.rules.RuleChain[] ruleChainArray29 = new org.junit.rules.RuleChain[] { ruleChain17, ruleChain26, ruleChain28 };
        java.util.Set<org.junit.rules.RuleChain> ruleChainSet30 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray29);
        java.util.Set<org.junit.rules.TestRule> testRuleSet31 = org.apache.lucene.util.LuceneTestCase.asSet((org.junit.rules.TestRule[]) ruleChainArray29);
        java.util.Set<java.lang.Object> objSet32 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Object[]) ruleChainArray29);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", objArray1, (java.lang.Object[]) ruleChainArray29);
    }

    @Test
    public void test3653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3653");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.nightly", (float) (byte) -1, (float) 1L, (-1.0f));
    }

    @Test
    public void test3654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3654");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.nightly", indexReader10, (int) (byte) -1, postingsEnum12, postingsEnum13, false);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader17, (int) (short) -1, postingsEnum19, postingsEnum20);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule24 = kuromojiAnalysisTests23.ruleChain;
        kuromojiAnalysisTests23.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests23);
        org.junit.rules.RuleChain ruleChain27 = kuromojiAnalysisTests23.failureAndSuccessEvents;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain27;
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.badapples", indexReader30, 0, postingsEnum32, postingsEnum33, true);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.apache.lucene.index.IndexReader indexReader38 = null;
        org.apache.lucene.index.Fields fields39 = null;
        org.apache.lucene.index.Fields fields40 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("europarl.lines.txt.gz", indexReader38, fields39, fields40, false);
        org.apache.lucene.index.IndexReader indexReader44 = null;
        org.apache.lucene.index.Terms terms45 = null;
        org.apache.lucene.index.Terms terms46 = null;
        kuromojiAnalysisTests1.assertTermsEquals("", indexReader44, terms45, terms46, true);
        org.apache.lucene.index.PostingsEnum postingsEnum50 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum51 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("tests.badapples", postingsEnum50, postingsEnum51, true);
        org.apache.lucene.index.PostingsEnum postingsEnum55 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum56 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("", postingsEnum55, postingsEnum56, true);
        kuromojiAnalysisTests1.setUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.nightly", (java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test3655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3655");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("enwiki.random.lines.txt", indexReader4, fields5, fields6, true);
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.tearDown();
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests1);
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        org.apache.lucene.index.Fields fields15 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("enwiki.random.lines.txt", indexReader13, fields14, fields15, true);
        org.junit.rules.RuleChain ruleChain18 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests19 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests19.tearDown();
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.Terms terms23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        kuromojiAnalysisTests19.assertTermsEquals("tests.failfast", indexReader22, terms23, terms24, false);
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        kuromojiAnalysisTests19.assertDocsSkippingEquals("tests.nightly", indexReader28, (int) (byte) -1, postingsEnum30, postingsEnum31, false);
        org.apache.lucene.index.IndexReader indexReader35 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum37 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        kuromojiAnalysisTests19.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader35, (int) (short) -1, postingsEnum37, postingsEnum38);
        org.junit.rules.RuleChain ruleChain40 = kuromojiAnalysisTests19.failureAndSuccessEvents;
        java.lang.String str41 = kuromojiAnalysisTests19.getTestName();
        kuromojiAnalysisTests19.ensureCleanedUp();
        kuromojiAnalysisTests19.ensureCleanedUp();
        kuromojiAnalysisTests19.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests19.ensureCheckIndexPassed();
        org.apache.lucene.index.IndexReader indexReader47 = null;
        org.apache.lucene.index.Terms terms48 = null;
        org.apache.lucene.index.Terms terms49 = null;
        kuromojiAnalysisTests19.assertTermsEquals("tests.maxfailures", indexReader47, terms48, terms49, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.maxfailures", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) false);
    }

    @Test
    public void test3656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3656");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.nightly", (double) 100L, 1.0d);
    }

    @Test
    public void test3657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3657");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.nightly", (-1.0d), (double) (byte) 100);
    }

    @Test
    public void test3658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3658");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests1.assertTermsEquals("", indexReader10, terms11, terms12, false);
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests1.tearDown();
        java.lang.Object obj17 = null;
        org.junit.Assert.assertNotEquals("tests.slow", (java.lang.Object) kuromojiAnalysisTests1, obj17);
        org.junit.rules.TestRule testRule19 = kuromojiAnalysisTests1.ruleChain;
        org.junit.rules.TestRule testRule20 = null;
        org.junit.rules.RuleChain ruleChain21 = org.junit.rules.RuleChain.outerRule(testRule20);
        org.junit.rules.RuleChain ruleChain22 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain21);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain22;
        org.apache.lucene.index.NumericDocValues numericDocValues26 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues27 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocValuesEquals("tests.nightly", (int) (short) -1, numericDocValues26, numericDocValues27);
    }

    @Test
    public void test3659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3659");
        java.lang.String[] strArray2 = new java.lang.String[] { "hi!", "europarl.lines.txt.gz" };
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet3 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray2);
        java.util.Set<java.lang.Comparable<java.lang.String>> strComparableSet4 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Comparable<java.lang.String>[]) strArray2);
        int[][] intArray6 = new int[][] {};
        java.util.Set<int[]> intArraySet7 = org.apache.lucene.util.LuceneTestCase.asSet(intArray6);
        java.io.Serializable[] serializableArray9 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet10 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray9);
        java.io.Serializable[] serializableArray11 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet12 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray11);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray9, (java.lang.Object[]) serializableArray11);
        java.util.concurrent.ExecutorService[] executorServiceArray14 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean15 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray14);
        boolean boolean16 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray14);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray9, (java.lang.Object[]) executorServiceArray14);
        org.junit.Assert.assertNotEquals((java.lang.Object) intArray6, (java.lang.Object) serializableArray9);
        java.util.concurrent.ExecutorService[] executorServiceArray20 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean21 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray20);
        java.io.Serializable[] serializableArray23 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet24 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray23);
        java.io.Serializable[] serializableArray26 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet27 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray26);
        java.io.Serializable[] serializableArray29 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet30 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray29);
        java.io.Serializable[] serializableArray31 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet32 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray31);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray29, (java.lang.Object[]) serializableArray31);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray26, (java.lang.Object[]) serializableArray31);
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) serializableArray23, (java.lang.Object[]) serializableArray31);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray20, (java.lang.Object[]) serializableArray23);
        org.junit.Assert.assertNotNull("europarl.lines.txt.gz", (java.lang.Object) executorServiceArray20);
        org.junit.Assert.assertArrayEquals("tests.monster", (java.lang.Object[]) serializableArray9, (java.lang.Object[]) executorServiceArray20);
        java.io.Serializable[] serializableArray43 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet44 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray43);
        java.io.Serializable[] serializableArray46 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet47 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray46);
        java.io.Serializable[] serializableArray48 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet49 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray48);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray46, (java.lang.Object[]) serializableArray48);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray43, (java.lang.Object[]) serializableArray48);
        java.io.Serializable[] serializableArray53 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet54 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray53);
        java.io.Serializable[] serializableArray56 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet57 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray56);
        java.io.Serializable[] serializableArray58 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet59 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray58);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray56, (java.lang.Object[]) serializableArray58);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray53, (java.lang.Object[]) serializableArray58);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray43, (java.lang.Object[]) serializableArray53);
        java.util.concurrent.ExecutorService[] executorServiceArray63 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean64 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray63);
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) serializableArray43, (java.lang.Object[]) executorServiceArray63);
        java.io.Serializable[] serializableArray68 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet69 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray68);
        java.io.Serializable[] serializableArray70 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet71 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray70);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray68, (java.lang.Object[]) serializableArray70);
        java.util.concurrent.ExecutorService[] executorServiceArray73 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean74 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray73);
        boolean boolean75 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray73);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray68, (java.lang.Object[]) executorServiceArray73);
        org.junit.Assert.assertNotNull("tests.nightly", (java.lang.Object) executorServiceArray73);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray43, (java.lang.Object[]) executorServiceArray73);
        org.junit.Assert.assertNotNull("tests.nightly", (java.lang.Object) serializableArray43);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray20, (java.lang.Object[]) serializableArray43);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) strArray2, (java.lang.Object[]) executorServiceArray20);
    }

    @Test
    public void test3660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3660");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.nightly", (double) 1, (double) (-1), (double) 100.0f);
    }

    @Test
    public void test3661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3661");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1);
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        kuromojiAnalysisTests1.assertTermsEquals("random", indexReader6, terms7, terms8, false);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("enwiki.random.lines.txt", postingsEnum14, postingsEnum15, true);
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("hi!", indexReader19, (int) (byte) 100, postingsEnum21, postingsEnum22);
        org.apache.lucene.index.NumericDocValues numericDocValues26 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues27 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocValuesEquals("tests.slow", (int) (byte) 10, numericDocValues26, numericDocValues27);
    }

    @Test
    public void test3662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3662");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) 'a', (long) '4');
    }

    @Test
    public void test3663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3663");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", 0L, (long) 'a');
    }

    @Test
    public void test3664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3664");
        double[] doubleArray1 = null;
        double[] doubleArray3 = new double[] {};
        double[] doubleArray4 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray3, doubleArray4, (double) '4');
        double[] doubleArray8 = new double[] {};
        double[] doubleArray9 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray8, doubleArray9, (double) '4');
        double[] doubleArray12 = new double[] {};
        double[] doubleArray13 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray12, doubleArray13, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray8, doubleArray13, (double) (short) 10);
        double[] doubleArray18 = new double[] {};
        double[] doubleArray19 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray18, doubleArray19, (double) '4');
        double[] doubleArray22 = new double[] {};
        double[] doubleArray23 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray22, doubleArray23, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray18, doubleArray23, (double) (short) 10);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", doubleArray13, doubleArray18, (double) 4);
        double[] doubleArray30 = new double[] {};
        double[] doubleArray31 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray30, doubleArray31, (double) '4');
        double[] doubleArray34 = new double[] {};
        double[] doubleArray35 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray34, doubleArray35, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray31, doubleArray35, (double) (byte) -1);
        double[] doubleArray40 = new double[] {};
        double[] doubleArray41 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray40, doubleArray41, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray31, doubleArray40, (double) 2);
        org.junit.Assert.assertArrayEquals(doubleArray13, doubleArray31, 0.0d);
        org.junit.Assert.assertArrayEquals(doubleArray3, doubleArray13, 1.0d);
        double[] doubleArray51 = new double[] {};
        double[] doubleArray52 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray51, doubleArray52, (double) '4');
        double[] doubleArray55 = new double[] {};
        double[] doubleArray56 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray55, doubleArray56, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray51, doubleArray56, (double) (short) 10);
        double[] doubleArray61 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray51, doubleArray61, (double) 10L);
        double[] doubleArray64 = new double[] {};
        double[] doubleArray65 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray64, doubleArray65, (double) '4');
        double[] doubleArray68 = new double[] {};
        double[] doubleArray69 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray68, doubleArray69, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray65, doubleArray69, (double) (byte) -1);
        double[] doubleArray74 = new double[] {};
        double[] doubleArray75 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray74, doubleArray75, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray65, doubleArray74, (double) 2);
        org.junit.Assert.assertArrayEquals("tests.weekly", doubleArray51, doubleArray74, 10.0d);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", doubleArray3, doubleArray74, (double) (short) 10);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("random", doubleArray1, doubleArray3, (double) 10L);
    }

    @Test
    public void test3665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3665");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader3, fields4, fields5, true);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 1);
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.Fields fields13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader12, fields13, fields14, false);
        org.junit.rules.TestRule testRule17 = kuromojiAnalysisTests0.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test3666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3666");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", (double) (short) 1, (double) 10.0f, (double) 2);
    }

    @Test
    public void test3667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3667");
        char[] charArray0 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests3 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        kuromojiAnalysisTests3.assertTermsEquals("", indexReader5, terms6, terms7, false);
        kuromojiAnalysisTests3.setUp();
        kuromojiAnalysisTests3.ensureAllSearchContextsReleased();
        char[] charArray14 = new char[] {};
        char[] charArray15 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray14, charArray15);
        char[] charArray17 = new char[] {};
        char[] charArray18 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray17, charArray18);
        org.junit.Assert.assertArrayEquals(charArray15, charArray18);
        char[] charArray21 = new char[] {};
        char[] charArray22 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray21, charArray22);
        char[] charArray24 = new char[] {};
        char[] charArray25 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray24, charArray25);
        org.junit.Assert.assertArrayEquals(charArray22, charArray25);
        org.junit.Assert.assertArrayEquals("random", charArray15, charArray22);
        char[] charArray29 = new char[] {};
        char[] charArray30 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray29, charArray30);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", charArray22, charArray30);
        org.junit.Assert.assertNotSame("tests.awaitsfix", (java.lang.Object) kuromojiAnalysisTests3, (java.lang.Object) charArray22);
        char[] charArray35 = new char[] {};
        char[] charArray36 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray35, charArray36);
        char[] charArray38 = new char[] {};
        char[] charArray39 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray38, charArray39);
        org.junit.Assert.assertArrayEquals(charArray36, charArray39);
        char[] charArray43 = new char[] {};
        char[] charArray44 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray43, charArray44);
        char[] charArray46 = new char[] {};
        char[] charArray47 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray46, charArray47);
        org.junit.Assert.assertArrayEquals(charArray44, charArray47);
        char[] charArray50 = new char[] {};
        char[] charArray51 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray50, charArray51);
        char[] charArray53 = new char[] {};
        char[] charArray54 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray53, charArray54);
        org.junit.Assert.assertArrayEquals(charArray51, charArray54);
        org.junit.Assert.assertArrayEquals("random", charArray44, charArray51);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", charArray39, charArray51);
        char[] charArray60 = new char[] {};
        char[] charArray61 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray60, charArray61);
        char[] charArray63 = new char[] {};
        char[] charArray64 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray63, charArray64);
        org.junit.Assert.assertArrayEquals(charArray61, charArray64);
        char[] charArray68 = new char[] {};
        char[] charArray69 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray68, charArray69);
        char[] charArray71 = new char[] {};
        char[] charArray72 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray71, charArray72);
        org.junit.Assert.assertArrayEquals(charArray69, charArray72);
        char[] charArray75 = new char[] {};
        char[] charArray76 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray75, charArray76);
        char[] charArray78 = new char[] {};
        char[] charArray79 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray78, charArray79);
        org.junit.Assert.assertArrayEquals(charArray76, charArray79);
        org.junit.Assert.assertArrayEquals("random", charArray69, charArray76);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", charArray64, charArray76);
        org.junit.Assert.assertArrayEquals(charArray51, charArray64);
        org.junit.Assert.assertArrayEquals("tests.nightly", charArray22, charArray51);
        char[] charArray86 = new char[] {};
        char[] charArray87 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray86, charArray87);
        char[] charArray89 = new char[] {};
        char[] charArray90 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray89, charArray90);
        org.junit.Assert.assertArrayEquals(charArray87, charArray90);
        org.junit.Assert.assertArrayEquals(charArray51, charArray87);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(charArray0, charArray87);
    }

    @Test
    public void test3668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3668");
        int[][][][][] intArray1 = new int[][][][][] {};
        java.util.Set<int[][][][]> intArraySet2 = org.apache.lucene.util.LuceneTestCase.asSet(intArray1);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests3 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule4 = kuromojiAnalysisTests3.ruleChain;
        kuromojiAnalysisTests3.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests3.tearDown();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests3, (java.lang.Object) (-1));
        kuromojiAnalysisTests3.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Fields fields12 = null;
        org.apache.lucene.index.Fields fields13 = null;
        kuromojiAnalysisTests3.assertFieldsEquals("", indexReader11, fields12, fields13, false);
        kuromojiAnalysisTests3.setUp();
        java.lang.Class<?> wildcardClass17 = kuromojiAnalysisTests3.getClass();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests18 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule19 = kuromojiAnalysisTests18.ruleChain;
        kuromojiAnalysisTests18.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests18.tearDown();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests18, (java.lang.Object) (-1));
        java.lang.Class<?> wildcardClass24 = kuromojiAnalysisTests18.getClass();
        java.util.concurrent.ExecutorService[] executorServiceArray26 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean27 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray26);
        java.io.Serializable[] serializableArray29 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet30 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray29);
        java.io.Serializable[] serializableArray32 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet33 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray32);
        java.io.Serializable[] serializableArray35 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet36 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray35);
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet38 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray37);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray35, (java.lang.Object[]) serializableArray37);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray32, (java.lang.Object[]) serializableArray37);
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) serializableArray29, (java.lang.Object[]) serializableArray37);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray26, (java.lang.Object[]) serializableArray29);
        org.junit.Assert.assertNotNull("europarl.lines.txt.gz", (java.lang.Object) executorServiceArray26);
        boolean boolean44 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray26);
        java.lang.Class<?> wildcardClass45 = executorServiceArray26.getClass();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests46 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests46.tearDown();
        kuromojiAnalysisTests46.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests46.ensureCleanedUp();
        java.lang.Class<?> wildcardClass50 = kuromojiAnalysisTests46.getClass();
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "tests.nightly", "europarl.lines.txt.gz", "tests.maxfailures", "tests.badapples", "tests.failfast" };
        java.util.Set<java.lang.CharSequence> charSequenceSet57 = org.apache.lucene.util.LuceneTestCase.asSet(charSequenceArray56);
        java.lang.Class<?> wildcardClass58 = charSequenceArray56.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass17, wildcardClass24, wildcardClass45, wildcardClass50, wildcardClass58 };
        java.util.Set<java.lang.reflect.Type> typeSet60 = org.apache.lucene.util.LuceneTestCase.asSet(typeArray59);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", (java.lang.Object[]) intArray1, (java.lang.Object[]) typeArray59);
    }

    @Test
    public void test3669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3669");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.nightly", (double) (short) 0, (double) (byte) 100, 1.0d);
    }

    @Test
    public void test3670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3670");
        char[] charArray3 = new char[] {};
        char[] charArray4 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray3, charArray4);
        char[] charArray6 = new char[] {};
        char[] charArray7 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray6, charArray7);
        org.junit.Assert.assertArrayEquals(charArray4, charArray7);
        char[] charArray12 = new char[] {};
        char[] charArray13 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray12, charArray13);
        char[] charArray15 = new char[] {};
        char[] charArray16 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray15, charArray16);
        org.junit.Assert.assertArrayEquals(charArray13, charArray16);
        char[] charArray19 = new char[] {};
        char[] charArray20 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray19, charArray20);
        char[] charArray22 = new char[] {};
        char[] charArray23 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray22, charArray23);
        org.junit.Assert.assertArrayEquals(charArray20, charArray23);
        org.junit.Assert.assertArrayEquals("random", charArray13, charArray20);
        char[] charArray27 = new char[] {};
        char[] charArray28 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray27, charArray28);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", charArray20, charArray28);
        org.junit.Assert.assertArrayEquals(charArray7, charArray28);
        char[] charArray34 = new char[] {};
        char[] charArray35 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray34, charArray35);
        char[] charArray37 = new char[] {};
        char[] charArray38 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray37, charArray38);
        org.junit.Assert.assertArrayEquals(charArray35, charArray38);
        char[] charArray41 = new char[] {};
        char[] charArray42 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray41, charArray42);
        char[] charArray44 = new char[] {};
        char[] charArray45 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray44, charArray45);
        org.junit.Assert.assertArrayEquals(charArray42, charArray45);
        org.junit.Assert.assertArrayEquals("random", charArray35, charArray42);
        char[] charArray49 = new char[] {};
        char[] charArray50 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray49, charArray50);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", charArray42, charArray50);
        org.junit.Assert.assertArrayEquals("tests.nightly", charArray28, charArray50);
        char[] charArray54 = new char[] {};
        char[] charArray55 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray54, charArray55);
        char[] charArray57 = new char[] {};
        char[] charArray58 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray57, charArray58);
        org.junit.Assert.assertArrayEquals(charArray55, charArray58);
        char[] charArray63 = new char[] {};
        char[] charArray64 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray63, charArray64);
        char[] charArray66 = new char[] {};
        char[] charArray67 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray66, charArray67);
        org.junit.Assert.assertArrayEquals(charArray64, charArray67);
        char[] charArray70 = new char[] {};
        char[] charArray71 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray70, charArray71);
        char[] charArray73 = new char[] {};
        char[] charArray74 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray73, charArray74);
        org.junit.Assert.assertArrayEquals(charArray71, charArray74);
        org.junit.Assert.assertArrayEquals("random", charArray64, charArray71);
        char[] charArray78 = new char[] {};
        char[] charArray79 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray78, charArray79);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", charArray71, charArray79);
        org.junit.Assert.assertArrayEquals(charArray58, charArray79);
        org.junit.Assert.assertArrayEquals("random", charArray50, charArray79);
        char[] charArray87 = new char[] { 'a', '4', '4' };
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.weekly", charArray79, charArray87);
    }

    @Test
    public void test3671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3671");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (long) 'a', (long) (short) 10);
    }

    @Test
    public void test3672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3672");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.weekly", 0L, (long) (-1));
    }

    @Test
    public void test3673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3673");
        byte[] byteArray3 = new byte[] {};
        byte[] byteArray4 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray3, byteArray4);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray8 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray7, byteArray8);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray3, byteArray7);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray14 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray13, byteArray14);
        byte[] byteArray17 = new byte[] {};
        byte[] byteArray18 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray17, byteArray18);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray13, byteArray17);
        org.junit.Assert.assertArrayEquals(byteArray3, byteArray17);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray26 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray25, byteArray26);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray31 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray30, byteArray31);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray35 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray34, byteArray35);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray30, byteArray34);
        byte[] byteArray40 = new byte[] {};
        byte[] byteArray41 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray40, byteArray41);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray45 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray44, byteArray45);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray40, byteArray44);
        org.junit.Assert.assertArrayEquals(byteArray34, byteArray40);
        org.junit.Assert.assertArrayEquals("", byteArray25, byteArray34);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests50 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests50.tearDown();
        org.apache.lucene.index.IndexReader indexReader53 = null;
        org.apache.lucene.index.Terms terms54 = null;
        org.apache.lucene.index.Terms terms55 = null;
        kuromojiAnalysisTests50.assertTermsEquals("tests.failfast", indexReader53, terms54, terms55, false);
        org.apache.lucene.index.IndexReader indexReader59 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum61 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum62 = null;
        kuromojiAnalysisTests50.assertDocsSkippingEquals("tests.nightly", indexReader59, (int) (byte) -1, postingsEnum61, postingsEnum62, false);
        org.apache.lucene.index.IndexReader indexReader66 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum68 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum69 = null;
        kuromojiAnalysisTests50.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader66, (int) (short) -1, postingsEnum68, postingsEnum69);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests72 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule73 = kuromojiAnalysisTests72.ruleChain;
        kuromojiAnalysisTests72.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests72);
        org.junit.rules.RuleChain ruleChain76 = kuromojiAnalysisTests72.failureAndSuccessEvents;
        kuromojiAnalysisTests50.failureAndSuccessEvents = ruleChain76;
        org.apache.lucene.index.IndexReader indexReader79 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum81 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum82 = null;
        kuromojiAnalysisTests50.assertDocsSkippingEquals("tests.badapples", indexReader79, 0, postingsEnum81, postingsEnum82, true);
        kuromojiAnalysisTests50.ensureCheckIndexPassed();
        kuromojiAnalysisTests50.ensureCheckIndexPassed();
        kuromojiAnalysisTests50.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests50.overrideTestDefaultQueryCache();
        org.junit.Assert.assertNotEquals("<unknown>", (java.lang.Object) byteArray34, (java.lang.Object) kuromojiAnalysisTests50);
        org.junit.Assert.assertArrayEquals(byteArray3, byteArray34);
        byte[] byteArray91 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.nightly", byteArray3, byteArray91);
    }

    @Test
    public void test3674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3674");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader9, (int) (byte) -1, postingsEnum11, postingsEnum12, false);
        org.junit.rules.RuleChain ruleChain15 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.maxfailures", postingsEnum18, postingsEnum19, false);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.apache.lucene.index.NumericDocValues numericDocValues25 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues26 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.slow", (int) (short) 1, numericDocValues25, numericDocValues26);
    }

    @Test
    public void test3675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3675");
        short[][] shortArray0 = new short[][] {};
        short[][][] shortArray1 = new short[][][] { shortArray0 };
        java.util.Set<short[][]> shortArraySet2 = org.apache.lucene.util.LuceneTestCase.asSet(shortArray1);
        char[] charArray8 = new char[] { '#', '4', ' ', '#', ' ' };
        char[] charArray14 = new char[] { '#', '4', ' ', '#', ' ' };
        char[] charArray20 = new char[] { '#', '4', ' ', '#', ' ' };
        char[] charArray26 = new char[] { '#', '4', ' ', '#', ' ' };
        char[] charArray32 = new char[] { '#', '4', ' ', '#', ' ' };
        char[][] charArray33 = new char[][] { charArray8, charArray14, charArray20, charArray26, charArray32 };
        java.util.Set<char[]> charArraySet34 = org.apache.lucene.util.LuceneTestCase.asSet(charArray33);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) shortArray1, (java.lang.Object[]) charArray33);
    }

    @Test
    public void test3676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3676");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((double) (-1), (double) (byte) 0, (double) (byte) 100);
    }

    @Test
    public void test3677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3677");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 5, (double) 0L);
    }

    @Test
    public void test3678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3678");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (short) 10, 0.0d, (double) 0);
    }

    @Test
    public void test3679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3679");
        double[] doubleArray0 = new double[] {};
        double[] doubleArray1 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray0, doubleArray1, (double) '4');
        double[] doubleArray4 = new double[] {};
        double[] doubleArray5 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray4, doubleArray5, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray1, doubleArray5, (double) (byte) -1);
        double[] doubleArray10 = new double[] {};
        double[] doubleArray11 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray10, doubleArray11, (double) '4');
        double[] doubleArray14 = new double[] {};
        double[] doubleArray15 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray14, doubleArray15, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray10, doubleArray15, (double) (short) 10);
        org.junit.Assert.assertArrayEquals(doubleArray1, doubleArray10, (double) 100);
        double[] doubleArray23 = new double[] {};
        double[] doubleArray24 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray23, doubleArray24, (double) '4');
        double[] doubleArray27 = new double[] {};
        double[] doubleArray28 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray27, doubleArray28, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray24, doubleArray28, (double) (byte) -1);
        double[] doubleArray33 = new double[] {};
        double[] doubleArray34 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray33, doubleArray34, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray24, doubleArray33, (double) 2);
        double[] doubleArray39 = new double[] {};
        double[] doubleArray40 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray39, doubleArray40, (double) '4');
        org.junit.Assert.assertArrayEquals("", doubleArray33, doubleArray39, (double) 1.0f);
        org.junit.Assert.assertArrayEquals(doubleArray1, doubleArray39, (double) 10);
        double[] doubleArray47 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(doubleArray1, doubleArray47, (double) 2);
    }

    @Test
    public void test3680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3680");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader9, (int) (byte) -1, postingsEnum11, postingsEnum12, false);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader16, terms17, terms18, true);
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("<unknown>", indexReader22, (int) (byte) 100, postingsEnum24, postingsEnum25, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("random");
        org.junit.rules.TestRule testRule30 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.junit.rules.TestRule testRule32 = kuromojiAnalysisTests0.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) testRule32);
    }

    @Test
    public void test3681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3681");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", 0.0d, (double) (byte) 1);
    }

    @Test
    public void test3682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3682");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (double) 3, (double) (short) 100, (double) 5);
    }

    @Test
    public void test3683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3683");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule3 = kuromojiAnalysisTests2.ruleChain;
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2);
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        org.apache.lucene.index.Terms terms9 = null;
        kuromojiAnalysisTests2.assertTermsEquals("random", indexReader7, terms8, terms9, false);
        org.junit.rules.RuleChain ruleChain12 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain13 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        org.junit.rules.TestRule testRule14 = null;
        org.junit.rules.RuleChain ruleChain15 = org.junit.rules.RuleChain.outerRule(testRule14);
        org.junit.rules.RuleChain ruleChain16 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain15);
        org.junit.rules.RuleChain ruleChain17 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain15);
        kuromojiAnalysisTests2.failureAndSuccessEvents = ruleChain17;
        org.junit.rules.RuleChain ruleChain19 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        java.io.Serializable[] serializableArray22 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet23 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray22);
        java.io.Serializable[] serializableArray24 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet25 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray24);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray22, (java.lang.Object[]) serializableArray24);
        java.util.concurrent.ExecutorService[] executorServiceArray27 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean28 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray27);
        boolean boolean29 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray27);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray22, (java.lang.Object[]) executorServiceArray27);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests33 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests33.tearDown();
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.Fields fields37 = null;
        org.apache.lucene.index.Fields fields38 = null;
        kuromojiAnalysisTests33.assertFieldsEquals("enwiki.random.lines.txt", indexReader36, fields37, fields38, true);
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum43 = null;
        kuromojiAnalysisTests33.assertDocsEnumEquals("tests.monster", postingsEnum42, postingsEnum43, true);
        kuromojiAnalysisTests33.resetCheckIndexStatus();
        kuromojiAnalysisTests33.ensureCleanedUp();
        java.io.Serializable[] serializableArray49 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet50 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray49);
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet52 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray51);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray49, (java.lang.Object[]) serializableArray51);
        java.util.concurrent.ExecutorService[] executorServiceArray54 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean55 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray54);
        boolean boolean56 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray54);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray49, (java.lang.Object[]) executorServiceArray54);
        boolean boolean58 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray54);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests33, (java.lang.Object) executorServiceArray54);
        java.util.concurrent.ExecutorService[] executorServiceArray60 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean61 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray60);
        boolean boolean62 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray60);
        boolean boolean63 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray60);
        boolean boolean64 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray60);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) executorServiceArray54, (java.lang.Object[]) executorServiceArray60);
        java.util.concurrent.ExecutorService[] executorServiceArray66 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean67 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray66);
        org.junit.Assert.assertArrayEquals("hi!", (java.lang.Object[]) executorServiceArray60, (java.lang.Object[]) executorServiceArray66);
        boolean boolean69 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray60);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray27, (java.lang.Object[]) executorServiceArray60);
        org.junit.Assert.assertNotNull("random", (java.lang.Object) executorServiceArray60);
        boolean boolean72 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray60);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("<unknown>", (java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) boolean72);
    }

    @Test
    public void test3684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3684");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.nightly", (double) 5, (double) (short) -1);
    }

    @Test
    public void test3685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3685");
        java.util.concurrent.ExecutorService[] executorServiceArray0 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean1 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray0);
        java.io.Serializable[] serializableArray3 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet4 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray3);
        java.io.Serializable[] serializableArray6 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet7 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray6);
        java.io.Serializable[] serializableArray9 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet10 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray9);
        java.io.Serializable[] serializableArray11 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet12 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray11);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray9, (java.lang.Object[]) serializableArray11);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray6, (java.lang.Object[]) serializableArray11);
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) serializableArray3, (java.lang.Object[]) serializableArray11);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray0, (java.lang.Object[]) serializableArray3);
        java.lang.Object[] objArray17 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray3, objArray17);
    }

    @Test
    public void test3686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3686");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests2.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        kuromojiAnalysisTests2.assertTermsEquals("tests.failfast", indexReader5, terms6, terms7, false);
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests2.assertTermsEquals("", indexReader11, terms12, terms13, false);
        org.junit.rules.RuleChain ruleChain16 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests2);
        kuromojiAnalysisTests2.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        kuromojiAnalysisTests2.assertDocsEnumEquals("<unknown>", postingsEnum20, postingsEnum21, false);
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        kuromojiAnalysisTests2.assertDocsEnumEquals("<unknown>", postingsEnum25, postingsEnum26, true);
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests2.assertDocsAndPositionsEnumEquals("tests.failfast", postingsEnum30, postingsEnum31);
    }

    @Test
    public void test3687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3687");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) 100, (float) (byte) 1, (float) 5);
    }

    @Test
    public void test3688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3688");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) '#', (double) 10L, (double) (short) 1);
    }

    @Test
    public void test3689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3689");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("enwiki.random.lines.txt", (double) 100L, (double) (byte) 10);
    }

    @Test
    public void test3690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3690");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (short) -1, (double) 100);
    }

    @Test
    public void test3691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3691");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (byte) 10, (double) (short) 10);
    }

    @Test
    public void test3692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3692");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (double) 100.0f, (-1.0d), 100.0d);
    }

    @Test
    public void test3693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3693");
        int[] intArray0 = null;
        int[] intArray5 = new int[] {};
        int[] intArray6 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray5, intArray6);
        int[] intArray9 = new int[] {};
        int[] intArray10 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray9, intArray10);
        org.junit.Assert.assertArrayEquals(intArray6, intArray9);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray6, (java.lang.Object) 100.0d);
        int[] intArray18 = new int[] {};
        int[] intArray19 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray18, intArray19);
        int[] intArray22 = new int[] {};
        int[] intArray23 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray22, intArray23);
        org.junit.Assert.assertArrayEquals(intArray19, intArray22);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray19, (java.lang.Object) 100.0d);
        int[] intArray29 = new int[] {};
        int[] intArray30 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray29, intArray30);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray19, intArray29);
        org.junit.Assert.assertArrayEquals("random", intArray6, intArray19);
        org.junit.Assert.assertNotEquals((java.lang.Object) intArray6, (java.lang.Object) "<unknown>");
        int[] intArray39 = new int[] {};
        int[] intArray40 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray39, intArray40);
        int[] intArray43 = new int[] {};
        int[] intArray44 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray43, intArray44);
        org.junit.Assert.assertArrayEquals(intArray40, intArray43);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray40, (java.lang.Object) 100.0d);
        int[] intArray52 = new int[] {};
        int[] intArray53 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray52, intArray53);
        int[] intArray56 = new int[] {};
        int[] intArray57 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray56, intArray57);
        org.junit.Assert.assertArrayEquals(intArray53, intArray56);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray53, (java.lang.Object) 100.0d);
        int[] intArray63 = new int[] {};
        int[] intArray64 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray63, intArray64);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray53, intArray63);
        org.junit.Assert.assertArrayEquals("random", intArray40, intArray53);
        org.junit.Assert.assertArrayEquals(intArray6, intArray53);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests69 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule70 = kuromojiAnalysisTests69.ruleChain;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule70;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule70;
        org.junit.rules.RuleChain ruleChain73 = org.junit.rules.RuleChain.outerRule(testRule70);
        org.junit.rules.RuleChain ruleChain74 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain73);
        org.junit.rules.TestRule testRule75 = null;
        org.junit.rules.RuleChain ruleChain76 = ruleChain73.around(testRule75);
        org.junit.Assert.assertNotSame("europarl.lines.txt.gz", (java.lang.Object) intArray53, (java.lang.Object) testRule75);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(intArray0, intArray53);
    }

    @Test
    public void test3694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3694");
        java.io.Serializable[] serializableArray4 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet5 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray4);
        java.io.Serializable[] serializableArray6 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet7 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray6);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray4, (java.lang.Object[]) serializableArray6);
        java.util.concurrent.ExecutorService[] executorServiceArray9 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean10 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray9);
        boolean boolean11 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray9);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray4, (java.lang.Object[]) executorServiceArray9);
        org.junit.Assert.assertNotNull("tests.nightly", (java.lang.Object) executorServiceArray9);
        org.junit.rules.RuleChain[][] ruleChainArray14 = new org.junit.rules.RuleChain[][] {};
        java.util.Set<org.junit.rules.RuleChain[]> ruleChainArraySet15 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray14);
        org.junit.Assert.assertArrayEquals("tests.nightly", (java.lang.Object[]) executorServiceArray9, (java.lang.Object[]) ruleChainArray14);
        java.lang.Object obj17 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("hi!", (java.lang.Object) executorServiceArray9, obj17);
    }

    @Test
    public void test3695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3695");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.nightly", indexReader10, (int) (byte) -1, postingsEnum12, postingsEnum13, false);
        org.junit.rules.RuleChain ruleChain16 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.junit.rules.TestRule testRule17 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule17;
        org.junit.rules.RuleChain ruleChain19 = ruleChain16.around(testRule17);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests21 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule22 = kuromojiAnalysisTests21.ruleChain;
        kuromojiAnalysisTests21.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests21);
        org.junit.rules.RuleChain ruleChain25 = kuromojiAnalysisTests21.failureAndSuccessEvents;
        org.junit.rules.TestRule testRule26 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.junit.rules.RuleChain ruleChain27 = org.junit.rules.RuleChain.outerRule(testRule26);
        org.junit.rules.RuleChain[] ruleChainArray28 = new org.junit.rules.RuleChain[] { ruleChain16, ruleChain25, ruleChain27 };
        java.util.Set<org.junit.rules.RuleChain> ruleChainSet29 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray28);
        java.util.Set<org.junit.rules.RuleChain> ruleChainSet30 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray28);
        java.util.concurrent.ExecutorService[] executorServiceArray32 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean33 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray32);
        java.io.Serializable[] serializableArray35 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet36 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray35);
        java.io.Serializable[] serializableArray38 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet39 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray38);
        java.io.Serializable[] serializableArray41 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet42 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray41);
        java.io.Serializable[] serializableArray43 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet44 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray43);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray41, (java.lang.Object[]) serializableArray43);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray38, (java.lang.Object[]) serializableArray43);
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) serializableArray35, (java.lang.Object[]) serializableArray43);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray32, (java.lang.Object[]) serializableArray35);
        boolean boolean49 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray32);
        boolean boolean50 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray32);
        org.junit.Assert.assertNotNull("<unknown>", (java.lang.Object) executorServiceArray32);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) ruleChainArray28, (java.lang.Object[]) executorServiceArray32);
    }

    @Test
    public void test3696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3696");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.Terms terms10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader9, terms10, terms11, false);
        org.junit.rules.RuleChain ruleChain14 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain15 = org.junit.rules.RuleChain.emptyRuleChain();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests17 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule18 = kuromojiAnalysisTests17.ruleChain;
        kuromojiAnalysisTests17.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests17);
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.Terms terms23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        kuromojiAnalysisTests17.assertTermsEquals("random", indexReader22, terms23, terms24, false);
        org.junit.rules.RuleChain ruleChain27 = kuromojiAnalysisTests17.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement28 = null;
        org.junit.runner.Description description29 = null;
        org.junit.runners.model.Statement statement30 = ruleChain27.apply(statement28, description29);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests32 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule33 = kuromojiAnalysisTests32.ruleChain;
        kuromojiAnalysisTests32.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests32);
        org.apache.lucene.index.IndexReader indexReader37 = null;
        org.apache.lucene.index.Terms terms38 = null;
        org.apache.lucene.index.Terms terms39 = null;
        kuromojiAnalysisTests32.assertTermsEquals("random", indexReader37, terms38, terms39, false);
        org.junit.rules.RuleChain ruleChain42 = kuromojiAnalysisTests32.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement43 = null;
        org.junit.runner.Description description44 = null;
        org.junit.runners.model.Statement statement45 = ruleChain42.apply(statement43, description44);
        org.junit.runner.Description description46 = null;
        org.junit.runners.model.Statement statement47 = ruleChain27.apply(statement45, description46);
        org.junit.runner.Description description48 = null;
        org.junit.runners.model.Statement statement49 = ruleChain15.apply(statement45, description48);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain15;
        org.junit.rules.RuleChain ruleChain51 = ruleChain14.around((org.junit.rules.TestRule) ruleChain15);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests53 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule54 = kuromojiAnalysisTests53.ruleChain;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule54;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule54;
        org.junit.rules.RuleChain ruleChain57 = org.junit.rules.RuleChain.outerRule(testRule54);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests59 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule60 = kuromojiAnalysisTests59.ruleChain;
        kuromojiAnalysisTests59.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests59);
        org.apache.lucene.index.IndexReader indexReader64 = null;
        org.apache.lucene.index.Terms terms65 = null;
        org.apache.lucene.index.Terms terms66 = null;
        kuromojiAnalysisTests59.assertTermsEquals("random", indexReader64, terms65, terms66, false);
        org.junit.rules.RuleChain ruleChain69 = kuromojiAnalysisTests59.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement70 = null;
        org.junit.runner.Description description71 = null;
        org.junit.runners.model.Statement statement72 = ruleChain69.apply(statement70, description71);
        org.junit.Assert.assertNotEquals("", (java.lang.Object) testRule54, (java.lang.Object) description71);
        org.junit.rules.RuleChain ruleChain74 = org.junit.rules.RuleChain.outerRule(testRule54);
        org.junit.rules.RuleChain ruleChain75 = ruleChain51.around((org.junit.rules.TestRule) ruleChain74);
        java.lang.Object obj76 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) ruleChain51, obj76);
    }

    @Test
    public void test3697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3697");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Terms terms3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader2, terms3, terms4, false);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule9 = kuromojiAnalysisTests0.ruleChain;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling11 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.SOMETIMES;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray12 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] { throttling11 };
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingSet13 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray12);
        java.util.List<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingList14 = org.elasticsearch.test.ESTestCase.randomSubsetOf(0, throttlingArray12);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) throttlingList14);
    }

    @Test
    public void test3698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3698");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule1 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.tearDown();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) (-1));
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain7 = org.junit.rules.RuleChain.emptyRuleChain();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests9 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule10 = kuromojiAnalysisTests9.ruleChain;
        kuromojiAnalysisTests9.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests9);
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests9.assertTermsEquals("random", indexReader14, terms15, terms16, false);
        org.junit.rules.RuleChain ruleChain19 = kuromojiAnalysisTests9.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement20 = null;
        org.junit.runner.Description description21 = null;
        org.junit.runners.model.Statement statement22 = ruleChain19.apply(statement20, description21);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests24 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule25 = kuromojiAnalysisTests24.ruleChain;
        kuromojiAnalysisTests24.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests24);
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.Terms terms30 = null;
        org.apache.lucene.index.Terms terms31 = null;
        kuromojiAnalysisTests24.assertTermsEquals("random", indexReader29, terms30, terms31, false);
        org.junit.rules.RuleChain ruleChain34 = kuromojiAnalysisTests24.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement35 = null;
        org.junit.runner.Description description36 = null;
        org.junit.runners.model.Statement statement37 = ruleChain34.apply(statement35, description36);
        org.junit.runner.Description description38 = null;
        org.junit.runners.model.Statement statement39 = ruleChain19.apply(statement37, description38);
        org.junit.runner.Description description40 = null;
        org.junit.runners.model.Statement statement41 = ruleChain7.apply(statement37, description40);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests42 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests42.tearDown();
        org.apache.lucene.index.IndexReader indexReader45 = null;
        org.apache.lucene.index.Terms terms46 = null;
        org.apache.lucene.index.Terms terms47 = null;
        kuromojiAnalysisTests42.assertTermsEquals("tests.failfast", indexReader45, terms46, terms47, false);
        org.apache.lucene.index.IndexReader indexReader51 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum53 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum54 = null;
        kuromojiAnalysisTests42.assertDocsSkippingEquals("tests.nightly", indexReader51, (int) (byte) -1, postingsEnum53, postingsEnum54, false);
        org.apache.lucene.index.IndexReader indexReader58 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum60 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum61 = null;
        kuromojiAnalysisTests42.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader58, (int) (short) -1, postingsEnum60, postingsEnum61);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests64 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule65 = kuromojiAnalysisTests64.ruleChain;
        kuromojiAnalysisTests64.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests64);
        org.junit.rules.RuleChain ruleChain68 = kuromojiAnalysisTests64.failureAndSuccessEvents;
        kuromojiAnalysisTests42.failureAndSuccessEvents = ruleChain68;
        org.apache.lucene.index.IndexReader indexReader71 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum73 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum74 = null;
        kuromojiAnalysisTests42.assertDocsSkippingEquals("tests.badapples", indexReader71, 0, postingsEnum73, postingsEnum74, true);
        kuromojiAnalysisTests42.resetCheckIndexStatus();
        org.junit.Assert.assertNotEquals((java.lang.Object) ruleChain7, (java.lang.Object) kuromojiAnalysisTests42);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests79 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule80 = kuromojiAnalysisTests79.ruleChain;
        org.junit.rules.RuleChain ruleChain81 = org.junit.rules.RuleChain.outerRule(testRule80);
        org.junit.rules.RuleChain ruleChain82 = ruleChain7.around(testRule80);
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain7;
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((-1));
        org.apache.lucene.index.PostingsEnum postingsEnum88 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum89 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("hi!", postingsEnum88, postingsEnum89);
    }

    @Test
    public void test3699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3699");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (long) 'a', (long) (short) 100);
    }

    @Test
    public void test3700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3700");
        long[] longArray2 = new long[] { (byte) 0 };
        long[] longArray4 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray2, longArray4);
        long[] longArray7 = new long[] { (byte) 0 };
        long[] longArray9 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray7, longArray9);
        org.junit.Assert.assertArrayEquals("", longArray2, longArray9);
        long[] longArray14 = new long[] { (byte) 0 };
        long[] longArray16 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray14, longArray16);
        long[] longArray19 = new long[] { (byte) 0 };
        long[] longArray21 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray19, longArray21);
        org.junit.Assert.assertArrayEquals("", longArray14, longArray21);
        long[] longArray26 = new long[] { (byte) 0 };
        long[] longArray28 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray26, longArray28);
        long[] longArray31 = new long[] { (byte) 0 };
        long[] longArray33 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray31, longArray33);
        org.junit.Assert.assertArrayEquals(longArray26, longArray33);
        long[] longArray37 = new long[] { (byte) 0 };
        long[] longArray39 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray37, longArray39);
        long[] longArray42 = new long[] { (byte) 0 };
        long[] longArray44 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray42, longArray44);
        org.junit.Assert.assertArrayEquals(longArray37, longArray44);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", longArray26, longArray37);
        org.junit.Assert.assertArrayEquals(longArray21, longArray26);
        long[] longArray50 = new long[] { (byte) 0 };
        long[] longArray52 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray50, longArray52);
        long[] longArray55 = new long[] { (byte) 0 };
        long[] longArray57 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray55, longArray57);
        org.junit.Assert.assertArrayEquals(longArray50, longArray57);
        org.junit.Assert.assertArrayEquals(longArray21, longArray50);
        org.junit.Assert.assertArrayEquals(longArray9, longArray50);
        java.lang.Object obj62 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) longArray9, obj62);
    }

    @Test
    public void test3701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3701");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain4 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (short) 1);
        org.junit.Assert.assertNotNull("tests.slow", (java.lang.Object) kuromojiAnalysisTests1);
        org.junit.rules.TestRule testRule8 = kuromojiAnalysisTests1.ruleChain;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocsAndPositionsEnumEquals("tests.slow", postingsEnum10, postingsEnum11);
    }

    @Test
    public void test3702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3702");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader3, fields4, fields5, true);
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.monster", postingsEnum9, postingsEnum10, true);
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.ensureCleanedUp();
        java.io.Serializable[] serializableArray16 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet17 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray16);
        java.io.Serializable[] serializableArray18 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet19 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray18);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray16, (java.lang.Object[]) serializableArray18);
        java.util.concurrent.ExecutorService[] executorServiceArray21 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean22 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray21);
        boolean boolean23 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray21);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray16, (java.lang.Object[]) executorServiceArray21);
        boolean boolean25 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray21);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) executorServiceArray21);
        org.junit.rules.TestRule testRule27 = kuromojiAnalysisTests0.ruleChain;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("europarl.lines.txt.gz", postingsEnum29, postingsEnum30);
    }

    @Test
    public void test3703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3703");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader3, fields4, fields5, true);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) true);
    }

    @Test
    public void test3704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3704");
        java.io.Serializable[] serializableArray1 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet2 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray1);
        java.io.Serializable[] serializableArray4 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet5 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray4);
        java.io.Serializable[] serializableArray7 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet8 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray7);
        java.io.Serializable[] serializableArray9 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet10 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray9);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray7, (java.lang.Object[]) serializableArray9);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray4, (java.lang.Object[]) serializableArray9);
        org.junit.Assert.assertArrayEquals("tests.nightly", (java.lang.Object[]) serializableArray1, (java.lang.Object[]) serializableArray9);
        java.lang.Object[] objArray14 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray9, objArray14);
    }

    @Test
    public void test3705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3705");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("enwiki.random.lines.txt", indexReader4, fields5, fields6, true);
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (byte) 1);
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        org.apache.lucene.index.Fields fields15 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("enwiki.random.lines.txt", indexReader13, fields14, fields15, false);
        org.junit.rules.TestRule testRule18 = kuromojiAnalysisTests1.ruleChain;
        java.lang.String str19 = kuromojiAnalysisTests1.getTestName();
        org.junit.rules.RuleChain ruleChain20 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests21 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests21.tearDown();
        kuromojiAnalysisTests21.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests21.ensureCleanedUp();
        org.junit.rules.TestRule testRule25 = kuromojiAnalysisTests21.ruleChain;
        kuromojiAnalysisTests21.assertPathHasBeenCleared("europarl.lines.txt.gz");
        org.junit.Assert.assertNotSame((java.lang.Object) ruleChain20, (java.lang.Object) kuromojiAnalysisTests21);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests29 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests29.tearDown();
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.Terms terms33 = null;
        org.apache.lucene.index.Terms terms34 = null;
        kuromojiAnalysisTests29.assertTermsEquals("tests.failfast", indexReader32, terms33, terms34, false);
        org.apache.lucene.index.IndexReader indexReader38 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum40 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        kuromojiAnalysisTests29.assertDocsSkippingEquals("tests.nightly", indexReader38, (int) (byte) -1, postingsEnum40, postingsEnum41, false);
        org.apache.lucene.index.IndexReader indexReader45 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum47 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum48 = null;
        kuromojiAnalysisTests29.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader45, (int) (short) -1, postingsEnum47, postingsEnum48);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests51 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule52 = kuromojiAnalysisTests51.ruleChain;
        kuromojiAnalysisTests51.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests51);
        org.junit.rules.RuleChain ruleChain55 = kuromojiAnalysisTests51.failureAndSuccessEvents;
        kuromojiAnalysisTests29.failureAndSuccessEvents = ruleChain55;
        org.apache.lucene.index.IndexReader indexReader58 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum60 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum61 = null;
        kuromojiAnalysisTests29.assertDocsSkippingEquals("tests.badapples", indexReader58, 0, postingsEnum60, postingsEnum61, true);
        org.apache.lucene.index.IndexReader indexReader65 = null;
        org.apache.lucene.index.Terms terms66 = null;
        org.apache.lucene.index.Terms terms67 = null;
        kuromojiAnalysisTests29.assertTermsEquals("random", indexReader65, terms66, terms67, false);
        kuromojiAnalysisTests29.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain71 = kuromojiAnalysisTests29.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader73 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum75 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum76 = null;
        kuromojiAnalysisTests29.assertPositionsSkippingEquals("tests.weekly", indexReader73, (int) (short) 100, postingsEnum75, postingsEnum76);
        java.lang.String str78 = kuromojiAnalysisTests29.getTestName();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("enwiki.random.lines.txt", (java.lang.Object) ruleChain20, (java.lang.Object) kuromojiAnalysisTests29);
    }

    @Test
    public void test3706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3706");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("hi!", (double) (short) 0, (double) 10, (double) 1);
    }

    @Test
    public void test3707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3707");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("enwiki.random.lines.txt", indexReader4, fields5, fields6, true);
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (byte) 1);
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        org.apache.lucene.index.Fields fields15 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("enwiki.random.lines.txt", indexReader13, fields14, fields15, false);
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.monster", indexReader19, (int) (byte) 1, postingsEnum21, postingsEnum22);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("random");
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.Terms terms28 = null;
        org.apache.lucene.index.Terms terms29 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.badapples", indexReader27, terms28, terms29, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests32 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests32.tearDown();
        org.apache.lucene.index.IndexReader indexReader35 = null;
        org.apache.lucene.index.Fields fields36 = null;
        org.apache.lucene.index.Fields fields37 = null;
        kuromojiAnalysisTests32.assertFieldsEquals("enwiki.random.lines.txt", indexReader35, fields36, fields37, true);
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        kuromojiAnalysisTests32.assertDocsEnumEquals("tests.monster", postingsEnum41, postingsEnum42, true);
        kuromojiAnalysisTests32.ensureCleanedUp();
        java.lang.Object obj46 = null;
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests32, obj46);
        org.apache.lucene.index.IndexReader indexReader49 = null;
        org.apache.lucene.index.Fields fields50 = null;
        org.apache.lucene.index.Fields fields51 = null;
        kuromojiAnalysisTests32.assertFieldsEquals("tests.maxfailures", indexReader49, fields50, fields51, true);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object) "tests.badapples", (java.lang.Object) kuromojiAnalysisTests32);
    }

    @Test
    public void test3708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3708");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader9, (int) (byte) -1, postingsEnum11, postingsEnum12, false);
        org.junit.rules.RuleChain ruleChain15 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.junit.rules.TestRule testRule16 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule16;
        org.junit.rules.RuleChain ruleChain18 = ruleChain15.around(testRule16);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule21 = kuromojiAnalysisTests20.ruleChain;
        kuromojiAnalysisTests20.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests20);
        org.junit.rules.RuleChain ruleChain24 = kuromojiAnalysisTests20.failureAndSuccessEvents;
        org.junit.rules.TestRule testRule25 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.junit.rules.RuleChain ruleChain26 = org.junit.rules.RuleChain.outerRule(testRule25);
        org.junit.rules.RuleChain[] ruleChainArray27 = new org.junit.rules.RuleChain[] { ruleChain15, ruleChain24, ruleChain26 };
        java.util.Set<org.junit.rules.RuleChain> ruleChainSet28 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray27);
        java.util.Set<org.junit.rules.TestRule> testRuleSet29 = org.apache.lucene.util.LuceneTestCase.asSet((org.junit.rules.TestRule[]) ruleChainArray27);
        org.junit.Assert.assertNotNull((java.lang.Object) ruleChainArray27);
        java.util.Set<org.junit.rules.RuleChain> ruleChainSet31 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray27);
        java.lang.Object[] objArray32 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) ruleChainArray27, objArray32);
    }

    @Test
    public void test3709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3709");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("europarl.lines.txt.gz", (-1L), (long) (short) -1);
    }

    @Test
    public void test3710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3710");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests6 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule7 = kuromojiAnalysisTests6.ruleChain;
        kuromojiAnalysisTests6.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests6);
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests6.assertTermsEquals("random", indexReader11, terms12, terms13, false);
        org.junit.rules.RuleChain ruleChain16 = kuromojiAnalysisTests6.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement17 = null;
        org.junit.runner.Description description18 = null;
        org.junit.runners.model.Statement statement19 = ruleChain16.apply(statement17, description18);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests21 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule22 = kuromojiAnalysisTests21.ruleChain;
        kuromojiAnalysisTests21.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests21);
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        org.apache.lucene.index.Terms terms28 = null;
        kuromojiAnalysisTests21.assertTermsEquals("random", indexReader26, terms27, terms28, false);
        org.junit.rules.RuleChain ruleChain31 = kuromojiAnalysisTests21.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement32 = null;
        org.junit.runner.Description description33 = null;
        org.junit.runners.model.Statement statement34 = ruleChain31.apply(statement32, description33);
        org.junit.runner.Description description35 = null;
        org.junit.runners.model.Statement statement36 = ruleChain16.apply(statement34, description35);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain16;
        org.junit.rules.RuleChain ruleChain38 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.junit.Assert.assertNotNull("tests.failfast", (java.lang.Object) kuromojiAnalysisTests1);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertPathHasBeenCleared("");
    }

    @Test
    public void test3711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3711");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule1 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.tearDown();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) (-1));
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.Fields fields9 = null;
        org.apache.lucene.index.Fields fields10 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("", indexReader8, fields9, fields10, false);
        org.junit.rules.RuleChain ruleChain14 = org.junit.rules.RuleChain.emptyRuleChain();
        long[] longArray16 = new long[] { (byte) 0 };
        long[] longArray18 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray16, longArray18);
        org.junit.Assert.assertNotEquals("tests.maxfailures", (java.lang.Object) ruleChain14, (java.lang.Object) longArray16);
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain14;
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("hi!", postingsEnum24, postingsEnum25);
    }

    @Test
    public void test3712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3712");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", (double) 0L, (double) 100, (-1.0d));
    }

    @Test
    public void test3713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3713");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("hi!", indexReader3, fields4, fields5, false);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("tests.failfast", postingsEnum10, postingsEnum11, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests14 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests14.tearDown();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        org.apache.lucene.index.Terms terms19 = null;
        kuromojiAnalysisTests14.assertTermsEquals("tests.failfast", indexReader17, terms18, terms19, false);
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        kuromojiAnalysisTests14.assertDocsSkippingEquals("tests.nightly", indexReader23, (int) (byte) -1, postingsEnum25, postingsEnum26, false);
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        kuromojiAnalysisTests14.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader30, (int) (short) -1, postingsEnum32, postingsEnum33);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests36 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule37 = kuromojiAnalysisTests36.ruleChain;
        kuromojiAnalysisTests36.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests36);
        org.junit.rules.RuleChain ruleChain40 = kuromojiAnalysisTests36.failureAndSuccessEvents;
        kuromojiAnalysisTests14.failureAndSuccessEvents = ruleChain40;
        org.apache.lucene.index.IndexReader indexReader43 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum46 = null;
        kuromojiAnalysisTests14.assertDocsSkippingEquals("tests.badapples", indexReader43, 0, postingsEnum45, postingsEnum46, true);
        kuromojiAnalysisTests14.resetCheckIndexStatus();
        kuromojiAnalysisTests14.ensureCleanedUp();
        org.junit.rules.TestRule testRule51 = kuromojiAnalysisTests14.ruleChain;
        org.apache.lucene.index.IndexReader indexReader53 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum55 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum56 = null;
        kuromojiAnalysisTests14.assertDocsSkippingEquals("tests.nightly", indexReader53, (-1), postingsEnum55, postingsEnum56, true);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotSame("hi!", (java.lang.Object) postingsEnum11, (java.lang.Object) indexReader53);
    }

    @Test
    public void test3714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3714");
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling3 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.SOMETIMES;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray4 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] { throttling3 };
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingSet5 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray4);
        java.util.List<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingList6 = org.elasticsearch.test.ESTestCase.randomSubsetOf(0, throttlingArray4);
        org.junit.Assert.assertNotNull("tests.nightly", (java.lang.Object) throttlingArray4);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling8 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.SOMETIMES;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray9 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] { throttling8 };
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingSet10 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray9);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) throttlingArray4, (java.lang.Object[]) throttlingArray9);
        java.io.Serializable[] serializableArray15 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet16 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray15);
        java.io.Serializable[] serializableArray17 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet18 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray17);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray15, (java.lang.Object[]) serializableArray17);
        java.util.concurrent.ExecutorService[] executorServiceArray20 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean21 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray20);
        boolean boolean22 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray20);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray15, (java.lang.Object[]) executorServiceArray20);
        org.junit.Assert.assertNotNull("tests.nightly", (java.lang.Object) executorServiceArray20);
        boolean boolean25 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray20);
        int[][] intArray27 = new int[][] {};
        java.util.Set<int[]> intArraySet28 = org.apache.lucene.util.LuceneTestCase.asSet(intArray27);
        java.util.List<int[]> intArrayList29 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (byte) 0, intArray27);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) executorServiceArray20, (java.lang.Object[]) intArray27);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray4, (java.lang.Object[]) intArray27);
    }

    @Test
    public void test3715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3715");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader3, fields4, fields5, true);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 1);
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests20.tearDown();
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        org.apache.lucene.index.Fields fields25 = null;
        kuromojiAnalysisTests20.assertFieldsEquals("enwiki.random.lines.txt", indexReader23, fields24, fields25, true);
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        kuromojiAnalysisTests20.assertDocsSkippingEquals("", indexReader29, 1, postingsEnum31, postingsEnum32, false);
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum39 = null;
        kuromojiAnalysisTests20.assertDocsSkippingEquals("tests.weekly", indexReader36, 1, postingsEnum38, postingsEnum39, false);
        kuromojiAnalysisTests20.resetCheckIndexStatus();
        kuromojiAnalysisTests20.ensureAllSearchContextsReleased();
        org.apache.lucene.index.IndexReader indexReader45 = null;
        org.apache.lucene.index.Fields fields46 = null;
        org.apache.lucene.index.Fields fields47 = null;
        kuromojiAnalysisTests20.assertFieldsEquals("enwiki.random.lines.txt", indexReader45, fields46, fields47, true);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) indexReader45);
    }

    @Test
    public void test3716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3716");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.weekly", (double) 0, (double) 'a');
    }

    @Test
    public void test3717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3717");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader9, (int) (byte) -1, postingsEnum11, postingsEnum12, false);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader16, (int) (short) -1, postingsEnum18, postingsEnum19);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests22 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule23 = kuromojiAnalysisTests22.ruleChain;
        kuromojiAnalysisTests22.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests22);
        org.junit.rules.RuleChain ruleChain26 = kuromojiAnalysisTests22.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain26;
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.badapples", indexReader29, 0, postingsEnum31, postingsEnum32, true);
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.apache.lucene.index.PostingsEnum postingsEnum37 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("", postingsEnum37, postingsEnum38, false);
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum43 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.slow", postingsEnum42, postingsEnum43, true);
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader48 = null;
        org.apache.lucene.index.Terms terms49 = null;
        org.apache.lucene.index.Terms terms50 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader48, terms49, terms50, false);
        org.apache.lucene.index.PostingsEnum postingsEnum54 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum55 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("", postingsEnum54, postingsEnum55, false);
        org.apache.lucene.index.NumericDocValues numericDocValues60 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues61 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.maxfailures", (int) ' ', numericDocValues60, numericDocValues61);
    }

    @Test
    public void test3718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3718");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((-1L), 1L);
    }

    @Test
    public void test3719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3719");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", (-1L), 100L);
    }

    @Test
    public void test3720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3720");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.junit.rules.TestRule testRule4 = kuromojiAnalysisTests0.ruleChain;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests6 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule7 = kuromojiAnalysisTests6.ruleChain;
        kuromojiAnalysisTests6.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests6);
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests6.assertTermsEquals("random", indexReader11, terms12, terms13, false);
        org.junit.rules.RuleChain ruleChain16 = kuromojiAnalysisTests6.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain17 = kuromojiAnalysisTests6.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests19 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule20 = kuromojiAnalysisTests19.ruleChain;
        kuromojiAnalysisTests19.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests19);
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.Terms terms25 = null;
        org.apache.lucene.index.Terms terms26 = null;
        kuromojiAnalysisTests19.assertTermsEquals("random", indexReader24, terms25, terms26, false);
        org.junit.rules.RuleChain ruleChain29 = kuromojiAnalysisTests19.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement30 = null;
        org.junit.runner.Description description31 = null;
        org.junit.runners.model.Statement statement32 = ruleChain29.apply(statement30, description31);
        kuromojiAnalysisTests6.failureAndSuccessEvents = ruleChain29;
        org.junit.rules.RuleChain ruleChain34 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain29);
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain34;
        org.apache.lucene.index.PostingsEnum postingsEnum37 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("europarl.lines.txt.gz", postingsEnum37, postingsEnum38);
    }

    @Test
    public void test3721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3721");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1);
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.weekly", indexReader6, (int) (short) 1, postingsEnum8, postingsEnum9);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests11 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests11.tearDown();
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests11.assertTermsEquals("tests.failfast", indexReader14, terms15, terms16, false);
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        kuromojiAnalysisTests11.assertDocsSkippingEquals("tests.nightly", indexReader20, (int) (byte) -1, postingsEnum22, postingsEnum23, false);
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        kuromojiAnalysisTests11.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader27, (int) (short) -1, postingsEnum29, postingsEnum30);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests33 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule34 = kuromojiAnalysisTests33.ruleChain;
        kuromojiAnalysisTests33.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests33);
        org.junit.rules.RuleChain ruleChain37 = kuromojiAnalysisTests33.failureAndSuccessEvents;
        kuromojiAnalysisTests11.failureAndSuccessEvents = ruleChain37;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain37;
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.apache.lucene.index.IndexReader indexReader45 = null;
        org.apache.lucene.index.Terms terms46 = null;
        org.apache.lucene.index.Terms terms47 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.weekly", indexReader45, terms46, terms47, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests50 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests50.tearDown();
        kuromojiAnalysisTests50.ensureCheckIndexPassed();
        kuromojiAnalysisTests50.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain54 = kuromojiAnalysisTests50.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests50);
    }

    @Test
    public void test3722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3722");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1);
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        kuromojiAnalysisTests1.assertTermsEquals("random", indexReader6, terms7, terms8, false);
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.tearDown();
        java.lang.String str14 = kuromojiAnalysisTests1.getTestName();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests17 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests17.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests17, (java.lang.Object) "");
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        kuromojiAnalysisTests17.assertDocsEnumEquals("tests.nightly", postingsEnum22, postingsEnum23, true);
        org.junit.rules.RuleChain ruleChain26 = kuromojiAnalysisTests17.failureAndSuccessEvents;
        kuromojiAnalysisTests17.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.Fields fields30 = null;
        org.apache.lucene.index.Fields fields31 = null;
        kuromojiAnalysisTests17.assertFieldsEquals("tests.slow", indexReader29, fields30, fields31, false);
        org.apache.lucene.index.IndexReader indexReader35 = null;
        org.apache.lucene.index.Terms terms36 = null;
        org.apache.lucene.index.Terms terms37 = null;
        kuromojiAnalysisTests17.assertTermsEquals("europarl.lines.txt.gz", indexReader35, terms36, terms37, false);
        java.lang.String str40 = kuromojiAnalysisTests17.getTestName();
        kuromojiAnalysisTests17.restoreIndexWriterMaxDocs();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests17);
    }

    @Test
    public void test3723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3723");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule3 = kuromojiAnalysisTests2.ruleChain;
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2);
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("tests.weekly", indexReader7, (int) (short) 1, postingsEnum9, postingsEnum10);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests12.tearDown();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests12.assertTermsEquals("tests.failfast", indexReader15, terms16, terms17, false);
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        kuromojiAnalysisTests12.assertDocsSkippingEquals("tests.nightly", indexReader21, (int) (byte) -1, postingsEnum23, postingsEnum24, false);
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        kuromojiAnalysisTests12.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader28, (int) (short) -1, postingsEnum30, postingsEnum31);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule35 = kuromojiAnalysisTests34.ruleChain;
        kuromojiAnalysisTests34.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests34);
        org.junit.rules.RuleChain ruleChain38 = kuromojiAnalysisTests34.failureAndSuccessEvents;
        kuromojiAnalysisTests12.failureAndSuccessEvents = ruleChain38;
        kuromojiAnalysisTests2.failureAndSuccessEvents = ruleChain38;
        org.apache.lucene.index.IndexReader indexReader42 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum44 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("tests.monster", indexReader42, (int) (byte) 1, postingsEnum44, postingsEnum45);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests47 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule48 = kuromojiAnalysisTests47.ruleChain;
        kuromojiAnalysisTests47.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain50 = kuromojiAnalysisTests47.failureAndSuccessEvents;
        org.junit.Assert.assertNotSame((java.lang.Object) (byte) 1, (java.lang.Object) kuromojiAnalysisTests47);
        org.junit.rules.RuleChain ruleChain52 = kuromojiAnalysisTests47.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader54 = null;
        org.apache.lucene.index.Terms terms55 = null;
        org.apache.lucene.index.Terms terms56 = null;
        kuromojiAnalysisTests47.assertTermsEquals("", indexReader54, terms55, terms56, true);
        java.lang.Object obj60 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests62 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests62.tearDown();
        org.apache.lucene.index.IndexReader indexReader65 = null;
        org.apache.lucene.index.Fields fields66 = null;
        org.apache.lucene.index.Fields fields67 = null;
        kuromojiAnalysisTests62.assertFieldsEquals("enwiki.random.lines.txt", indexReader65, fields66, fields67, true);
        kuromojiAnalysisTests62.setUp();
        kuromojiAnalysisTests62.setIndexWriterMaxDocs((int) (byte) 1);
        kuromojiAnalysisTests62.resetCheckIndexStatus();
        kuromojiAnalysisTests62.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests62.assertPathHasBeenCleared("hi!");
        kuromojiAnalysisTests62.ensureAllSearchContextsReleased();
        org.junit.Assert.assertNotNull("tests.maxfailures", (java.lang.Object) kuromojiAnalysisTests62);
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", obj60, (java.lang.Object) kuromojiAnalysisTests62);
        kuromojiAnalysisTests62.setIndexWriterMaxDocs((int) (byte) 0);
        kuromojiAnalysisTests62.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain84 = kuromojiAnalysisTests62.failureAndSuccessEvents;
        kuromojiAnalysisTests62.setUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.maxfailures", (java.lang.Object) indexReader54, (java.lang.Object) kuromojiAnalysisTests62);
    }

    @Test
    public void test3724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3724");
        java.lang.Object obj1 = null;
        short[] shortArray4 = new short[] {};
        short[] shortArray5 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray4, shortArray5);
        short[] shortArray8 = new short[] {};
        short[] shortArray9 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray8, shortArray9);
        org.junit.Assert.assertArrayEquals(shortArray4, shortArray8);
        short[] shortArray14 = new short[] {};
        short[] shortArray15 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray14, shortArray15);
        short[] shortArray18 = new short[] {};
        short[] shortArray19 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray18, shortArray19);
        org.junit.Assert.assertArrayEquals(shortArray14, shortArray18);
        short[] shortArray23 = new short[] {};
        short[] shortArray24 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray23, shortArray24);
        short[] shortArray27 = new short[] {};
        short[] shortArray28 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray27, shortArray28);
        org.junit.Assert.assertArrayEquals(shortArray23, shortArray27);
        org.junit.Assert.assertArrayEquals("<unknown>", shortArray14, shortArray27);
        org.junit.Assert.assertArrayEquals("", shortArray8, shortArray14);
        short[] shortArray35 = new short[] {};
        short[] shortArray36 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray35, shortArray36);
        short[] shortArray39 = new short[] {};
        short[] shortArray40 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray39, shortArray40);
        org.junit.Assert.assertArrayEquals("", shortArray36, shortArray39);
        org.junit.Assert.assertArrayEquals(shortArray14, shortArray39);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("", obj1, (java.lang.Object) shortArray14);
    }

    @Test
    public void test3725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3725");
        org.junit.rules.TestRule testRule0 = null;
        org.junit.rules.RuleChain ruleChain1 = org.junit.rules.RuleChain.outerRule(testRule0);
        org.junit.rules.RuleChain ruleChain2 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain1);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests4 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule5 = kuromojiAnalysisTests4.ruleChain;
        kuromojiAnalysisTests4.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests4);
        org.junit.rules.RuleChain ruleChain8 = kuromojiAnalysisTests4.failureAndSuccessEvents;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain8;
        org.junit.rules.RuleChain ruleChain10 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain8);
        org.junit.rules.RuleChain ruleChain11 = ruleChain2.around((org.junit.rules.TestRule) ruleChain10);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) ruleChain10);
    }

    @Test
    public void test3726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3726");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.nightly", indexReader10, (int) (byte) -1, postingsEnum12, postingsEnum13, false);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        org.apache.lucene.index.Terms terms19 = null;
        kuromojiAnalysisTests1.assertTermsEquals("", indexReader17, terms18, terms19, true);
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests24 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule25 = kuromojiAnalysisTests24.ruleChain;
        kuromojiAnalysisTests24.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests24.tearDown();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests24, (java.lang.Object) (-1));
        kuromojiAnalysisTests24.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.Fields fields33 = null;
        org.apache.lucene.index.Fields fields34 = null;
        kuromojiAnalysisTests24.assertFieldsEquals("", indexReader32, fields33, fields34, false);
        kuromojiAnalysisTests24.setUp();
        java.lang.Class<?> wildcardClass38 = kuromojiAnalysisTests24.getClass();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.badapples", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests24);
    }

    @Test
    public void test3727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3727");
        long[] longArray2 = new long[] { (byte) 0 };
        long[] longArray4 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray2, longArray4);
        long[] longArray7 = new long[] { (byte) 0 };
        long[] longArray9 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray7, longArray9);
        org.junit.Assert.assertArrayEquals(longArray2, longArray9);
        long[] longArray14 = new long[] { (byte) 0 };
        long[] longArray16 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray14, longArray16);
        long[] longArray19 = new long[] { (byte) 0 };
        long[] longArray21 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray19, longArray21);
        org.junit.Assert.assertArrayEquals(longArray14, longArray21);
        long[] longArray25 = new long[] { (byte) 0 };
        long[] longArray27 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray25, longArray27);
        long[] longArray30 = new long[] { (byte) 0 };
        long[] longArray32 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray30, longArray32);
        org.junit.Assert.assertArrayEquals(longArray25, longArray32);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", longArray14, longArray25);
        org.junit.Assert.assertArrayEquals(longArray9, longArray25);
        long[] longArray43 = new long[] { (byte) 0 };
        long[] longArray45 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray43, longArray45);
        long[] longArray48 = new long[] { (byte) 0 };
        long[] longArray50 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray48, longArray50);
        org.junit.Assert.assertArrayEquals("", longArray43, longArray50);
        long[] longArray55 = new long[] { (byte) 0 };
        long[] longArray57 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray55, longArray57);
        long[] longArray60 = new long[] { (byte) 0 };
        long[] longArray62 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray60, longArray62);
        org.junit.Assert.assertArrayEquals("", longArray55, longArray62);
        org.junit.Assert.assertArrayEquals("tests.failfast", longArray43, longArray62);
        org.junit.Assert.assertNotEquals("tests.nightly", (java.lang.Object) "tests.monster", (java.lang.Object) longArray62);
        long[] longArray69 = new long[] { (byte) 0 };
        long[] longArray71 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray69, longArray71);
        long[] longArray74 = new long[] { (byte) 0 };
        long[] longArray76 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray74, longArray76);
        org.junit.Assert.assertArrayEquals("", longArray69, longArray76);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", longArray62, longArray76);
        org.junit.Assert.assertArrayEquals(longArray9, longArray76);
        long[] longArray83 = new long[] { (byte) 0 };
        long[] longArray85 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray83, longArray85);
        long[] longArray88 = new long[] { (byte) 0 };
        long[] longArray90 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray88, longArray90);
        org.junit.Assert.assertArrayEquals("", longArray83, longArray90);
        org.junit.Assert.assertArrayEquals(longArray76, longArray83);
        long[] longArray94 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("hi!", longArray76, longArray94);
    }

    @Test
    public void test3728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3728");
        java.lang.Object obj1 = null;
        org.junit.rules.TestRule testRule2 = null;
        org.junit.rules.RuleChain ruleChain3 = org.junit.rules.RuleChain.outerRule(testRule2);
        org.junit.rules.RuleChain ruleChain4 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain3);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests5 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests5.tearDown();
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.Terms terms9 = null;
        org.apache.lucene.index.Terms terms10 = null;
        kuromojiAnalysisTests5.assertTermsEquals("tests.failfast", indexReader8, terms9, terms10, false);
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum17 = null;
        kuromojiAnalysisTests5.assertDocsSkippingEquals("tests.nightly", indexReader14, (int) (byte) -1, postingsEnum16, postingsEnum17, false);
        org.junit.rules.RuleChain ruleChain20 = kuromojiAnalysisTests5.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain21 = org.junit.rules.RuleChain.emptyRuleChain();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule24 = kuromojiAnalysisTests23.ruleChain;
        kuromojiAnalysisTests23.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests23);
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.Terms terms29 = null;
        org.apache.lucene.index.Terms terms30 = null;
        kuromojiAnalysisTests23.assertTermsEquals("random", indexReader28, terms29, terms30, false);
        org.junit.rules.RuleChain ruleChain33 = kuromojiAnalysisTests23.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement34 = null;
        org.junit.runner.Description description35 = null;
        org.junit.runners.model.Statement statement36 = ruleChain33.apply(statement34, description35);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests38 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule39 = kuromojiAnalysisTests38.ruleChain;
        kuromojiAnalysisTests38.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests38);
        org.apache.lucene.index.IndexReader indexReader43 = null;
        org.apache.lucene.index.Terms terms44 = null;
        org.apache.lucene.index.Terms terms45 = null;
        kuromojiAnalysisTests38.assertTermsEquals("random", indexReader43, terms44, terms45, false);
        org.junit.rules.RuleChain ruleChain48 = kuromojiAnalysisTests38.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement49 = null;
        org.junit.runner.Description description50 = null;
        org.junit.runners.model.Statement statement51 = ruleChain48.apply(statement49, description50);
        org.junit.runner.Description description52 = null;
        org.junit.runners.model.Statement statement53 = ruleChain33.apply(statement51, description52);
        org.junit.runner.Description description54 = null;
        org.junit.runners.model.Statement statement55 = ruleChain21.apply(statement51, description54);
        org.junit.runner.Description description56 = null;
        org.junit.runners.model.Statement statement57 = ruleChain20.apply(statement51, description56);
        org.junit.rules.RuleChain ruleChain58 = org.junit.rules.RuleChain.emptyRuleChain();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests60 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule61 = kuromojiAnalysisTests60.ruleChain;
        kuromojiAnalysisTests60.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests60);
        org.apache.lucene.index.IndexReader indexReader65 = null;
        org.apache.lucene.index.Terms terms66 = null;
        org.apache.lucene.index.Terms terms67 = null;
        kuromojiAnalysisTests60.assertTermsEquals("random", indexReader65, terms66, terms67, false);
        org.junit.rules.RuleChain ruleChain70 = kuromojiAnalysisTests60.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement71 = null;
        org.junit.runner.Description description72 = null;
        org.junit.runners.model.Statement statement73 = ruleChain70.apply(statement71, description72);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests75 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule76 = kuromojiAnalysisTests75.ruleChain;
        kuromojiAnalysisTests75.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests75);
        org.apache.lucene.index.IndexReader indexReader80 = null;
        org.apache.lucene.index.Terms terms81 = null;
        org.apache.lucene.index.Terms terms82 = null;
        kuromojiAnalysisTests75.assertTermsEquals("random", indexReader80, terms81, terms82, false);
        org.junit.rules.RuleChain ruleChain85 = kuromojiAnalysisTests75.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement86 = null;
        org.junit.runner.Description description87 = null;
        org.junit.runners.model.Statement statement88 = ruleChain85.apply(statement86, description87);
        org.junit.runner.Description description89 = null;
        org.junit.runners.model.Statement statement90 = ruleChain70.apply(statement88, description89);
        org.junit.runner.Description description91 = null;
        org.junit.runners.model.Statement statement92 = ruleChain58.apply(statement88, description91);
        org.junit.runner.Description description93 = null;
        org.junit.runners.model.Statement statement94 = ruleChain20.apply(statement88, description93);
        org.junit.rules.RuleChain ruleChain95 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain20);
        org.junit.rules.RuleChain ruleChain96 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain20);
        org.junit.rules.RuleChain ruleChain97 = ruleChain4.around((org.junit.rules.TestRule) ruleChain20);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("hi!", obj1, (java.lang.Object) ruleChain20);
    }

    @Test
    public void test3729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3729");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", (double) (short) -1, (double) 100L, (double) 3);
    }

    @Test
    public void test3730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3730");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.awaitsfix", (double) (byte) 1, (double) 4, 100.0d);
    }

    @Test
    public void test3731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3731");
        java.lang.Object obj1 = null;
        short[] shortArray4 = new short[] {};
        short[] shortArray5 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray4, shortArray5);
        short[] shortArray8 = new short[] {};
        short[] shortArray9 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray8, shortArray9);
        org.junit.Assert.assertArrayEquals(shortArray4, shortArray8);
        short[] shortArray13 = new short[] {};
        short[] shortArray14 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray13, shortArray14);
        short[] shortArray17 = new short[] {};
        short[] shortArray18 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray17, shortArray18);
        org.junit.Assert.assertArrayEquals(shortArray13, shortArray17);
        org.junit.Assert.assertArrayEquals("<unknown>", shortArray4, shortArray17);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.awaitsfix", obj1, (java.lang.Object) "<unknown>");
    }

    @Test
    public void test3732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3732");
        org.junit.rules.TestRule testRule0 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.junit.rules.RuleChain ruleChain1 = org.junit.rules.RuleChain.outerRule(testRule0);
        int[] intArray5 = new int[] {};
        int[] intArray6 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray5, intArray6);
        int[] intArray9 = new int[] {};
        int[] intArray10 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray9, intArray10);
        org.junit.Assert.assertArrayEquals(intArray6, intArray9);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray6, (java.lang.Object) 100.0d);
        int[] intArray18 = new int[] {};
        int[] intArray19 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray18, intArray19);
        int[] intArray22 = new int[] {};
        int[] intArray23 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray22, intArray23);
        org.junit.Assert.assertArrayEquals(intArray19, intArray22);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray19, (java.lang.Object) 100.0d);
        int[] intArray31 = new int[] {};
        int[] intArray32 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray31, intArray32);
        int[] intArray35 = new int[] {};
        int[] intArray36 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray35, intArray36);
        org.junit.Assert.assertArrayEquals(intArray32, intArray35);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray32, (java.lang.Object) 100.0d);
        int[] intArray42 = new int[] {};
        int[] intArray43 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray42, intArray43);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray32, intArray42);
        org.junit.Assert.assertArrayEquals("random", intArray19, intArray32);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray6, intArray19);
        org.junit.Assert.assertNotSame((java.lang.Object) ruleChain1, (java.lang.Object) intArray19);
        long[] longArray51 = new long[] { (byte) 0 };
        long[] longArray53 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray51, longArray53);
        long[] longArray56 = new long[] { (byte) 0 };
        long[] longArray58 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray56, longArray58);
        org.junit.Assert.assertArrayEquals("", longArray51, longArray58);
        long[] longArray63 = new long[] { (byte) 0 };
        long[] longArray65 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray63, longArray65);
        long[] longArray68 = new long[] { (byte) 0 };
        long[] longArray70 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray68, longArray70);
        org.junit.Assert.assertArrayEquals(longArray63, longArray70);
        long[] longArray74 = new long[] { (byte) 0 };
        long[] longArray76 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray74, longArray76);
        long[] longArray79 = new long[] { (byte) 0 };
        long[] longArray81 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray79, longArray81);
        org.junit.Assert.assertArrayEquals(longArray74, longArray81);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", longArray63, longArray74);
        org.junit.Assert.assertArrayEquals(longArray58, longArray63);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) intArray19, (java.lang.Object) longArray63);
    }

    @Test
    public void test3733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3733");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests0);
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader6, terms7, terms8, true);
        kuromojiAnalysisTests0.setUp();
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.nightly", postingsEnum13, postingsEnum14);
    }

    @Test
    public void test3734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3734");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (double) (byte) 0, (double) 2);
    }

    @Test
    public void test3735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3735");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule3 = kuromojiAnalysisTests2.ruleChain;
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2);
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("tests.weekly", indexReader7, (int) (short) 1, postingsEnum9, postingsEnum10);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests12.tearDown();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests12.assertTermsEquals("tests.failfast", indexReader15, terms16, terms17, false);
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        kuromojiAnalysisTests12.assertDocsSkippingEquals("tests.nightly", indexReader21, (int) (byte) -1, postingsEnum23, postingsEnum24, false);
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        kuromojiAnalysisTests12.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader28, (int) (short) -1, postingsEnum30, postingsEnum31);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule35 = kuromojiAnalysisTests34.ruleChain;
        kuromojiAnalysisTests34.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests34);
        org.junit.rules.RuleChain ruleChain38 = kuromojiAnalysisTests34.failureAndSuccessEvents;
        kuromojiAnalysisTests12.failureAndSuccessEvents = ruleChain38;
        kuromojiAnalysisTests2.failureAndSuccessEvents = ruleChain38;
        kuromojiAnalysisTests2.tearDown();
        org.junit.Assert.assertNotNull("hi!", (java.lang.Object) kuromojiAnalysisTests2);
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader45 = null;
        org.apache.lucene.index.Terms terms46 = null;
        org.apache.lucene.index.Terms terms47 = null;
        kuromojiAnalysisTests2.assertTermsEquals("tests.monster", indexReader45, terms46, terms47, true);
        org.apache.lucene.index.IndexReader indexReader51 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum53 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum54 = null;
        kuromojiAnalysisTests2.assertDocsSkippingEquals("europarl.lines.txt.gz", indexReader51, 0, postingsEnum53, postingsEnum54, true);
        org.junit.rules.RuleChain ruleChain57 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) ruleChain57);
    }

    @Test
    public void test3736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3736");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (double) 10.0f, 1.0d, (double) (byte) 0);
    }

    @Test
    public void test3737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3737");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("<unknown>", (long) (-1), (-1L));
    }

    @Test
    public void test3738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3738");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.awaitsfix", (float) (byte) 1, (float) (byte) -1, (float) (-1L));
    }

    @Test
    public void test3739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3739");
        char[] charArray2 = new char[] {};
        char[] charArray3 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray2, charArray3);
        char[] charArray5 = new char[] {};
        char[] charArray6 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray5, charArray6);
        org.junit.Assert.assertArrayEquals(charArray3, charArray6);
        char[] charArray9 = new char[] {};
        char[] charArray10 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray9, charArray10);
        char[] charArray12 = new char[] {};
        char[] charArray13 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray12, charArray13);
        org.junit.Assert.assertArrayEquals(charArray10, charArray13);
        org.junit.Assert.assertArrayEquals("random", charArray3, charArray10);
        char[] charArray20 = new char[] {};
        char[] charArray21 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray20, charArray21);
        char[] charArray23 = new char[] {};
        char[] charArray24 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray23, charArray24);
        org.junit.Assert.assertArrayEquals(charArray21, charArray24);
        char[] charArray27 = new char[] {};
        char[] charArray28 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray27, charArray28);
        char[] charArray30 = new char[] {};
        char[] charArray31 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray30, charArray31);
        org.junit.Assert.assertArrayEquals(charArray28, charArray31);
        org.junit.Assert.assertArrayEquals("random", charArray21, charArray28);
        char[] charArray35 = new char[] {};
        char[] charArray36 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray35, charArray36);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", charArray28, charArray36);
        char[] charArray40 = new char[] {};
        char[] charArray41 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray40, charArray41);
        char[] charArray43 = new char[] {};
        char[] charArray44 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray43, charArray44);
        org.junit.Assert.assertArrayEquals(charArray41, charArray44);
        char[] charArray48 = new char[] {};
        char[] charArray49 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray48, charArray49);
        char[] charArray51 = new char[] {};
        char[] charArray52 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray51, charArray52);
        org.junit.Assert.assertArrayEquals(charArray49, charArray52);
        char[] charArray55 = new char[] {};
        char[] charArray56 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray55, charArray56);
        char[] charArray58 = new char[] {};
        char[] charArray59 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray58, charArray59);
        org.junit.Assert.assertArrayEquals(charArray56, charArray59);
        org.junit.Assert.assertArrayEquals("random", charArray49, charArray56);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", charArray44, charArray56);
        org.junit.Assert.assertArrayEquals(charArray28, charArray44);
        char[] charArray65 = new char[] {};
        char[] charArray66 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray65, charArray66);
        char[] charArray68 = new char[] {};
        char[] charArray69 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray68, charArray69);
        org.junit.Assert.assertArrayEquals(charArray66, charArray69);
        org.junit.Assert.assertArrayEquals("tests.nightly", charArray44, charArray69);
        org.junit.Assert.assertArrayEquals(charArray10, charArray69);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("<unknown>", (java.lang.Object) charArray10);
    }

    @Test
    public void test3740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3740");
        java.io.Serializable[] serializableArray5 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet6 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray5);
        java.io.Serializable[] serializableArray8 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet9 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray8);
        java.io.Serializable[] serializableArray10 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet11 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray10);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray8, (java.lang.Object[]) serializableArray10);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray5, (java.lang.Object[]) serializableArray10);
        java.io.Serializable[] serializableArray15 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet16 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray15);
        java.io.Serializable[] serializableArray18 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet19 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray18);
        java.io.Serializable[] serializableArray20 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet21 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray20);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray18, (java.lang.Object[]) serializableArray20);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray15, (java.lang.Object[]) serializableArray20);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray5, (java.lang.Object[]) serializableArray15);
        java.util.concurrent.ExecutorService[] executorServiceArray25 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean26 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray25);
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) serializableArray5, (java.lang.Object[]) executorServiceArray25);
        boolean boolean28 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray25);
        org.junit.Assert.assertNotNull("tests.failfast", (java.lang.Object) executorServiceArray25);
        boolean boolean30 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray25);
        org.elasticsearch.test.ESTestCase[][] eSTestCaseArray31 = new org.elasticsearch.test.ESTestCase[][] {};
        java.util.Set<org.elasticsearch.test.ESTestCase[]> eSTestCaseArraySet32 = org.apache.lucene.util.LuceneTestCase.asSet(eSTestCaseArray31);
        java.util.Set<org.elasticsearch.test.ESTestCase[]> eSTestCaseArraySet33 = org.apache.lucene.util.LuceneTestCase.asSet(eSTestCaseArray31);
        org.junit.Assert.assertEquals("", (java.lang.Object[]) executorServiceArray25, (java.lang.Object[]) eSTestCaseArray31);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling36 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.SOMETIMES;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray37 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] { throttling36 };
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingSet38 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray37);
        java.util.List<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingList39 = org.elasticsearch.test.ESTestCase.randomSubsetOf(0, throttlingArray37);
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet40 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray37);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray25, (java.lang.Object[]) throttlingArray37);
    }

    @Test
    public void test3741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3741");
        java.lang.Object[] objArray0 = null;
        java.io.Serializable[] serializableArray3 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet4 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray3);
        java.io.Serializable[] serializableArray6 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet7 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray6);
        java.io.Serializable[] serializableArray8 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet9 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray8);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray6, (java.lang.Object[]) serializableArray8);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray3, (java.lang.Object[]) serializableArray8);
        java.io.Serializable[] serializableArray13 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet14 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray13);
        java.io.Serializable[] serializableArray16 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet17 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray16);
        java.io.Serializable[] serializableArray18 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet19 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray18);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray16, (java.lang.Object[]) serializableArray18);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray13, (java.lang.Object[]) serializableArray18);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray3, (java.lang.Object[]) serializableArray13);
        java.io.Serializable[] serializableArray24 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet25 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray24);
        java.io.Serializable[] serializableArray26 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet27 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray26);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray24, (java.lang.Object[]) serializableArray26);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray3, (java.lang.Object[]) serializableArray24);
        java.io.Serializable[] serializableArray32 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet33 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray32);
        java.io.Serializable[] serializableArray35 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet36 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray35);
        java.io.Serializable[] serializableArray38 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet39 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray38);
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet41 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray40);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray38, (java.lang.Object[]) serializableArray40);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray35, (java.lang.Object[]) serializableArray40);
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) serializableArray32, (java.lang.Object[]) serializableArray40);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests46 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule47 = kuromojiAnalysisTests46.ruleChain;
        kuromojiAnalysisTests46.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests46);
        org.apache.lucene.index.IndexReader indexReader51 = null;
        org.apache.lucene.index.Terms terms52 = null;
        org.apache.lucene.index.Terms terms53 = null;
        kuromojiAnalysisTests46.assertTermsEquals("random", indexReader51, terms52, terms53, false);
        org.junit.rules.RuleChain ruleChain56 = kuromojiAnalysisTests46.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement57 = null;
        org.junit.runner.Description description58 = null;
        org.junit.runners.model.Statement statement59 = ruleChain56.apply(statement57, description58);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests61 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule62 = kuromojiAnalysisTests61.ruleChain;
        kuromojiAnalysisTests61.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests61);
        org.apache.lucene.index.IndexReader indexReader66 = null;
        org.apache.lucene.index.Terms terms67 = null;
        org.apache.lucene.index.Terms terms68 = null;
        kuromojiAnalysisTests61.assertTermsEquals("random", indexReader66, terms67, terms68, false);
        org.junit.rules.RuleChain ruleChain71 = kuromojiAnalysisTests61.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement72 = null;
        org.junit.runner.Description description73 = null;
        org.junit.runners.model.Statement statement74 = ruleChain71.apply(statement72, description73);
        org.junit.runner.Description description75 = null;
        org.junit.runners.model.Statement statement76 = ruleChain56.apply(statement74, description75);
        org.junit.Assert.assertNotEquals("tests.nightly", (java.lang.Object) serializableArray32, (java.lang.Object) description75);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray24, (java.lang.Object[]) serializableArray32);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(objArray0, (java.lang.Object[]) serializableArray32);
    }

    @Test
    public void test3742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3742");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests1.assertTermsEquals("", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (byte) 10);
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.maxfailures", indexReader15, terms16, terms17, true);
        org.junit.rules.TestRule testRule20 = kuromojiAnalysisTests1.ruleChain;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests22 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule23 = kuromojiAnalysisTests22.ruleChain;
        kuromojiAnalysisTests22.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests22);
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.Terms terms28 = null;
        org.apache.lucene.index.Terms terms29 = null;
        kuromojiAnalysisTests22.assertTermsEquals("random", indexReader27, terms28, terms29, false);
        org.junit.rules.RuleChain ruleChain32 = kuromojiAnalysisTests22.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement33 = null;
        org.junit.runner.Description description34 = null;
        org.junit.runners.model.Statement statement35 = ruleChain32.apply(statement33, description34);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests37 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule38 = kuromojiAnalysisTests37.ruleChain;
        kuromojiAnalysisTests37.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests37);
        org.apache.lucene.index.IndexReader indexReader42 = null;
        org.apache.lucene.index.Terms terms43 = null;
        org.apache.lucene.index.Terms terms44 = null;
        kuromojiAnalysisTests37.assertTermsEquals("random", indexReader42, terms43, terms44, false);
        org.junit.rules.RuleChain ruleChain47 = kuromojiAnalysisTests37.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement48 = null;
        org.junit.runner.Description description49 = null;
        org.junit.runners.model.Statement statement50 = ruleChain47.apply(statement48, description49);
        org.junit.runner.Description description51 = null;
        org.junit.runners.model.Statement statement52 = ruleChain32.apply(statement50, description51);
        org.junit.rules.TestRule testRule53 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.junit.rules.RuleChain ruleChain54 = org.junit.rules.RuleChain.outerRule(testRule53);
        org.junit.rules.RuleChain ruleChain55 = ruleChain32.around(testRule53);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain55;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("<unknown>", (java.lang.Object) ruleChain55);
    }

    @Test
    public void test3743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3743");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1);
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        kuromojiAnalysisTests1.assertTermsEquals("random", indexReader6, terms7, terms8, false);
        org.junit.rules.RuleChain ruleChain11 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.Terms terms14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        kuromojiAnalysisTests1.assertTermsEquals("europarl.lines.txt.gz", indexReader13, terms14, terms15, false);
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertPathHasBeenCleared("");
    }

    @Test
    public void test3744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3744");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (short) 100, (long) (short) 1);
    }

    @Test
    public void test3745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3745");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule3 = kuromojiAnalysisTests2.ruleChain;
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2);
        org.junit.rules.RuleChain ruleChain6 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.Fields fields9 = null;
        org.apache.lucene.index.Fields fields10 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("", indexReader8, fields9, fields10, true);
        kuromojiAnalysisTests2.setIndexWriterMaxDocs(3);
        short[] shortArray19 = new short[] {};
        short[] shortArray20 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray19, shortArray20);
        short[] shortArray23 = new short[] {};
        short[] shortArray24 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray23, shortArray24);
        org.junit.Assert.assertArrayEquals(shortArray19, shortArray23);
        short[] shortArray28 = new short[] {};
        short[] shortArray29 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray28, shortArray29);
        short[] shortArray32 = new short[] {};
        short[] shortArray33 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray32, shortArray33);
        org.junit.Assert.assertArrayEquals(shortArray28, shortArray32);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray19, shortArray32);
        short[] shortArray39 = new short[] {};
        short[] shortArray40 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray39, shortArray40);
        short[] shortArray43 = new short[] {};
        short[] shortArray44 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray43, shortArray44);
        org.junit.Assert.assertArrayEquals(shortArray39, shortArray43);
        short[] shortArray48 = new short[] {};
        short[] shortArray49 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray48, shortArray49);
        short[] shortArray52 = new short[] {};
        short[] shortArray53 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray52, shortArray53);
        org.junit.Assert.assertArrayEquals(shortArray48, shortArray52);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray39, shortArray52);
        org.junit.Assert.assertArrayEquals("", shortArray32, shortArray52);
        short[] shortArray59 = new short[] {};
        short[] shortArray60 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray59, shortArray60);
        short[] shortArray63 = new short[] {};
        short[] shortArray64 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray63, shortArray64);
        org.junit.Assert.assertArrayEquals(shortArray59, shortArray63);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray52, shortArray63);
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) shortArray52);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.weekly", (java.lang.Object) shortArray52);
    }

    @Test
    public void test3746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3746");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((double) (byte) 100, (double) 100.0f, (double) (byte) 100);
    }

    @Test
    public void test3747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3747");
        java.lang.Object[] objArray0 = null;
        java.util.concurrent.ExecutorService executorService2 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray3 = new java.util.concurrent.ExecutorService[] { executorService2 };
        boolean boolean4 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray3);
        java.util.concurrent.ExecutorService[] executorServiceArray6 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean7 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray6);
        java.io.Serializable[] serializableArray9 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet10 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray9);
        java.io.Serializable[] serializableArray12 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet13 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray12);
        java.io.Serializable[] serializableArray15 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet16 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray15);
        java.io.Serializable[] serializableArray17 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet18 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray17);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray15, (java.lang.Object[]) serializableArray17);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray12, (java.lang.Object[]) serializableArray17);
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) serializableArray9, (java.lang.Object[]) serializableArray17);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray6, (java.lang.Object[]) serializableArray9);
        org.junit.Assert.assertNotNull("europarl.lines.txt.gz", (java.lang.Object) executorServiceArray6);
        boolean boolean24 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray6);
        org.junit.Assert.assertNotEquals((java.lang.Object) executorServiceArray3, (java.lang.Object) executorServiceArray6);
        java.util.concurrent.ExecutorService[] executorServiceArray27 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean28 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray27);
        java.io.Serializable[] serializableArray30 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet31 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray30);
        java.io.Serializable[] serializableArray32 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet33 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray32);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray30, (java.lang.Object[]) serializableArray32);
        org.junit.Assert.assertArrayEquals("tests.badapples", (java.lang.Object[]) executorServiceArray27, (java.lang.Object[]) serializableArray32);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray6, (java.lang.Object[]) executorServiceArray27);
        boolean boolean37 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray27);
        java.io.Serializable[] serializableArray39 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet40 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray39);
        java.io.Serializable[] serializableArray42 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet43 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray42);
        java.io.Serializable[] serializableArray45 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet46 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray45);
        java.io.Serializable[] serializableArray47 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet48 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray47);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray45, (java.lang.Object[]) serializableArray47);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray42, (java.lang.Object[]) serializableArray47);
        org.junit.Assert.assertArrayEquals("tests.nightly", (java.lang.Object[]) serializableArray39, (java.lang.Object[]) serializableArray47);
        org.junit.Assert.assertArrayEquals("tests.slow", (java.lang.Object[]) executorServiceArray27, (java.lang.Object[]) serializableArray39);
        boolean boolean53 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray27);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(objArray0, (java.lang.Object[]) executorServiceArray27);
    }

    @Test
    public void test3748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3748");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Terms terms3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader2, terms3, terms4, false);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (short) 100);
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.junit.rules.RuleChain ruleChain11 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.failfast", postingsEnum13, postingsEnum14, true);
        double[] doubleArray19 = new double[] {};
        double[] doubleArray20 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray19, doubleArray20, (double) '4');
        double[] doubleArray23 = new double[] {};
        double[] doubleArray24 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray23, doubleArray24, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray20, doubleArray24, (double) (byte) -1);
        double[] doubleArray29 = new double[] {};
        double[] doubleArray30 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray29, doubleArray30, (double) '4');
        double[] doubleArray33 = new double[] {};
        double[] doubleArray34 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray33, doubleArray34, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray29, doubleArray34, (double) (short) 10);
        org.junit.Assert.assertArrayEquals(doubleArray20, doubleArray29, (double) 100);
        double[] doubleArray42 = new double[] {};
        double[] doubleArray43 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray42, doubleArray43, (double) '4');
        double[] doubleArray46 = new double[] {};
        double[] doubleArray47 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray46, doubleArray47, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray42, doubleArray47, (double) (short) 10);
        double[] doubleArray52 = new double[] {};
        double[] doubleArray53 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray52, doubleArray53, (double) '4');
        double[] doubleArray56 = new double[] {};
        double[] doubleArray57 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray56, doubleArray57, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray52, doubleArray57, (double) (short) 10);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", doubleArray47, doubleArray52, (double) 4);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", doubleArray20, doubleArray52, 0.0d);
        double[] doubleArray66 = new double[] {};
        double[] doubleArray67 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray66, doubleArray67, (double) '4');
        double[] doubleArray70 = new double[] {};
        double[] doubleArray71 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray70, doubleArray71, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray67, doubleArray71, (double) (byte) -1);
        double[] doubleArray76 = new double[] {};
        double[] doubleArray77 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray76, doubleArray77, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray67, doubleArray76, (double) 2);
        org.junit.Assert.assertArrayEquals("tests.nightly", doubleArray52, doubleArray67, (double) 0L);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) postingsEnum14, (java.lang.Object) doubleArray52);
    }

    @Test
    public void test3749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3749");
        double[] doubleArray8 = new double[] { '4', 3, 1L, (short) 1, (-1.0f), 0 };
        double[][] doubleArray9 = new double[][] { doubleArray8 };
        double[] doubleArray16 = new double[] { '4', 3, 1L, (short) 1, (-1.0f), 0 };
        double[][] doubleArray17 = new double[][] { doubleArray16 };
        double[] doubleArray24 = new double[] { '4', 3, 1L, (short) 1, (-1.0f), 0 };
        double[][] doubleArray25 = new double[][] { doubleArray24 };
        double[] doubleArray32 = new double[] { '4', 3, 1L, (short) 1, (-1.0f), 0 };
        double[][] doubleArray33 = new double[][] { doubleArray32 };
        double[] doubleArray40 = new double[] { '4', 3, 1L, (short) 1, (-1.0f), 0 };
        double[][] doubleArray41 = new double[][] { doubleArray40 };
        double[][][] doubleArray42 = new double[][][] { doubleArray9, doubleArray17, doubleArray25, doubleArray33, doubleArray41 };
        java.util.Set<double[][]> doubleArraySet43 = org.apache.lucene.util.LuceneTestCase.asSet(doubleArray42);
        java.util.List<double[][]> doubleArrayList44 = org.elasticsearch.test.ESTestCase.randomSubsetOf(1, doubleArray42);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests47 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule48 = kuromojiAnalysisTests47.ruleChain;
        kuromojiAnalysisTests47.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests47);
        org.apache.lucene.index.IndexReader indexReader52 = null;
        org.apache.lucene.index.Terms terms53 = null;
        org.apache.lucene.index.Terms terms54 = null;
        kuromojiAnalysisTests47.assertTermsEquals("random", indexReader52, terms53, terms54, false);
        org.junit.rules.RuleChain ruleChain57 = kuromojiAnalysisTests47.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader59 = null;
        org.apache.lucene.index.Terms terms60 = null;
        org.apache.lucene.index.Terms terms61 = null;
        kuromojiAnalysisTests47.assertTermsEquals("europarl.lines.txt.gz", indexReader59, terms60, terms61, false);
        kuromojiAnalysisTests47.resetCheckIndexStatus();
        java.lang.Class[] classArray66 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray67 = (java.lang.Class<?>[]) classArray66;
        java.util.Set<java.lang.Class<?>> wildcardClassSet68 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Class<?>[]) classArray66);
        org.junit.Assert.assertNotSame("tests.monster", (java.lang.Object) kuromojiAnalysisTests47, (java.lang.Object) classArray66);
        java.util.Set<java.lang.reflect.AnnotatedElement> annotatedElementSet70 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.reflect.AnnotatedElement[]) classArray66);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", (java.lang.Object[]) doubleArray42, (java.lang.Object[]) classArray66);
    }

    @Test
    public void test3750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3750");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (short) 1, (double) (short) -1);
    }

    @Test
    public void test3751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3751");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 100.0f, (double) 1);
    }

    @Test
    public void test3752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3752");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", (double) (-1), (double) 100, (double) (short) 100);
    }

    @Test
    public void test3753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3753");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals(1.0d, (double) 0.0f, (double) (short) 1);
    }

    @Test
    public void test3754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3754");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Terms terms3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader2, terms3, terms4, false);
        kuromojiAnalysisTests0.setUp();
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("<unknown>", postingsEnum9, postingsEnum10, false);
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum17 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.maxfailures", indexReader14, 3, postingsEnum16, postingsEnum17);
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.maxfailures", postingsEnum21, postingsEnum22);
    }

    @Test
    public void test3755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3755");
        java.lang.Object obj0 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests2.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        kuromojiAnalysisTests2.assertTermsEquals("tests.failfast", indexReader5, terms6, terms7, false);
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        kuromojiAnalysisTests2.assertDocsSkippingEquals("tests.nightly", indexReader11, (int) (byte) -1, postingsEnum13, postingsEnum14, false);
        org.apache.lucene.index.IndexReader indexReader18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader18, (int) (short) -1, postingsEnum20, postingsEnum21);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests24 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule25 = kuromojiAnalysisTests24.ruleChain;
        kuromojiAnalysisTests24.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests24);
        org.junit.rules.RuleChain ruleChain28 = kuromojiAnalysisTests24.failureAndSuccessEvents;
        kuromojiAnalysisTests2.failureAndSuccessEvents = ruleChain28;
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        kuromojiAnalysisTests2.assertDocsSkippingEquals("tests.badapples", indexReader31, 0, postingsEnum33, postingsEnum34, true);
        org.apache.lucene.index.IndexReader indexReader38 = null;
        org.apache.lucene.index.Terms terms39 = null;
        org.apache.lucene.index.Terms terms40 = null;
        kuromojiAnalysisTests2.assertTermsEquals("random", indexReader38, terms39, terms40, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests43 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests43.tearDown();
        org.apache.lucene.index.IndexReader indexReader46 = null;
        org.apache.lucene.index.Terms terms47 = null;
        org.apache.lucene.index.Terms terms48 = null;
        kuromojiAnalysisTests43.assertTermsEquals("tests.failfast", indexReader46, terms47, terms48, false);
        org.apache.lucene.index.IndexReader indexReader52 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum54 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum55 = null;
        kuromojiAnalysisTests43.assertDocsSkippingEquals("tests.nightly", indexReader52, (int) (byte) -1, postingsEnum54, postingsEnum55, false);
        org.junit.rules.RuleChain ruleChain58 = kuromojiAnalysisTests43.failureAndSuccessEvents;
        kuromojiAnalysisTests43.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests43.overrideTestDefaultQueryCache();
        org.junit.Assert.assertNotSame("hi!", (java.lang.Object) terms39, (java.lang.Object) kuromojiAnalysisTests43);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotSame(obj0, (java.lang.Object) terms39);
    }

    @Test
    public void test3756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3756");
        java.lang.Object obj0 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests3 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests3.tearDown();
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        kuromojiAnalysisTests3.assertTermsEquals("tests.failfast", indexReader6, terms7, terms8, false);
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        org.apache.lucene.index.Terms terms14 = null;
        kuromojiAnalysisTests3.assertTermsEquals("", indexReader12, terms13, terms14, false);
        org.junit.rules.RuleChain ruleChain17 = kuromojiAnalysisTests3.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests3);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("europarl.lines.txt.gz");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(obj0, (java.lang.Object) "europarl.lines.txt.gz");
    }

    @Test
    public void test3757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3757");
        java.lang.Object obj0 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule3 = kuromojiAnalysisTests2.ruleChain;
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2);
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        org.apache.lucene.index.Terms terms9 = null;
        kuromojiAnalysisTests2.assertTermsEquals("random", indexReader7, terms8, terms9, false);
        kuromojiAnalysisTests2.ensureCheckIndexPassed();
        kuromojiAnalysisTests2.ensureCleanedUp();
        org.junit.rules.TestRule testRule14 = kuromojiAnalysisTests2.ruleChain;
        kuromojiAnalysisTests2.setIndexWriterMaxDocs(10);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame(obj0, (java.lang.Object) 10);
    }

    @Test
    public void test3758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3758");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.weekly", (float) 'a', (float) (-1), 0.0f);
    }

    @Test
    public void test3759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3759");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader3, fields4, fields5, true);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 1);
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum17 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("<unknown>", postingsEnum16, postingsEnum17, true);
        org.junit.rules.RuleChain ruleChain20 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests21 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        org.apache.lucene.index.Terms terms25 = null;
        kuromojiAnalysisTests21.assertTermsEquals("", indexReader23, terms24, terms25, false);
        kuromojiAnalysisTests21.ensureCleanedUp();
        kuromojiAnalysisTests21.ensureCheckIndexPassed();
        kuromojiAnalysisTests21.overrideTestDefaultQueryCache();
        org.junit.rules.TestRule testRule31 = kuromojiAnalysisTests21.ruleChain;
        kuromojiAnalysisTests21.tearDown();
        org.junit.rules.TestRule testRule33 = kuromojiAnalysisTests21.ruleChain;
        kuromojiAnalysisTests21.assertPathHasBeenCleared("random");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests21);
    }

    @Test
    public void test3760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3760");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 10.0f, 100.0d);
    }

    @Test
    public void test3761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3761");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests2.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        org.apache.lucene.index.Fields fields7 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("enwiki.random.lines.txt", indexReader5, fields6, fields7, true);
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests2.assertDocsEnumEquals("tests.monster", postingsEnum11, postingsEnum12, true);
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        kuromojiAnalysisTests2.ensureCleanedUp();
        java.io.Serializable[] serializableArray18 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet19 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray18);
        java.io.Serializable[] serializableArray20 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet21 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray20);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray18, (java.lang.Object[]) serializableArray20);
        java.util.concurrent.ExecutorService[] executorServiceArray23 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean24 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray23);
        boolean boolean25 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray23);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray18, (java.lang.Object[]) executorServiceArray23);
        boolean boolean27 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray23);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) executorServiceArray23);
        java.util.concurrent.ExecutorService[] executorServiceArray29 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean30 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray29);
        boolean boolean31 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray29);
        boolean boolean32 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray29);
        boolean boolean33 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray29);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) executorServiceArray23, (java.lang.Object[]) executorServiceArray29);
        java.util.concurrent.ExecutorService[] executorServiceArray35 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean36 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray35);
        org.junit.Assert.assertArrayEquals("hi!", (java.lang.Object[]) executorServiceArray29, (java.lang.Object[]) executorServiceArray35);
        boolean boolean38 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray29);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling41 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.SOMETIMES;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray42 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] { throttling41 };
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingSet43 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray42);
        java.util.List<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingList44 = org.elasticsearch.test.ESTestCase.randomSubsetOf(0, throttlingArray42);
        org.junit.Assert.assertNotNull("tests.nightly", (java.lang.Object) throttlingArray42);
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingSet46 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray42);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray29, (java.lang.Object[]) throttlingArray42);
    }

    @Test
    public void test3762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3762");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader9, (int) (byte) -1, postingsEnum11, postingsEnum12, false);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader16, (int) (short) -1, postingsEnum18, postingsEnum19);
        org.junit.rules.RuleChain ruleChain21 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        java.lang.String str22 = kuromojiAnalysisTests0.getTestName();
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.Terms terms29 = null;
        org.apache.lucene.index.Terms terms30 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.maxfailures", indexReader28, terms29, terms30, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) false);
    }

    @Test
    public void test3763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3763");
        long[] longArray0 = null;
        long[] longArray2 = new long[] { (byte) 0 };
        long[] longArray4 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray2, longArray4);
        long[] longArray7 = new long[] { (byte) 0 };
        long[] longArray9 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray7, longArray9);
        org.junit.Assert.assertArrayEquals(longArray2, longArray9);
        long[] longArray14 = new long[] { (byte) 0 };
        long[] longArray16 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray14, longArray16);
        long[] longArray19 = new long[] { (byte) 0 };
        long[] longArray21 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray19, longArray21);
        org.junit.Assert.assertArrayEquals(longArray14, longArray21);
        long[] longArray25 = new long[] { (byte) 0 };
        long[] longArray27 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray25, longArray27);
        long[] longArray30 = new long[] { (byte) 0 };
        long[] longArray32 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray30, longArray32);
        org.junit.Assert.assertArrayEquals(longArray25, longArray32);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", longArray14, longArray25);
        org.junit.Assert.assertArrayEquals(longArray9, longArray25);
        long[] longArray43 = new long[] { (byte) 0 };
        long[] longArray45 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray43, longArray45);
        long[] longArray48 = new long[] { (byte) 0 };
        long[] longArray50 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray48, longArray50);
        org.junit.Assert.assertArrayEquals("", longArray43, longArray50);
        long[] longArray55 = new long[] { (byte) 0 };
        long[] longArray57 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray55, longArray57);
        long[] longArray60 = new long[] { (byte) 0 };
        long[] longArray62 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray60, longArray62);
        org.junit.Assert.assertArrayEquals("", longArray55, longArray62);
        org.junit.Assert.assertArrayEquals("tests.failfast", longArray43, longArray62);
        org.junit.Assert.assertNotEquals("tests.nightly", (java.lang.Object) "tests.monster", (java.lang.Object) longArray62);
        long[] longArray69 = new long[] { (byte) 0 };
        long[] longArray71 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray69, longArray71);
        long[] longArray74 = new long[] { (byte) 0 };
        long[] longArray76 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray74, longArray76);
        org.junit.Assert.assertArrayEquals("", longArray69, longArray76);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", longArray62, longArray76);
        org.junit.Assert.assertArrayEquals(longArray9, longArray76);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(longArray0, longArray76);
    }

    @Test
    public void test3764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3764");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader3, fields4, fields5, true);
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.monster", postingsEnum9, postingsEnum10, true);
        org.junit.rules.RuleChain ruleChain13 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests15 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule16 = kuromojiAnalysisTests15.ruleChain;
        kuromojiAnalysisTests15.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests15);
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        org.apache.lucene.index.Terms terms22 = null;
        kuromojiAnalysisTests15.assertTermsEquals("random", indexReader20, terms21, terms22, false);
        org.junit.rules.RuleChain ruleChain25 = kuromojiAnalysisTests15.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement26 = null;
        org.junit.runner.Description description27 = null;
        org.junit.runners.model.Statement statement28 = ruleChain25.apply(statement26, description27);
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain25;
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.Terms terms32 = null;
        org.apache.lucene.index.Terms terms33 = null;
        kuromojiAnalysisTests0.assertTermsEquals("hi!", indexReader31, terms32, terms33, false);
        org.apache.lucene.index.PostingsEnum postingsEnum37 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.badapples", postingsEnum37, postingsEnum38);
    }

    @Test
    public void test3765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3765");
        char[] charArray0 = null;
        java.lang.Object obj1 = null;
        char[] charArray5 = new char[] {};
        char[] charArray6 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray5, charArray6);
        char[] charArray8 = new char[] {};
        char[] charArray9 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray8, charArray9);
        org.junit.Assert.assertArrayEquals(charArray6, charArray9);
        char[] charArray12 = new char[] {};
        char[] charArray13 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray12, charArray13);
        char[] charArray15 = new char[] {};
        char[] charArray16 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray15, charArray16);
        org.junit.Assert.assertArrayEquals(charArray13, charArray16);
        org.junit.Assert.assertArrayEquals("random", charArray6, charArray13);
        char[] charArray20 = new char[] {};
        char[] charArray21 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray20, charArray21);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", charArray13, charArray21);
        char[] charArray25 = new char[] {};
        char[] charArray26 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray25, charArray26);
        char[] charArray28 = new char[] {};
        char[] charArray29 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray28, charArray29);
        org.junit.Assert.assertArrayEquals(charArray26, charArray29);
        char[] charArray33 = new char[] {};
        char[] charArray34 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray33, charArray34);
        char[] charArray36 = new char[] {};
        char[] charArray37 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray36, charArray37);
        org.junit.Assert.assertArrayEquals(charArray34, charArray37);
        char[] charArray40 = new char[] {};
        char[] charArray41 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray40, charArray41);
        char[] charArray43 = new char[] {};
        char[] charArray44 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray43, charArray44);
        org.junit.Assert.assertArrayEquals(charArray41, charArray44);
        org.junit.Assert.assertArrayEquals("random", charArray34, charArray41);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", charArray29, charArray41);
        org.junit.Assert.assertArrayEquals(charArray13, charArray29);
        char[] charArray50 = new char[] {};
        char[] charArray51 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray50, charArray51);
        char[] charArray53 = new char[] {};
        char[] charArray54 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray53, charArray54);
        org.junit.Assert.assertArrayEquals(charArray51, charArray54);
        org.junit.Assert.assertArrayEquals("tests.nightly", charArray29, charArray54);
        org.junit.Assert.assertNotSame(obj1, (java.lang.Object) charArray54);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(charArray0, charArray54);
    }

    @Test
    public void test3766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3766");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.nightly", indexReader10, (int) (byte) -1, postingsEnum12, postingsEnum13, false);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader17, (int) (short) -1, postingsEnum19, postingsEnum20);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule24 = kuromojiAnalysisTests23.ruleChain;
        kuromojiAnalysisTests23.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests23);
        org.junit.rules.RuleChain ruleChain27 = kuromojiAnalysisTests23.failureAndSuccessEvents;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain27;
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.badapples", indexReader30, 0, postingsEnum32, postingsEnum33, true);
        org.apache.lucene.index.IndexReader indexReader37 = null;
        org.apache.lucene.index.Terms terms38 = null;
        org.apache.lucene.index.Terms terms39 = null;
        kuromojiAnalysisTests1.assertTermsEquals("random", indexReader37, terms38, terms39, false);
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        java.lang.String str43 = kuromojiAnalysisTests1.getTestName();
        java.lang.String str44 = kuromojiAnalysisTests1.getTestName();
        org.junit.rules.RuleChain ruleChain45 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests47 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule48 = kuromojiAnalysisTests47.ruleChain;
        kuromojiAnalysisTests47.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests47);
        org.junit.rules.RuleChain ruleChain51 = kuromojiAnalysisTests47.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests52 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests52.tearDown();
        org.apache.lucene.index.IndexReader indexReader55 = null;
        org.apache.lucene.index.Terms terms56 = null;
        org.apache.lucene.index.Terms terms57 = null;
        kuromojiAnalysisTests52.assertTermsEquals("tests.failfast", indexReader55, terms56, terms57, false);
        org.apache.lucene.index.IndexReader indexReader61 = null;
        org.apache.lucene.index.Terms terms62 = null;
        org.apache.lucene.index.Terms terms63 = null;
        kuromojiAnalysisTests52.assertTermsEquals("", indexReader61, terms62, terms63, false);
        org.junit.rules.RuleChain ruleChain66 = kuromojiAnalysisTests52.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement67 = null;
        org.junit.runner.Description description68 = null;
        org.junit.runners.model.Statement statement69 = ruleChain66.apply(statement67, description68);
        org.junit.runner.Description description70 = null;
        org.junit.runners.model.Statement statement71 = ruleChain51.apply(statement69, description70);
        org.junit.rules.RuleChain ruleChain72 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain51);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain72;
        java.lang.Class<?> wildcardClass74 = ruleChain72.getClass();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests75 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader77 = null;
        org.apache.lucene.index.Terms terms78 = null;
        org.apache.lucene.index.Terms terms79 = null;
        kuromojiAnalysisTests75.assertTermsEquals("", indexReader77, terms78, terms79, false);
        kuromojiAnalysisTests75.ensureCleanedUp();
        kuromojiAnalysisTests75.ensureCheckIndexPassed();
        kuromojiAnalysisTests75.resetCheckIndexStatus();
        kuromojiAnalysisTests75.assertPathHasBeenCleared("tests.monster");
        kuromojiAnalysisTests75.assertPathHasBeenCleared("tests.monster");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (java.lang.Object) ruleChain72, (java.lang.Object) "tests.monster");
    }

    @Test
    public void test3767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3767");
        org.junit.rules.RuleChain ruleChain1 = org.junit.rules.RuleChain.emptyRuleChain();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests3 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule4 = kuromojiAnalysisTests3.ruleChain;
        kuromojiAnalysisTests3.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests3);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.Terms terms9 = null;
        org.apache.lucene.index.Terms terms10 = null;
        kuromojiAnalysisTests3.assertTermsEquals("random", indexReader8, terms9, terms10, false);
        org.junit.rules.RuleChain ruleChain13 = kuromojiAnalysisTests3.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement14 = null;
        org.junit.runner.Description description15 = null;
        org.junit.runners.model.Statement statement16 = ruleChain13.apply(statement14, description15);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests18 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule19 = kuromojiAnalysisTests18.ruleChain;
        kuromojiAnalysisTests18.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests18);
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        org.apache.lucene.index.Terms terms25 = null;
        kuromojiAnalysisTests18.assertTermsEquals("random", indexReader23, terms24, terms25, false);
        org.junit.rules.RuleChain ruleChain28 = kuromojiAnalysisTests18.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement29 = null;
        org.junit.runner.Description description30 = null;
        org.junit.runners.model.Statement statement31 = ruleChain28.apply(statement29, description30);
        org.junit.runner.Description description32 = null;
        org.junit.runners.model.Statement statement33 = ruleChain13.apply(statement31, description32);
        org.junit.runner.Description description34 = null;
        org.junit.runners.model.Statement statement35 = ruleChain1.apply(statement31, description34);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests36 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests36.tearDown();
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.Terms terms40 = null;
        org.apache.lucene.index.Terms terms41 = null;
        kuromojiAnalysisTests36.assertTermsEquals("tests.failfast", indexReader39, terms40, terms41, false);
        org.apache.lucene.index.IndexReader indexReader45 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum47 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum48 = null;
        kuromojiAnalysisTests36.assertDocsSkippingEquals("tests.nightly", indexReader45, (int) (byte) -1, postingsEnum47, postingsEnum48, false);
        org.apache.lucene.index.IndexReader indexReader52 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum54 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum55 = null;
        kuromojiAnalysisTests36.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader52, (int) (short) -1, postingsEnum54, postingsEnum55);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests58 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule59 = kuromojiAnalysisTests58.ruleChain;
        kuromojiAnalysisTests58.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests58);
        org.junit.rules.RuleChain ruleChain62 = kuromojiAnalysisTests58.failureAndSuccessEvents;
        kuromojiAnalysisTests36.failureAndSuccessEvents = ruleChain62;
        org.apache.lucene.index.IndexReader indexReader65 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum67 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum68 = null;
        kuromojiAnalysisTests36.assertDocsSkippingEquals("tests.badapples", indexReader65, 0, postingsEnum67, postingsEnum68, true);
        kuromojiAnalysisTests36.resetCheckIndexStatus();
        org.junit.Assert.assertNotEquals((java.lang.Object) ruleChain1, (java.lang.Object) kuromojiAnalysisTests36);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests73 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule74 = kuromojiAnalysisTests73.ruleChain;
        org.junit.rules.RuleChain ruleChain75 = org.junit.rules.RuleChain.outerRule(testRule74);
        org.junit.rules.RuleChain ruleChain76 = ruleChain1.around(testRule74);
        org.junit.rules.RuleChain ruleChain77 = org.junit.rules.RuleChain.outerRule(testRule74);
        java.lang.Class<?> wildcardClass78 = testRule74.getClass();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.weekly", (java.lang.Object) wildcardClass78);
    }

    @Test
    public void test3768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3768");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 0.0f, (double) (-1));
    }

    @Test
    public void test3769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3769");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("enwiki.random.lines.txt", indexReader4, fields5, fields6, true);
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (byte) 1);
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        org.apache.lucene.index.Fields fields15 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("enwiki.random.lines.txt", indexReader13, fields14, fields15, false);
        java.lang.String str18 = kuromojiAnalysisTests1.getTestName();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests19 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests19.tearDown();
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.Fields fields23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        kuromojiAnalysisTests19.assertFieldsEquals("enwiki.random.lines.txt", indexReader22, fields23, fields24, true);
        kuromojiAnalysisTests19.setUp();
        kuromojiAnalysisTests19.setIndexWriterMaxDocs((int) (byte) 1);
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.Fields fields32 = null;
        org.apache.lucene.index.Fields fields33 = null;
        kuromojiAnalysisTests19.assertFieldsEquals("enwiki.random.lines.txt", indexReader31, fields32, fields33, false);
        org.junit.rules.TestRule testRule36 = kuromojiAnalysisTests19.ruleChain;
        java.lang.String str37 = kuromojiAnalysisTests19.getTestName();
        org.junit.rules.RuleChain ruleChain38 = kuromojiAnalysisTests19.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests39 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests39.tearDown();
        org.apache.lucene.index.IndexReader indexReader42 = null;
        org.apache.lucene.index.Terms terms43 = null;
        org.apache.lucene.index.Terms terms44 = null;
        kuromojiAnalysisTests39.assertTermsEquals("tests.failfast", indexReader42, terms43, terms44, false);
        org.apache.lucene.index.IndexReader indexReader48 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum50 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum51 = null;
        kuromojiAnalysisTests39.assertDocsSkippingEquals("tests.nightly", indexReader48, (int) (byte) -1, postingsEnum50, postingsEnum51, false);
        org.apache.lucene.index.IndexReader indexReader55 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum57 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum58 = null;
        kuromojiAnalysisTests39.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader55, (int) (short) -1, postingsEnum57, postingsEnum58);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests61 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule62 = kuromojiAnalysisTests61.ruleChain;
        kuromojiAnalysisTests61.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests61);
        org.junit.rules.RuleChain ruleChain65 = kuromojiAnalysisTests61.failureAndSuccessEvents;
        kuromojiAnalysisTests39.failureAndSuccessEvents = ruleChain65;
        org.apache.lucene.index.IndexReader indexReader68 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum70 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum71 = null;
        kuromojiAnalysisTests39.assertDocsSkippingEquals("tests.badapples", indexReader68, 0, postingsEnum70, postingsEnum71, true);
        kuromojiAnalysisTests39.resetCheckIndexStatus();
        org.apache.lucene.index.PostingsEnum postingsEnum76 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum77 = null;
        kuromojiAnalysisTests39.assertDocsEnumEquals("", postingsEnum76, postingsEnum77, false);
        org.junit.rules.TestRule testRule80 = kuromojiAnalysisTests39.ruleChain;
        org.junit.rules.RuleChain ruleChain81 = ruleChain38.around(testRule80);
        org.apache.lucene.util.LuceneTestCase.classRules = testRule80;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) testRule80);
    }

    @Test
    public void test3770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3770");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1);
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        kuromojiAnalysisTests1.assertTermsEquals("random", indexReader6, terms7, terms8, false);
        org.junit.rules.RuleChain ruleChain11 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain12 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain11);
        org.junit.rules.RuleChain ruleChain13 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain12);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests14 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        kuromojiAnalysisTests14.assertTermsEquals("", indexReader16, terms17, terms18, false);
        kuromojiAnalysisTests14.setUp();
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        kuromojiAnalysisTests14.assertDocsEnumEquals("<unknown>", postingsEnum23, postingsEnum24, false);
        org.junit.rules.TestRule testRule27 = kuromojiAnalysisTests14.ruleChain;
        java.lang.String str28 = kuromojiAnalysisTests14.getTestName();
        java.lang.Class<?> wildcardClass29 = kuromojiAnalysisTests14.getClass();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) ruleChain12, (java.lang.Object) wildcardClass29);
    }

    @Test
    public void test3771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3771");
        int[] intArray4 = new int[] {};
        int[] intArray5 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray4, intArray5);
        int[] intArray8 = new int[] {};
        int[] intArray9 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray8, intArray9);
        org.junit.Assert.assertArrayEquals(intArray5, intArray8);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray5, (java.lang.Object) 100.0d);
        int[] intArray17 = new int[] {};
        int[] intArray18 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray17, intArray18);
        int[] intArray21 = new int[] {};
        int[] intArray22 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray21, intArray22);
        org.junit.Assert.assertArrayEquals(intArray18, intArray21);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray18, (java.lang.Object) 100.0d);
        int[] intArray28 = new int[] {};
        int[] intArray29 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray28, intArray29);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray18, intArray28);
        org.junit.Assert.assertArrayEquals("random", intArray5, intArray18);
        org.junit.Assert.assertNotEquals((java.lang.Object) intArray5, (java.lang.Object) "<unknown>");
        int[] intArray36 = new int[] {};
        int[] intArray37 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray36, intArray37);
        int[] intArray40 = new int[] {};
        int[] intArray41 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray40, intArray41);
        org.junit.Assert.assertArrayEquals(intArray37, intArray40);
        org.junit.Assert.assertArrayEquals(intArray5, intArray40);
        int[] intArray48 = new int[] {};
        int[] intArray49 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray48, intArray49);
        int[] intArray52 = new int[] {};
        int[] intArray53 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray52, intArray53);
        org.junit.Assert.assertArrayEquals(intArray49, intArray52);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray49, (java.lang.Object) 100.0d);
        int[] intArray59 = new int[] {};
        int[] intArray60 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray59, intArray60);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray49, intArray59);
        org.junit.Assert.assertArrayEquals(intArray40, intArray49);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests64 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests64.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests66 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests66.tearDown();
        org.apache.lucene.index.IndexReader indexReader69 = null;
        org.apache.lucene.index.Terms terms70 = null;
        org.apache.lucene.index.Terms terms71 = null;
        kuromojiAnalysisTests66.assertTermsEquals("tests.failfast", indexReader69, terms70, terms71, false);
        org.apache.lucene.index.IndexReader indexReader75 = null;
        org.apache.lucene.index.Terms terms76 = null;
        org.apache.lucene.index.Terms terms77 = null;
        kuromojiAnalysisTests66.assertTermsEquals("", indexReader75, terms76, terms77, false);
        org.junit.rules.RuleChain ruleChain80 = kuromojiAnalysisTests66.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests64, (java.lang.Object) kuromojiAnalysisTests66);
        kuromojiAnalysisTests66.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum84 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum85 = null;
        kuromojiAnalysisTests66.assertDocsEnumEquals("<unknown>", postingsEnum84, postingsEnum85, false);
        org.junit.rules.RuleChain ruleChain88 = kuromojiAnalysisTests66.failureAndSuccessEvents;
        org.apache.lucene.index.PostingsEnum postingsEnum90 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum91 = null;
        kuromojiAnalysisTests66.assertDocsEnumEquals("europarl.lines.txt.gz", postingsEnum90, postingsEnum91, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("random", (java.lang.Object) intArray49, (java.lang.Object) false);
    }

    @Test
    public void test3772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3772");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", (double) (-1.0f), (double) '4');
    }

    @Test
    public void test3773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3773");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) (byte) 10, (float) 2, 0.0f);
    }

    @Test
    public void test3774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3774");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests2.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        kuromojiAnalysisTests2.assertTermsEquals("tests.failfast", indexReader5, terms6, terms7, false);
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests2.assertTermsEquals("", indexReader11, terms12, terms13, false);
        org.junit.rules.RuleChain ruleChain16 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests2);
        kuromojiAnalysisTests2.ensureCleanedUp();
        kuromojiAnalysisTests2.setIndexWriterMaxDocs((int) ' ');
        java.lang.String str21 = kuromojiAnalysisTests2.getTestName();
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests2.assertDocsAndPositionsEnumEquals("hi!", postingsEnum23, postingsEnum24);
    }

    @Test
    public void test3775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3775");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 3, (double) (short) 100);
    }

    @Test
    public void test3776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3776");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule3 = kuromojiAnalysisTests2.ruleChain;
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2);
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        org.apache.lucene.index.Terms terms9 = null;
        kuromojiAnalysisTests2.assertTermsEquals("random", indexReader7, terms8, terms9, false);
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("tests.awaitsfix", indexReader13, (-1), postingsEnum15, postingsEnum16);
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        kuromojiAnalysisTests2.assertDocsSkippingEquals("europarl.lines.txt.gz", indexReader19, 0, postingsEnum21, postingsEnum22, true);
        kuromojiAnalysisTests2.ensureCheckIndexPassed();
        kuromojiAnalysisTests2.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests2.ensureAllSearchContextsReleased();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("<unknown>", (java.lang.Object) kuromojiAnalysisTests2);
    }

    @Test
    public void test3777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3777");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("europarl.lines.txt.gz", indexReader6, (int) (short) 100, postingsEnum8, postingsEnum9);
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests14 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule15 = kuromojiAnalysisTests14.ruleChain;
        kuromojiAnalysisTests14.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests14);
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        kuromojiAnalysisTests14.assertPositionsSkippingEquals("tests.weekly", indexReader19, (int) (short) 1, postingsEnum21, postingsEnum22);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests24 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests24.tearDown();
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.Terms terms28 = null;
        org.apache.lucene.index.Terms terms29 = null;
        kuromojiAnalysisTests24.assertTermsEquals("tests.failfast", indexReader27, terms28, terms29, false);
        org.apache.lucene.index.IndexReader indexReader33 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum35 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum36 = null;
        kuromojiAnalysisTests24.assertDocsSkippingEquals("tests.nightly", indexReader33, (int) (byte) -1, postingsEnum35, postingsEnum36, false);
        org.apache.lucene.index.IndexReader indexReader40 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum43 = null;
        kuromojiAnalysisTests24.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader40, (int) (short) -1, postingsEnum42, postingsEnum43);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests46 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule47 = kuromojiAnalysisTests46.ruleChain;
        kuromojiAnalysisTests46.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests46);
        org.junit.rules.RuleChain ruleChain50 = kuromojiAnalysisTests46.failureAndSuccessEvents;
        kuromojiAnalysisTests24.failureAndSuccessEvents = ruleChain50;
        kuromojiAnalysisTests14.failureAndSuccessEvents = ruleChain50;
        kuromojiAnalysisTests14.setIndexWriterMaxDocs((int) '4');
        kuromojiAnalysisTests14.ensureAllSearchContextsReleased();
        org.junit.Assert.assertNotNull("tests.maxfailures", (java.lang.Object) kuromojiAnalysisTests14);
        kuromojiAnalysisTests14.tearDown();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests14);
    }

    @Test
    public void test3778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3778");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule3 = kuromojiAnalysisTests2.ruleChain;
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2);
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("tests.weekly", indexReader7, (int) (short) 1, postingsEnum9, postingsEnum10);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests12.tearDown();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests12.assertTermsEquals("tests.failfast", indexReader15, terms16, terms17, false);
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        kuromojiAnalysisTests12.assertDocsSkippingEquals("tests.nightly", indexReader21, (int) (byte) -1, postingsEnum23, postingsEnum24, false);
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        kuromojiAnalysisTests12.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader28, (int) (short) -1, postingsEnum30, postingsEnum31);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule35 = kuromojiAnalysisTests34.ruleChain;
        kuromojiAnalysisTests34.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests34);
        org.junit.rules.RuleChain ruleChain38 = kuromojiAnalysisTests34.failureAndSuccessEvents;
        kuromojiAnalysisTests12.failureAndSuccessEvents = ruleChain38;
        kuromojiAnalysisTests2.failureAndSuccessEvents = ruleChain38;
        kuromojiAnalysisTests2.setIndexWriterMaxDocs((int) '4');
        kuromojiAnalysisTests2.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests46 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule47 = kuromojiAnalysisTests46.ruleChain;
        kuromojiAnalysisTests46.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests46);
        org.apache.lucene.index.IndexReader indexReader51 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum53 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum54 = null;
        kuromojiAnalysisTests46.assertPositionsSkippingEquals("tests.weekly", indexReader51, (int) (short) 1, postingsEnum53, postingsEnum54);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests56 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests56.tearDown();
        org.apache.lucene.index.IndexReader indexReader59 = null;
        org.apache.lucene.index.Terms terms60 = null;
        org.apache.lucene.index.Terms terms61 = null;
        kuromojiAnalysisTests56.assertTermsEquals("tests.failfast", indexReader59, terms60, terms61, false);
        org.apache.lucene.index.IndexReader indexReader65 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum67 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum68 = null;
        kuromojiAnalysisTests56.assertDocsSkippingEquals("tests.nightly", indexReader65, (int) (byte) -1, postingsEnum67, postingsEnum68, false);
        org.apache.lucene.index.IndexReader indexReader72 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum74 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum75 = null;
        kuromojiAnalysisTests56.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader72, (int) (short) -1, postingsEnum74, postingsEnum75);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests78 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule79 = kuromojiAnalysisTests78.ruleChain;
        kuromojiAnalysisTests78.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests78);
        org.junit.rules.RuleChain ruleChain82 = kuromojiAnalysisTests78.failureAndSuccessEvents;
        kuromojiAnalysisTests56.failureAndSuccessEvents = ruleChain82;
        kuromojiAnalysisTests46.failureAndSuccessEvents = ruleChain82;
        kuromojiAnalysisTests46.tearDown();
        org.junit.Assert.assertNotNull("hi!", (java.lang.Object) kuromojiAnalysisTests46);
        kuromojiAnalysisTests46.ensureCleanedUp();
        kuromojiAnalysisTests46.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule89 = kuromojiAnalysisTests46.ruleChain;
        kuromojiAnalysisTests46.setUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) kuromojiAnalysisTests46);
    }

    @Test
    public void test3779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3779");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.setUp();
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("tests.slow", postingsEnum10, postingsEnum11, false);
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader15, terms16, terms17, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests20.tearDown();
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        org.apache.lucene.index.Terms terms25 = null;
        kuromojiAnalysisTests20.assertTermsEquals("tests.failfast", indexReader23, terms24, terms25, false);
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.Terms terms30 = null;
        org.apache.lucene.index.Terms terms31 = null;
        kuromojiAnalysisTests20.assertTermsEquals("", indexReader29, terms30, terms31, false);
        org.junit.rules.RuleChain ruleChain34 = kuromojiAnalysisTests20.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement35 = null;
        org.junit.runner.Description description36 = null;
        org.junit.runners.model.Statement statement37 = ruleChain34.apply(statement35, description36);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests38 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule39 = kuromojiAnalysisTests38.ruleChain;
        kuromojiAnalysisTests38.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain41 = kuromojiAnalysisTests38.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain42 = ruleChain34.around((org.junit.rules.TestRule) ruleChain41);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain34;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.badapples", (java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test3780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3780");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule3 = kuromojiAnalysisTests2.ruleChain;
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2);
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        org.apache.lucene.index.Terms terms9 = null;
        kuromojiAnalysisTests2.assertTermsEquals("random", indexReader7, terms8, terms9, false);
        org.junit.rules.RuleChain ruleChain12 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests2.assertTermsEquals("europarl.lines.txt.gz", indexReader14, terms15, terms16, false);
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        java.lang.Class[] classArray21 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray22 = (java.lang.Class<?>[]) classArray21;
        java.util.Set<java.lang.Class<?>> wildcardClassSet23 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Class<?>[]) classArray21);
        org.junit.Assert.assertNotSame("tests.monster", (java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) classArray21);
        java.util.Set<java.lang.reflect.GenericDeclaration> genericDeclarationSet25 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.reflect.GenericDeclaration[]) classArray21);
        java.lang.Object[] objArray26 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) classArray21, objArray26);
    }

    @Test
    public void test3781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3781");
        java.util.concurrent.ExecutorService[][][][][] executorServiceArray2 = new java.util.concurrent.ExecutorService[][][][][] {};
        java.util.List<java.util.concurrent.ExecutorService[][][][]> executorServiceArrayList3 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 0, executorServiceArray2);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests4 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests4.tearDown();
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        org.apache.lucene.index.Terms terms9 = null;
        kuromojiAnalysisTests4.assertTermsEquals("tests.failfast", indexReader7, terms8, terms9, false);
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        kuromojiAnalysisTests4.assertDocsSkippingEquals("tests.nightly", indexReader13, (int) (byte) -1, postingsEnum15, postingsEnum16, false);
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        kuromojiAnalysisTests4.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader20, (int) (short) -1, postingsEnum22, postingsEnum23);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests26 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule27 = kuromojiAnalysisTests26.ruleChain;
        kuromojiAnalysisTests26.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests26);
        org.junit.rules.RuleChain ruleChain30 = kuromojiAnalysisTests26.failureAndSuccessEvents;
        kuromojiAnalysisTests4.failureAndSuccessEvents = ruleChain30;
        org.apache.lucene.index.IndexReader indexReader33 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum35 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum36 = null;
        kuromojiAnalysisTests4.assertDocsSkippingEquals("tests.badapples", indexReader33, 0, postingsEnum35, postingsEnum36, true);
        kuromojiAnalysisTests4.ensureCheckIndexPassed();
        kuromojiAnalysisTests4.ensureCheckIndexPassed();
        org.apache.lucene.index.IndexReader indexReader42 = null;
        org.apache.lucene.index.Fields fields43 = null;
        org.apache.lucene.index.Fields fields44 = null;
        kuromojiAnalysisTests4.assertFieldsEquals("europarl.lines.txt.gz", indexReader42, fields43, fields44, false);
        org.apache.lucene.index.IndexReader indexReader48 = null;
        org.apache.lucene.index.Terms terms49 = null;
        org.apache.lucene.index.Terms terms50 = null;
        kuromojiAnalysisTests4.assertTermsEquals("tests.awaitsfix", indexReader48, terms49, terms50, true);
        kuromojiAnalysisTests4.resetCheckIndexStatus();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object) executorServiceArrayList3, (java.lang.Object) kuromojiAnalysisTests4);
    }

    @Test
    public void test3782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3782");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals(0.0d, (double) (short) 1, (double) 3);
    }

    @Test
    public void test3783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3783");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.badapples", (double) 1L, (double) 4, (double) 4);
    }

    @Test
    public void test3784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3784");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", (long) 0, (long) 4);
    }

    @Test
    public void test3785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3785");
        java.util.concurrent.ExecutorService executorService1 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray2 = new java.util.concurrent.ExecutorService[] { executorService1 };
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean4 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        java.lang.String[] strArray9 = new java.lang.String[] { "enwiki.random.lines.txt", "tests.maxfailures", "<unknown>", "tests.maxfailures" };
        java.lang.String[][] strArray10 = new java.lang.String[][] { strArray9 };
        java.lang.String[] strArray15 = new java.lang.String[] { "enwiki.random.lines.txt", "tests.maxfailures", "<unknown>", "tests.maxfailures" };
        java.lang.String[][] strArray16 = new java.lang.String[][] { strArray15 };
        java.lang.String[] strArray21 = new java.lang.String[] { "enwiki.random.lines.txt", "tests.maxfailures", "<unknown>", "tests.maxfailures" };
        java.lang.String[][] strArray22 = new java.lang.String[][] { strArray21 };
        java.lang.String[] strArray27 = new java.lang.String[] { "enwiki.random.lines.txt", "tests.maxfailures", "<unknown>", "tests.maxfailures" };
        java.lang.String[][] strArray28 = new java.lang.String[][] { strArray27 };
        java.lang.String[][][] strArray29 = new java.lang.String[][][] { strArray10, strArray16, strArray22, strArray28 };
        java.lang.String[][][][] strArray30 = new java.lang.String[][][][] { strArray29 };
        java.util.Set<java.lang.String[][][]> strArraySet31 = org.apache.lucene.util.LuceneTestCase.asSet(strArray30);
        // during test generation this statement threw an exception of type org.junit.internal.ArrayComparisonFailure in error
        org.junit.Assert.assertEquals("<unknown>", (java.lang.Object[]) executorServiceArray2, (java.lang.Object[]) strArray30);
    }

    @Test
    public void test3786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3786");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain4 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (short) 1);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.Fields fields9 = null;
        org.apache.lucene.index.Fields fields10 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("", indexReader8, fields9, fields10, true);
        java.io.Serializable[] serializableArray13 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet14 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray13);
        java.io.Serializable[] serializableArray16 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet17 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray16);
        java.io.Serializable[] serializableArray19 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet20 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray19);
        java.io.Serializable[] serializableArray21 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet22 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray21);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray19, (java.lang.Object[]) serializableArray21);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray16, (java.lang.Object[]) serializableArray21);
        java.io.Serializable[] serializableArray27 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet28 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray27);
        java.io.Serializable[] serializableArray30 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet31 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray30);
        java.io.Serializable[] serializableArray32 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet33 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray32);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray30, (java.lang.Object[]) serializableArray32);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray27, (java.lang.Object[]) serializableArray32);
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet38 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray37);
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet41 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray40);
        java.io.Serializable[] serializableArray42 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet43 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray42);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray40, (java.lang.Object[]) serializableArray42);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray37, (java.lang.Object[]) serializableArray42);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray27, (java.lang.Object[]) serializableArray37);
        org.junit.Assert.assertNotNull((java.lang.Object) serializableArray37);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray21, (java.lang.Object[]) serializableArray37);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet51 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray50);
        java.io.Serializable[] serializableArray53 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet54 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray53);
        java.io.Serializable[] serializableArray55 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet56 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray55);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray53, (java.lang.Object[]) serializableArray55);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray50, (java.lang.Object[]) serializableArray55);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray21, (java.lang.Object[]) serializableArray55);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray13, (java.lang.Object[]) serializableArray55);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("", (java.lang.Object) true, (java.lang.Object) serializableArray13);
    }

    @Test
    public void test3787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3787");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule2;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule2;
        org.junit.rules.RuleChain ruleChain5 = org.junit.rules.RuleChain.outerRule(testRule2);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests6 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule7 = kuromojiAnalysisTests6.ruleChain;
        org.junit.rules.RuleChain ruleChain8 = org.junit.rules.RuleChain.outerRule(testRule7);
        org.junit.rules.RuleChain ruleChain9 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain8);
        org.junit.rules.RuleChain ruleChain10 = ruleChain5.around((org.junit.rules.TestRule) ruleChain9);
        org.junit.rules.RuleChain ruleChain11 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain5);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests12.assertTermsEquals("", indexReader14, terms15, terms16, false);
        kuromojiAnalysisTests12.ensureCleanedUp();
        kuromojiAnalysisTests12.ensureCheckIndexPassed();
        kuromojiAnalysisTests12.resetCheckIndexStatus();
        kuromojiAnalysisTests12.assertPathHasBeenCleared("tests.monster");
        org.junit.rules.TestRule testRule24 = kuromojiAnalysisTests12.ruleChain;
        org.junit.rules.TestRule testRule25 = kuromojiAnalysisTests12.ruleChain;
        org.junit.rules.RuleChain ruleChain26 = org.junit.rules.RuleChain.outerRule(testRule25);
        org.apache.lucene.util.LuceneTestCase.classRules = testRule25;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.badapples", (java.lang.Object) ruleChain5, (java.lang.Object) testRule25);
    }

    @Test
    public void test3788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3788");
        java.lang.Object obj0 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests3 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule4 = kuromojiAnalysisTests3.ruleChain;
        kuromojiAnalysisTests3.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests3);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests3.assertPositionsSkippingEquals("tests.weekly", indexReader8, (int) (short) 1, postingsEnum10, postingsEnum11);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests13 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests13.tearDown();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        kuromojiAnalysisTests13.assertTermsEquals("tests.failfast", indexReader16, terms17, terms18, false);
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        kuromojiAnalysisTests13.assertDocsSkippingEquals("tests.nightly", indexReader22, (int) (byte) -1, postingsEnum24, postingsEnum25, false);
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        kuromojiAnalysisTests13.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader29, (int) (short) -1, postingsEnum31, postingsEnum32);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests35 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule36 = kuromojiAnalysisTests35.ruleChain;
        kuromojiAnalysisTests35.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests35);
        org.junit.rules.RuleChain ruleChain39 = kuromojiAnalysisTests35.failureAndSuccessEvents;
        kuromojiAnalysisTests13.failureAndSuccessEvents = ruleChain39;
        kuromojiAnalysisTests3.failureAndSuccessEvents = ruleChain39;
        kuromojiAnalysisTests3.tearDown();
        org.junit.Assert.assertNotNull("hi!", (java.lang.Object) kuromojiAnalysisTests3);
        org.junit.rules.RuleChain ruleChain44 = null;
        kuromojiAnalysisTests3.failureAndSuccessEvents = ruleChain44;
        kuromojiAnalysisTests3.ensureCheckIndexPassed();
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests3);
        kuromojiAnalysisTests3.restoreIndexWriterMaxDocs();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(obj0, (java.lang.Object) kuromojiAnalysisTests3);
    }

    @Test
    public void test3789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3789");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.slow", (double) (-1), (double) 1L, (double) 2);
    }

    @Test
    public void test3790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3790");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.monster", (double) '4', (double) '4', 1.0d);
    }

    @Test
    public void test3791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3791");
        int[] intArray0 = null;
        int[] intArray5 = new int[] {};
        int[] intArray6 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray5, intArray6);
        int[] intArray9 = new int[] {};
        int[] intArray10 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray9, intArray10);
        org.junit.Assert.assertArrayEquals(intArray6, intArray9);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray6, (java.lang.Object) 100.0d);
        int[] intArray16 = new int[] {};
        int[] intArray17 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray16, intArray17);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray6, intArray16);
        int[] intArray23 = new int[] {};
        int[] intArray24 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray23, intArray24);
        int[] intArray27 = new int[] {};
        int[] intArray28 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray27, intArray28);
        org.junit.Assert.assertArrayEquals(intArray24, intArray27);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray24, (java.lang.Object) 100.0d);
        int[] intArray36 = new int[] {};
        int[] intArray37 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray36, intArray37);
        int[] intArray40 = new int[] {};
        int[] intArray41 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray40, intArray41);
        org.junit.Assert.assertArrayEquals(intArray37, intArray40);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray37, (java.lang.Object) 100.0d);
        int[] intArray47 = new int[] {};
        int[] intArray48 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray47, intArray48);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray37, intArray47);
        org.junit.Assert.assertArrayEquals("random", intArray24, intArray37);
        int[] intArray52 = new int[] {};
        org.junit.Assert.assertArrayEquals(intArray37, intArray52);
        org.junit.Assert.assertArrayEquals("tests.slow", intArray16, intArray52);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(intArray0, intArray52);
    }

    @Test
    public void test3792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3792");
        java.lang.Object obj1 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests2.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        kuromojiAnalysisTests2.assertTermsEquals("tests.failfast", indexReader5, terms6, terms7, false);
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        kuromojiAnalysisTests2.assertDocsSkippingEquals("tests.nightly", indexReader11, (int) (byte) -1, postingsEnum13, postingsEnum14, false);
        org.apache.lucene.index.IndexReader indexReader18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader18, (int) (short) -1, postingsEnum20, postingsEnum21);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests24 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule25 = kuromojiAnalysisTests24.ruleChain;
        kuromojiAnalysisTests24.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests24);
        org.junit.rules.RuleChain ruleChain28 = kuromojiAnalysisTests24.failureAndSuccessEvents;
        kuromojiAnalysisTests2.failureAndSuccessEvents = ruleChain28;
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        kuromojiAnalysisTests2.assertDocsSkippingEquals("tests.badapples", indexReader31, 0, postingsEnum33, postingsEnum34, true);
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        org.apache.lucene.index.PostingsEnum postingsEnum39 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum40 = null;
        kuromojiAnalysisTests2.assertDocsEnumEquals("", postingsEnum39, postingsEnum40, false);
        org.junit.rules.TestRule testRule43 = kuromojiAnalysisTests2.ruleChain;
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        kuromojiAnalysisTests2.ensureCleanedUp();
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests2.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests48 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests48.tearDown();
        org.apache.lucene.index.IndexReader indexReader51 = null;
        org.apache.lucene.index.Fields fields52 = null;
        org.apache.lucene.index.Fields fields53 = null;
        kuromojiAnalysisTests48.assertFieldsEquals("enwiki.random.lines.txt", indexReader51, fields52, fields53, true);
        org.apache.lucene.index.PostingsEnum postingsEnum57 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum58 = null;
        kuromojiAnalysisTests48.assertDocsEnumEquals("tests.monster", postingsEnum57, postingsEnum58, true);
        kuromojiAnalysisTests48.resetCheckIndexStatus();
        kuromojiAnalysisTests48.ensureCleanedUp();
        java.io.Serializable[] serializableArray64 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet65 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray64);
        java.io.Serializable[] serializableArray66 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet67 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray66);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray64, (java.lang.Object[]) serializableArray66);
        java.util.concurrent.ExecutorService[] executorServiceArray69 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean70 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray69);
        boolean boolean71 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray69);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray64, (java.lang.Object[]) executorServiceArray69);
        boolean boolean73 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray69);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests48, (java.lang.Object) executorServiceArray69);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) executorServiceArray69);
        kuromojiAnalysisTests2.assertPathHasBeenCleared("europarl.lines.txt.gz");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.weekly", obj1, (java.lang.Object) "europarl.lines.txt.gz");
    }

    @Test
    public void test3793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3793");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests[] kuromojiAnalysisTestsArray1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests[] {};
        org.elasticsearch.index.analysis.KuromojiAnalysisTests[][] kuromojiAnalysisTestsArray2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests[][] { kuromojiAnalysisTestsArray1 };
        java.util.Set<org.elasticsearch.index.analysis.KuromojiAnalysisTests[]> kuromojiAnalysisTestsArraySet3 = org.apache.lucene.util.LuceneTestCase.asSet(kuromojiAnalysisTestsArray2);
        java.util.Set<org.elasticsearch.index.analysis.KuromojiAnalysisTests[]> kuromojiAnalysisTestsArraySet4 = org.apache.lucene.util.LuceneTestCase.asSet(kuromojiAnalysisTestsArray2);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests7 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests7.tearDown();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Fields fields11 = null;
        org.apache.lucene.index.Fields fields12 = null;
        kuromojiAnalysisTests7.assertFieldsEquals("enwiki.random.lines.txt", indexReader10, fields11, fields12, true);
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum17 = null;
        kuromojiAnalysisTests7.assertDocsEnumEquals("tests.monster", postingsEnum16, postingsEnum17, true);
        kuromojiAnalysisTests7.resetCheckIndexStatus();
        kuromojiAnalysisTests7.ensureCleanedUp();
        java.io.Serializable[] serializableArray23 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet24 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray23);
        java.io.Serializable[] serializableArray25 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet26 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray25);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray23, (java.lang.Object[]) serializableArray25);
        java.util.concurrent.ExecutorService[] executorServiceArray28 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean29 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray28);
        boolean boolean30 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray28);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray23, (java.lang.Object[]) executorServiceArray28);
        boolean boolean32 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray28);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests7, (java.lang.Object) executorServiceArray28);
        java.util.concurrent.ExecutorService[] executorServiceArray34 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean35 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray34);
        boolean boolean36 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray34);
        boolean boolean37 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray34);
        boolean boolean38 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray34);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) executorServiceArray28, (java.lang.Object[]) executorServiceArray34);
        java.io.Serializable[] serializableArray43 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet44 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray43);
        java.io.Serializable[] serializableArray46 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet47 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray46);
        java.io.Serializable[] serializableArray48 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet49 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray48);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray46, (java.lang.Object[]) serializableArray48);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray43, (java.lang.Object[]) serializableArray48);
        java.io.Serializable[] serializableArray53 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet54 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray53);
        java.io.Serializable[] serializableArray56 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet57 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray56);
        java.io.Serializable[] serializableArray58 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet59 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray58);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray56, (java.lang.Object[]) serializableArray58);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray53, (java.lang.Object[]) serializableArray58);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray43, (java.lang.Object[]) serializableArray53);
        java.util.concurrent.ExecutorService[] executorServiceArray63 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean64 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray63);
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) serializableArray43, (java.lang.Object[]) executorServiceArray63);
        java.io.Serializable[] serializableArray68 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet69 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray68);
        java.io.Serializable[] serializableArray70 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet71 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray70);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray68, (java.lang.Object[]) serializableArray70);
        java.util.concurrent.ExecutorService[] executorServiceArray73 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean74 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray73);
        boolean boolean75 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray73);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray68, (java.lang.Object[]) executorServiceArray73);
        org.junit.Assert.assertNotNull("tests.nightly", (java.lang.Object) executorServiceArray73);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray43, (java.lang.Object[]) executorServiceArray73);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) executorServiceArray34, (java.lang.Object[]) serializableArray43);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (java.lang.Object[]) kuromojiAnalysisTestsArray2, (java.lang.Object[]) executorServiceArray34);
    }

    @Test
    public void test3794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3794");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (double) (byte) 100, 1.0d);
    }

    @Test
    public void test3795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3795");
        java.lang.Object[] objArray0 = null;
        java.io.Serializable[] serializableArray1 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet2 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray1);
        java.io.Serializable[] serializableArray4 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet5 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray4);
        java.io.Serializable[] serializableArray7 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet8 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray7);
        java.io.Serializable[] serializableArray9 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet10 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray9);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray7, (java.lang.Object[]) serializableArray9);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray4, (java.lang.Object[]) serializableArray9);
        java.io.Serializable[] serializableArray15 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet16 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray15);
        java.io.Serializable[] serializableArray18 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet19 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray18);
        java.io.Serializable[] serializableArray20 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet21 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray20);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray18, (java.lang.Object[]) serializableArray20);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray15, (java.lang.Object[]) serializableArray20);
        java.io.Serializable[] serializableArray25 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet26 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray25);
        java.io.Serializable[] serializableArray28 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet29 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray28);
        java.io.Serializable[] serializableArray30 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet31 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray30);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray28, (java.lang.Object[]) serializableArray30);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray25, (java.lang.Object[]) serializableArray30);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray15, (java.lang.Object[]) serializableArray25);
        org.junit.Assert.assertNotNull((java.lang.Object) serializableArray25);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray9, (java.lang.Object[]) serializableArray25);
        java.io.Serializable[] serializableArray38 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet39 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray38);
        java.io.Serializable[] serializableArray41 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet42 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray41);
        java.io.Serializable[] serializableArray43 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet44 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray43);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray41, (java.lang.Object[]) serializableArray43);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray38, (java.lang.Object[]) serializableArray43);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray9, (java.lang.Object[]) serializableArray43);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray1, (java.lang.Object[]) serializableArray43);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(objArray0, (java.lang.Object[]) serializableArray1);
    }

    @Test
    public void test3796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3796");
        short[] shortArray2 = new short[] {};
        short[] shortArray3 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray2, shortArray3);
        short[] shortArray6 = new short[] {};
        short[] shortArray7 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray6, shortArray7);
        org.junit.Assert.assertArrayEquals(shortArray2, shortArray6);
        short[] shortArray11 = new short[] {};
        short[] shortArray12 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray11, shortArray12);
        short[] shortArray15 = new short[] {};
        short[] shortArray16 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray15, shortArray16);
        org.junit.Assert.assertArrayEquals(shortArray11, shortArray15);
        org.junit.Assert.assertArrayEquals("<unknown>", shortArray2, shortArray15);
        short[] shortArray22 = new short[] {};
        short[] shortArray23 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray22, shortArray23);
        short[] shortArray27 = new short[] {};
        short[] shortArray28 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray27, shortArray28);
        short[] shortArray31 = new short[] {};
        short[] shortArray32 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray31, shortArray32);
        org.junit.Assert.assertArrayEquals(shortArray27, shortArray31);
        short[] shortArray36 = new short[] {};
        short[] shortArray37 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray36, shortArray37);
        short[] shortArray40 = new short[] {};
        short[] shortArray41 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray40, shortArray41);
        org.junit.Assert.assertArrayEquals(shortArray36, shortArray40);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray27, shortArray40);
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray22, shortArray40);
        short[] shortArray48 = new short[] {};
        short[] shortArray49 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray48, shortArray49);
        short[] shortArray53 = new short[] {};
        short[] shortArray54 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray53, shortArray54);
        short[] shortArray57 = new short[] {};
        short[] shortArray58 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray57, shortArray58);
        org.junit.Assert.assertArrayEquals(shortArray53, shortArray57);
        short[] shortArray62 = new short[] {};
        short[] shortArray63 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray62, shortArray63);
        short[] shortArray66 = new short[] {};
        short[] shortArray67 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray66, shortArray67);
        org.junit.Assert.assertArrayEquals(shortArray62, shortArray66);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray53, shortArray66);
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray48, shortArray66);
        org.junit.Assert.assertArrayEquals(shortArray40, shortArray48);
        org.junit.Assert.assertArrayEquals(shortArray2, shortArray40);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) shortArray2);
    }

    @Test
    public void test3797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3797");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (double) 'a', (double) (-1L));
    }

    @Test
    public void test3798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3798");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (long) 1, (-1L));
    }

    @Test
    public void test3799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3799");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.nightly", indexReader10, (int) (byte) -1, postingsEnum12, postingsEnum13, false);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader17, (int) (short) -1, postingsEnum19, postingsEnum20);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule24 = kuromojiAnalysisTests23.ruleChain;
        kuromojiAnalysisTests23.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests23);
        org.junit.rules.RuleChain ruleChain27 = kuromojiAnalysisTests23.failureAndSuccessEvents;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain27;
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.badapples", indexReader30, 0, postingsEnum32, postingsEnum33, true);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests38 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule39 = kuromojiAnalysisTests38.ruleChain;
        kuromojiAnalysisTests38.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests38);
        org.apache.lucene.index.IndexReader indexReader43 = null;
        org.apache.lucene.index.Terms terms44 = null;
        org.apache.lucene.index.Terms terms45 = null;
        kuromojiAnalysisTests38.assertTermsEquals("random", indexReader43, terms44, terms45, false);
        org.junit.rules.RuleChain ruleChain48 = kuromojiAnalysisTests38.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement49 = null;
        org.junit.runner.Description description50 = null;
        org.junit.runners.model.Statement statement51 = ruleChain48.apply(statement49, description50);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests53 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule54 = kuromojiAnalysisTests53.ruleChain;
        kuromojiAnalysisTests53.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests53);
        org.apache.lucene.index.IndexReader indexReader58 = null;
        org.apache.lucene.index.Terms terms59 = null;
        org.apache.lucene.index.Terms terms60 = null;
        kuromojiAnalysisTests53.assertTermsEquals("random", indexReader58, terms59, terms60, false);
        org.junit.rules.RuleChain ruleChain63 = kuromojiAnalysisTests53.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement64 = null;
        org.junit.runner.Description description65 = null;
        org.junit.runners.model.Statement statement66 = ruleChain63.apply(statement64, description65);
        org.junit.runner.Description description67 = null;
        org.junit.runners.model.Statement statement68 = ruleChain48.apply(statement66, description67);
        org.junit.Assert.assertNotSame("", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) statement66);
        org.apache.lucene.index.PostingsEnum postingsEnum71 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum72 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("hi!", postingsEnum71, postingsEnum72, true);
        org.apache.lucene.index.PostingsEnum postingsEnum76 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum77 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("hi!", postingsEnum76, postingsEnum77, true);
        org.junit.rules.TestRule testRule80 = kuromojiAnalysisTests1.ruleChain;
        org.apache.lucene.index.PostingsEnum postingsEnum82 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum83 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocsAndPositionsEnumEquals("tests.monster", postingsEnum82, postingsEnum83);
    }

    @Test
    public void test3800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3800");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader3, fields4, fields5, true);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 1);
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.junit.rules.RuleChain ruleChain12 = org.junit.rules.RuleChain.emptyRuleChain();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests14 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule15 = kuromojiAnalysisTests14.ruleChain;
        kuromojiAnalysisTests14.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests14);
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.Terms terms20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        kuromojiAnalysisTests14.assertTermsEquals("random", indexReader19, terms20, terms21, false);
        org.junit.rules.RuleChain ruleChain24 = kuromojiAnalysisTests14.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement25 = null;
        org.junit.runner.Description description26 = null;
        org.junit.runners.model.Statement statement27 = ruleChain24.apply(statement25, description26);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests29 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule30 = kuromojiAnalysisTests29.ruleChain;
        kuromojiAnalysisTests29.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests29);
        org.apache.lucene.index.IndexReader indexReader34 = null;
        org.apache.lucene.index.Terms terms35 = null;
        org.apache.lucene.index.Terms terms36 = null;
        kuromojiAnalysisTests29.assertTermsEquals("random", indexReader34, terms35, terms36, false);
        org.junit.rules.RuleChain ruleChain39 = kuromojiAnalysisTests29.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement40 = null;
        org.junit.runner.Description description41 = null;
        org.junit.runners.model.Statement statement42 = ruleChain39.apply(statement40, description41);
        org.junit.runner.Description description43 = null;
        org.junit.runners.model.Statement statement44 = ruleChain24.apply(statement42, description43);
        org.junit.runner.Description description45 = null;
        org.junit.runners.model.Statement statement46 = ruleChain12.apply(statement42, description45);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests47 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests47.tearDown();
        org.apache.lucene.index.IndexReader indexReader50 = null;
        org.apache.lucene.index.Terms terms51 = null;
        org.apache.lucene.index.Terms terms52 = null;
        kuromojiAnalysisTests47.assertTermsEquals("tests.failfast", indexReader50, terms51, terms52, false);
        org.apache.lucene.index.IndexReader indexReader56 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum58 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum59 = null;
        kuromojiAnalysisTests47.assertDocsSkippingEquals("tests.nightly", indexReader56, (int) (byte) -1, postingsEnum58, postingsEnum59, false);
        org.apache.lucene.index.IndexReader indexReader63 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum65 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum66 = null;
        kuromojiAnalysisTests47.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader63, (int) (short) -1, postingsEnum65, postingsEnum66);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests69 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule70 = kuromojiAnalysisTests69.ruleChain;
        kuromojiAnalysisTests69.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests69);
        org.junit.rules.RuleChain ruleChain73 = kuromojiAnalysisTests69.failureAndSuccessEvents;
        kuromojiAnalysisTests47.failureAndSuccessEvents = ruleChain73;
        org.apache.lucene.index.IndexReader indexReader76 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum78 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum79 = null;
        kuromojiAnalysisTests47.assertDocsSkippingEquals("tests.badapples", indexReader76, 0, postingsEnum78, postingsEnum79, true);
        kuromojiAnalysisTests47.resetCheckIndexStatus();
        org.junit.Assert.assertNotEquals((java.lang.Object) ruleChain12, (java.lang.Object) kuromojiAnalysisTests47);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests84 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule85 = kuromojiAnalysisTests84.ruleChain;
        org.junit.rules.RuleChain ruleChain86 = org.junit.rules.RuleChain.outerRule(testRule85);
        org.junit.rules.RuleChain ruleChain87 = ruleChain12.around(testRule85);
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain12;
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.junit.rules.RuleChain ruleChain90 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain91 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.apache.lucene.index.PostingsEnum postingsEnum93 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum94 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("hi!", postingsEnum93, postingsEnum94, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotNull((java.lang.Object) postingsEnum94);
    }

    @Test
    public void test3801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3801");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule3 = kuromojiAnalysisTests2.ruleChain;
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2);
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("tests.weekly", indexReader7, (int) (short) 1, postingsEnum9, postingsEnum10);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests12.tearDown();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests12.assertTermsEquals("tests.failfast", indexReader15, terms16, terms17, false);
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        kuromojiAnalysisTests12.assertDocsSkippingEquals("tests.nightly", indexReader21, (int) (byte) -1, postingsEnum23, postingsEnum24, false);
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        kuromojiAnalysisTests12.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader28, (int) (short) -1, postingsEnum30, postingsEnum31);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule35 = kuromojiAnalysisTests34.ruleChain;
        kuromojiAnalysisTests34.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests34);
        org.junit.rules.RuleChain ruleChain38 = kuromojiAnalysisTests34.failureAndSuccessEvents;
        kuromojiAnalysisTests12.failureAndSuccessEvents = ruleChain38;
        kuromojiAnalysisTests2.failureAndSuccessEvents = ruleChain38;
        kuromojiAnalysisTests2.tearDown();
        org.junit.Assert.assertNotNull("hi!", (java.lang.Object) kuromojiAnalysisTests2);
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader45 = null;
        org.apache.lucene.index.Terms terms46 = null;
        org.apache.lucene.index.Terms terms47 = null;
        kuromojiAnalysisTests2.assertTermsEquals("tests.monster", indexReader45, terms46, terms47, true);
        org.apache.lucene.index.PostingsEnum postingsEnum51 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum52 = null;
        kuromojiAnalysisTests2.assertDocsEnumEquals("tests.nightly", postingsEnum51, postingsEnum52, false);
        org.apache.lucene.index.IndexReader indexReader56 = null;
        org.apache.lucene.index.Fields fields57 = null;
        org.apache.lucene.index.Fields fields58 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("enwiki.random.lines.txt", indexReader56, fields57, fields58, false);
        org.apache.lucene.index.NumericDocValues numericDocValues63 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues64 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests2.assertDocValuesEquals("enwiki.random.lines.txt", (int) (byte) -1, numericDocValues63, numericDocValues64);
    }

    @Test
    public void test3802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3802");
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling1 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.ALWAYS;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests3 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests3.tearDown();
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.Fields fields7 = null;
        org.apache.lucene.index.Fields fields8 = null;
        kuromojiAnalysisTests3.assertFieldsEquals("enwiki.random.lines.txt", indexReader6, fields7, fields8, true);
        kuromojiAnalysisTests3.setUp();
        kuromojiAnalysisTests3.setIndexWriterMaxDocs((int) (byte) 1);
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Fields fields16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        kuromojiAnalysisTests3.assertFieldsEquals("enwiki.random.lines.txt", indexReader15, fields16, fields17, false);
        kuromojiAnalysisTests3.assertPathHasBeenCleared("random");
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling23 = org.apache.lucene.util.LuceneTestCase.TEST_THROTTLING;
        org.junit.Assert.assertNotNull("tests.badapples", (java.lang.Object) throttling23);
        org.junit.Assert.assertNotEquals("tests.badapples", (java.lang.Object) "random", (java.lang.Object) throttling23);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling26 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.NEVER;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray27 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] { throttling1, throttling23, throttling26 };
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling28 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.ALWAYS;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests30 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests30.tearDown();
        org.apache.lucene.index.IndexReader indexReader33 = null;
        org.apache.lucene.index.Fields fields34 = null;
        org.apache.lucene.index.Fields fields35 = null;
        kuromojiAnalysisTests30.assertFieldsEquals("enwiki.random.lines.txt", indexReader33, fields34, fields35, true);
        kuromojiAnalysisTests30.setUp();
        kuromojiAnalysisTests30.setIndexWriterMaxDocs((int) (byte) 1);
        org.apache.lucene.index.IndexReader indexReader42 = null;
        org.apache.lucene.index.Fields fields43 = null;
        org.apache.lucene.index.Fields fields44 = null;
        kuromojiAnalysisTests30.assertFieldsEquals("enwiki.random.lines.txt", indexReader42, fields43, fields44, false);
        kuromojiAnalysisTests30.assertPathHasBeenCleared("random");
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling50 = org.apache.lucene.util.LuceneTestCase.TEST_THROTTLING;
        org.junit.Assert.assertNotNull("tests.badapples", (java.lang.Object) throttling50);
        org.junit.Assert.assertNotEquals("tests.badapples", (java.lang.Object) "random", (java.lang.Object) throttling50);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling53 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.NEVER;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray54 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] { throttling28, throttling50, throttling53 };
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[][] throttlingArray55 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[][] { throttlingArray27, throttlingArray54 };
        java.util.List<org.apache.lucene.store.MockDirectoryWrapper.Throttling[]> throttlingArrayList56 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (byte) 0, throttlingArray55);
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling[]> throttlingArraySet57 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray55);
        java.io.Serializable[] serializableArray58 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet59 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray58);
        java.io.Serializable[] serializableArray60 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet61 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray60);
        java.lang.Iterable[] iterableArray63 = new java.lang.Iterable[2];
        @SuppressWarnings("unchecked")
        java.lang.Iterable<java.io.Serializable>[] serializableIterableArray64 = (java.lang.Iterable<java.io.Serializable>[]) iterableArray63;
        serializableIterableArray64[0] = serializableSet59;
        serializableIterableArray64[1] = serializableSet61;
        java.util.Set<java.lang.Iterable<java.io.Serializable>> serializableIterableSet69 = org.apache.lucene.util.LuceneTestCase.asSet(serializableIterableArray64);
        // during test generation this statement threw an exception of type org.junit.internal.ArrayComparisonFailure in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) throttlingArray55, (java.lang.Object[]) serializableIterableArray64);
    }

    @Test
    public void test3803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3803");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader9, (int) (byte) -1, postingsEnum11, postingsEnum12, false);
        org.junit.rules.RuleChain ruleChain15 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        java.lang.String str17 = kuromojiAnalysisTests0.getTestName();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.setUp();
        org.junit.rules.TestRule testRule21 = kuromojiAnalysisTests0.ruleChain;
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("<unknown>", indexReader23, (int) '#', postingsEnum25, postingsEnum26);
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.apache.lucene.index.NumericDocValues numericDocValues31 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues32 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("random", 10, numericDocValues31, numericDocValues32);
    }

    @Test
    public void test3804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3804");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (double) (short) 10, 0.0d);
    }

    @Test
    public void test3805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3805");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", 0.0d, (double) '#');
    }

    @Test
    public void test3806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3806");
        java.io.Serializable[] serializableArray3 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet4 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray3);
        java.io.Serializable[] serializableArray6 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet7 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray6);
        java.io.Serializable[] serializableArray8 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet9 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray8);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray6, (java.lang.Object[]) serializableArray8);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray3, (java.lang.Object[]) serializableArray8);
        java.io.Serializable[] serializableArray13 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet14 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray13);
        java.io.Serializable[] serializableArray16 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet17 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray16);
        java.io.Serializable[] serializableArray18 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet19 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray18);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray16, (java.lang.Object[]) serializableArray18);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray13, (java.lang.Object[]) serializableArray18);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray3, (java.lang.Object[]) serializableArray13);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule24 = kuromojiAnalysisTests23.ruleChain;
        kuromojiAnalysisTests23.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests23.tearDown();
        kuromojiAnalysisTests23.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests23.setUp();
        org.junit.Assert.assertNotEquals("tests.weekly", (java.lang.Object) serializableArray13, (java.lang.Object) kuromojiAnalysisTests23);
        kuromojiAnalysisTests23.ensureCleanedUp();
        kuromojiAnalysisTests23.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule35 = kuromojiAnalysisTests34.ruleChain;
        kuromojiAnalysisTests34.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests34);
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        kuromojiAnalysisTests34.assertPositionsSkippingEquals("tests.weekly", indexReader39, (int) (short) 1, postingsEnum41, postingsEnum42);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests44 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests44.tearDown();
        org.apache.lucene.index.IndexReader indexReader47 = null;
        org.apache.lucene.index.Terms terms48 = null;
        org.apache.lucene.index.Terms terms49 = null;
        kuromojiAnalysisTests44.assertTermsEquals("tests.failfast", indexReader47, terms48, terms49, false);
        org.apache.lucene.index.IndexReader indexReader53 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum55 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum56 = null;
        kuromojiAnalysisTests44.assertDocsSkippingEquals("tests.nightly", indexReader53, (int) (byte) -1, postingsEnum55, postingsEnum56, false);
        org.apache.lucene.index.IndexReader indexReader60 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum62 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum63 = null;
        kuromojiAnalysisTests44.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader60, (int) (short) -1, postingsEnum62, postingsEnum63);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests66 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule67 = kuromojiAnalysisTests66.ruleChain;
        kuromojiAnalysisTests66.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests66);
        org.junit.rules.RuleChain ruleChain70 = kuromojiAnalysisTests66.failureAndSuccessEvents;
        kuromojiAnalysisTests44.failureAndSuccessEvents = ruleChain70;
        kuromojiAnalysisTests34.failureAndSuccessEvents = ruleChain70;
        kuromojiAnalysisTests34.tearDown();
        org.junit.Assert.assertNotNull("hi!", (java.lang.Object) kuromojiAnalysisTests34);
        kuromojiAnalysisTests34.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader77 = null;
        org.apache.lucene.index.Terms terms78 = null;
        org.apache.lucene.index.Terms terms79 = null;
        kuromojiAnalysisTests34.assertTermsEquals("tests.monster", indexReader77, terms78, terms79, true);
        org.apache.lucene.index.PostingsEnum postingsEnum83 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum84 = null;
        kuromojiAnalysisTests34.assertDocsEnumEquals("tests.nightly", postingsEnum83, postingsEnum84, false);
        org.apache.lucene.index.IndexReader indexReader88 = null;
        org.apache.lucene.index.Fields fields89 = null;
        org.apache.lucene.index.Fields fields90 = null;
        kuromojiAnalysisTests34.assertFieldsEquals("tests.nightly", indexReader88, fields89, fields90, true);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) kuromojiAnalysisTests23, (java.lang.Object) "tests.nightly");
    }

    @Test
    public void test3807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3807");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "tests.nightly", "europarl.lines.txt.gz", "tests.maxfailures", "tests.badapples", "tests.failfast" };
        java.util.Set<java.lang.CharSequence> charSequenceSet7 = org.apache.lucene.util.LuceneTestCase.asSet(charSequenceArray6);
        java.util.List<java.lang.CharSequence> charSequenceList8 = org.elasticsearch.test.ESTestCase.randomSubsetOf(4, charSequenceArray6);
        java.io.Serializable[] serializableArray12 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet13 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray12);
        java.io.Serializable[] serializableArray15 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet16 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray15);
        java.io.Serializable[] serializableArray18 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet19 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray18);
        java.io.Serializable[] serializableArray20 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet21 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray20);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray18, (java.lang.Object[]) serializableArray20);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray15, (java.lang.Object[]) serializableArray20);
        org.junit.Assert.assertArrayEquals("tests.nightly", (java.lang.Object[]) serializableArray12, (java.lang.Object[]) serializableArray20);
        java.io.Serializable[] serializableArray26 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet27 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray26);
        java.io.Serializable[] serializableArray29 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet30 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray29);
        java.io.Serializable[] serializableArray32 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet33 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray32);
        java.io.Serializable[] serializableArray34 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet35 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray34);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray32, (java.lang.Object[]) serializableArray34);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray29, (java.lang.Object[]) serializableArray34);
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) serializableArray26, (java.lang.Object[]) serializableArray34);
        org.junit.Assert.assertArrayEquals("tests.badapples", (java.lang.Object[]) serializableArray12, (java.lang.Object[]) serializableArray26);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests40 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule41 = kuromojiAnalysisTests40.ruleChain;
        kuromojiAnalysisTests40.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests40.tearDown();
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum46 = null;
        kuromojiAnalysisTests40.assertDocsEnumEquals("<unknown>", postingsEnum45, postingsEnum46, true);
        org.apache.lucene.index.IndexReader indexReader50 = null;
        org.apache.lucene.index.Fields fields51 = null;
        org.apache.lucene.index.Fields fields52 = null;
        kuromojiAnalysisTests40.assertFieldsEquals("hi!", indexReader50, fields51, fields52, false);
        java.io.Serializable[] serializableArray55 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet56 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray55);
        org.junit.Assert.assertNotEquals((java.lang.Object) false, (java.lang.Object) serializableArray55);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray12, (java.lang.Object[]) serializableArray55);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) charSequenceArray6, (java.lang.Object[]) serializableArray12);
    }

    @Test
    public void test3808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3808");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.maxfailures", 100.0d, 100.0d, (double) 100);
    }

    @Test
    public void test3809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3809");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1);
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.weekly", indexReader6, (int) (short) 1, postingsEnum8, postingsEnum9);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests11 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests11.tearDown();
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests11.assertTermsEquals("tests.failfast", indexReader14, terms15, terms16, false);
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        kuromojiAnalysisTests11.assertDocsSkippingEquals("tests.nightly", indexReader20, (int) (byte) -1, postingsEnum22, postingsEnum23, false);
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        kuromojiAnalysisTests11.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader27, (int) (short) -1, postingsEnum29, postingsEnum30);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests33 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule34 = kuromojiAnalysisTests33.ruleChain;
        kuromojiAnalysisTests33.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests33);
        org.junit.rules.RuleChain ruleChain37 = kuromojiAnalysisTests33.failureAndSuccessEvents;
        kuromojiAnalysisTests11.failureAndSuccessEvents = ruleChain37;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain37;
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test3810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3810");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) 1L, 100.0f, 0.0f);
    }

    @Test
    public void test3811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3811");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 'a', (double) 0.0f, (double) '#');
    }

    @Test
    public void test3812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3812");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("random", (double) (byte) 1, (double) 10.0f, (double) ' ');
    }

    @Test
    public void test3813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3813");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.nightly", indexReader10, (int) (byte) -1, postingsEnum12, postingsEnum13, false);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader17, (int) (short) -1, postingsEnum19, postingsEnum20);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule24 = kuromojiAnalysisTests23.ruleChain;
        kuromojiAnalysisTests23.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests23);
        org.junit.rules.RuleChain ruleChain27 = kuromojiAnalysisTests23.failureAndSuccessEvents;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain27;
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.badapples", indexReader30, 0, postingsEnum32, postingsEnum33, true);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.junit.rules.TestRule testRule37 = kuromojiAnalysisTests1.ruleChain;
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.awaitsfix", indexReader39, (int) (byte) 0, postingsEnum41, postingsEnum42);
        org.junit.rules.TestRule testRule44 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.junit.rules.RuleChain ruleChain45 = org.junit.rules.RuleChain.outerRule(testRule44);
        org.junit.rules.RuleChain ruleChain46 = org.junit.rules.RuleChain.outerRule(testRule44);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain46;
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        org.apache.lucene.index.IndexReader indexReader50 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum52 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum53 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.slow", indexReader50, (int) (byte) -1, postingsEnum52, postingsEnum53);
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (short) 100);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.nightly", (java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test3814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3814");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader9, (int) (byte) -1, postingsEnum11, postingsEnum12, false);
        org.junit.rules.RuleChain ruleChain15 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.junit.rules.TestRule testRule16 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule16;
        org.junit.rules.RuleChain ruleChain18 = ruleChain15.around(testRule16);
        org.apache.lucene.util.LuceneTestCase.classRules = testRule16;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests20.tearDown();
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        org.apache.lucene.index.Terms terms25 = null;
        kuromojiAnalysisTests20.assertTermsEquals("tests.failfast", indexReader23, terms24, terms25, false);
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        kuromojiAnalysisTests20.assertDocsSkippingEquals("tests.nightly", indexReader29, (int) (byte) -1, postingsEnum31, postingsEnum32, false);
        org.junit.rules.RuleChain ruleChain35 = kuromojiAnalysisTests20.failureAndSuccessEvents;
        kuromojiAnalysisTests20.resetCheckIndexStatus();
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum39 = null;
        kuromojiAnalysisTests20.assertDocsEnumEquals("tests.maxfailures", postingsEnum38, postingsEnum39, false);
        org.apache.lucene.index.IndexReader indexReader43 = null;
        org.apache.lucene.index.Fields fields44 = null;
        org.apache.lucene.index.Fields fields45 = null;
        kuromojiAnalysisTests20.assertFieldsEquals("tests.badapples", indexReader43, fields44, fields45, false);
        kuromojiAnalysisTests20.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule49 = kuromojiAnalysisTests20.ruleChain;
        org.junit.rules.RuleChain ruleChain50 = org.junit.rules.RuleChain.outerRule(testRule49);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) testRule16, (java.lang.Object) ruleChain50);
    }

    @Test
    public void test3815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3815");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) '4', (long) 1);
    }

    @Test
    public void test3816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3816");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (byte) 1, (double) (-1L));
    }

    @Test
    public void test3817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3817");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests6 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule7 = kuromojiAnalysisTests6.ruleChain;
        kuromojiAnalysisTests6.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests6);
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests6.assertTermsEquals("random", indexReader11, terms12, terms13, false);
        org.junit.rules.RuleChain ruleChain16 = kuromojiAnalysisTests6.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement17 = null;
        org.junit.runner.Description description18 = null;
        org.junit.runners.model.Statement statement19 = ruleChain16.apply(statement17, description18);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests21 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule22 = kuromojiAnalysisTests21.ruleChain;
        kuromojiAnalysisTests21.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests21);
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        org.apache.lucene.index.Terms terms28 = null;
        kuromojiAnalysisTests21.assertTermsEquals("random", indexReader26, terms27, terms28, false);
        org.junit.rules.RuleChain ruleChain31 = kuromojiAnalysisTests21.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement32 = null;
        org.junit.runner.Description description33 = null;
        org.junit.runners.model.Statement statement34 = ruleChain31.apply(statement32, description33);
        org.junit.runner.Description description35 = null;
        org.junit.runners.model.Statement statement36 = ruleChain16.apply(statement34, description35);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain16;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests38 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests38.tearDown();
        org.apache.lucene.index.IndexReader indexReader41 = null;
        org.apache.lucene.index.Terms terms42 = null;
        org.apache.lucene.index.Terms terms43 = null;
        kuromojiAnalysisTests38.assertTermsEquals("tests.failfast", indexReader41, terms42, terms43, false);
        org.apache.lucene.index.IndexReader indexReader47 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum49 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum50 = null;
        kuromojiAnalysisTests38.assertDocsSkippingEquals("tests.nightly", indexReader47, (int) (byte) -1, postingsEnum49, postingsEnum50, false);
        org.junit.rules.RuleChain ruleChain53 = kuromojiAnalysisTests38.failureAndSuccessEvents;
        org.junit.rules.TestRule testRule54 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule54;
        org.junit.rules.RuleChain ruleChain56 = ruleChain53.around(testRule54);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests58 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule59 = kuromojiAnalysisTests58.ruleChain;
        kuromojiAnalysisTests58.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests58);
        org.junit.rules.RuleChain ruleChain62 = kuromojiAnalysisTests58.failureAndSuccessEvents;
        org.junit.rules.TestRule testRule63 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.junit.rules.RuleChain ruleChain64 = org.junit.rules.RuleChain.outerRule(testRule63);
        org.junit.rules.RuleChain[] ruleChainArray65 = new org.junit.rules.RuleChain[] { ruleChain53, ruleChain62, ruleChain64 };
        java.util.Set<org.junit.rules.RuleChain> ruleChainSet66 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray65);
        java.util.Set<org.junit.rules.TestRule> testRuleSet67 = org.apache.lucene.util.LuceneTestCase.asSet((org.junit.rules.TestRule[]) ruleChainArray65);
        java.util.Set<java.lang.Object> objSet68 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Object[]) ruleChainArray65);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) ruleChainArray65);
        org.apache.lucene.index.IndexReader indexReader71 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum73 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum74 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.slow", indexReader71, (int) (byte) 10, postingsEnum73, postingsEnum74, true);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.badapples", (java.lang.Object) "tests.slow");
    }

    @Test
    public void test3818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3818");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests3 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule4 = kuromojiAnalysisTests3.ruleChain;
        kuromojiAnalysisTests3.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests3);
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests3.assertPositionsSkippingEquals("tests.weekly", indexReader8, (int) (short) 1, postingsEnum10, postingsEnum11);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests13 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests13.tearDown();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        kuromojiAnalysisTests13.assertTermsEquals("tests.failfast", indexReader16, terms17, terms18, false);
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        kuromojiAnalysisTests13.assertDocsSkippingEquals("tests.nightly", indexReader22, (int) (byte) -1, postingsEnum24, postingsEnum25, false);
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        kuromojiAnalysisTests13.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader29, (int) (short) -1, postingsEnum31, postingsEnum32);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests35 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule36 = kuromojiAnalysisTests35.ruleChain;
        kuromojiAnalysisTests35.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests35);
        org.junit.rules.RuleChain ruleChain39 = kuromojiAnalysisTests35.failureAndSuccessEvents;
        kuromojiAnalysisTests13.failureAndSuccessEvents = ruleChain39;
        kuromojiAnalysisTests3.failureAndSuccessEvents = ruleChain39;
        kuromojiAnalysisTests3.tearDown();
        org.junit.Assert.assertNotNull("hi!", (java.lang.Object) kuromojiAnalysisTests3);
        kuromojiAnalysisTests3.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader46 = null;
        org.apache.lucene.index.Terms terms47 = null;
        org.apache.lucene.index.Terms terms48 = null;
        kuromojiAnalysisTests3.assertTermsEquals("tests.monster", indexReader46, terms47, terms48, true);
        kuromojiAnalysisTests3.overrideTestDefaultQueryCache();
        java.lang.String str52 = kuromojiAnalysisTests3.getTestName();
        kuromojiAnalysisTests3.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader55 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum57 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum58 = null;
        kuromojiAnalysisTests3.assertPositionsSkippingEquals("", indexReader55, 100, postingsEnum57, postingsEnum58);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotNull("tests.weekly", (java.lang.Object) postingsEnum57);
    }

    @Test
    public void test3819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3819");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (float) 100L, (float) 1, (float) 10);
    }

    @Test
    public void test3820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3820");
        long[] longArray0 = null;
        long[] longArray2 = new long[] { (byte) 0 };
        long[] longArray4 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray2, longArray4);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(longArray0, longArray4);
    }

    @Test
    public void test3821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3821");
        long[] longArray1 = null;
        long[] longArray5 = new long[] { (byte) 0 };
        long[] longArray7 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray5, longArray7);
        long[] longArray10 = new long[] { (byte) 0 };
        long[] longArray12 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray10, longArray12);
        org.junit.Assert.assertArrayEquals("", longArray5, longArray12);
        org.junit.Assert.assertNotNull("random", (java.lang.Object) longArray5);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("", longArray1, longArray5);
    }

    @Test
    public void test3822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3822");
        java.io.Serializable[] serializableArray1 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet2 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray1);
        java.io.Serializable[] serializableArray4 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet5 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray4);
        java.io.Serializable[] serializableArray6 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet7 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray6);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray4, (java.lang.Object[]) serializableArray6);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray1, (java.lang.Object[]) serializableArray6);
        java.io.Serializable[] serializableArray12 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet13 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray12);
        java.io.Serializable[] serializableArray15 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet16 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray15);
        java.io.Serializable[] serializableArray17 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet18 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray17);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray15, (java.lang.Object[]) serializableArray17);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray12, (java.lang.Object[]) serializableArray17);
        java.io.Serializable[] serializableArray22 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet23 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray22);
        java.io.Serializable[] serializableArray25 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet26 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray25);
        java.io.Serializable[] serializableArray27 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet28 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray27);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray25, (java.lang.Object[]) serializableArray27);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray22, (java.lang.Object[]) serializableArray27);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray12, (java.lang.Object[]) serializableArray22);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray6, (java.lang.Object[]) serializableArray22);
        double[] doubleArray40 = new double[] { '4', 3, 1L, (short) 1, (-1.0f), 0 };
        double[][] doubleArray41 = new double[][] { doubleArray40 };
        double[] doubleArray48 = new double[] { '4', 3, 1L, (short) 1, (-1.0f), 0 };
        double[][] doubleArray49 = new double[][] { doubleArray48 };
        double[] doubleArray56 = new double[] { '4', 3, 1L, (short) 1, (-1.0f), 0 };
        double[][] doubleArray57 = new double[][] { doubleArray56 };
        double[] doubleArray64 = new double[] { '4', 3, 1L, (short) 1, (-1.0f), 0 };
        double[][] doubleArray65 = new double[][] { doubleArray64 };
        double[] doubleArray72 = new double[] { '4', 3, 1L, (short) 1, (-1.0f), 0 };
        double[][] doubleArray73 = new double[][] { doubleArray72 };
        double[][][] doubleArray74 = new double[][][] { doubleArray41, doubleArray49, doubleArray57, doubleArray65, doubleArray73 };
        java.util.Set<double[][]> doubleArraySet75 = org.apache.lucene.util.LuceneTestCase.asSet(doubleArray74);
        java.util.List<double[][]> doubleArrayList76 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, doubleArray74);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray6, (java.lang.Object[]) doubleArray74);
    }

    @Test
    public void test3823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3823");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader3, fields4, fields5, true);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 1);
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs(0);
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("", postingsEnum15, postingsEnum16, true);
        org.junit.rules.RuleChain ruleChain19 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertPathHasBeenCleared("");
    }

    @Test
    public void test3824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3824");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Terms terms3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader2, terms3, terms4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests11 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests11.tearDown();
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests11.assertTermsEquals("tests.failfast", indexReader14, terms15, terms16, false);
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        kuromojiAnalysisTests11.assertDocsSkippingEquals("tests.nightly", indexReader20, (int) (byte) -1, postingsEnum22, postingsEnum23, false);
        org.junit.rules.RuleChain ruleChain26 = kuromojiAnalysisTests11.failureAndSuccessEvents;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures27 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures28 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures27);
        org.junit.rules.RuleChain ruleChain29 = ruleChain26.around((org.junit.rules.TestRule) testRuleIgnoreAfterMaxFailures28);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling31 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.SOMETIMES;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray32 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] { throttling31 };
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingSet33 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray32);
        java.util.List<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingList34 = org.elasticsearch.test.ESTestCase.randomSubsetOf(0, throttlingArray32);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling35 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.SOMETIMES;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray36 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] { throttling35 };
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingSet37 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray36);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray32, (java.lang.Object[]) throttlingArray36);
        org.junit.Assert.assertNotSame((java.lang.Object) ruleChain26, (java.lang.Object) throttlingArray36);
        org.junit.Assert.assertNotNull("tests.failfast", (java.lang.Object) ruleChain26);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain26;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain26;
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.PostingsEnum postingsEnum46 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum47 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.badapples", postingsEnum46, postingsEnum47, true);
        org.apache.lucene.index.NumericDocValues numericDocValues52 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues53 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.nightly", (-1), numericDocValues52, numericDocValues53);
    }

    @Test
    public void test3825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3825");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.nightly", (long) 100, (long) 1);
    }

    @Test
    public void test3826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3826");
        java.io.Serializable[] serializableArray2 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet3 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray2);
        java.io.Serializable[] serializableArray4 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet5 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray4);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray2, (java.lang.Object[]) serializableArray4);
        java.util.concurrent.ExecutorService[] executorServiceArray7 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean8 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray7);
        boolean boolean9 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray7);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray2, (java.lang.Object[]) executorServiceArray7);
        boolean boolean11 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray7);
        boolean boolean12 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray7);
        java.io.Serializable[] serializableArray14 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet15 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray14);
        java.io.Serializable[] serializableArray17 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet18 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray17);
        java.io.Serializable[] serializableArray19 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet20 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray19);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray17, (java.lang.Object[]) serializableArray19);
        org.junit.Assert.assertEquals("tests.badapples", (java.lang.Object[]) serializableArray14, (java.lang.Object[]) serializableArray19);
        java.io.Serializable[] serializableArray23 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet24 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray23);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray19, (java.lang.Object[]) serializableArray23);
        java.util.concurrent.ExecutorService[] executorServiceArray27 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean28 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray27);
        java.io.Serializable[] serializableArray30 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet31 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray30);
        java.io.Serializable[] serializableArray32 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet33 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray32);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray30, (java.lang.Object[]) serializableArray32);
        org.junit.Assert.assertArrayEquals("tests.badapples", (java.lang.Object[]) executorServiceArray27, (java.lang.Object[]) serializableArray32);
        boolean boolean36 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray27);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray23, (java.lang.Object[]) executorServiceArray27);
        org.junit.Assert.assertEquals("tests.badapples", (java.lang.Object[]) executorServiceArray7, (java.lang.Object[]) serializableArray23);
        java.io.Serializable[] serializableArray41 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet42 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray41);
        java.io.Serializable[] serializableArray44 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet45 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray44);
        java.io.Serializable[] serializableArray46 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet47 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray46);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray44, (java.lang.Object[]) serializableArray46);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray41, (java.lang.Object[]) serializableArray46);
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet52 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray51);
        java.io.Serializable[] serializableArray54 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet55 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray54);
        java.io.Serializable[] serializableArray57 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet58 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray57);
        java.io.Serializable[] serializableArray59 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet60 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray59);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray57, (java.lang.Object[]) serializableArray59);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray54, (java.lang.Object[]) serializableArray59);
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) serializableArray51, (java.lang.Object[]) serializableArray59);
        org.junit.Assert.assertEquals("", (java.lang.Object[]) serializableArray41, (java.lang.Object[]) serializableArray51);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray7, (java.lang.Object[]) serializableArray41);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests66 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests66.tearDown();
        org.apache.lucene.index.IndexReader indexReader69 = null;
        org.apache.lucene.index.Terms terms70 = null;
        org.apache.lucene.index.Terms terms71 = null;
        kuromojiAnalysisTests66.assertTermsEquals("tests.failfast", indexReader69, terms70, terms71, false);
        org.apache.lucene.index.IndexReader indexReader75 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum77 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum78 = null;
        kuromojiAnalysisTests66.assertDocsSkippingEquals("tests.nightly", indexReader75, (int) (byte) -1, postingsEnum77, postingsEnum78, false);
        org.junit.rules.RuleChain ruleChain81 = kuromojiAnalysisTests66.failureAndSuccessEvents;
        kuromojiAnalysisTests66.overrideTestDefaultQueryCache();
        java.lang.String str83 = kuromojiAnalysisTests66.getTestName();
        kuromojiAnalysisTests66.overrideTestDefaultQueryCache();
        org.apache.lucene.index.PostingsEnum postingsEnum86 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum87 = null;
        kuromojiAnalysisTests66.assertDocsEnumEquals("", postingsEnum86, postingsEnum87, false);
        kuromojiAnalysisTests66.ensureAllSearchContextsReleased();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) executorServiceArray7, (java.lang.Object) kuromojiAnalysisTests66);
    }

    @Test
    public void test3827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3827");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("enwiki.random.lines.txt", (float) (short) 10, (float) 1, (-1.0f));
    }

    @Test
    public void test3828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3828");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader9, (int) (byte) -1, postingsEnum11, postingsEnum12, false);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader16, (int) (short) -1, postingsEnum18, postingsEnum19);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests22 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule23 = kuromojiAnalysisTests22.ruleChain;
        kuromojiAnalysisTests22.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests22);
        org.junit.rules.RuleChain ruleChain26 = kuromojiAnalysisTests22.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain26;
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.badapples", indexReader29, 0, postingsEnum31, postingsEnum32, true);
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.apache.lucene.index.PostingsEnum postingsEnum37 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("", postingsEnum37, postingsEnum38, false);
        org.junit.rules.TestRule testRule41 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test3829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3829");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (double) 100L, 1.0d);
    }

    @Test
    public void test3830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3830");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("enwiki.random.lines.txt", indexReader4, fields5, fields6, true);
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("tests.monster", postingsEnum10, postingsEnum11, true);
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule15 = kuromojiAnalysisTests1.ruleChain;
        org.junit.Assert.assertNotNull("<unknown>", (java.lang.Object) kuromojiAnalysisTests1);
        java.lang.String str17 = kuromojiAnalysisTests1.getTestName();
        org.apache.lucene.index.NumericDocValues numericDocValues20 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues21 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocValuesEquals("<unknown>", 100, numericDocValues20, numericDocValues21);
    }

    @Test
    public void test3831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3831");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (double) 4, (double) 3);
    }

    @Test
    public void test3832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3832");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((-1L), (long) (short) 0);
    }

    @Test
    public void test3833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3833");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Terms terms3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader2, terms3, terms4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertPathHasBeenCleared("");
    }

    @Test
    public void test3834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3834");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(0L, (long) (byte) 100);
    }

    @Test
    public void test3835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3835");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((long) (byte) 0, 0L);
    }

    @Test
    public void test3836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3836");
        java.util.concurrent.ExecutorService[] executorServiceArray1 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean2 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[][] strArray21 = new java.lang.String[][] { strArray8, strArray12, strArray16, strArray20 };
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[][] strArray38 = new java.lang.String[][] { strArray25, strArray29, strArray33, strArray37 };
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[][] strArray55 = new java.lang.String[][] { strArray42, strArray46, strArray50, strArray54 };
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[][] strArray72 = new java.lang.String[][] { strArray59, strArray63, strArray67, strArray71 };
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[] strArray88 = new java.lang.String[] { "hi!", "tests.awaitsfix", "tests.nightly" };
        java.lang.String[][] strArray89 = new java.lang.String[][] { strArray76, strArray80, strArray84, strArray88 };
        java.lang.String[][][] strArray90 = new java.lang.String[][][] { strArray21, strArray38, strArray55, strArray72, strArray89 };
        java.util.List<java.lang.String[][]> strArrayList91 = org.elasticsearch.test.ESTestCase.randomSubsetOf(3, strArray90);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (java.lang.Object[]) executorServiceArray1, (java.lang.Object[]) strArray90);
    }

    @Test
    public void test3837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3837");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("enwiki.random.lines.txt", indexReader4, fields5, fields6, true);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("", indexReader10, 1, postingsEnum12, postingsEnum13, false);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.weekly", indexReader17, 1, postingsEnum19, postingsEnum20, false);
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("europarl.lines.txt.gz", indexReader25, (int) (byte) -1, postingsEnum27, postingsEnum28);
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("hi!", indexReader31, (int) (short) 100, postingsEnum33, postingsEnum34);
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        java.util.concurrent.ExecutorService[] executorServiceArray38 = new java.util.concurrent.ExecutorService[] {};
        java.util.concurrent.ExecutorService[] executorServiceArray39 = new java.util.concurrent.ExecutorService[] {};
        java.util.concurrent.ExecutorService[][] executorServiceArray40 = new java.util.concurrent.ExecutorService[][] { executorServiceArray38, executorServiceArray39 };
        java.util.concurrent.ExecutorService[][][] executorServiceArray41 = new java.util.concurrent.ExecutorService[][][] { executorServiceArray40 };
        java.util.concurrent.ExecutorService[][][][] executorServiceArray42 = new java.util.concurrent.ExecutorService[][][][] { executorServiceArray41 };
        java.util.List<java.util.concurrent.ExecutorService[][][]> executorServiceArrayList43 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (byte) 1, executorServiceArray42);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) (byte) 1);
    }

    @Test
    public void test3838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3838");
        double[] doubleArray6 = new double[] { 2, 100.0f, (short) 0, (short) 1, (byte) -1 };
        double[] doubleArray9 = new double[] {};
        double[] doubleArray10 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray9, doubleArray10, (double) '4');
        double[] doubleArray13 = new double[] {};
        double[] doubleArray14 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray13, doubleArray14, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray10, doubleArray14, (double) (byte) -1);
        double[] doubleArray19 = new double[] {};
        double[] doubleArray20 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray19, doubleArray20, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray10, doubleArray19, (double) 2);
        double[] doubleArray25 = new double[] {};
        double[] doubleArray26 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray25, doubleArray26, (double) '4');
        org.junit.Assert.assertArrayEquals("", doubleArray19, doubleArray25, (double) 1.0f);
        double[] doubleArray32 = new double[] {};
        double[] doubleArray33 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray32, doubleArray33, (double) '4');
        double[] doubleArray36 = new double[] {};
        double[] doubleArray37 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray36, doubleArray37, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray33, doubleArray37, (double) (byte) -1);
        double[] doubleArray42 = new double[] {};
        double[] doubleArray43 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray42, doubleArray43, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray33, doubleArray42, (double) 2);
        double[] doubleArray48 = new double[] {};
        double[] doubleArray49 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray48, doubleArray49, (double) '4');
        org.junit.Assert.assertArrayEquals("", doubleArray42, doubleArray48, (double) 1.0f);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", doubleArray19, doubleArray48, (-1.0d));
        org.junit.Assert.assertNotNull((java.lang.Object) doubleArray19);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.weekly", doubleArray6, doubleArray19, (double) 3);
    }

    @Test
    public void test3839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3839");
        float[] floatArray5 = new float[] { (short) 100, (byte) 0, 0.0f, 10, 100.0f };
        float[] floatArray14 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray21 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray14, floatArray21, (float) (byte) 100);
        float[] floatArray31 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray38 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray31, floatArray38, (float) (byte) 100);
        float[] floatArray48 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray55 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray48, floatArray55, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray38, floatArray55, 1.0f);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", floatArray21, floatArray38, (float) 100);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(floatArray5, floatArray38, 0.0f);
    }

    @Test
    public void test3840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3840");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("hi!", (double) (byte) 0, 100.0d, (double) 10L);
    }

    @Test
    public void test3841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3841");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((double) 10L, 0.0d, (double) (byte) 100);
    }

    @Test
    public void test3842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3842");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 'a', (double) 10, (double) 1L);
    }

    @Test
    public void test3843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3843");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader9, (int) (byte) -1, postingsEnum11, postingsEnum12, false);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader16, (int) (short) -1, postingsEnum18, postingsEnum19);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests22 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule23 = kuromojiAnalysisTests22.ruleChain;
        kuromojiAnalysisTests22.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests22);
        org.junit.rules.RuleChain ruleChain26 = kuromojiAnalysisTests22.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain26;
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.badapples", indexReader29, 0, postingsEnum31, postingsEnum32, true);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.apache.lucene.index.IndexReader indexReader37 = null;
        org.apache.lucene.index.Fields fields38 = null;
        org.apache.lucene.index.Fields fields39 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("europarl.lines.txt.gz", indexReader37, fields38, fields39, false);
        org.apache.lucene.index.IndexReader indexReader43 = null;
        org.apache.lucene.index.Terms terms44 = null;
        org.apache.lucene.index.Terms terms45 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader43, terms44, terms45, true);
        org.apache.lucene.index.PostingsEnum postingsEnum49 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum50 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.badapples", postingsEnum49, postingsEnum50, true);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.NumericDocValues numericDocValues58 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues59 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.awaitsfix", (int) 'a', numericDocValues58, numericDocValues59);
    }

    @Test
    public void test3844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3844");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.awaitsfix", (double) 1, (double) 0, (double) (-1.0f));
    }

    @Test
    public void test3845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3845");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("<unknown>", (double) 10L, 0.0d);
    }

    @Test
    public void test3846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3846");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule3 = kuromojiAnalysisTests2.ruleChain;
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2);
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        org.apache.lucene.index.Terms terms9 = null;
        kuromojiAnalysisTests2.assertTermsEquals("random", indexReader7, terms8, terms9, false);
        org.junit.rules.RuleChain ruleChain12 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement13 = null;
        org.junit.runner.Description description14 = null;
        org.junit.runners.model.Statement statement15 = ruleChain12.apply(statement13, description14);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests17 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule18 = kuromojiAnalysisTests17.ruleChain;
        kuromojiAnalysisTests17.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests17);
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.Terms terms23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        kuromojiAnalysisTests17.assertTermsEquals("random", indexReader22, terms23, terms24, false);
        org.junit.rules.RuleChain ruleChain27 = kuromojiAnalysisTests17.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement28 = null;
        org.junit.runner.Description description29 = null;
        org.junit.runners.model.Statement statement30 = ruleChain27.apply(statement28, description29);
        org.junit.runner.Description description31 = null;
        org.junit.runners.model.Statement statement32 = ruleChain12.apply(statement30, description31);
        org.junit.rules.TestRule testRule33 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.junit.rules.RuleChain ruleChain34 = org.junit.rules.RuleChain.outerRule(testRule33);
        org.junit.rules.RuleChain ruleChain35 = ruleChain12.around(testRule33);
        java.lang.Object obj36 = null;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling38 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.SOMETIMES;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray39 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] { throttling38 };
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingSet40 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray39);
        java.util.List<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingList41 = org.elasticsearch.test.ESTestCase.randomSubsetOf(0, throttlingArray39);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling42 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.SOMETIMES;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray43 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] { throttling42 };
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingSet44 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray43);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray39, (java.lang.Object[]) throttlingArray43);
        org.junit.Assert.assertNotEquals(obj36, (java.lang.Object) throttlingArray39);
        org.junit.Assert.assertNotSame("tests.weekly", (java.lang.Object) testRule33, obj36);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests48 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader50 = null;
        org.apache.lucene.index.Terms terms51 = null;
        org.apache.lucene.index.Terms terms52 = null;
        kuromojiAnalysisTests48.assertTermsEquals("", indexReader50, terms51, terms52, false);
        kuromojiAnalysisTests48.ensureCleanedUp();
        kuromojiAnalysisTests48.ensureCheckIndexPassed();
        kuromojiAnalysisTests48.overrideTestDefaultQueryCache();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests59 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests59.tearDown();
        org.apache.lucene.index.IndexReader indexReader62 = null;
        org.apache.lucene.index.Terms terms63 = null;
        org.apache.lucene.index.Terms terms64 = null;
        kuromojiAnalysisTests59.assertTermsEquals("tests.failfast", indexReader62, terms63, terms64, false);
        org.apache.lucene.index.IndexReader indexReader68 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum70 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum71 = null;
        kuromojiAnalysisTests59.assertDocsSkippingEquals("tests.nightly", indexReader68, (int) (byte) -1, postingsEnum70, postingsEnum71, false);
        org.junit.rules.RuleChain ruleChain74 = kuromojiAnalysisTests59.failureAndSuccessEvents;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures75 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures76 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures75);
        org.junit.rules.RuleChain ruleChain77 = ruleChain74.around((org.junit.rules.TestRule) testRuleIgnoreAfterMaxFailures76);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling79 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.SOMETIMES;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray80 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] { throttling79 };
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingSet81 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray80);
        java.util.List<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingList82 = org.elasticsearch.test.ESTestCase.randomSubsetOf(0, throttlingArray80);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling83 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.SOMETIMES;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray84 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] { throttling83 };
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingSet85 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray84);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray80, (java.lang.Object[]) throttlingArray84);
        org.junit.Assert.assertNotSame((java.lang.Object) ruleChain74, (java.lang.Object) throttlingArray84);
        org.junit.Assert.assertNotNull("tests.failfast", (java.lang.Object) ruleChain74);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain74;
        kuromojiAnalysisTests48.failureAndSuccessEvents = ruleChain74;
        kuromojiAnalysisTests48.tearDown();
        org.apache.lucene.index.IndexReader indexReader93 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum95 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum96 = null;
        kuromojiAnalysisTests48.assertPositionsSkippingEquals("tests.monster", indexReader93, (int) (byte) 10, postingsEnum95, postingsEnum96);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals(obj36, (java.lang.Object) indexReader93);
    }

    @Test
    public void test3847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3847");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (byte) 10, (long) 1);
    }

    @Test
    public void test3848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3848");
        byte[] byteArray4 = new byte[] {};
        byte[] byteArray5 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray4, byteArray5);
        byte[] byteArray9 = new byte[] {};
        byte[] byteArray10 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray9, byteArray10);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray14 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray13, byteArray14);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray9, byteArray13);
        byte[] byteArray19 = new byte[] {};
        byte[] byteArray20 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray19, byteArray20);
        byte[] byteArray23 = new byte[] {};
        byte[] byteArray24 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray23, byteArray24);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray19, byteArray23);
        org.junit.Assert.assertArrayEquals(byteArray13, byteArray19);
        org.junit.Assert.assertArrayEquals("", byteArray4, byteArray13);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests29 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests29.tearDown();
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.Terms terms33 = null;
        org.apache.lucene.index.Terms terms34 = null;
        kuromojiAnalysisTests29.assertTermsEquals("tests.failfast", indexReader32, terms33, terms34, false);
        org.apache.lucene.index.IndexReader indexReader38 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum40 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        kuromojiAnalysisTests29.assertDocsSkippingEquals("tests.nightly", indexReader38, (int) (byte) -1, postingsEnum40, postingsEnum41, false);
        org.junit.rules.RuleChain ruleChain44 = kuromojiAnalysisTests29.failureAndSuccessEvents;
        kuromojiAnalysisTests29.resetCheckIndexStatus();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests47 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule48 = kuromojiAnalysisTests47.ruleChain;
        kuromojiAnalysisTests47.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests47);
        org.junit.rules.RuleChain ruleChain51 = kuromojiAnalysisTests47.failureAndSuccessEvents;
        kuromojiAnalysisTests47.setUp();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests29, (java.lang.Object) kuromojiAnalysisTests47);
        org.junit.Assert.assertNotEquals("tests.maxfailures", (java.lang.Object) byteArray13, (java.lang.Object) kuromojiAnalysisTests47);
        org.apache.lucene.index.IndexReader indexReader56 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum58 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum59 = null;
        kuromojiAnalysisTests47.assertPositionsSkippingEquals("tests.badapples", indexReader56, (int) ' ', postingsEnum58, postingsEnum59);
        kuromojiAnalysisTests47.overrideTestDefaultQueryCache();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests62 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests62.tearDown();
        org.apache.lucene.index.IndexReader indexReader65 = null;
        org.apache.lucene.index.Fields fields66 = null;
        org.apache.lucene.index.Fields fields67 = null;
        kuromojiAnalysisTests62.assertFieldsEquals("enwiki.random.lines.txt", indexReader65, fields66, fields67, true);
        kuromojiAnalysisTests62.setUp();
        kuromojiAnalysisTests62.setIndexWriterMaxDocs((int) (byte) 1);
        kuromojiAnalysisTests62.resetCheckIndexStatus();
        kuromojiAnalysisTests62.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests62.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader78 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum80 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum81 = null;
        kuromojiAnalysisTests62.assertDocsSkippingEquals("tests.monster", indexReader78, 10, postingsEnum80, postingsEnum81, true);
        org.apache.lucene.index.IndexReader indexReader85 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum87 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum88 = null;
        kuromojiAnalysisTests62.assertDocsSkippingEquals("europarl.lines.txt.gz", indexReader85, 0, postingsEnum87, postingsEnum88, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (java.lang.Object) kuromojiAnalysisTests47, (java.lang.Object) postingsEnum87);
    }

    @Test
    public void test3849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3849");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((double) (short) -1, (double) '#', (double) 100);
    }

    @Test
    public void test3850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3850");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(0.0f, (float) 3, (float) 2);
    }

    @Test
    public void test3851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3851");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", 100L, 0L);
    }

    @Test
    public void test3852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3852");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader9, (int) (byte) -1, postingsEnum11, postingsEnum12, false);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader16, (int) (short) -1, postingsEnum18, postingsEnum19);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests22 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule23 = kuromojiAnalysisTests22.ruleChain;
        kuromojiAnalysisTests22.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests22);
        org.junit.rules.RuleChain ruleChain26 = kuromojiAnalysisTests22.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain26;
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.badapples", indexReader29, 0, postingsEnum31, postingsEnum32, true);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        java.lang.String str36 = kuromojiAnalysisTests0.getTestName();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("", indexReader39, (int) 'a', postingsEnum41, postingsEnum42);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) 'a');
    }

    @Test
    public void test3853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3853");
        short[] shortArray1 = null;
        short[] shortArray5 = new short[] {};
        short[] shortArray6 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray5, shortArray6);
        short[] shortArray10 = new short[] {};
        short[] shortArray11 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray10, shortArray11);
        short[] shortArray15 = new short[] {};
        short[] shortArray16 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray15, shortArray16);
        short[] shortArray19 = new short[] {};
        short[] shortArray20 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray19, shortArray20);
        org.junit.Assert.assertArrayEquals(shortArray15, shortArray19);
        short[] shortArray24 = new short[] {};
        short[] shortArray25 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray24, shortArray25);
        short[] shortArray28 = new short[] {};
        short[] shortArray29 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray28, shortArray29);
        org.junit.Assert.assertArrayEquals(shortArray24, shortArray28);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray15, shortArray28);
        org.junit.Assert.assertArrayEquals("tests.nightly", shortArray10, shortArray15);
        short[] shortArray35 = new short[] {};
        short[] shortArray36 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray35, shortArray36);
        short[] shortArray39 = new short[] {};
        short[] shortArray40 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray39, shortArray40);
        org.junit.Assert.assertArrayEquals(shortArray35, shortArray39);
        org.junit.Assert.assertArrayEquals(shortArray15, shortArray35);
        org.junit.Assert.assertArrayEquals("hi!", shortArray5, shortArray15);
        short[] shortArray48 = new short[] {};
        short[] shortArray49 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray48, shortArray49);
        short[] shortArray52 = new short[] {};
        short[] shortArray53 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray52, shortArray53);
        org.junit.Assert.assertArrayEquals(shortArray48, shortArray52);
        short[] shortArray57 = new short[] {};
        short[] shortArray58 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray57, shortArray58);
        short[] shortArray61 = new short[] {};
        short[] shortArray62 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray61, shortArray62);
        org.junit.Assert.assertArrayEquals(shortArray57, shortArray61);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray48, shortArray61);
        short[] shortArray68 = new short[] {};
        short[] shortArray69 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray68, shortArray69);
        short[] shortArray72 = new short[] {};
        short[] shortArray73 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray72, shortArray73);
        org.junit.Assert.assertArrayEquals(shortArray68, shortArray72);
        short[] shortArray77 = new short[] {};
        short[] shortArray78 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray77, shortArray78);
        short[] shortArray81 = new short[] {};
        short[] shortArray82 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray81, shortArray82);
        org.junit.Assert.assertArrayEquals(shortArray77, shortArray81);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray68, shortArray81);
        org.junit.Assert.assertArrayEquals("", shortArray61, shortArray81);
        org.junit.Assert.assertArrayEquals("random", shortArray5, shortArray81);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.failfast", shortArray1, shortArray5);
    }

    @Test
    public void test3854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3854");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("hi!", (double) (byte) 10, (double) 1);
    }

    @Test
    public void test3855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3855");
        char[] charArray5 = new char[] { '#', '4', ' ', '#', ' ' };
        char[] charArray11 = new char[] { '#', '4', ' ', '#', ' ' };
        char[] charArray17 = new char[] { '#', '4', ' ', '#', ' ' };
        char[] charArray23 = new char[] { '#', '4', ' ', '#', ' ' };
        char[] charArray29 = new char[] { '#', '4', ' ', '#', ' ' };
        char[][] charArray30 = new char[][] { charArray5, charArray11, charArray17, charArray23, charArray29 };
        java.util.Set<char[]> charArraySet31 = org.apache.lucene.util.LuceneTestCase.asSet(charArray30);
        java.util.concurrent.ExecutorService executorService32 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray33 = new java.util.concurrent.ExecutorService[] { executorService32 };
        java.util.concurrent.ExecutorService executorService34 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray35 = new java.util.concurrent.ExecutorService[] { executorService34 };
        java.util.concurrent.ExecutorService executorService36 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray37 = new java.util.concurrent.ExecutorService[] { executorService36 };
        java.util.concurrent.ExecutorService executorService38 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray39 = new java.util.concurrent.ExecutorService[] { executorService38 };
        java.util.concurrent.ExecutorService[][] executorServiceArray40 = new java.util.concurrent.ExecutorService[][] { executorServiceArray33, executorServiceArray35, executorServiceArray37, executorServiceArray39 };
        java.util.Set<java.util.concurrent.ExecutorService[]> executorServiceArraySet41 = org.apache.lucene.util.LuceneTestCase.asSet(executorServiceArray40);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) charArray30, (java.lang.Object[]) executorServiceArray40);
    }

    @Test
    public void test3856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3856");
        java.io.Serializable[] serializableArray4 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet5 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray4);
        java.io.Serializable[] serializableArray6 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet7 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray6);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray4, (java.lang.Object[]) serializableArray6);
        java.util.concurrent.ExecutorService[] executorServiceArray9 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean10 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray9);
        boolean boolean11 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray9);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray4, (java.lang.Object[]) executorServiceArray9);
        org.junit.Assert.assertNotNull("tests.nightly", (java.lang.Object) executorServiceArray9);
        boolean boolean14 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray9);
        int[][] intArray16 = new int[][] {};
        java.util.Set<int[]> intArraySet17 = org.apache.lucene.util.LuceneTestCase.asSet(intArray16);
        java.util.List<int[]> intArrayList18 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (byte) 0, intArray16);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) executorServiceArray9, (java.lang.Object[]) intArray16);
        java.io.Serializable[] serializableArray23 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet24 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray23);
        java.io.Serializable[] serializableArray25 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet26 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray25);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray23, (java.lang.Object[]) serializableArray25);
        java.util.concurrent.ExecutorService[] executorServiceArray28 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean29 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray28);
        boolean boolean30 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray28);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray23, (java.lang.Object[]) executorServiceArray28);
        org.junit.Assert.assertNotNull("tests.nightly", (java.lang.Object) executorServiceArray28);
        boolean boolean33 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray28);
        int[][] intArray35 = new int[][] {};
        java.util.Set<int[]> intArraySet36 = org.apache.lucene.util.LuceneTestCase.asSet(intArray35);
        java.util.List<int[]> intArrayList37 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (byte) 0, intArray35);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) executorServiceArray28, (java.lang.Object[]) intArray35);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) executorServiceArray9, (java.lang.Object[]) intArray35);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) intArray35);
    }

    @Test
    public void test3857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3857");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader9, (int) (byte) -1, postingsEnum11, postingsEnum12, false);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader16, (int) (short) -1, postingsEnum18, postingsEnum19);
        java.lang.String str21 = kuromojiAnalysisTests0.getTestName();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.weekly", postingsEnum24, postingsEnum25);
    }

    @Test
    public void test3858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3858");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Terms terms3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader2, terms3, terms4, false);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 10);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.junit.rules.TestRule testRule13 = kuromojiAnalysisTests0.ruleChain;
        char[] charArray16 = new char[] {};
        char[] charArray17 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray16, charArray17);
        char[] charArray19 = new char[] {};
        char[] charArray20 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray19, charArray20);
        org.junit.Assert.assertArrayEquals(charArray17, charArray20);
        char[] charArray23 = new char[] {};
        char[] charArray24 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray23, charArray24);
        char[] charArray26 = new char[] {};
        char[] charArray27 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray26, charArray27);
        org.junit.Assert.assertArrayEquals(charArray24, charArray27);
        org.junit.Assert.assertArrayEquals("random", charArray17, charArray24);
        char[] charArray31 = new char[] {};
        char[] charArray32 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray31, charArray32);
        char[] charArray34 = new char[] {};
        char[] charArray35 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray34, charArray35);
        org.junit.Assert.assertArrayEquals(charArray32, charArray35);
        org.junit.Assert.assertArrayEquals("tests.nightly", charArray24, charArray35);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) testRule13, (java.lang.Object) charArray24);
    }

    @Test
    public void test3859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3859");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule1 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests5 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule6 = kuromojiAnalysisTests5.ruleChain;
        kuromojiAnalysisTests5.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests5);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests5.assertTermsEquals("random", indexReader10, terms11, terms12, false);
        org.junit.rules.RuleChain ruleChain15 = kuromojiAnalysisTests5.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement16 = null;
        org.junit.runner.Description description17 = null;
        org.junit.runners.model.Statement statement18 = ruleChain15.apply(statement16, description17);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule21 = kuromojiAnalysisTests20.ruleChain;
        kuromojiAnalysisTests20.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests20);
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.Terms terms26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        kuromojiAnalysisTests20.assertTermsEquals("random", indexReader25, terms26, terms27, false);
        org.junit.rules.RuleChain ruleChain30 = kuromojiAnalysisTests20.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement31 = null;
        org.junit.runner.Description description32 = null;
        org.junit.runners.model.Statement statement33 = ruleChain30.apply(statement31, description32);
        org.junit.runner.Description description34 = null;
        org.junit.runners.model.Statement statement35 = ruleChain15.apply(statement33, description34);
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain15;
        java.lang.String str37 = kuromojiAnalysisTests0.getTestName();
        org.junit.rules.RuleChain ruleChain38 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests39 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests39.tearDown();
        org.apache.lucene.index.IndexReader indexReader42 = null;
        org.apache.lucene.index.Fields fields43 = null;
        org.apache.lucene.index.Fields fields44 = null;
        kuromojiAnalysisTests39.assertFieldsEquals("enwiki.random.lines.txt", indexReader42, fields43, fields44, true);
        kuromojiAnalysisTests39.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader49 = null;
        org.apache.lucene.index.Terms terms50 = null;
        org.apache.lucene.index.Terms terms51 = null;
        kuromojiAnalysisTests39.assertTermsEquals("tests.slow", indexReader49, terms50, terms51, false);
        kuromojiAnalysisTests39.ensureAllSearchContextsReleased();
        org.apache.lucene.index.IndexReader indexReader56 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum58 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum59 = null;
        kuromojiAnalysisTests39.assertPositionsSkippingEquals("", indexReader56, (int) (byte) 10, postingsEnum58, postingsEnum59);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests61 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests61.tearDown();
        org.apache.lucene.index.IndexReader indexReader64 = null;
        org.apache.lucene.index.Fields fields65 = null;
        org.apache.lucene.index.Fields fields66 = null;
        kuromojiAnalysisTests61.assertFieldsEquals("enwiki.random.lines.txt", indexReader64, fields65, fields66, true);
        kuromojiAnalysisTests61.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader71 = null;
        org.apache.lucene.index.Terms terms72 = null;
        org.apache.lucene.index.Terms terms73 = null;
        kuromojiAnalysisTests61.assertTermsEquals("tests.slow", indexReader71, terms72, terms73, false);
        kuromojiAnalysisTests61.ensureAllSearchContextsReleased();
        org.junit.Assert.assertNotEquals((java.lang.Object) postingsEnum59, (java.lang.Object) kuromojiAnalysisTests61);
        kuromojiAnalysisTests61.ensureAllSearchContextsReleased();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests61);
        kuromojiAnalysisTests61.assertPathHasBeenCleared("tests.monster");
        kuromojiAnalysisTests61.setUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests61);
    }

    @Test
    public void test3860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3860");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", (double) 10L, 0.0d, (double) (byte) 1);
    }

    @Test
    public void test3861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3861");
        double[] doubleArray0 = null;
        double[] doubleArray2 = new double[] {};
        double[] doubleArray3 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray2, doubleArray3, (double) '4');
        double[] doubleArray6 = new double[] {};
        double[] doubleArray7 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray6, doubleArray7, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray2, doubleArray7, (double) (short) 10);
        double[] doubleArray12 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray2, doubleArray12, (double) 10L);
        double[] doubleArray15 = new double[] {};
        double[] doubleArray16 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray15, doubleArray16, (double) '4');
        double[] doubleArray19 = new double[] {};
        double[] doubleArray20 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray19, doubleArray20, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray16, doubleArray20, (double) (byte) -1);
        double[] doubleArray25 = new double[] {};
        double[] doubleArray26 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray25, doubleArray26, (double) '4');
        double[] doubleArray29 = new double[] {};
        double[] doubleArray30 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray29, doubleArray30, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray25, doubleArray30, (double) (short) 10);
        org.junit.Assert.assertArrayEquals(doubleArray16, doubleArray25, (double) 100);
        org.junit.Assert.assertArrayEquals(doubleArray12, doubleArray25, (double) '4');
        double[] doubleArray39 = new double[] {};
        double[] doubleArray40 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray39, doubleArray40, (double) '4');
        double[] doubleArray43 = new double[] {};
        double[] doubleArray44 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray43, doubleArray44, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray39, doubleArray44, (double) (short) 10);
        double[] doubleArray49 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray39, doubleArray49, (double) 10L);
        org.junit.Assert.assertArrayEquals("tests.nightly", doubleArray25, doubleArray39, (double) (short) 1);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(doubleArray0, doubleArray39, (double) (byte) 1);
    }

    @Test
    public void test3862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3862");
        long[] longArray3 = new long[] { (byte) -1, 5 };
        long[] longArray6 = new long[] { (byte) -1, 5 };
        long[] longArray9 = new long[] { (byte) -1, 5 };
        long[] longArray12 = new long[] { (byte) -1, 5 };
        long[] longArray15 = new long[] { (byte) -1, 5 };
        long[] longArray18 = new long[] { (byte) -1, 5 };
        long[][] longArray19 = new long[][] { longArray3, longArray6, longArray9, longArray12, longArray15, longArray18 };
        java.util.Set<long[]> longArraySet20 = org.apache.lucene.util.LuceneTestCase.asSet(longArray19);
        java.util.Set<long[]> longArraySet21 = org.apache.lucene.util.LuceneTestCase.asSet(longArray19);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests22 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule23 = kuromojiAnalysisTests22.ruleChain;
        kuromojiAnalysisTests22.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests22.tearDown();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests22, (java.lang.Object) (-1));
        kuromojiAnalysisTests22.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests22.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests22.ensureCheckIndexPassed();
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        kuromojiAnalysisTests22.assertDocsEnumEquals("tests.failfast", postingsEnum32, postingsEnum33, true);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", (java.lang.Object) longArray19, (java.lang.Object) postingsEnum32);
    }

    @Test
    public void test3863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3863");
        java.lang.String[] strArray4 = new java.lang.String[] { "tests.awaitsfix", "tests.slow", "tests.maxfailures" };
        java.lang.String[][] strArray5 = new java.lang.String[][] { strArray4 };
        java.util.List<java.lang.String[]> strArrayList6 = org.elasticsearch.test.ESTestCase.randomSubsetOf(1, strArray5);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests9 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests9.tearDown();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.Fields fields13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        kuromojiAnalysisTests9.assertFieldsEquals("enwiki.random.lines.txt", indexReader12, fields13, fields14, true);
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests9.assertDocsEnumEquals("tests.monster", postingsEnum18, postingsEnum19, true);
        kuromojiAnalysisTests9.resetCheckIndexStatus();
        kuromojiAnalysisTests9.ensureCleanedUp();
        java.io.Serializable[] serializableArray25 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet26 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray25);
        java.io.Serializable[] serializableArray27 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet28 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray27);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray25, (java.lang.Object[]) serializableArray27);
        java.util.concurrent.ExecutorService[] executorServiceArray30 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean31 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray30);
        boolean boolean32 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray30);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray25, (java.lang.Object[]) executorServiceArray30);
        boolean boolean34 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray30);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests9, (java.lang.Object) executorServiceArray30);
        java.util.concurrent.ExecutorService[] executorServiceArray36 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean37 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray36);
        boolean boolean38 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray36);
        boolean boolean39 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray36);
        boolean boolean40 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray36);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) executorServiceArray30, (java.lang.Object[]) executorServiceArray36);
        java.io.Serializable[] serializableArray45 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet46 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray45);
        java.io.Serializable[] serializableArray48 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet49 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray48);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet51 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray50);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray48, (java.lang.Object[]) serializableArray50);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray45, (java.lang.Object[]) serializableArray50);
        java.io.Serializable[] serializableArray55 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet56 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray55);
        java.io.Serializable[] serializableArray58 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet59 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray58);
        java.io.Serializable[] serializableArray60 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet61 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray60);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray58, (java.lang.Object[]) serializableArray60);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray55, (java.lang.Object[]) serializableArray60);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray45, (java.lang.Object[]) serializableArray55);
        java.util.concurrent.ExecutorService[] executorServiceArray65 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean66 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray65);
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) serializableArray45, (java.lang.Object[]) executorServiceArray65);
        java.io.Serializable[] serializableArray70 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet71 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray70);
        java.io.Serializable[] serializableArray72 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet73 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray72);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray70, (java.lang.Object[]) serializableArray72);
        java.util.concurrent.ExecutorService[] executorServiceArray75 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean76 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray75);
        boolean boolean77 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray75);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray70, (java.lang.Object[]) executorServiceArray75);
        org.junit.Assert.assertNotNull("tests.nightly", (java.lang.Object) executorServiceArray75);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray45, (java.lang.Object[]) executorServiceArray75);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) executorServiceArray36, (java.lang.Object[]) serializableArray45);
        boolean boolean82 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray36);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) strArray5, (java.lang.Object[]) executorServiceArray36);
    }

    @Test
    public void test3864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3864");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1);
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.weekly", indexReader6, (int) (short) 1, postingsEnum8, postingsEnum9);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests11 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests11.tearDown();
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests11.assertTermsEquals("tests.failfast", indexReader14, terms15, terms16, false);
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        kuromojiAnalysisTests11.assertDocsSkippingEquals("tests.nightly", indexReader20, (int) (byte) -1, postingsEnum22, postingsEnum23, false);
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        kuromojiAnalysisTests11.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader27, (int) (short) -1, postingsEnum29, postingsEnum30);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests33 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule34 = kuromojiAnalysisTests33.ruleChain;
        kuromojiAnalysisTests33.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests33);
        org.junit.rules.RuleChain ruleChain37 = kuromojiAnalysisTests33.failureAndSuccessEvents;
        kuromojiAnalysisTests11.failureAndSuccessEvents = ruleChain37;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain37;
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum43 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocsAndPositionsEnumEquals("tests.awaitsfix", postingsEnum42, postingsEnum43);
    }

    @Test
    public void test3865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3865");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 10.0f, (double) 100.0f, (-1.0d));
    }

    @Test
    public void test3866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3866");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule3 = kuromojiAnalysisTests2.ruleChain;
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2);
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("tests.weekly", indexReader7, (int) (short) 1, postingsEnum9, postingsEnum10);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests12.tearDown();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests12.assertTermsEquals("tests.failfast", indexReader15, terms16, terms17, false);
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        kuromojiAnalysisTests12.assertDocsSkippingEquals("tests.nightly", indexReader21, (int) (byte) -1, postingsEnum23, postingsEnum24, false);
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        kuromojiAnalysisTests12.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader28, (int) (short) -1, postingsEnum30, postingsEnum31);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule35 = kuromojiAnalysisTests34.ruleChain;
        kuromojiAnalysisTests34.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests34);
        org.junit.rules.RuleChain ruleChain38 = kuromojiAnalysisTests34.failureAndSuccessEvents;
        kuromojiAnalysisTests12.failureAndSuccessEvents = ruleChain38;
        kuromojiAnalysisTests2.failureAndSuccessEvents = ruleChain38;
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests43 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule44 = kuromojiAnalysisTests43.ruleChain;
        kuromojiAnalysisTests43.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests43);
        org.apache.lucene.index.IndexReader indexReader48 = null;
        org.apache.lucene.index.Terms terms49 = null;
        org.apache.lucene.index.Terms terms50 = null;
        kuromojiAnalysisTests43.assertTermsEquals("random", indexReader48, terms49, terms50, false);
        org.apache.lucene.index.IndexReader indexReader54 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum56 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum57 = null;
        kuromojiAnalysisTests43.assertPositionsSkippingEquals("tests.awaitsfix", indexReader54, (-1), postingsEnum56, postingsEnum57);
        org.junit.rules.TestRule testRule59 = kuromojiAnalysisTests43.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) kuromojiAnalysisTests43);
    }

    @Test
    public void test3867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3867");
        java.util.concurrent.ExecutorService executorService1 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray2 = new java.util.concurrent.ExecutorService[] { executorService1 };
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean4 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean5 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean6 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean7 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean8 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean9 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        double[] doubleArray11 = new double[] {};
        double[] doubleArray12 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray11, doubleArray12, (double) '4');
        double[] doubleArray15 = new double[] {};
        double[] doubleArray16 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray15, doubleArray16, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray11, doubleArray16, (double) (short) 10);
        double[] doubleArray21 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray11, doubleArray21, (double) 10L);
        double[] doubleArray24 = new double[] {};
        double[] doubleArray25 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray24, doubleArray25, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray21, doubleArray25, (double) (byte) 1);
        double[] doubleArray31 = new double[] {};
        double[] doubleArray32 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray31, doubleArray32, (double) '4');
        double[] doubleArray35 = new double[] {};
        double[] doubleArray36 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray35, doubleArray36, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray31, doubleArray36, (double) (short) 10);
        double[] doubleArray41 = new double[] {};
        double[] doubleArray42 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray41, doubleArray42, (double) '4');
        double[] doubleArray45 = new double[] {};
        double[] doubleArray46 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray45, doubleArray46, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray41, doubleArray46, (double) (short) 10);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", doubleArray36, doubleArray41, (double) 4);
        org.junit.Assert.assertArrayEquals("", doubleArray25, doubleArray41, (double) 0L);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("", (java.lang.Object) executorServiceArray2, (java.lang.Object) doubleArray41);
    }

    @Test
    public void test3868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3868");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (long) (byte) 0, (long) 'a');
    }

    @Test
    public void test3869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3869");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Terms terms3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader2, terms3, terms4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.assertPathHasBeenCleared("enwiki.random.lines.txt");
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((-1));
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) '4');
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (short) 10);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) 1.0d);
    }

    @Test
    public void test3870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3870");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule1 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.PostingsEnum postingsEnum5 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum6 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("<unknown>", postingsEnum5, postingsEnum6, true);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Fields fields11 = null;
        org.apache.lucene.index.Fields fields12 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("hi!", indexReader10, fields11, fields12, false);
        java.io.Serializable[] serializableArray15 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet16 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray15);
        org.junit.Assert.assertNotEquals((java.lang.Object) false, (java.lang.Object) serializableArray15);
        java.io.Serializable[] serializableArray20 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet21 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray20);
        java.io.Serializable[] serializableArray23 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet24 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray23);
        java.io.Serializable[] serializableArray25 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet26 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray25);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray23, (java.lang.Object[]) serializableArray25);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray20, (java.lang.Object[]) serializableArray25);
        java.io.Serializable[] serializableArray30 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet31 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray30);
        java.io.Serializable[] serializableArray33 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet34 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray33);
        java.io.Serializable[] serializableArray35 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet36 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray35);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray33, (java.lang.Object[]) serializableArray35);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray30, (java.lang.Object[]) serializableArray35);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray20, (java.lang.Object[]) serializableArray30);
        java.io.Serializable[] serializableArray43 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet44 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray43);
        java.io.Serializable[] serializableArray46 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet47 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray46);
        java.io.Serializable[] serializableArray48 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet49 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray48);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray46, (java.lang.Object[]) serializableArray48);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray43, (java.lang.Object[]) serializableArray48);
        java.io.Serializable[] serializableArray53 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet54 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray53);
        java.io.Serializable[] serializableArray56 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet57 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray56);
        java.io.Serializable[] serializableArray58 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet59 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray58);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray56, (java.lang.Object[]) serializableArray58);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray53, (java.lang.Object[]) serializableArray58);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray43, (java.lang.Object[]) serializableArray53);
        java.util.concurrent.ExecutorService[] executorServiceArray63 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean64 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray63);
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) serializableArray43, (java.lang.Object[]) executorServiceArray63);
        java.io.Serializable[] serializableArray67 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet68 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray67);
        java.io.Serializable[] serializableArray70 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet71 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray70);
        java.io.Serializable[] serializableArray73 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet74 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray73);
        java.io.Serializable[] serializableArray75 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet76 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray75);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray73, (java.lang.Object[]) serializableArray75);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray70, (java.lang.Object[]) serializableArray75);
        org.junit.Assert.assertArrayEquals("tests.nightly", (java.lang.Object[]) serializableArray67, (java.lang.Object[]) serializableArray75);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray43, (java.lang.Object[]) serializableArray67);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray20, (java.lang.Object[]) serializableArray67);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray15, (java.lang.Object[]) serializableArray67);
        short[][] shortArray83 = new short[][] {};
        short[][][] shortArray84 = new short[][][] { shortArray83 };
        java.util.Set<short[][]> shortArraySet85 = org.apache.lucene.util.LuceneTestCase.asSet(shortArray84);
        java.util.Set<short[][]> shortArraySet86 = org.apache.lucene.util.LuceneTestCase.asSet(shortArray84);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray67, (java.lang.Object[]) shortArray84);
    }

    @Test
    public void test3871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3871");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1);
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        kuromojiAnalysisTests1.assertTermsEquals("random", indexReader6, terms7, terms8, false);
        org.junit.rules.RuleChain ruleChain11 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain12 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        org.apache.lucene.index.Fields fields19 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("tests.weekly", indexReader17, fields18, fields19, false);
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocsAndPositionsEnumEquals("tests.slow", postingsEnum23, postingsEnum24);
    }

    @Test
    public void test3872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3872");
        java.io.Serializable[] serializableArray6 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet7 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray6);
        java.io.Serializable[] serializableArray9 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet10 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray9);
        java.io.Serializable[] serializableArray11 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet12 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray11);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray9, (java.lang.Object[]) serializableArray11);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray6, (java.lang.Object[]) serializableArray11);
        java.io.Serializable[] serializableArray16 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet17 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray16);
        java.io.Serializable[] serializableArray19 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet20 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray19);
        java.io.Serializable[] serializableArray21 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet22 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray21);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray19, (java.lang.Object[]) serializableArray21);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray16, (java.lang.Object[]) serializableArray21);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray6, (java.lang.Object[]) serializableArray16);
        java.util.concurrent.ExecutorService[] executorServiceArray26 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean27 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray26);
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) serializableArray6, (java.lang.Object[]) executorServiceArray26);
        boolean boolean29 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray26);
        org.junit.Assert.assertNotNull("tests.failfast", (java.lang.Object) executorServiceArray26);
        boolean boolean31 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray26);
        org.elasticsearch.test.ESTestCase[][] eSTestCaseArray32 = new org.elasticsearch.test.ESTestCase[][] {};
        java.util.Set<org.elasticsearch.test.ESTestCase[]> eSTestCaseArraySet33 = org.apache.lucene.util.LuceneTestCase.asSet(eSTestCaseArray32);
        java.util.Set<org.elasticsearch.test.ESTestCase[]> eSTestCaseArraySet34 = org.apache.lucene.util.LuceneTestCase.asSet(eSTestCaseArray32);
        org.junit.Assert.assertEquals("", (java.lang.Object[]) executorServiceArray26, (java.lang.Object[]) eSTestCaseArray32);
        boolean boolean36 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray26);
        java.io.Serializable[] serializableArray38 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet39 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray38);
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet41 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray40);
        java.lang.Iterable[] iterableArray43 = new java.lang.Iterable[2];
        @SuppressWarnings("unchecked")
        java.lang.Iterable<java.io.Serializable>[] serializableIterableArray44 = (java.lang.Iterable<java.io.Serializable>[]) iterableArray43;
        serializableIterableArray44[0] = serializableSet39;
        serializableIterableArray44[1] = serializableSet41;
        java.util.Set<java.lang.Iterable<java.io.Serializable>> serializableIterableSet49 = org.apache.lucene.util.LuceneTestCase.asSet(serializableIterableArray44);
        org.junit.Assert.assertNotEquals((java.lang.Object) true, (java.lang.Object) serializableIterableArray44);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.weekly", (java.lang.Object[]) executorServiceArray26, (java.lang.Object[]) serializableIterableArray44);
    }

    @Test
    public void test3873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3873");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 5, 10.0d, (double) (byte) 0);
    }

    @Test
    public void test3874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3874");
        short[] shortArray5 = new short[] {};
        short[] shortArray6 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray5, shortArray6);
        short[] shortArray9 = new short[] {};
        short[] shortArray10 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray9, shortArray10);
        org.junit.Assert.assertArrayEquals(shortArray5, shortArray9);
        short[] shortArray14 = new short[] {};
        short[] shortArray15 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray14, shortArray15);
        short[] shortArray18 = new short[] {};
        short[] shortArray19 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray18, shortArray19);
        org.junit.Assert.assertArrayEquals(shortArray14, shortArray18);
        org.junit.Assert.assertArrayEquals("<unknown>", shortArray5, shortArray18);
        short[] shortArray24 = new short[] {};
        short[] shortArray25 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray24, shortArray25);
        short[] shortArray28 = new short[] {};
        short[] shortArray29 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray28, shortArray29);
        org.junit.Assert.assertArrayEquals(shortArray24, shortArray28);
        org.junit.Assert.assertArrayEquals("tests.nightly", shortArray18, shortArray28);
        short[] shortArray35 = new short[] {};
        short[] shortArray36 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray35, shortArray36);
        short[] shortArray40 = new short[] {};
        short[] shortArray41 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray40, shortArray41);
        short[] shortArray44 = new short[] {};
        short[] shortArray45 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray44, shortArray45);
        org.junit.Assert.assertArrayEquals(shortArray40, shortArray44);
        short[] shortArray49 = new short[] {};
        short[] shortArray50 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray49, shortArray50);
        short[] shortArray53 = new short[] {};
        short[] shortArray54 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray53, shortArray54);
        org.junit.Assert.assertArrayEquals(shortArray49, shortArray53);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray40, shortArray53);
        org.junit.Assert.assertArrayEquals("tests.nightly", shortArray35, shortArray40);
        org.junit.Assert.assertArrayEquals("hi!", shortArray28, shortArray35);
        short[] shortArray63 = new short[] { (short) 10, (byte) 10, (short) 1 };
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray35, shortArray63);
    }

    @Test
    public void test3875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3875");
        java.util.Locale locale2 = org.apache.lucene.util.LuceneTestCase.localeForName("hi!");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests4 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        kuromojiAnalysisTests4.assertTermsEquals("", indexReader6, terms7, terms8, false);
        kuromojiAnalysisTests4.setUp();
        kuromojiAnalysisTests4.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule13 = kuromojiAnalysisTests4.ruleChain;
        java.util.Locale locale15 = org.apache.lucene.util.LuceneTestCase.localeForName("<unknown>");
        org.junit.Assert.assertNotSame("hi!", (java.lang.Object) kuromojiAnalysisTests4, (java.lang.Object) locale15);
        java.util.Locale[] localeArray17 = new java.util.Locale[] { locale2, locale15 };
        java.util.Set<java.util.Locale> localeSet18 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray17);
        java.util.Set<java.util.Locale> localeSet19 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray17);
        int[][][][] intArray20 = new int[][][][] {};
        java.util.Set<int[][][]> intArraySet21 = org.apache.lucene.util.LuceneTestCase.asSet(intArray20);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", (java.lang.Object[]) localeArray17, (java.lang.Object[]) intArray20);
    }

    @Test
    public void test3876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3876");
        java.lang.Object[] objArray0 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray5 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean6 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray5);
        java.io.Serializable[] serializableArray8 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet9 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray8);
        java.io.Serializable[] serializableArray10 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet11 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray10);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray8, (java.lang.Object[]) serializableArray10);
        org.junit.Assert.assertArrayEquals("tests.badapples", (java.lang.Object[]) executorServiceArray5, (java.lang.Object[]) serializableArray10);
        java.io.Serializable[] serializableArray15 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet16 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray15);
        java.io.Serializable[] serializableArray18 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet19 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray18);
        java.io.Serializable[] serializableArray21 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet22 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray21);
        java.io.Serializable[] serializableArray23 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet24 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray23);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray21, (java.lang.Object[]) serializableArray23);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray18, (java.lang.Object[]) serializableArray23);
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) serializableArray15, (java.lang.Object[]) serializableArray23);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", (java.lang.Object[]) serializableArray10, (java.lang.Object[]) serializableArray23);
        java.io.Serializable[] serializableArray31 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet32 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray31);
        java.io.Serializable[] serializableArray34 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet35 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray34);
        java.io.Serializable[] serializableArray36 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet37 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray36);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray34, (java.lang.Object[]) serializableArray36);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray31, (java.lang.Object[]) serializableArray36);
        java.io.Serializable[] serializableArray41 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet42 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray41);
        java.io.Serializable[] serializableArray44 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet45 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray44);
        java.io.Serializable[] serializableArray46 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet47 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray46);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray44, (java.lang.Object[]) serializableArray46);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray41, (java.lang.Object[]) serializableArray46);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray31, (java.lang.Object[]) serializableArray41);
        org.junit.Assert.assertNotNull((java.lang.Object) serializableArray41);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray10, (java.lang.Object[]) serializableArray41);
        org.junit.Assert.assertNotNull("tests.badapples", (java.lang.Object) serializableArray41);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(objArray0, (java.lang.Object[]) serializableArray41);
    }

    @Test
    public void test3877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3877");
        double[] doubleArray1 = null;
        double[] doubleArray4 = new double[] {};
        double[] doubleArray5 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray4, doubleArray5, (double) '4');
        double[] doubleArray8 = new double[] {};
        double[] doubleArray9 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray8, doubleArray9, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray5, doubleArray9, (double) (byte) -1);
        double[] doubleArray14 = new double[] {};
        double[] doubleArray15 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray14, doubleArray15, (double) '4');
        double[] doubleArray18 = new double[] {};
        double[] doubleArray19 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray18, doubleArray19, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray14, doubleArray19, (double) (short) 10);
        org.junit.Assert.assertArrayEquals(doubleArray5, doubleArray14, (double) 100);
        double[] doubleArray27 = new double[] {};
        double[] doubleArray28 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray27, doubleArray28, (double) '4');
        double[] doubleArray31 = new double[] {};
        double[] doubleArray32 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray31, doubleArray32, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray27, doubleArray32, (double) (short) 10);
        double[] doubleArray37 = new double[] {};
        double[] doubleArray38 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray37, doubleArray38, (double) '4');
        double[] doubleArray41 = new double[] {};
        double[] doubleArray42 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray41, doubleArray42, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray37, doubleArray42, (double) (short) 10);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", doubleArray32, doubleArray37, (double) 4);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", doubleArray5, doubleArray37, 0.0d);
        double[] doubleArray51 = new double[] {};
        double[] doubleArray52 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray51, doubleArray52, (double) '4');
        double[] doubleArray55 = new double[] {};
        double[] doubleArray56 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray55, doubleArray56, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray52, doubleArray56, (double) (byte) -1);
        double[] doubleArray61 = new double[] {};
        double[] doubleArray62 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray61, doubleArray62, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray52, doubleArray61, (double) 2);
        org.junit.Assert.assertArrayEquals("tests.nightly", doubleArray37, doubleArray52, (double) 0L);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.slow", doubleArray1, doubleArray37, (double) 1L);
    }

    @Test
    public void test3878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3878");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader9, (int) (byte) -1, postingsEnum11, postingsEnum12, false);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader16, (int) (short) -1, postingsEnum18, postingsEnum19);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests22 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule23 = kuromojiAnalysisTests22.ruleChain;
        kuromojiAnalysisTests22.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests22);
        org.junit.rules.RuleChain ruleChain26 = kuromojiAnalysisTests22.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain26;
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.badapples", indexReader29, 0, postingsEnum31, postingsEnum32, true);
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.Terms terms37 = null;
        org.apache.lucene.index.Terms terms38 = null;
        kuromojiAnalysisTests0.assertTermsEquals("random", indexReader36, terms37, terms38, false);
        org.junit.rules.TestRule testRule41 = kuromojiAnalysisTests0.ruleChain;
        org.apache.lucene.index.PostingsEnum postingsEnum43 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum44 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("hi!", postingsEnum43, postingsEnum44);
    }

    @Test
    public void test3879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3879");
        char[] charArray2 = new char[] {};
        char[] charArray3 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray2, charArray3);
        char[] charArray5 = new char[] {};
        char[] charArray6 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray5, charArray6);
        org.junit.Assert.assertArrayEquals(charArray3, charArray6);
        char[] charArray10 = new char[] {};
        char[] charArray11 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray10, charArray11);
        char[] charArray13 = new char[] {};
        char[] charArray14 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray13, charArray14);
        org.junit.Assert.assertArrayEquals(charArray11, charArray14);
        char[] charArray17 = new char[] {};
        char[] charArray18 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray17, charArray18);
        char[] charArray20 = new char[] {};
        char[] charArray21 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray20, charArray21);
        org.junit.Assert.assertArrayEquals(charArray18, charArray21);
        org.junit.Assert.assertArrayEquals("random", charArray11, charArray18);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", charArray6, charArray18);
        char[] charArray26 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", charArray6, charArray26);
    }

    @Test
    public void test3880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3880");
        java.lang.Object[] objArray1 = null;
        java.io.Serializable[] serializableArray5 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet6 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray5);
        java.io.Serializable[] serializableArray8 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet9 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray8);
        java.io.Serializable[] serializableArray10 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet11 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray10);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray8, (java.lang.Object[]) serializableArray10);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray5, (java.lang.Object[]) serializableArray10);
        java.io.Serializable[] serializableArray15 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet16 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray15);
        java.io.Serializable[] serializableArray18 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet19 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray18);
        java.io.Serializable[] serializableArray20 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet21 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray20);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray18, (java.lang.Object[]) serializableArray20);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray15, (java.lang.Object[]) serializableArray20);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray5, (java.lang.Object[]) serializableArray15);
        java.util.concurrent.ExecutorService[] executorServiceArray25 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean26 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray25);
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) serializableArray5, (java.lang.Object[]) executorServiceArray25);
        boolean boolean28 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray25);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests29 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests29.tearDown();
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.Fields fields33 = null;
        org.apache.lucene.index.Fields fields34 = null;
        kuromojiAnalysisTests29.assertFieldsEquals("enwiki.random.lines.txt", indexReader32, fields33, fields34, true);
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum39 = null;
        kuromojiAnalysisTests29.assertDocsEnumEquals("tests.monster", postingsEnum38, postingsEnum39, true);
        kuromojiAnalysisTests29.resetCheckIndexStatus();
        kuromojiAnalysisTests29.ensureCleanedUp();
        java.io.Serializable[] serializableArray45 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet46 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray45);
        java.io.Serializable[] serializableArray47 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet48 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray47);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray45, (java.lang.Object[]) serializableArray47);
        java.util.concurrent.ExecutorService[] executorServiceArray50 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean51 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray50);
        boolean boolean52 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray50);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray45, (java.lang.Object[]) executorServiceArray50);
        boolean boolean54 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray50);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests29, (java.lang.Object) executorServiceArray50);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray25, (java.lang.Object[]) executorServiceArray50);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.nightly", objArray1, (java.lang.Object[]) executorServiceArray50);
    }

    @Test
    public void test3881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3881");
        java.lang.Object obj0 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("enwiki.random.lines.txt", indexReader4, fields5, fields6, true);
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("tests.monster", postingsEnum10, postingsEnum11, true);
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("", postingsEnum17, postingsEnum18, false);
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.awaitsfix", indexReader22, (int) (short) 100, postingsEnum24, postingsEnum25);
        org.junit.rules.RuleChain ruleChain27 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("tests.slow", postingsEnum29, postingsEnum30, true);
        org.junit.rules.RuleChain ruleChain33 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(obj0, (java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test3882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3882");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("enwiki.random.lines.txt", indexReader4, fields5, fields6, true);
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (byte) 1);
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("hi!");
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        org.junit.Assert.assertNotNull("tests.maxfailures", (java.lang.Object) kuromojiAnalysisTests1);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("hi!");
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.Fields fields23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("tests.nightly", indexReader22, fields23, fields24, false);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.junit.rules.TestRule testRule28 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.junit.rules.RuleChain ruleChain29 = org.junit.rules.RuleChain.outerRule(testRule28);
        org.junit.rules.RuleChain ruleChain30 = org.junit.rules.RuleChain.outerRule(testRule28);
        org.junit.rules.RuleChain ruleChain31 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain30);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests33 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule34 = kuromojiAnalysisTests33.ruleChain;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule34;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule34;
        org.junit.rules.RuleChain ruleChain37 = org.junit.rules.RuleChain.outerRule(testRule34);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests39 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule40 = kuromojiAnalysisTests39.ruleChain;
        kuromojiAnalysisTests39.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests39);
        org.apache.lucene.index.IndexReader indexReader44 = null;
        org.apache.lucene.index.Terms terms45 = null;
        org.apache.lucene.index.Terms terms46 = null;
        kuromojiAnalysisTests39.assertTermsEquals("random", indexReader44, terms45, terms46, false);
        org.junit.rules.RuleChain ruleChain49 = kuromojiAnalysisTests39.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement50 = null;
        org.junit.runner.Description description51 = null;
        org.junit.runners.model.Statement statement52 = ruleChain49.apply(statement50, description51);
        org.junit.Assert.assertNotEquals("", (java.lang.Object) testRule34, (java.lang.Object) description51);
        org.junit.rules.RuleChain ruleChain54 = org.junit.rules.RuleChain.outerRule(testRule34);
        org.junit.rules.RuleChain ruleChain55 = ruleChain30.around((org.junit.rules.TestRule) ruleChain54);
        org.junit.rules.TestRule testRule56 = null;
        org.junit.rules.RuleChain ruleChain57 = org.junit.rules.RuleChain.outerRule(testRule56);
        org.junit.rules.RuleChain ruleChain58 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain57);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests59 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests59.tearDown();
        org.apache.lucene.index.IndexReader indexReader62 = null;
        org.apache.lucene.index.Terms terms63 = null;
        org.apache.lucene.index.Terms terms64 = null;
        kuromojiAnalysisTests59.assertTermsEquals("tests.failfast", indexReader62, terms63, terms64, false);
        org.apache.lucene.index.IndexReader indexReader68 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum70 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum71 = null;
        kuromojiAnalysisTests59.assertDocsSkippingEquals("tests.nightly", indexReader68, (int) (byte) -1, postingsEnum70, postingsEnum71, false);
        org.apache.lucene.index.IndexReader indexReader75 = null;
        org.apache.lucene.index.Terms terms76 = null;
        org.apache.lucene.index.Terms terms77 = null;
        kuromojiAnalysisTests59.assertTermsEquals("", indexReader75, terms76, terms77, true);
        org.apache.lucene.index.IndexReader indexReader81 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum83 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum84 = null;
        kuromojiAnalysisTests59.assertDocsSkippingEquals("<unknown>", indexReader81, (int) (byte) 100, postingsEnum83, postingsEnum84, false);
        kuromojiAnalysisTests59.assertPathHasBeenCleared("random");
        org.junit.rules.TestRule testRule89 = kuromojiAnalysisTests59.ruleChain;
        org.junit.Assert.assertNotNull((java.lang.Object) testRule89);
        org.junit.rules.RuleChain ruleChain91 = ruleChain57.around(testRule89);
        org.junit.rules.RuleChain ruleChain92 = ruleChain54.around(testRule89);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain92;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertPathHasBeenCleared("");
    }

    @Test
    public void test3883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3883");
        java.lang.Object[] objArray0 = null;
        java.io.Serializable[] serializableArray4 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet5 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray4);
        java.io.Serializable[] serializableArray7 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet8 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray7);
        java.io.Serializable[] serializableArray9 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet10 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray9);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray7, (java.lang.Object[]) serializableArray9);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray4, (java.lang.Object[]) serializableArray9);
        java.io.Serializable[] serializableArray14 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet15 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray14);
        java.io.Serializable[] serializableArray17 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet18 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray17);
        java.io.Serializable[] serializableArray19 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet20 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray19);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray17, (java.lang.Object[]) serializableArray19);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray14, (java.lang.Object[]) serializableArray19);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray4, (java.lang.Object[]) serializableArray14);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests24 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule25 = kuromojiAnalysisTests24.ruleChain;
        kuromojiAnalysisTests24.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests24.tearDown();
        kuromojiAnalysisTests24.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests24.setUp();
        org.junit.Assert.assertNotEquals("tests.weekly", (java.lang.Object) serializableArray14, (java.lang.Object) kuromojiAnalysisTests24);
        java.io.Serializable[] serializableArray33 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet34 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray33);
        java.io.Serializable[] serializableArray36 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet37 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray36);
        java.io.Serializable[] serializableArray38 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet39 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray38);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray36, (java.lang.Object[]) serializableArray38);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray33, (java.lang.Object[]) serializableArray38);
        java.io.Serializable[] serializableArray43 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet44 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray43);
        java.io.Serializable[] serializableArray46 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet47 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray46);
        java.io.Serializable[] serializableArray48 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet49 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray48);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray46, (java.lang.Object[]) serializableArray48);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray43, (java.lang.Object[]) serializableArray48);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray33, (java.lang.Object[]) serializableArray43);
        java.io.Serializable[] serializableArray56 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet57 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray56);
        java.io.Serializable[] serializableArray59 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet60 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray59);
        java.io.Serializable[] serializableArray61 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet62 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray61);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray59, (java.lang.Object[]) serializableArray61);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray56, (java.lang.Object[]) serializableArray61);
        java.io.Serializable[] serializableArray66 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet67 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray66);
        java.io.Serializable[] serializableArray69 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet70 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray69);
        java.io.Serializable[] serializableArray71 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet72 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray71);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray69, (java.lang.Object[]) serializableArray71);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray66, (java.lang.Object[]) serializableArray71);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray56, (java.lang.Object[]) serializableArray66);
        java.util.concurrent.ExecutorService[] executorServiceArray76 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean77 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray76);
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) serializableArray56, (java.lang.Object[]) executorServiceArray76);
        java.io.Serializable[] serializableArray80 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet81 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray80);
        java.io.Serializable[] serializableArray83 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet84 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray83);
        java.io.Serializable[] serializableArray86 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet87 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray86);
        java.io.Serializable[] serializableArray88 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet89 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray88);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray86, (java.lang.Object[]) serializableArray88);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray83, (java.lang.Object[]) serializableArray88);
        org.junit.Assert.assertArrayEquals("tests.nightly", (java.lang.Object[]) serializableArray80, (java.lang.Object[]) serializableArray88);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray56, (java.lang.Object[]) serializableArray80);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray33, (java.lang.Object[]) serializableArray80);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray14, (java.lang.Object[]) serializableArray33);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(objArray0, (java.lang.Object[]) serializableArray14);
    }

    @Test
    public void test3884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3884");
        int[] intArray1 = null;
        int[] intArray6 = new int[] {};
        int[] intArray7 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray6, intArray7);
        int[] intArray10 = new int[] {};
        int[] intArray11 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray10, intArray11);
        org.junit.Assert.assertArrayEquals(intArray7, intArray10);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray7, (java.lang.Object) 100.0d);
        int[] intArray19 = new int[] {};
        int[] intArray20 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray19, intArray20);
        int[] intArray23 = new int[] {};
        int[] intArray24 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray23, intArray24);
        org.junit.Assert.assertArrayEquals(intArray20, intArray23);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray20, (java.lang.Object) 100.0d);
        int[] intArray30 = new int[] {};
        int[] intArray31 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray30, intArray31);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray20, intArray30);
        org.junit.Assert.assertArrayEquals("random", intArray7, intArray20);
        org.junit.Assert.assertNotEquals((java.lang.Object) intArray7, (java.lang.Object) "<unknown>");
        int[] intArray38 = new int[] {};
        int[] intArray39 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray38, intArray39);
        int[] intArray42 = new int[] {};
        int[] intArray43 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray42, intArray43);
        org.junit.Assert.assertArrayEquals(intArray39, intArray42);
        org.junit.Assert.assertArrayEquals(intArray7, intArray42);
        int[] intArray50 = new int[] {};
        int[] intArray51 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray50, intArray51);
        int[] intArray54 = new int[] {};
        int[] intArray55 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray54, intArray55);
        org.junit.Assert.assertArrayEquals(intArray51, intArray54);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray51, (java.lang.Object) 100.0d);
        int[] intArray63 = new int[] {};
        int[] intArray64 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray63, intArray64);
        int[] intArray67 = new int[] {};
        int[] intArray68 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray67, intArray68);
        org.junit.Assert.assertArrayEquals(intArray64, intArray67);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray64, (java.lang.Object) 100.0d);
        int[] intArray74 = new int[] {};
        int[] intArray75 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray74, intArray75);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray64, intArray74);
        org.junit.Assert.assertArrayEquals("random", intArray51, intArray64);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", intArray42, intArray51);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.maxfailures", intArray1, intArray42);
    }

    @Test
    public void test3885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3885");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Terms terms3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader2, terms3, terms4, false);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        java.lang.String str10 = kuromojiAnalysisTests0.getTestName();
        org.junit.rules.RuleChain ruleChain11 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.junit.rules.TestRule testRule12 = kuromojiAnalysisTests0.ruleChain;
        java.io.Serializable[] serializableArray13 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet14 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray13);
        java.io.Serializable[] serializableArray15 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet16 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray15);
        java.io.Serializable[] serializableArray17 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet18 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray17);
        java.io.Serializable[] serializableArray19 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet20 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray19);
        java.io.Serializable[] serializableArray21 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet22 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray21);
        java.util.Set[] setArray24 = new java.util.Set[5];
        @SuppressWarnings("unchecked")
        java.util.Set<java.io.Serializable>[] serializableSetArray25 = (java.util.Set<java.io.Serializable>[]) setArray24;
        serializableSetArray25[0] = serializableSet14;
        serializableSetArray25[1] = serializableSet16;
        serializableSetArray25[2] = serializableSet18;
        serializableSetArray25[3] = serializableSet20;
        serializableSetArray25[4] = serializableSet22;
        java.util.Set<java.util.Set<java.io.Serializable>> serializableSetSet36 = org.apache.lucene.util.LuceneTestCase.asSet(serializableSetArray25);
        java.util.Set<java.util.Set<java.io.Serializable>> serializableSetSet37 = org.apache.lucene.util.LuceneTestCase.asSet(serializableSetArray25);
        java.util.Set<java.util.Collection<java.io.Serializable>> serializableCollectionSet38 = org.apache.lucene.util.LuceneTestCase.asSet((java.util.Collection<java.io.Serializable>[]) serializableSetArray25);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) serializableSetArray25);
        java.io.Serializable[] serializableArray43 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet44 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray43);
        java.io.Serializable[] serializableArray46 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet47 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray46);
        java.io.Serializable[] serializableArray49 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet50 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray49);
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet52 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray51);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray49, (java.lang.Object[]) serializableArray51);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray46, (java.lang.Object[]) serializableArray51);
        org.junit.Assert.assertArrayEquals("tests.nightly", (java.lang.Object[]) serializableArray43, (java.lang.Object[]) serializableArray51);
        java.io.Serializable[] serializableArray57 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet58 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray57);
        java.io.Serializable[] serializableArray60 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet61 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray60);
        java.io.Serializable[] serializableArray63 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet64 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray63);
        java.io.Serializable[] serializableArray65 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet66 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray65);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray63, (java.lang.Object[]) serializableArray65);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray60, (java.lang.Object[]) serializableArray65);
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) serializableArray57, (java.lang.Object[]) serializableArray65);
        org.junit.Assert.assertArrayEquals("tests.badapples", (java.lang.Object[]) serializableArray43, (java.lang.Object[]) serializableArray57);
        java.io.Serializable[] serializableArray72 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet73 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray72);
        java.io.Serializable[] serializableArray75 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet76 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray75);
        java.io.Serializable[] serializableArray77 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet78 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray77);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray75, (java.lang.Object[]) serializableArray77);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray72, (java.lang.Object[]) serializableArray77);
        org.junit.Assert.assertEquals("tests.badapples", (java.lang.Object[]) serializableArray43, (java.lang.Object[]) serializableArray77);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableSetArray25, (java.lang.Object[]) serializableArray43);
    }

    @Test
    public void test3886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3886");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (long) '#', 100L);
    }

    @Test
    public void test3887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3887");
        java.io.Serializable[] serializableArray4 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet5 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray4);
        java.io.Serializable[] serializableArray7 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet8 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray7);
        java.io.Serializable[] serializableArray9 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet10 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray9);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray7, (java.lang.Object[]) serializableArray9);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray4, (java.lang.Object[]) serializableArray9);
        java.io.Serializable[] serializableArray14 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet15 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray14);
        java.io.Serializable[] serializableArray17 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet18 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray17);
        java.io.Serializable[] serializableArray19 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet20 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray19);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray17, (java.lang.Object[]) serializableArray19);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray14, (java.lang.Object[]) serializableArray19);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray4, (java.lang.Object[]) serializableArray14);
        java.util.concurrent.ExecutorService[] executorServiceArray24 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean25 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray24);
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) serializableArray4, (java.lang.Object[]) executorServiceArray24);
        java.io.Serializable[] serializableArray28 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet29 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray28);
        java.io.Serializable[] serializableArray31 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet32 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray31);
        java.io.Serializable[] serializableArray34 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet35 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray34);
        java.io.Serializable[] serializableArray36 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet37 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray36);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray34, (java.lang.Object[]) serializableArray36);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray31, (java.lang.Object[]) serializableArray36);
        org.junit.Assert.assertArrayEquals("tests.nightly", (java.lang.Object[]) serializableArray28, (java.lang.Object[]) serializableArray36);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray4, (java.lang.Object[]) serializableArray28);
        java.util.concurrent.ExecutorService[] executorServiceArray42 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean43 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray42);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", (java.lang.Object[]) serializableArray4, (java.lang.Object[]) executorServiceArray42);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray46 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray47 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray48 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray49 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray50 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[][] throttlingArray51 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[][] { throttlingArray46, throttlingArray47, throttlingArray48, throttlingArray49, throttlingArray50 };
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray52 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray53 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray54 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray55 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray56 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[][] throttlingArray57 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[][] { throttlingArray52, throttlingArray53, throttlingArray54, throttlingArray55, throttlingArray56 };
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray58 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray59 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray60 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray61 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray62 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[][] throttlingArray63 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[][] { throttlingArray58, throttlingArray59, throttlingArray60, throttlingArray61, throttlingArray62 };
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[][][] throttlingArray64 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[][][] { throttlingArray51, throttlingArray57, throttlingArray63 };
        java.util.List<org.apache.lucene.store.MockDirectoryWrapper.Throttling[][]> throttlingArrayList65 = org.elasticsearch.test.ESTestCase.randomSubsetOf(3, throttlingArray64);
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling[][]> throttlingArraySet66 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray64);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray4, (java.lang.Object[]) throttlingArray64);
    }

    @Test
    public void test3888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3888");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals(0L, (long) (short) 0);
    }

    @Test
    public void test3889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3889");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (short) 0, (long) '#');
    }

    @Test
    public void test3890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3890");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((double) (byte) 1, (double) (short) -1, (double) 2);
    }

    @Test
    public void test3891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3891");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader3, fields4, fields5, true);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 1);
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.Fields fields13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader12, fields13, fields14, false);
        org.junit.rules.TestRule testRule17 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.apache.lucene.index.NumericDocValues numericDocValues22 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues23 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.failfast", (int) ' ', numericDocValues22, numericDocValues23);
    }

    @Test
    public void test3892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3892");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((double) 1, (double) 2, (double) (short) 100);
    }

    @Test
    public void test3893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3893");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("enwiki.random.lines.txt", (double) '4', (double) (-1L));
    }

    @Test
    public void test3894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3894");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.maxfailures", (double) (short) 10, (double) (short) 100, (double) 100);
    }

    @Test
    public void test3895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3895");
        org.elasticsearch.test.ESTestCase[][] eSTestCaseArray2 = new org.elasticsearch.test.ESTestCase[][] {};
        java.util.Set<org.elasticsearch.test.ESTestCase[]> eSTestCaseArraySet3 = org.apache.lucene.util.LuceneTestCase.asSet(eSTestCaseArray2);
        java.util.Set<org.elasticsearch.test.ESTestCase[]> eSTestCaseArraySet4 = org.apache.lucene.util.LuceneTestCase.asSet(eSTestCaseArray2);
        java.util.concurrent.ExecutorService[] executorServiceArray7 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean8 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray7);
        java.io.Serializable[] serializableArray10 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet11 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray10);
        java.io.Serializable[] serializableArray13 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet14 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray13);
        java.io.Serializable[] serializableArray16 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet17 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray16);
        java.io.Serializable[] serializableArray18 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet19 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray18);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray16, (java.lang.Object[]) serializableArray18);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray13, (java.lang.Object[]) serializableArray18);
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) serializableArray10, (java.lang.Object[]) serializableArray18);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray7, (java.lang.Object[]) serializableArray10);
        org.junit.Assert.assertNotNull("europarl.lines.txt.gz", (java.lang.Object) executorServiceArray7);
        boolean boolean25 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray7);
        java.io.Serializable[] serializableArray28 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet29 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray28);
        java.io.Serializable[] serializableArray31 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet32 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray31);
        java.io.Serializable[] serializableArray33 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet34 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray33);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray31, (java.lang.Object[]) serializableArray33);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray28, (java.lang.Object[]) serializableArray33);
        java.io.Serializable[] serializableArray38 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet39 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray38);
        java.io.Serializable[] serializableArray41 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet42 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray41);
        java.io.Serializable[] serializableArray43 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet44 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray43);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray41, (java.lang.Object[]) serializableArray43);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray38, (java.lang.Object[]) serializableArray43);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray28, (java.lang.Object[]) serializableArray38);
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet52 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray51);
        java.io.Serializable[] serializableArray54 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet55 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray54);
        java.io.Serializable[] serializableArray56 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet57 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray56);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray54, (java.lang.Object[]) serializableArray56);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray51, (java.lang.Object[]) serializableArray56);
        java.io.Serializable[] serializableArray61 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet62 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray61);
        java.io.Serializable[] serializableArray64 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet65 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray64);
        java.io.Serializable[] serializableArray66 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet67 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray66);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray64, (java.lang.Object[]) serializableArray66);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray61, (java.lang.Object[]) serializableArray66);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray51, (java.lang.Object[]) serializableArray61);
        java.util.concurrent.ExecutorService[] executorServiceArray71 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean72 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray71);
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) serializableArray51, (java.lang.Object[]) executorServiceArray71);
        java.io.Serializable[] serializableArray76 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet77 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray76);
        java.io.Serializable[] serializableArray78 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet79 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray78);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray76, (java.lang.Object[]) serializableArray78);
        java.util.concurrent.ExecutorService[] executorServiceArray81 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean82 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray81);
        boolean boolean83 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray81);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray76, (java.lang.Object[]) executorServiceArray81);
        org.junit.Assert.assertNotNull("tests.nightly", (java.lang.Object) executorServiceArray81);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray51, (java.lang.Object[]) executorServiceArray81);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray28, (java.lang.Object[]) executorServiceArray81);
        org.junit.Assert.assertEquals("tests.badapples", (java.lang.Object[]) executorServiceArray7, (java.lang.Object[]) executorServiceArray81);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", (java.lang.Object[]) eSTestCaseArray2, (java.lang.Object[]) executorServiceArray81);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.nightly", (java.lang.Object) "tests.maxfailures");
    }

    @Test
    public void test3896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3896");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1);
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        kuromojiAnalysisTests1.assertTermsEquals("random", indexReader6, terms7, terms8, false);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("enwiki.random.lines.txt", postingsEnum14, postingsEnum15, true);
        kuromojiAnalysisTests1.setUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests20.tearDown();
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Fields fields24 = null;
        org.apache.lucene.index.Fields fields25 = null;
        kuromojiAnalysisTests20.assertFieldsEquals("enwiki.random.lines.txt", indexReader23, fields24, fields25, true);
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        kuromojiAnalysisTests20.assertDocsEnumEquals("tests.monster", postingsEnum29, postingsEnum30, true);
        org.junit.rules.RuleChain ruleChain33 = kuromojiAnalysisTests20.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests34.tearDown();
        org.apache.lucene.index.IndexReader indexReader37 = null;
        org.apache.lucene.index.Terms terms38 = null;
        org.apache.lucene.index.Terms terms39 = null;
        kuromojiAnalysisTests34.assertTermsEquals("tests.failfast", indexReader37, terms38, terms39, false);
        org.apache.lucene.index.IndexReader indexReader43 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum46 = null;
        kuromojiAnalysisTests34.assertDocsSkippingEquals("tests.nightly", indexReader43, (int) (byte) -1, postingsEnum45, postingsEnum46, false);
        org.apache.lucene.index.IndexReader indexReader50 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum52 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum53 = null;
        kuromojiAnalysisTests34.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader50, (int) (short) -1, postingsEnum52, postingsEnum53);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests56 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule57 = kuromojiAnalysisTests56.ruleChain;
        kuromojiAnalysisTests56.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests56);
        org.junit.rules.RuleChain ruleChain60 = kuromojiAnalysisTests56.failureAndSuccessEvents;
        kuromojiAnalysisTests34.failureAndSuccessEvents = ruleChain60;
        org.apache.lucene.index.IndexReader indexReader63 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum65 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum66 = null;
        kuromojiAnalysisTests34.assertDocsSkippingEquals("tests.badapples", indexReader63, 0, postingsEnum65, postingsEnum66, true);
        kuromojiAnalysisTests34.ensureCheckIndexPassed();
        kuromojiAnalysisTests34.setUp();
        org.junit.Assert.assertNotSame("random", (java.lang.Object) ruleChain33, (java.lang.Object) kuromojiAnalysisTests34);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain33;
        org.apache.lucene.index.NumericDocValues numericDocValues75 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues76 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocValuesEquals("", (int) (short) 1, numericDocValues75, numericDocValues76);
    }

    @Test
    public void test3897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3897");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", (double) '4', (double) (byte) 10);
    }

    @Test
    public void test3898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3898");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", (float) 4, (float) 10L, 0.0f);
    }

    @Test
    public void test3899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3899");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule1 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.setUp();
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.slow", postingsEnum9, postingsEnum10, false);
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum17 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.failfast", indexReader14, 100, postingsEnum16, postingsEnum17);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.setUp();
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.maxfailures", postingsEnum22, postingsEnum23);
    }

    @Test
    public void test3900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3900");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule1 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain3 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (short) 1);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests9 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests9.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests11 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests11.tearDown();
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests11.assertTermsEquals("tests.failfast", indexReader14, terms15, terms16, false);
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        org.apache.lucene.index.Terms terms22 = null;
        kuromojiAnalysisTests11.assertTermsEquals("", indexReader20, terms21, terms22, false);
        org.junit.rules.RuleChain ruleChain25 = kuromojiAnalysisTests11.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests9, (java.lang.Object) kuromojiAnalysisTests11);
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests11);
        kuromojiAnalysisTests11.ensureCheckIndexPassed();
        kuromojiAnalysisTests11.setUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests11);
    }

    @Test
    public void test3901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3901");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) 2, (long) 0);
    }

    @Test
    public void test3902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3902");
        float[] floatArray0 = null;
        float[] floatArray9 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray16 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray9, floatArray16, (float) (byte) 100);
        float[] floatArray26 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray33 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray26, floatArray33, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray16, floatArray33, 1.0f);
        float[] floatArray46 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray53 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray46, floatArray53, (float) (byte) 100);
        float[] floatArray63 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray70 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray63, floatArray70, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray53, floatArray70, 1.0f);
        float[] floatArray82 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray89 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray82, floatArray89, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals("<unknown>", floatArray53, floatArray89, (float) (short) 10);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", floatArray33, floatArray89, (float) (byte) 10);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(floatArray0, floatArray33, (float) (byte) -1);
    }

    @Test
    public void test3903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3903");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (byte) 100, (double) 2, (double) (short) 1);
    }

    @Test
    public void test3904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3904");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule1 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.tearDown();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) (-1));
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.badapples", indexReader7, (int) ' ', postingsEnum9, postingsEnum10);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.monster", indexReader15, terms16, terms17, true);
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.Terms terms22 = null;
        org.apache.lucene.index.Terms terms23 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader21, terms22, terms23, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) "");
    }

    @Test
    public void test3905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3905");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", (double) 1L, (double) (-1));
    }

    @Test
    public void test3906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3906");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (short) 100, (double) 100L);
    }

    @Test
    public void test3907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3907");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.tearDown();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) (-1));
        java.lang.Class<?> wildcardClass7 = kuromojiAnalysisTests1.getClass();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("enwiki.random.lines.txt", (java.lang.Object) wildcardClass7);
    }

    @Test
    public void test3908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3908");
        double[] doubleArray0 = new double[] {};
        double[] doubleArray1 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray0, doubleArray1, (double) '4');
        double[] doubleArray6 = new double[] {};
        double[] doubleArray7 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray6, doubleArray7, (double) '4');
        double[] doubleArray10 = new double[] {};
        double[] doubleArray11 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray10, doubleArray11, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray7, doubleArray11, (double) (byte) -1);
        double[] doubleArray16 = new double[] {};
        double[] doubleArray17 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray16, doubleArray17, (double) '4');
        double[] doubleArray20 = new double[] {};
        double[] doubleArray21 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray20, doubleArray21, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray16, doubleArray21, (double) (short) 10);
        org.junit.Assert.assertArrayEquals(doubleArray7, doubleArray16, (double) 100);
        double[] doubleArray29 = new double[] {};
        double[] doubleArray30 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray29, doubleArray30, (double) '4');
        double[] doubleArray33 = new double[] {};
        double[] doubleArray34 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray33, doubleArray34, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray29, doubleArray34, (double) (short) 10);
        double[] doubleArray39 = new double[] {};
        double[] doubleArray40 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray39, doubleArray40, (double) '4');
        double[] doubleArray43 = new double[] {};
        double[] doubleArray44 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray43, doubleArray44, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray39, doubleArray44, (double) (short) 10);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", doubleArray34, doubleArray39, (double) 4);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", doubleArray7, doubleArray39, 0.0d);
        double[] doubleArray53 = new double[] {};
        double[] doubleArray54 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray53, doubleArray54, (double) '4');
        double[] doubleArray57 = new double[] {};
        double[] doubleArray58 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray57, doubleArray58, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray54, doubleArray58, (double) (byte) -1);
        org.junit.Assert.assertArrayEquals("", doubleArray39, doubleArray58, (double) 2);
        org.junit.Assert.assertArrayEquals(doubleArray1, doubleArray39, (double) (-1));
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) (-1));
    }

    @Test
    public void test3909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3909");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("hi!", (double) (short) 0, (double) (byte) 0);
    }

    @Test
    public void test3910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3910");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule3 = kuromojiAnalysisTests2.ruleChain;
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2);
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("tests.weekly", indexReader7, (int) (short) 1, postingsEnum9, postingsEnum10);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests12.tearDown();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests12.assertTermsEquals("tests.failfast", indexReader15, terms16, terms17, false);
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        kuromojiAnalysisTests12.assertDocsSkippingEquals("tests.nightly", indexReader21, (int) (byte) -1, postingsEnum23, postingsEnum24, false);
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        kuromojiAnalysisTests12.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader28, (int) (short) -1, postingsEnum30, postingsEnum31);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule35 = kuromojiAnalysisTests34.ruleChain;
        kuromojiAnalysisTests34.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests34);
        org.junit.rules.RuleChain ruleChain38 = kuromojiAnalysisTests34.failureAndSuccessEvents;
        kuromojiAnalysisTests12.failureAndSuccessEvents = ruleChain38;
        kuromojiAnalysisTests2.failureAndSuccessEvents = ruleChain38;
        kuromojiAnalysisTests2.tearDown();
        org.junit.Assert.assertNotNull("hi!", (java.lang.Object) kuromojiAnalysisTests2);
        kuromojiAnalysisTests2.tearDown();
        org.apache.lucene.index.NumericDocValues numericDocValues46 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues47 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests2.assertDocValuesEquals("enwiki.random.lines.txt", (int) ' ', numericDocValues46, numericDocValues47);
    }

    @Test
    public void test3911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3911");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (short) 1, 0.0d, (double) (byte) 0);
    }

    @Test
    public void test3912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3912");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", (float) '#', (float) (short) 10, (float) 1);
    }

    @Test
    public void test3913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3913");
        double[] doubleArray1 = null;
        double[] doubleArray2 = new double[] {};
        double[] doubleArray3 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray2, doubleArray3, (double) '4');
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("random", doubleArray1, doubleArray3, (double) 3);
    }

    @Test
    public void test3914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3914");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader9, (int) (byte) -1, postingsEnum11, postingsEnum12, false);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader16, (int) (short) -1, postingsEnum18, postingsEnum19);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests22 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule23 = kuromojiAnalysisTests22.ruleChain;
        kuromojiAnalysisTests22.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests22);
        org.junit.rules.RuleChain ruleChain26 = kuromojiAnalysisTests22.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain26;
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.badapples", indexReader29, 0, postingsEnum31, postingsEnum32, true);
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.Terms terms37 = null;
        org.apache.lucene.index.Terms terms38 = null;
        kuromojiAnalysisTests0.assertTermsEquals("random", indexReader36, terms37, terms38, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests41 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests41.tearDown();
        org.apache.lucene.index.IndexReader indexReader44 = null;
        org.apache.lucene.index.Terms terms45 = null;
        org.apache.lucene.index.Terms terms46 = null;
        kuromojiAnalysisTests41.assertTermsEquals("tests.failfast", indexReader44, terms45, terms46, false);
        org.apache.lucene.index.IndexReader indexReader50 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum52 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum53 = null;
        kuromojiAnalysisTests41.assertDocsSkippingEquals("tests.nightly", indexReader50, (int) (byte) -1, postingsEnum52, postingsEnum53, false);
        org.junit.rules.RuleChain ruleChain56 = kuromojiAnalysisTests41.failureAndSuccessEvents;
        kuromojiAnalysisTests41.resetCheckIndexStatus();
        kuromojiAnalysisTests41.ensureAllSearchContextsReleased();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) indexReader36, (java.lang.Object) kuromojiAnalysisTests41);
    }

    @Test
    public void test3915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3915");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((double) 1.0f, (double) 1.0f, (double) 100);
    }

    @Test
    public void test3916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3916");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader9, (int) (byte) -1, postingsEnum11, postingsEnum12, false);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader16, (int) (short) -1, postingsEnum18, postingsEnum19);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests22 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule23 = kuromojiAnalysisTests22.ruleChain;
        kuromojiAnalysisTests22.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests22);
        org.junit.rules.RuleChain ruleChain26 = kuromojiAnalysisTests22.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain26;
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.badapples", indexReader29, 0, postingsEnum31, postingsEnum32, true);
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.junit.rules.TestRule testRule37 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.assertPathHasBeenCleared("<unknown>");
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("enwiki.random.lines.txt", postingsEnum41, postingsEnum42, true);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) true);
    }

    @Test
    public void test3917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3917");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("hi!", (float) 100L, (float) (short) 1, (float) 0);
    }

    @Test
    public void test3918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3918");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (double) '4', (double) 5);
    }

    @Test
    public void test3919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3919");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader9, (int) (byte) -1, postingsEnum11, postingsEnum12, false);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader16, (int) (short) -1, postingsEnum18, postingsEnum19);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests22 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule23 = kuromojiAnalysisTests22.ruleChain;
        kuromojiAnalysisTests22.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests22);
        org.junit.rules.RuleChain ruleChain26 = kuromojiAnalysisTests22.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain26;
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader29, (int) (byte) 100, postingsEnum31, postingsEnum32);
        org.apache.lucene.index.IndexReader indexReader35 = null;
        org.apache.lucene.index.Fields fields36 = null;
        org.apache.lucene.index.Fields fields37 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("", indexReader35, fields36, fields37, true);
        org.apache.lucene.index.NumericDocValues numericDocValues42 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues43 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.weekly", (int) (short) 100, numericDocValues42, numericDocValues43);
    }

    @Test
    public void test3920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3920");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 0.0f, (double) 0.0f);
    }

    @Test
    public void test3921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3921");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (short) 100, 1.0d);
    }

    @Test
    public void test3922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3922");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.nightly", (double) 100, (double) 0L, (double) (-1.0f));
    }

    @Test
    public void test3923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3923");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.nightly", indexReader10, (int) (byte) -1, postingsEnum12, postingsEnum13, false);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader17, (int) (short) -1, postingsEnum19, postingsEnum20);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule24 = kuromojiAnalysisTests23.ruleChain;
        kuromojiAnalysisTests23.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests23);
        org.junit.rules.RuleChain ruleChain27 = kuromojiAnalysisTests23.failureAndSuccessEvents;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain27;
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (short) 0);
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests35 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests35.tearDown();
        org.apache.lucene.index.IndexReader indexReader38 = null;
        org.apache.lucene.index.Terms terms39 = null;
        org.apache.lucene.index.Terms terms40 = null;
        kuromojiAnalysisTests35.assertTermsEquals("tests.failfast", indexReader38, terms39, terms40, false);
        org.apache.lucene.index.IndexReader indexReader44 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum46 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum47 = null;
        kuromojiAnalysisTests35.assertDocsSkippingEquals("tests.nightly", indexReader44, (int) (byte) -1, postingsEnum46, postingsEnum47, false);
        org.junit.rules.RuleChain ruleChain50 = kuromojiAnalysisTests35.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader52 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum54 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum55 = null;
        kuromojiAnalysisTests35.assertPositionsSkippingEquals("hi!", indexReader52, 4, postingsEnum54, postingsEnum55);
        kuromojiAnalysisTests35.overrideTestDefaultQueryCache();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests35);
    }

    @Test
    public void test3924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3924");
        long[] longArray2 = new long[] { (byte) 0 };
        long[] longArray4 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray2, longArray4);
        long[] longArray9 = new long[] { (byte) 0 };
        long[] longArray11 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray9, longArray11);
        long[] longArray14 = new long[] { (byte) 0 };
        long[] longArray16 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray14, longArray16);
        org.junit.Assert.assertArrayEquals("", longArray9, longArray16);
        long[] longArray21 = new long[] { (byte) 0 };
        long[] longArray23 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray21, longArray23);
        long[] longArray26 = new long[] { (byte) 0 };
        long[] longArray28 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray26, longArray28);
        org.junit.Assert.assertArrayEquals("", longArray21, longArray28);
        org.junit.Assert.assertArrayEquals("tests.failfast", longArray9, longArray28);
        org.junit.Assert.assertArrayEquals("tests.failfast", longArray2, longArray9);
        long[] longArray33 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(longArray2, longArray33);
    }

    @Test
    public void test3925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3925");
        java.io.Serializable[] serializableArray3 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet4 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray3);
        java.io.Serializable[] serializableArray5 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet6 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray5);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray3, (java.lang.Object[]) serializableArray5);
        java.util.concurrent.ExecutorService[] executorServiceArray8 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean9 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray8);
        boolean boolean10 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray8);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray3, (java.lang.Object[]) executorServiceArray8);
        org.junit.Assert.assertNotNull("tests.nightly", (java.lang.Object) executorServiceArray8);
        java.io.Serializable[] serializableArray17 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet18 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray17);
        java.io.Serializable[] serializableArray20 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet21 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray20);
        java.io.Serializable[] serializableArray22 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet23 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray22);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray20, (java.lang.Object[]) serializableArray22);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray17, (java.lang.Object[]) serializableArray22);
        java.io.Serializable[] serializableArray27 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet28 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray27);
        java.io.Serializable[] serializableArray30 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet31 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray30);
        java.io.Serializable[] serializableArray32 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet33 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray32);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray30, (java.lang.Object[]) serializableArray32);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray27, (java.lang.Object[]) serializableArray32);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray17, (java.lang.Object[]) serializableArray27);
        java.util.concurrent.ExecutorService[] executorServiceArray37 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean38 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray37);
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) serializableArray17, (java.lang.Object[]) executorServiceArray37);
        java.io.Serializable[] serializableArray41 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet42 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray41);
        java.io.Serializable[] serializableArray44 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet45 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray44);
        java.io.Serializable[] serializableArray47 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet48 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray47);
        java.io.Serializable[] serializableArray49 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet50 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray49);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray47, (java.lang.Object[]) serializableArray49);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray44, (java.lang.Object[]) serializableArray49);
        org.junit.Assert.assertArrayEquals("tests.nightly", (java.lang.Object[]) serializableArray41, (java.lang.Object[]) serializableArray49);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray17, (java.lang.Object[]) serializableArray41);
        java.util.concurrent.ExecutorService[] executorServiceArray55 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean56 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray55);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", (java.lang.Object[]) serializableArray17, (java.lang.Object[]) executorServiceArray55);
        java.lang.Class<?> wildcardClass58 = executorServiceArray55.getClass();
        org.junit.Assert.assertNotSame((java.lang.Object) executorServiceArray8, (java.lang.Object) wildcardClass58);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests61 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests61.tearDown();
        org.apache.lucene.index.IndexReader indexReader64 = null;
        org.apache.lucene.index.Terms terms65 = null;
        org.apache.lucene.index.Terms terms66 = null;
        kuromojiAnalysisTests61.assertTermsEquals("tests.failfast", indexReader64, terms65, terms66, false);
        org.apache.lucene.index.IndexReader indexReader70 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum72 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum73 = null;
        kuromojiAnalysisTests61.assertDocsSkippingEquals("tests.nightly", indexReader70, (int) (byte) -1, postingsEnum72, postingsEnum73, false);
        org.apache.lucene.index.IndexReader indexReader77 = null;
        org.apache.lucene.index.Terms terms78 = null;
        org.apache.lucene.index.Terms terms79 = null;
        kuromojiAnalysisTests61.assertTermsEquals("", indexReader77, terms78, terms79, true);
        org.apache.lucene.index.IndexReader indexReader83 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum85 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum86 = null;
        kuromojiAnalysisTests61.assertDocsSkippingEquals("<unknown>", indexReader83, (int) (byte) 100, postingsEnum85, postingsEnum86, false);
        kuromojiAnalysisTests61.assertPathHasBeenCleared("random");
        org.junit.rules.TestRule testRule91 = kuromojiAnalysisTests61.ruleChain;
        org.junit.Assert.assertNotNull((java.lang.Object) testRule91);
        org.apache.lucene.util.LuceneTestCase.classRules = testRule91;
        java.lang.Class<?> wildcardClass94 = testRule91.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray95 = new java.lang.reflect.GenericDeclaration[] { wildcardClass94 };
        java.util.List<java.lang.reflect.GenericDeclaration> genericDeclarationList96 = org.elasticsearch.test.ESTestCase.randomSubsetOf(0, genericDeclarationArray95);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.weekly", (java.lang.Object[]) executorServiceArray8, (java.lang.Object[]) genericDeclarationArray95);
    }

    @Test
    public void test3926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3926");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) '4', (double) ' ');
    }

    @Test
    public void test3927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3927");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (short) 1, (long) (short) 10);
    }

    @Test
    public void test3928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3928");
        java.lang.String[] strArray7 = new java.lang.String[] { "<unknown>", "tests.weekly", "enwiki.random.lines.txt", "tests.monster", "tests.weekly", "europarl.lines.txt.gz" };
        java.util.Set<java.lang.String> strSet8 = org.apache.lucene.util.LuceneTestCase.asSet(strArray7);
        java.util.Set<java.lang.String> strSet9 = org.apache.lucene.util.LuceneTestCase.asSet(strArray7);
        java.util.Set<java.lang.String> strSet10 = org.apache.lucene.util.LuceneTestCase.asSet(strArray7);
        java.io.Serializable[] serializableArray11 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet12 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray11);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.slow", (java.lang.Object[]) strArray7, (java.lang.Object[]) serializableArray11);
    }

    @Test
    public void test3929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3929");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", 0L, (long) (short) -1);
    }

    @Test
    public void test3930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3930");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("", indexReader6, (int) (byte) -1, postingsEnum8, postingsEnum9, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule13 = kuromojiAnalysisTests12.ruleChain;
        kuromojiAnalysisTests12.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests12.tearDown();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests12);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.monster", (java.lang.Object) kuromojiAnalysisTests12);
    }

    @Test
    public void test3931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3931");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        org.apache.lucene.index.Fields fields6 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("enwiki.random.lines.txt", indexReader4, fields5, fields6, true);
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (byte) 1);
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.monster", indexReader17, 10, postingsEnum19, postingsEnum20, true);
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("europarl.lines.txt.gz", indexReader24, 0, postingsEnum26, postingsEnum27, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotNull("tests.badapples", (java.lang.Object) postingsEnum27);
    }

    @Test
    public void test3932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3932");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((double) 1L, (double) '#', (double) 100.0f);
    }

    @Test
    public void test3933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3933");
        java.io.Serializable[] serializableArray5 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet6 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray5);
        java.io.Serializable[] serializableArray8 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet9 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray8);
        java.io.Serializable[] serializableArray10 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet11 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray10);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray8, (java.lang.Object[]) serializableArray10);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray5, (java.lang.Object[]) serializableArray10);
        java.io.Serializable[] serializableArray15 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet16 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray15);
        java.io.Serializable[] serializableArray18 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet19 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray18);
        java.io.Serializable[] serializableArray20 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet21 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray20);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray18, (java.lang.Object[]) serializableArray20);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray15, (java.lang.Object[]) serializableArray20);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray5, (java.lang.Object[]) serializableArray15);
        java.util.concurrent.ExecutorService[] executorServiceArray25 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean26 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray25);
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) serializableArray5, (java.lang.Object[]) executorServiceArray25);
        java.util.concurrent.ExecutorService[] executorServiceArray28 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean29 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray28);
        java.io.Serializable[] serializableArray31 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet32 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray31);
        java.io.Serializable[] serializableArray34 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet35 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray34);
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet38 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray37);
        java.io.Serializable[] serializableArray39 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet40 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray39);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray37, (java.lang.Object[]) serializableArray39);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray34, (java.lang.Object[]) serializableArray39);
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) serializableArray31, (java.lang.Object[]) serializableArray39);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray28, (java.lang.Object[]) serializableArray31);
        boolean boolean45 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray28);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", (java.lang.Object[]) executorServiceArray25, (java.lang.Object[]) executorServiceArray28);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests47 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader49 = null;
        org.apache.lucene.index.Terms terms50 = null;
        org.apache.lucene.index.Terms terms51 = null;
        kuromojiAnalysisTests47.assertTermsEquals("", indexReader49, terms50, terms51, false);
        kuromojiAnalysisTests47.ensureCleanedUp();
        kuromojiAnalysisTests47.ensureCheckIndexPassed();
        kuromojiAnalysisTests47.assertPathHasBeenCleared("enwiki.random.lines.txt");
        kuromojiAnalysisTests47.setIndexWriterMaxDocs((-1));
        kuromojiAnalysisTests47.setIndexWriterMaxDocs((int) '4');
        org.apache.lucene.index.IndexReader indexReader63 = null;
        org.apache.lucene.index.Terms terms64 = null;
        org.apache.lucene.index.Terms terms65 = null;
        kuromojiAnalysisTests47.assertTermsEquals("tests.badapples", indexReader63, terms64, terms65, false);
        org.apache.lucene.index.IndexReader indexReader69 = null;
        org.apache.lucene.index.Fields fields70 = null;
        org.apache.lucene.index.Fields fields71 = null;
        kuromojiAnalysisTests47.assertFieldsEquals("", indexReader69, fields70, fields71, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", (java.lang.Object) executorServiceArray25, (java.lang.Object) fields71);
    }

    @Test
    public void test3934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3934");
        short[] shortArray1 = null;
        short[] shortArray3 = new short[] {};
        short[] shortArray4 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray3, shortArray4);
        short[] shortArray7 = new short[] {};
        short[] shortArray8 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray7, shortArray8);
        org.junit.Assert.assertArrayEquals(shortArray3, shortArray7);
        short[] shortArray13 = new short[] {};
        short[] shortArray14 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray13, shortArray14);
        short[] shortArray18 = new short[] {};
        short[] shortArray19 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray18, shortArray19);
        short[] shortArray22 = new short[] {};
        short[] shortArray23 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray22, shortArray23);
        org.junit.Assert.assertArrayEquals(shortArray18, shortArray22);
        short[] shortArray27 = new short[] {};
        short[] shortArray28 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray27, shortArray28);
        short[] shortArray31 = new short[] {};
        short[] shortArray32 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray31, shortArray32);
        org.junit.Assert.assertArrayEquals(shortArray27, shortArray31);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray18, shortArray31);
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray13, shortArray31);
        short[] shortArray39 = new short[] {};
        short[] shortArray40 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray39, shortArray40);
        short[] shortArray44 = new short[] {};
        short[] shortArray45 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray44, shortArray45);
        short[] shortArray48 = new short[] {};
        short[] shortArray49 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray48, shortArray49);
        org.junit.Assert.assertArrayEquals(shortArray44, shortArray48);
        short[] shortArray53 = new short[] {};
        short[] shortArray54 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray53, shortArray54);
        short[] shortArray57 = new short[] {};
        short[] shortArray58 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray57, shortArray58);
        org.junit.Assert.assertArrayEquals(shortArray53, shortArray57);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray44, shortArray57);
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray39, shortArray57);
        org.junit.Assert.assertArrayEquals(shortArray31, shortArray39);
        org.junit.Assert.assertArrayEquals(shortArray3, shortArray31);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("hi!", shortArray1, shortArray3);
    }

    @Test
    public void test3935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3935");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (long) (byte) 0, (long) (byte) -1);
    }

    @Test
    public void test3936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3936");
        float[] floatArray9 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray16 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray9, floatArray16, (float) (byte) 100);
        float[] floatArray26 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray33 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray26, floatArray33, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray16, floatArray33, 1.0f);
        org.junit.Assert.assertNotNull("", (java.lang.Object) floatArray16);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.monster", (java.lang.Object) "");
    }

    @Test
    public void test3937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3937");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 100.0f, (double) 10.0f);
    }

    @Test
    public void test3938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3938");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) 5, (long) (short) 10);
    }

    @Test
    public void test3939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3939");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader9, (int) (byte) -1, postingsEnum11, postingsEnum12, false);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader16, (int) (short) -1, postingsEnum18, postingsEnum19);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests22 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule23 = kuromojiAnalysisTests22.ruleChain;
        kuromojiAnalysisTests22.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests22);
        org.junit.rules.RuleChain ruleChain26 = kuromojiAnalysisTests22.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain26;
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.badapples", indexReader29, 0, postingsEnum31, postingsEnum32, true);
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.junit.rules.TestRule testRule37 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.apache.lucene.index.NumericDocValues numericDocValues41 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues42 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("enwiki.random.lines.txt", (-1), numericDocValues41, numericDocValues42);
    }

    @Test
    public void test3940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3940");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests8 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule9 = kuromojiAnalysisTests8.ruleChain;
        kuromojiAnalysisTests8.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests8.tearDown();
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        kuromojiAnalysisTests8.assertDocsEnumEquals("<unknown>", postingsEnum13, postingsEnum14, true);
        kuromojiAnalysisTests8.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests8.setUp();
        kuromojiAnalysisTests8.ensureCleanedUp();
        kuromojiAnalysisTests8.overrideTestDefaultQueryCache();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("random", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests8);
    }

    @Test
    public void test3941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3941");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule1 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.tearDown();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) (-1));
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.NumericDocValues numericDocValues11 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues12 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("europarl.lines.txt.gz", (int) '#', numericDocValues11, numericDocValues12);
    }

    @Test
    public void test3942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3942");
        short[] shortArray3 = new short[] {};
        short[] shortArray4 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray3, shortArray4);
        short[] shortArray7 = new short[] {};
        short[] shortArray8 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray7, shortArray8);
        org.junit.Assert.assertArrayEquals(shortArray3, shortArray7);
        short[] shortArray12 = new short[] {};
        short[] shortArray13 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray12, shortArray13);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray3, shortArray13);
        short[] shortArray19 = new short[] {};
        short[] shortArray20 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray19, shortArray20);
        short[] shortArray23 = new short[] {};
        short[] shortArray24 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray23, shortArray24);
        org.junit.Assert.assertArrayEquals(shortArray19, shortArray23);
        short[] shortArray28 = new short[] {};
        short[] shortArray29 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray28, shortArray29);
        short[] shortArray32 = new short[] {};
        short[] shortArray33 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray32, shortArray33);
        org.junit.Assert.assertArrayEquals(shortArray28, shortArray32);
        org.junit.Assert.assertArrayEquals("<unknown>", shortArray19, shortArray32);
        short[] shortArray38 = new short[] {};
        short[] shortArray39 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray38, shortArray39);
        org.junit.Assert.assertArrayEquals(shortArray32, shortArray38);
        short[] shortArray44 = new short[] {};
        short[] shortArray45 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray44, shortArray45);
        short[] shortArray48 = new short[] {};
        short[] shortArray49 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray48, shortArray49);
        org.junit.Assert.assertArrayEquals(shortArray44, shortArray48);
        short[] shortArray53 = new short[] {};
        short[] shortArray54 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray53, shortArray54);
        short[] shortArray57 = new short[] {};
        short[] shortArray58 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray57, shortArray58);
        org.junit.Assert.assertArrayEquals(shortArray53, shortArray57);
        org.junit.Assert.assertArrayEquals("tests.nightly", shortArray44, shortArray57);
        short[] shortArray64 = new short[] {};
        short[] shortArray65 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray64, shortArray65);
        short[] shortArray68 = new short[] {};
        short[] shortArray69 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray68, shortArray69);
        org.junit.Assert.assertArrayEquals(shortArray64, shortArray68);
        short[] shortArray73 = new short[] {};
        short[] shortArray74 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray73, shortArray74);
        short[] shortArray77 = new short[] {};
        short[] shortArray78 = new short[] {};
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray77, shortArray78);
        org.junit.Assert.assertArrayEquals(shortArray73, shortArray77);
        org.junit.Assert.assertArrayEquals("<unknown>", shortArray64, shortArray77);
        org.junit.Assert.assertArrayEquals(shortArray57, shortArray77);
        org.junit.Assert.assertArrayEquals("<unknown>", shortArray32, shortArray57);
        org.junit.Assert.assertArrayEquals(shortArray3, shortArray57);
        short[] shortArray85 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", shortArray57, shortArray85);
    }

    @Test
    public void test3943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3943");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.weekly", (double) 10.0f, 0.0d);
    }

    @Test
    public void test3944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3944");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(1.0d, (double) (byte) 0);
    }

    @Test
    public void test3945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3945");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.nightly", indexReader10, (int) (byte) -1, postingsEnum12, postingsEnum13, false);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader17, (int) (short) -1, postingsEnum19, postingsEnum20);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule24 = kuromojiAnalysisTests23.ruleChain;
        kuromojiAnalysisTests23.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests23);
        org.junit.rules.RuleChain ruleChain27 = kuromojiAnalysisTests23.failureAndSuccessEvents;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain27;
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.badapples", indexReader30, 0, postingsEnum32, postingsEnum33, true);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.junit.rules.TestRule testRule37 = kuromojiAnalysisTests1.ruleChain;
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.awaitsfix", indexReader39, (int) (byte) 0, postingsEnum41, postingsEnum42);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.junit.rules.TestRule testRule45 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests47 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader49 = null;
        org.apache.lucene.index.Terms terms50 = null;
        org.apache.lucene.index.Terms terms51 = null;
        kuromojiAnalysisTests47.assertTermsEquals("", indexReader49, terms50, terms51, false);
        kuromojiAnalysisTests47.ensureCheckIndexPassed();
        kuromojiAnalysisTests47.tearDown();
        kuromojiAnalysisTests47.tearDown();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests47);
    }

    @Test
    public void test3946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3946");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.monster", 0.0d, (double) (short) -1, (double) 100L);
    }

    @Test
    public void test3947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3947");
        float[] floatArray7 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray14 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray7, floatArray14, (float) (byte) 100);
        float[] floatArray24 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray31 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray24, floatArray31, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray14, floatArray31, 1.0f);
        float[] floatArray43 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray50 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray43, floatArray50, (float) (byte) 100);
        float[] floatArray60 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray67 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray60, floatArray67, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray50, floatArray67, 1.0f);
        float[] floatArray79 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray86 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray79, floatArray86, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray67, floatArray86, (float) (byte) 1);
        org.junit.Assert.assertArrayEquals(floatArray14, floatArray67, 10.0f);
        float[] floatArray93 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(floatArray67, floatArray93, (float) 2);
    }

    @Test
    public void test3948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3948");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.nightly", (long) (byte) 100, (long) (byte) 10);
    }

    @Test
    public void test3949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3949");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(0.0d, (double) 1);
    }

    @Test
    public void test3950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3950");
        java.lang.Object[] objArray1 = null;
        java.io.Serializable[] serializableArray3 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet4 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray3);
        java.io.Serializable[] serializableArray5 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet6 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray5);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray3, (java.lang.Object[]) serializableArray5);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("hi!", objArray1, (java.lang.Object[]) serializableArray5);
    }

    @Test
    public void test3951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3951");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Terms terms3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader2, terms3, terms4, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.assertPathHasBeenCleared("enwiki.random.lines.txt");
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.junit.rules.TestRule testRule12 = kuromojiAnalysisTests0.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test3952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3952");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 0, (double) (-1.0f));
    }

    @Test
    public void test3953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3953");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", 1.0f, 100.0f, (float) '4');
    }

    @Test
    public void test3954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3954");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.junit.rules.TestRule testRule5 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        java.lang.String str7 = kuromojiAnalysisTests1.getTestName();
        int[] intArray9 = new int[] {};
        int[] intArray10 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray9, intArray10);
        int[] intArray13 = new int[] {};
        int[] intArray14 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray13, intArray14);
        org.junit.Assert.assertArrayEquals(intArray10, intArray13);
        int[] intArray20 = new int[] {};
        int[] intArray21 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray20, intArray21);
        int[] intArray24 = new int[] {};
        int[] intArray25 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray24, intArray25);
        org.junit.Assert.assertArrayEquals(intArray21, intArray24);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray21, (java.lang.Object) 100.0d);
        int[] intArray31 = new int[] {};
        int[] intArray32 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray31, intArray32);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray21, intArray31);
        int[] intArray36 = new int[] {};
        int[] intArray37 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray36, intArray37);
        int[] intArray43 = new int[] {};
        int[] intArray44 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray43, intArray44);
        int[] intArray47 = new int[] {};
        int[] intArray48 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray47, intArray48);
        org.junit.Assert.assertArrayEquals(intArray44, intArray47);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray44, (java.lang.Object) 100.0d);
        int[] intArray56 = new int[] {};
        int[] intArray57 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray56, intArray57);
        int[] intArray60 = new int[] {};
        int[] intArray61 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray60, intArray61);
        org.junit.Assert.assertArrayEquals(intArray57, intArray60);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray57, (java.lang.Object) 100.0d);
        int[] intArray67 = new int[] {};
        int[] intArray68 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray67, intArray68);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray57, intArray67);
        org.junit.Assert.assertArrayEquals("random", intArray44, intArray57);
        int[] intArray72 = new int[] {};
        org.junit.Assert.assertArrayEquals(intArray57, intArray72);
        int[] intArray75 = new int[] {};
        int[] intArray76 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray75, intArray76);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray57, intArray76);
        org.junit.Assert.assertArrayEquals(intArray37, intArray57);
        int[] intArray81 = new int[] {};
        int[] intArray82 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray81, intArray82);
        org.junit.Assert.assertArrayEquals(intArray57, intArray81);
        int[] intArray86 = new int[] {};
        int[] intArray87 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray86, intArray87);
        org.junit.Assert.assertArrayEquals(intArray81, intArray87);
        org.junit.Assert.assertArrayEquals(intArray31, intArray87);
        org.junit.Assert.assertArrayEquals(intArray10, intArray31);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.monster", (java.lang.Object) str7, (java.lang.Object) intArray10);
    }

    @Test
    public void test3955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3955");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) 10, 0.0f, (float) 2);
    }

    @Test
    public void test3956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3956");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1);
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        kuromojiAnalysisTests1.assertTermsEquals("random", indexReader6, terms7, terms8, false);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.junit.rules.RuleChain ruleChain13 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.apache.lucene.index.NumericDocValues numericDocValues16 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues17 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocValuesEquals("random", (int) (byte) 10, numericDocValues16, numericDocValues17);
    }

    @Test
    public void test3957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3957");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule1 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain3 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests5 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule6 = kuromojiAnalysisTests5.ruleChain;
        kuromojiAnalysisTests5.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests5);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests5.assertTermsEquals("random", indexReader10, terms11, terms12, false);
        org.junit.rules.RuleChain ruleChain15 = kuromojiAnalysisTests5.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement16 = null;
        org.junit.runner.Description description17 = null;
        org.junit.runners.model.Statement statement18 = ruleChain15.apply(statement16, description17);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule21 = kuromojiAnalysisTests20.ruleChain;
        kuromojiAnalysisTests20.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests20);
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.Terms terms26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        kuromojiAnalysisTests20.assertTermsEquals("random", indexReader25, terms26, terms27, false);
        org.junit.rules.RuleChain ruleChain30 = kuromojiAnalysisTests20.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement31 = null;
        org.junit.runner.Description description32 = null;
        org.junit.runners.model.Statement statement33 = ruleChain30.apply(statement31, description32);
        org.junit.runner.Description description34 = null;
        org.junit.runners.model.Statement statement35 = ruleChain15.apply(statement33, description34);
        org.junit.rules.TestRule testRule36 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.junit.rules.RuleChain ruleChain37 = org.junit.rules.RuleChain.outerRule(testRule36);
        org.junit.rules.RuleChain ruleChain38 = ruleChain15.around(testRule36);
        org.junit.rules.RuleChain ruleChain39 = ruleChain3.around((org.junit.rules.TestRule) ruleChain15);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain3;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests41 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests41.tearDown();
        org.apache.lucene.index.IndexReader indexReader44 = null;
        org.apache.lucene.index.Fields fields45 = null;
        org.apache.lucene.index.Fields fields46 = null;
        kuromojiAnalysisTests41.assertFieldsEquals("enwiki.random.lines.txt", indexReader44, fields45, fields46, true);
        kuromojiAnalysisTests41.setUp();
        kuromojiAnalysisTests41.setIndexWriterMaxDocs((int) (byte) 1);
        org.apache.lucene.index.IndexReader indexReader53 = null;
        org.apache.lucene.index.Fields fields54 = null;
        org.apache.lucene.index.Fields fields55 = null;
        kuromojiAnalysisTests41.assertFieldsEquals("enwiki.random.lines.txt", indexReader53, fields54, fields55, false);
        org.junit.rules.TestRule testRule58 = kuromojiAnalysisTests41.ruleChain;
        java.lang.String str59 = kuromojiAnalysisTests41.getTestName();
        org.junit.rules.RuleChain ruleChain60 = kuromojiAnalysisTests41.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain61 = ruleChain3.around((org.junit.rules.TestRule) ruleChain60);
        org.junit.rules.TestRule testRule62 = null;
        org.junit.rules.RuleChain ruleChain63 = org.junit.rules.RuleChain.outerRule(testRule62);
        org.junit.rules.RuleChain ruleChain64 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain63);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests66 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule67 = kuromojiAnalysisTests66.ruleChain;
        kuromojiAnalysisTests66.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests66);
        org.junit.rules.RuleChain ruleChain70 = kuromojiAnalysisTests66.failureAndSuccessEvents;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain70;
        org.junit.rules.RuleChain ruleChain72 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain70);
        org.junit.rules.RuleChain ruleChain73 = ruleChain64.around((org.junit.rules.TestRule) ruleChain72);
        org.junit.rules.RuleChain ruleChain74 = ruleChain3.around((org.junit.rules.TestRule) ruleChain73);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) ruleChain3);
    }

    @Test
    public void test3958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3958");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader9, (int) (byte) -1, postingsEnum11, postingsEnum12, false);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("random", indexReader16, (int) ' ', postingsEnum18, postingsEnum19, true);
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("<unknown>", indexReader24, (int) (short) 100, postingsEnum26, postingsEnum27, false);
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.failfast", postingsEnum31, postingsEnum32, false);
        org.junit.rules.TestRule testRule35 = kuromojiAnalysisTests0.ruleChain;
        byte[] byteArray39 = new byte[] {};
        byte[] byteArray40 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray39, byteArray40);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray45 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray44, byteArray45);
        byte[] byteArray48 = new byte[] {};
        byte[] byteArray49 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray48, byteArray49);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray44, byteArray48);
        byte[] byteArray54 = new byte[] {};
        byte[] byteArray55 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray54, byteArray55);
        byte[] byteArray58 = new byte[] {};
        byte[] byteArray59 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray58, byteArray59);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray54, byteArray58);
        org.junit.Assert.assertArrayEquals(byteArray48, byteArray54);
        org.junit.Assert.assertArrayEquals("tests.slow", byteArray40, byteArray48);
        byte[] byteArray66 = new byte[] {};
        byte[] byteArray67 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray66, byteArray67);
        byte[] byteArray70 = new byte[] {};
        byte[] byteArray71 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray70, byteArray71);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray66, byteArray70);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", byteArray40, byteArray66);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) testRule35, (java.lang.Object) byteArray40);
    }

    @Test
    public void test3959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3959");
        char[] charArray3 = new char[] {};
        char[] charArray4 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray3, charArray4);
        char[] charArray6 = new char[] {};
        char[] charArray7 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray6, charArray7);
        org.junit.Assert.assertArrayEquals(charArray4, charArray7);
        char[] charArray10 = new char[] {};
        char[] charArray11 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray10, charArray11);
        char[] charArray13 = new char[] {};
        char[] charArray14 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray13, charArray14);
        org.junit.Assert.assertArrayEquals(charArray11, charArray14);
        org.junit.Assert.assertArrayEquals("random", charArray4, charArray11);
        char[] charArray18 = new char[] {};
        char[] charArray19 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray18, charArray19);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", charArray11, charArray19);
        char[] charArray23 = new char[] {};
        char[] charArray24 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray23, charArray24);
        char[] charArray26 = new char[] {};
        char[] charArray27 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray26, charArray27);
        org.junit.Assert.assertArrayEquals(charArray24, charArray27);
        char[] charArray31 = new char[] {};
        char[] charArray32 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray31, charArray32);
        char[] charArray34 = new char[] {};
        char[] charArray35 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray34, charArray35);
        org.junit.Assert.assertArrayEquals(charArray32, charArray35);
        char[] charArray38 = new char[] {};
        char[] charArray39 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray38, charArray39);
        char[] charArray41 = new char[] {};
        char[] charArray42 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray41, charArray42);
        org.junit.Assert.assertArrayEquals(charArray39, charArray42);
        org.junit.Assert.assertArrayEquals("random", charArray32, charArray39);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", charArray27, charArray39);
        org.junit.Assert.assertArrayEquals(charArray11, charArray27);
        char[] charArray49 = new char[] {};
        char[] charArray50 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray49, charArray50);
        char[] charArray52 = new char[] {};
        char[] charArray53 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray52, charArray53);
        org.junit.Assert.assertArrayEquals(charArray50, charArray53);
        char[] charArray56 = new char[] {};
        char[] charArray57 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray56, charArray57);
        char[] charArray59 = new char[] {};
        char[] charArray60 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray59, charArray60);
        org.junit.Assert.assertArrayEquals(charArray57, charArray60);
        org.junit.Assert.assertArrayEquals("random", charArray50, charArray57);
        org.junit.Assert.assertArrayEquals("tests.nightly", charArray11, charArray57);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests66 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule67 = kuromojiAnalysisTests66.ruleChain;
        kuromojiAnalysisTests66.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests66);
        org.apache.lucene.index.IndexReader indexReader71 = null;
        org.apache.lucene.index.Terms terms72 = null;
        org.apache.lucene.index.Terms terms73 = null;
        kuromojiAnalysisTests66.assertTermsEquals("random", indexReader71, terms72, terms73, false);
        kuromojiAnalysisTests66.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum78 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum79 = null;
        kuromojiAnalysisTests66.assertDocsEnumEquals("tests.awaitsfix", postingsEnum78, postingsEnum79, false);
        java.lang.String str82 = kuromojiAnalysisTests66.getTestName();
        org.junit.Assert.assertNotEquals((java.lang.Object) "tests.nightly", (java.lang.Object) kuromojiAnalysisTests66);
        org.junit.rules.RuleChain ruleChain84 = kuromojiAnalysisTests66.failureAndSuccessEvents;
        org.apache.lucene.index.NumericDocValues numericDocValues87 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues88 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests66.assertDocValuesEquals("", (-1), numericDocValues87, numericDocValues88);
    }

    @Test
    public void test3960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3960");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.weekly", (long) 100, (long) (byte) 0);
    }

    @Test
    public void test3961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3961");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (-1L), (double) 2, (double) (short) 1);
    }

    @Test
    public void test3962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3962");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 5, (double) 100L, 0.0d);
    }

    @Test
    public void test3963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3963");
        float[] floatArray8 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray15 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray8, floatArray15, (float) (byte) 100);
        float[] floatArray26 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray33 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray26, floatArray33, (float) (byte) 100);
        float[] floatArray43 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray50 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray43, floatArray50, (float) (byte) 100);
        float[] floatArray60 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray67 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray60, floatArray67, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray50, floatArray67, 1.0f);
        org.junit.Assert.assertArrayEquals(floatArray33, floatArray67, 10.0f);
        float[] floatArray81 = new float[] { 3, 0.0f, 0, 1.0f, 1, ' ' };
        float[] floatArray88 = new float[] { (-1L), 10.0f, (-1.0f), 0.0f, (short) -1, 100L };
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray81, floatArray88, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", floatArray33, floatArray88, (float) 1);
        // during test generation this statement threw an exception of type org.junit.internal.ArrayComparisonFailure in error
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", floatArray8, floatArray88, (float) 10);
    }

    @Test
    public void test3964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3964");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (byte) 0, (long) 1);
    }

    @Test
    public void test3965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3965");
        int[] intArray3 = new int[] {};
        int[] intArray4 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray3, intArray4);
        int[] intArray7 = new int[] {};
        int[] intArray8 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray7, intArray8);
        org.junit.Assert.assertArrayEquals(intArray4, intArray7);
        org.junit.Assert.assertNotEquals("random", (java.lang.Object) intArray4, (java.lang.Object) 100.0d);
        int[] intArray14 = new int[] {};
        int[] intArray15 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray14, intArray15);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray4, intArray14);
        byte[] byteArray20 = new byte[] {};
        byte[] byteArray21 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray20, byteArray21);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray25 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray24, byteArray25);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray20, byteArray24);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests30 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule31 = kuromojiAnalysisTests30.ruleChain;
        kuromojiAnalysisTests30.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests30);
        org.apache.lucene.index.IndexReader indexReader35 = null;
        org.apache.lucene.index.Terms terms36 = null;
        org.apache.lucene.index.Terms terms37 = null;
        kuromojiAnalysisTests30.assertTermsEquals("random", indexReader35, terms36, terms37, false);
        org.junit.rules.RuleChain ruleChain40 = kuromojiAnalysisTests30.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain41 = kuromojiAnalysisTests30.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests43 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule44 = kuromojiAnalysisTests43.ruleChain;
        kuromojiAnalysisTests43.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests43);
        org.apache.lucene.index.IndexReader indexReader48 = null;
        org.apache.lucene.index.Terms terms49 = null;
        org.apache.lucene.index.Terms terms50 = null;
        kuromojiAnalysisTests43.assertTermsEquals("random", indexReader48, terms49, terms50, false);
        org.junit.rules.RuleChain ruleChain53 = kuromojiAnalysisTests43.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement54 = null;
        org.junit.runner.Description description55 = null;
        org.junit.runners.model.Statement statement56 = ruleChain53.apply(statement54, description55);
        kuromojiAnalysisTests30.failureAndSuccessEvents = ruleChain53;
        byte[] byteArray60 = new byte[] {};
        byte[] byteArray61 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray60, byteArray61);
        byte[] byteArray65 = new byte[] {};
        byte[] byteArray66 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray65, byteArray66);
        byte[] byteArray69 = new byte[] {};
        byte[] byteArray70 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray69, byteArray70);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray65, byteArray69);
        byte[] byteArray75 = new byte[] {};
        byte[] byteArray76 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray75, byteArray76);
        byte[] byteArray79 = new byte[] {};
        byte[] byteArray80 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray79, byteArray80);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray75, byteArray79);
        org.junit.Assert.assertArrayEquals(byteArray69, byteArray75);
        org.junit.Assert.assertArrayEquals("", byteArray60, byteArray69);
        org.junit.Assert.assertNotSame("tests.weekly", (java.lang.Object) kuromojiAnalysisTests30, (java.lang.Object) byteArray60);
        org.junit.Assert.assertArrayEquals(byteArray20, byteArray60);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) "tests.nightly", (java.lang.Object) byteArray60);
    }

    @Test
    public void test3966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3966");
        byte[] byteArray2 = new byte[] {};
        byte[] byteArray3 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray2, byteArray3);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray8 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray7, byteArray8);
        byte[] byteArray11 = new byte[] {};
        byte[] byteArray12 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray11, byteArray12);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray7, byteArray11);
        byte[] byteArray17 = new byte[] {};
        byte[] byteArray18 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray17, byteArray18);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray22 = new byte[] {};
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray21, byteArray22);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray17, byteArray21);
        org.junit.Assert.assertArrayEquals(byteArray11, byteArray17);
        org.junit.Assert.assertArrayEquals("tests.weekly", byteArray3, byteArray11);
        byte[] byteArray27 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(byteArray3, byteArray27);
    }

    @Test
    public void test3967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3967");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("enwiki.random.lines.txt", 0L, (long) (byte) -1);
    }

    @Test
    public void test3968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3968");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("enwiki.random.lines.txt", (float) (short) 1, (float) 100L, (float) 2);
    }

    @Test
    public void test3969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3969");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) 4, (float) (short) 10, (float) 1L);
    }

    @Test
    public void test3970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3970");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1);
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        kuromojiAnalysisTests1.assertTermsEquals("random", indexReader6, terms7, terms8, false);
        org.junit.rules.RuleChain ruleChain11 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.Terms terms14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        kuromojiAnalysisTests1.assertTermsEquals("europarl.lines.txt.gz", indexReader13, terms14, terms15, false);
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocsAndPositionsEnumEquals("", postingsEnum21, postingsEnum22);
    }

    @Test
    public void test3971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3971");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.Terms terms10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader9, terms10, terms11, false);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader18 = null;
        org.apache.lucene.index.Terms terms19 = null;
        org.apache.lucene.index.Terms terms20 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.monster", indexReader18, terms19, terms20, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        char[] charArray26 = new char[] {};
        char[] charArray27 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray26, charArray27);
        char[] charArray29 = new char[] {};
        char[] charArray30 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray29, charArray30);
        org.junit.Assert.assertArrayEquals(charArray27, charArray30);
        char[] charArray34 = new char[] {};
        char[] charArray35 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray34, charArray35);
        char[] charArray37 = new char[] {};
        char[] charArray38 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray37, charArray38);
        org.junit.Assert.assertArrayEquals(charArray35, charArray38);
        char[] charArray41 = new char[] {};
        char[] charArray42 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray41, charArray42);
        char[] charArray44 = new char[] {};
        char[] charArray45 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray44, charArray45);
        org.junit.Assert.assertArrayEquals(charArray42, charArray45);
        org.junit.Assert.assertArrayEquals("random", charArray35, charArray42);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", charArray30, charArray42);
        char[] charArray52 = new char[] {};
        char[] charArray53 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray52, charArray53);
        char[] charArray55 = new char[] {};
        char[] charArray56 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray55, charArray56);
        org.junit.Assert.assertArrayEquals(charArray53, charArray56);
        char[] charArray59 = new char[] {};
        char[] charArray60 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray59, charArray60);
        char[] charArray62 = new char[] {};
        char[] charArray63 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray62, charArray63);
        org.junit.Assert.assertArrayEquals(charArray60, charArray63);
        org.junit.Assert.assertArrayEquals("random", charArray53, charArray60);
        char[] charArray67 = new char[] {};
        char[] charArray68 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray67, charArray68);
        char[] charArray70 = new char[] {};
        char[] charArray71 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray70, charArray71);
        org.junit.Assert.assertArrayEquals(charArray68, charArray71);
        org.junit.Assert.assertArrayEquals("tests.nightly", charArray60, charArray71);
        org.junit.Assert.assertArrayEquals("hi!", charArray30, charArray71);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) charArray71);
    }

    @Test
    public void test3972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3972");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(10L, 0L);
    }

    @Test
    public void test3973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3973");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule1 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.tearDown();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) (-1));
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.badapples", indexReader7, (int) ' ', postingsEnum9, postingsEnum10);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotNull((java.lang.Object) indexReader7);
    }

    @Test
    public void test3974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3974");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) 10L, (float) 2, (float) 1L);
    }

    @Test
    public void test3975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3975");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", (double) (-1.0f), (double) 10L, (double) 1L);
    }

    @Test
    public void test3976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3976");
        double[] doubleArray3 = new double[] {};
        double[] doubleArray4 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray3, doubleArray4, (double) '4');
        double[] doubleArray7 = new double[] {};
        double[] doubleArray8 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray7, doubleArray8, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray3, doubleArray8, (double) (short) 10);
        double[] doubleArray13 = new double[] {};
        double[] doubleArray14 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray13, doubleArray14, (double) '4');
        double[] doubleArray17 = new double[] {};
        double[] doubleArray18 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray17, doubleArray18, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray13, doubleArray18, (double) (short) 10);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", doubleArray8, doubleArray13, (double) 4);
        double[] doubleArray25 = new double[] {};
        double[] doubleArray26 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray25, doubleArray26, (double) '4');
        double[] doubleArray29 = new double[] {};
        double[] doubleArray30 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray29, doubleArray30, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray26, doubleArray30, (double) (byte) -1);
        double[] doubleArray35 = new double[] {};
        double[] doubleArray36 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray35, doubleArray36, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray26, doubleArray35, (double) 2);
        org.junit.Assert.assertArrayEquals(doubleArray8, doubleArray26, 0.0d);
        double[] doubleArray44 = new double[] {};
        double[] doubleArray45 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray44, doubleArray45, (double) '4');
        double[] doubleArray48 = new double[] {};
        double[] doubleArray49 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray48, doubleArray49, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray44, doubleArray49, (double) (short) 10);
        double[] doubleArray54 = new double[] {};
        double[] doubleArray55 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray54, doubleArray55, (double) '4');
        double[] doubleArray58 = new double[] {};
        double[] doubleArray59 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray58, doubleArray59, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray54, doubleArray59, (double) (short) 10);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", doubleArray49, doubleArray54, (double) 4);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", doubleArray8, doubleArray49, (double) (byte) 100);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests68 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule69 = kuromojiAnalysisTests68.ruleChain;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule69;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule69;
        org.junit.rules.RuleChain ruleChain72 = org.junit.rules.RuleChain.outerRule(testRule69);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests73 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule74 = kuromojiAnalysisTests73.ruleChain;
        org.junit.rules.RuleChain ruleChain75 = org.junit.rules.RuleChain.outerRule(testRule74);
        org.junit.rules.RuleChain ruleChain76 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain75);
        org.junit.rules.RuleChain ruleChain77 = ruleChain72.around((org.junit.rules.TestRule) ruleChain76);
        org.junit.rules.RuleChain ruleChain78 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain72);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (java.lang.Object) (byte) 100, (java.lang.Object) ruleChain72);
    }

    @Test
    public void test3977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3977");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) ' ', (long) (short) -1);
    }

    @Test
    public void test3978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3978");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((double) 1L, 0.0d, (double) 5);
    }

    @Test
    public void test3979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3979");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", (double) 3, (double) (-1.0f));
    }

    @Test
    public void test3980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3980");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule3 = kuromojiAnalysisTests2.ruleChain;
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2);
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        org.apache.lucene.index.Terms terms9 = null;
        kuromojiAnalysisTests2.assertTermsEquals("random", indexReader7, terms8, terms9, false);
        kuromojiAnalysisTests2.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests2.assertDocsEnumEquals("tests.awaitsfix", postingsEnum14, postingsEnum15, false);
        org.junit.rules.TestRule testRule18 = kuromojiAnalysisTests2.ruleChain;
        org.junit.rules.RuleChain ruleChain19 = org.junit.rules.RuleChain.outerRule(testRule18);
        org.junit.rules.TestRule testRule20 = null;
        org.junit.rules.RuleChain ruleChain21 = ruleChain19.around(testRule20);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests23.tearDown();
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Fields fields27 = null;
        org.apache.lucene.index.Fields fields28 = null;
        kuromojiAnalysisTests23.assertFieldsEquals("enwiki.random.lines.txt", indexReader26, fields27, fields28, true);
        kuromojiAnalysisTests23.resetCheckIndexStatus();
        kuromojiAnalysisTests23.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader34 = null;
        org.apache.lucene.index.Fields fields35 = null;
        org.apache.lucene.index.Fields fields36 = null;
        kuromojiAnalysisTests23.assertFieldsEquals("tests.monster", indexReader34, fields35, fields36, false);
        org.junit.rules.RuleChain ruleChain39 = kuromojiAnalysisTests23.failureAndSuccessEvents;
        org.junit.Assert.assertNotNull("tests.weekly", (java.lang.Object) kuromojiAnalysisTests23);
        java.lang.Class<?> wildcardClass41 = kuromojiAnalysisTests23.getClass();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.monster", (java.lang.Object) ruleChain19, (java.lang.Object) kuromojiAnalysisTests23);
    }

    @Test
    public void test3981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3981");
        java.lang.Object[] objArray1 = null;
        java.io.Serializable[] serializableArray3 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet4 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray3);
        java.io.Serializable[] serializableArray6 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet7 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray6);
        java.io.Serializable[] serializableArray8 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet9 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray8);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray6, (java.lang.Object[]) serializableArray8);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray3, (java.lang.Object[]) serializableArray8);
        java.io.Serializable[] serializableArray14 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet15 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray14);
        java.io.Serializable[] serializableArray17 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet18 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray17);
        java.io.Serializable[] serializableArray19 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet20 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray19);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray17, (java.lang.Object[]) serializableArray19);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray14, (java.lang.Object[]) serializableArray19);
        java.io.Serializable[] serializableArray24 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet25 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray24);
        java.io.Serializable[] serializableArray27 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet28 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray27);
        java.io.Serializable[] serializableArray29 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet30 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray29);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray27, (java.lang.Object[]) serializableArray29);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray24, (java.lang.Object[]) serializableArray29);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray14, (java.lang.Object[]) serializableArray24);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray8, (java.lang.Object[]) serializableArray24);
        java.io.Serializable[] serializableArray38 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet39 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray38);
        java.io.Serializable[] serializableArray41 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet42 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray41);
        java.io.Serializable[] serializableArray43 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet44 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray43);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray41, (java.lang.Object[]) serializableArray43);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray38, (java.lang.Object[]) serializableArray43);
        java.io.Serializable[] serializableArray48 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet49 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray48);
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet52 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray51);
        java.io.Serializable[] serializableArray53 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet54 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray53);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray51, (java.lang.Object[]) serializableArray53);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray48, (java.lang.Object[]) serializableArray53);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray38, (java.lang.Object[]) serializableArray48);
        java.io.Serializable[] serializableArray60 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet61 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray60);
        java.io.Serializable[] serializableArray63 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet64 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray63);
        java.io.Serializable[] serializableArray65 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet66 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray65);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray63, (java.lang.Object[]) serializableArray65);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray60, (java.lang.Object[]) serializableArray65);
        java.io.Serializable[] serializableArray70 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet71 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray70);
        java.io.Serializable[] serializableArray73 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet74 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray73);
        java.io.Serializable[] serializableArray75 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet76 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray75);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray73, (java.lang.Object[]) serializableArray75);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray70, (java.lang.Object[]) serializableArray75);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray60, (java.lang.Object[]) serializableArray70);
        java.io.Serializable[] serializableArray81 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet82 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray81);
        java.io.Serializable[] serializableArray83 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet84 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray83);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray81, (java.lang.Object[]) serializableArray83);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray60, (java.lang.Object[]) serializableArray81);
        org.junit.Assert.assertEquals("tests.failfast", (java.lang.Object[]) serializableArray38, (java.lang.Object[]) serializableArray81);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray24, (java.lang.Object[]) serializableArray38);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", objArray1, (java.lang.Object[]) serializableArray38);
    }

    @Test
    public void test3982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3982");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1);
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.weekly", indexReader6, (int) (short) 1, postingsEnum8, postingsEnum9);
        java.lang.String str11 = kuromojiAnalysisTests1.getTestName();
        org.junit.rules.TestRule testRule12 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (byte) 10);
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.tearDown();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test3983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3983");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("hi!", (long) 10, (long) (short) 10);
    }

    @Test
    public void test3984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3984");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("enwiki.random.lines.txt", (double) 5, 100.0d, (double) 1.0f);
    }

    @Test
    public void test3985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3985");
        java.util.concurrent.ExecutorService executorService1 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray2 = new java.util.concurrent.ExecutorService[] { executorService1 };
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean4 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean5 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean6 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        short[] shortArray13 = new short[] { (short) 0, (byte) 10, (short) 10, (short) 0, (byte) 1 };
        short[][] shortArray14 = new short[][] { shortArray13 };
        short[][][] shortArray15 = new short[][][] { shortArray14 };
        java.util.List<short[][]> shortArrayList16 = org.elasticsearch.test.ESTestCase.randomSubsetOf(1, shortArray15);
        // during test generation this statement threw an exception of type org.junit.internal.ArrayComparisonFailure in error
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) executorServiceArray2, (java.lang.Object[]) shortArray15);
    }

    @Test
    public void test3986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3986");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) 4, (long) 0);
    }

    @Test
    public void test3987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3987");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.IndexReader indexReader2 = null;
        org.apache.lucene.index.Terms terms3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader2, terms3, terms4, false);
        kuromojiAnalysisTests0.setUp();
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("<unknown>", postingsEnum9, postingsEnum10, false);
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum17 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.maxfailures", indexReader14, 3, postingsEnum16, postingsEnum17);
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.junit.rules.RuleChain ruleChain20 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 10);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests23.tearDown();
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        org.apache.lucene.index.Terms terms28 = null;
        kuromojiAnalysisTests23.assertTermsEquals("tests.failfast", indexReader26, terms27, terms28, false);
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.Terms terms33 = null;
        org.apache.lucene.index.Terms terms34 = null;
        kuromojiAnalysisTests23.assertTermsEquals("", indexReader32, terms33, terms34, false);
        kuromojiAnalysisTests23.overrideTestDefaultQueryCache();
        java.lang.String str38 = kuromojiAnalysisTests23.getTestName();
        kuromojiAnalysisTests23.setIndexWriterMaxDocs(2);
        org.apache.lucene.index.IndexReader indexReader42 = null;
        org.apache.lucene.index.Fields fields43 = null;
        org.apache.lucene.index.Fields fields44 = null;
        kuromojiAnalysisTests23.assertFieldsEquals("tests.nightly", indexReader42, fields43, fields44, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) fields43);
    }

    @Test
    public void test3988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3988");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) 1, (long) '4');
    }

    @Test
    public void test3989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3989");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.nightly", indexReader10, (int) (byte) -1, postingsEnum12, postingsEnum13, false);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader17, (int) (short) -1, postingsEnum19, postingsEnum20);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule24 = kuromojiAnalysisTests23.ruleChain;
        kuromojiAnalysisTests23.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests23);
        org.junit.rules.RuleChain ruleChain27 = kuromojiAnalysisTests23.failureAndSuccessEvents;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain27;
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.badapples", indexReader30, 0, postingsEnum32, postingsEnum33, true);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) ' ');
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests41 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule42 = kuromojiAnalysisTests41.ruleChain;
        kuromojiAnalysisTests41.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests41.tearDown();
        kuromojiAnalysisTests41.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests41.setUp();
        kuromojiAnalysisTests41.ensureCleanedUp();
        kuromojiAnalysisTests41.setUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.maxfailures", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests41);
    }

    @Test
    public void test3990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3990");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", (double) 4, (double) (-1.0f));
    }

    @Test
    public void test3991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3991");
        short[][] shortArray1 = new short[][] {};
        short[][][] shortArray2 = new short[][][] { shortArray1 };
        java.util.Set<short[][]> shortArraySet3 = org.apache.lucene.util.LuceneTestCase.asSet(shortArray2);
        java.util.Set<short[][]> shortArraySet4 = org.apache.lucene.util.LuceneTestCase.asSet(shortArray2);
        java.lang.String[][][][] strArray6 = new java.lang.String[][][][] {};
        java.lang.String[][][][] strArray7 = new java.lang.String[][][][] {};
        java.lang.String[][][][] strArray8 = new java.lang.String[][][][] {};
        java.lang.String[][][][] strArray9 = new java.lang.String[][][][] {};
        java.lang.String[][][][][] strArray10 = new java.lang.String[][][][][] { strArray6, strArray7, strArray8, strArray9 };
        java.lang.String[][][][] strArray11 = new java.lang.String[][][][] {};
        java.lang.String[][][][] strArray12 = new java.lang.String[][][][] {};
        java.lang.String[][][][] strArray13 = new java.lang.String[][][][] {};
        java.lang.String[][][][] strArray14 = new java.lang.String[][][][] {};
        java.lang.String[][][][][] strArray15 = new java.lang.String[][][][][] { strArray11, strArray12, strArray13, strArray14 };
        java.lang.String[][][][] strArray16 = new java.lang.String[][][][] {};
        java.lang.String[][][][] strArray17 = new java.lang.String[][][][] {};
        java.lang.String[][][][] strArray18 = new java.lang.String[][][][] {};
        java.lang.String[][][][] strArray19 = new java.lang.String[][][][] {};
        java.lang.String[][][][][] strArray20 = new java.lang.String[][][][][] { strArray16, strArray17, strArray18, strArray19 };
        java.lang.String[][][][] strArray21 = new java.lang.String[][][][] {};
        java.lang.String[][][][] strArray22 = new java.lang.String[][][][] {};
        java.lang.String[][][][] strArray23 = new java.lang.String[][][][] {};
        java.lang.String[][][][] strArray24 = new java.lang.String[][][][] {};
        java.lang.String[][][][][] strArray25 = new java.lang.String[][][][][] { strArray21, strArray22, strArray23, strArray24 };
        java.lang.String[][][][] strArray26 = new java.lang.String[][][][] {};
        java.lang.String[][][][] strArray27 = new java.lang.String[][][][] {};
        java.lang.String[][][][] strArray28 = new java.lang.String[][][][] {};
        java.lang.String[][][][] strArray29 = new java.lang.String[][][][] {};
        java.lang.String[][][][][] strArray30 = new java.lang.String[][][][][] { strArray26, strArray27, strArray28, strArray29 };
        java.lang.String[][][][] strArray31 = new java.lang.String[][][][] {};
        java.lang.String[][][][] strArray32 = new java.lang.String[][][][] {};
        java.lang.String[][][][] strArray33 = new java.lang.String[][][][] {};
        java.lang.String[][][][] strArray34 = new java.lang.String[][][][] {};
        java.lang.String[][][][][] strArray35 = new java.lang.String[][][][][] { strArray31, strArray32, strArray33, strArray34 };
        java.lang.String[][][][][][] strArray36 = new java.lang.String[][][][][][] { strArray10, strArray15, strArray20, strArray25, strArray30, strArray35 };
        java.util.List<java.lang.String[][][][][]> strArrayList37 = org.elasticsearch.test.ESTestCase.randomSubsetOf(0, strArray36);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (java.lang.Object[]) shortArray2, (java.lang.Object[]) strArray36);
    }

    @Test
    public void test3992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3992");
        double[][] doubleArray0 = new double[][] {};
        java.util.Set<double[]> doubleArraySet1 = org.apache.lucene.util.LuceneTestCase.asSet(doubleArray0);
        java.io.Serializable[] serializableArray3 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet4 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray3);
        java.io.Serializable[] serializableArray5 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet6 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray5);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray3, (java.lang.Object[]) serializableArray5);
        java.util.concurrent.ExecutorService[] executorServiceArray8 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean9 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray8);
        boolean boolean10 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray8);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray3, (java.lang.Object[]) executorServiceArray8);
        boolean boolean12 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray8);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) doubleArray0, (java.lang.Object[]) executorServiceArray8);
        java.io.Serializable[] serializableArray17 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet18 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray17);
        java.io.Serializable[] serializableArray20 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet21 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray20);
        java.io.Serializable[] serializableArray22 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet23 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray22);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray20, (java.lang.Object[]) serializableArray22);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray17, (java.lang.Object[]) serializableArray22);
        java.io.Serializable[] serializableArray27 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet28 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray27);
        java.io.Serializable[] serializableArray30 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet31 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray30);
        java.io.Serializable[] serializableArray32 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet33 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray32);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray30, (java.lang.Object[]) serializableArray32);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray27, (java.lang.Object[]) serializableArray32);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray17, (java.lang.Object[]) serializableArray27);
        java.io.Serializable[] serializableArray39 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet40 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray39);
        java.io.Serializable[] serializableArray42 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet43 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray42);
        java.io.Serializable[] serializableArray44 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet45 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray44);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray42, (java.lang.Object[]) serializableArray44);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray39, (java.lang.Object[]) serializableArray44);
        java.io.Serializable[] serializableArray49 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet50 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray49);
        java.io.Serializable[] serializableArray52 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet53 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray52);
        java.io.Serializable[] serializableArray54 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet55 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray54);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray52, (java.lang.Object[]) serializableArray54);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray49, (java.lang.Object[]) serializableArray54);
        org.junit.Assert.assertArrayEquals("random", (java.lang.Object[]) serializableArray39, (java.lang.Object[]) serializableArray49);
        java.io.Serializable[] serializableArray60 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet61 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray60);
        java.io.Serializable[] serializableArray62 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet63 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray62);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray60, (java.lang.Object[]) serializableArray62);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray39, (java.lang.Object[]) serializableArray60);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray27, (java.lang.Object[]) serializableArray39);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray8, (java.lang.Object[]) serializableArray39);
        java.lang.CharSequence[] charSequenceArray74 = new java.lang.CharSequence[] { "tests.nightly", "europarl.lines.txt.gz", "tests.maxfailures", "tests.badapples", "tests.failfast" };
        java.util.Set<java.lang.CharSequence> charSequenceSet75 = org.apache.lucene.util.LuceneTestCase.asSet(charSequenceArray74);
        java.util.List<java.lang.CharSequence> charSequenceList76 = org.elasticsearch.test.ESTestCase.randomSubsetOf(4, charSequenceArray74);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray39, (java.lang.Object[]) charSequenceArray74);
    }

    @Test
    public void test3993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3993");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader3, fields4, fields5, true);
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.monster", postingsEnum9, postingsEnum10, true);
        kuromojiAnalysisTests0.ensureCleanedUp();
        java.lang.Object obj14 = null;
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests0, obj14);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests18 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests18.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests18, (java.lang.Object) "");
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        kuromojiAnalysisTests18.assertDocsEnumEquals("tests.nightly", postingsEnum23, postingsEnum24, true);
        org.junit.rules.RuleChain ruleChain27 = kuromojiAnalysisTests18.failureAndSuccessEvents;
        kuromojiAnalysisTests18.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.Fields fields31 = null;
        org.apache.lucene.index.Fields fields32 = null;
        kuromojiAnalysisTests18.assertFieldsEquals("tests.slow", indexReader30, fields31, fields32, false);
        kuromojiAnalysisTests18.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader37 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum39 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum40 = null;
        kuromojiAnalysisTests18.assertPositionsSkippingEquals("tests.awaitsfix", indexReader37, (int) 'a', postingsEnum39, postingsEnum40);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) 'a');
    }

    @Test
    public void test3994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3994");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests1);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.Terms terms9 = null;
        org.apache.lucene.index.Terms terms10 = null;
        kuromojiAnalysisTests1.assertTermsEquals("hi!", indexReader8, terms9, terms10, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.awaitsfix", (java.lang.Object) false);
    }

    @Test
    public void test3995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3995");
        long[] longArray3 = new long[] { (byte) 0 };
        long[] longArray5 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray3, longArray5);
        long[] longArray8 = new long[] { (byte) 0 };
        long[] longArray10 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray8, longArray10);
        org.junit.Assert.assertArrayEquals("", longArray3, longArray10);
        long[] longArray15 = new long[] { (byte) 0 };
        long[] longArray17 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray15, longArray17);
        long[] longArray20 = new long[] { (byte) 0 };
        long[] longArray22 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray20, longArray22);
        org.junit.Assert.assertArrayEquals(longArray15, longArray22);
        long[] longArray26 = new long[] { (byte) 0 };
        long[] longArray28 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray26, longArray28);
        long[] longArray31 = new long[] { (byte) 0 };
        long[] longArray33 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray31, longArray33);
        org.junit.Assert.assertArrayEquals(longArray26, longArray33);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", longArray15, longArray26);
        org.junit.Assert.assertArrayEquals(longArray10, longArray15);
        long[] longArray39 = new long[] { (byte) 0 };
        long[] longArray41 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray39, longArray41);
        long[] longArray44 = new long[] { (byte) 0 };
        long[] longArray46 = new long[] { (short) 0 };
        org.junit.Assert.assertArrayEquals(longArray44, longArray46);
        org.junit.Assert.assertArrayEquals(longArray39, longArray46);
        org.junit.Assert.assertArrayEquals(longArray10, longArray39);
        org.junit.Assert.assertNotNull((java.lang.Object) longArray39);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests51 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests51.tearDown();
        org.apache.lucene.index.IndexReader indexReader54 = null;
        org.apache.lucene.index.Terms terms55 = null;
        org.apache.lucene.index.Terms terms56 = null;
        kuromojiAnalysisTests51.assertTermsEquals("tests.failfast", indexReader54, terms55, terms56, false);
        org.apache.lucene.index.IndexReader indexReader60 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum62 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum63 = null;
        kuromojiAnalysisTests51.assertDocsSkippingEquals("tests.nightly", indexReader60, (int) (byte) -1, postingsEnum62, postingsEnum63, false);
        org.apache.lucene.index.IndexReader indexReader67 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum69 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum70 = null;
        kuromojiAnalysisTests51.assertDocsSkippingEquals("random", indexReader67, (int) ' ', postingsEnum69, postingsEnum70, true);
        org.apache.lucene.index.PostingsEnum postingsEnum74 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum75 = null;
        kuromojiAnalysisTests51.assertDocsEnumEquals("", postingsEnum74, postingsEnum75, true);
        org.junit.rules.TestRule testRule78 = kuromojiAnalysisTests51.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("hi!", (java.lang.Object) longArray39, (java.lang.Object) kuromojiAnalysisTests51);
    }

    @Test
    public void test3996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3996");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule3 = kuromojiAnalysisTests2.ruleChain;
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2);
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("tests.weekly", indexReader7, (int) (short) 1, postingsEnum9, postingsEnum10);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests12.tearDown();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests12.assertTermsEquals("tests.failfast", indexReader15, terms16, terms17, false);
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        kuromojiAnalysisTests12.assertDocsSkippingEquals("tests.nightly", indexReader21, (int) (byte) -1, postingsEnum23, postingsEnum24, false);
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        kuromojiAnalysisTests12.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader28, (int) (short) -1, postingsEnum30, postingsEnum31);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule35 = kuromojiAnalysisTests34.ruleChain;
        kuromojiAnalysisTests34.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests34);
        org.junit.rules.RuleChain ruleChain38 = kuromojiAnalysisTests34.failureAndSuccessEvents;
        kuromojiAnalysisTests12.failureAndSuccessEvents = ruleChain38;
        kuromojiAnalysisTests2.failureAndSuccessEvents = ruleChain38;
        org.apache.lucene.index.IndexReader indexReader42 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum44 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("tests.monster", indexReader42, (int) (byte) 1, postingsEnum44, postingsEnum45);
        org.junit.rules.RuleChain ruleChain47 = null;
        kuromojiAnalysisTests2.failureAndSuccessEvents = ruleChain47;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("", (java.lang.Object) kuromojiAnalysisTests2);
    }

    @Test
    public void test3997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3997");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", 100.0d, (double) '#');
    }

    @Test
    public void test3998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3998");
        double[] doubleArray0 = new double[] {};
        double[] doubleArray1 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray0, doubleArray1, (double) '4');
        double[] doubleArray6 = new double[] {};
        double[] doubleArray7 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray6, doubleArray7, (double) '4');
        double[] doubleArray10 = new double[] {};
        double[] doubleArray11 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray10, doubleArray11, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray7, doubleArray11, (double) (byte) -1);
        double[] doubleArray16 = new double[] {};
        double[] doubleArray17 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray16, doubleArray17, (double) '4');
        double[] doubleArray20 = new double[] {};
        double[] doubleArray21 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray20, doubleArray21, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray16, doubleArray21, (double) (short) 10);
        org.junit.Assert.assertArrayEquals(doubleArray7, doubleArray16, (double) 100);
        double[] doubleArray29 = new double[] {};
        double[] doubleArray30 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray29, doubleArray30, (double) '4');
        double[] doubleArray33 = new double[] {};
        double[] doubleArray34 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray33, doubleArray34, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray29, doubleArray34, (double) (short) 10);
        double[] doubleArray39 = new double[] {};
        double[] doubleArray40 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray39, doubleArray40, (double) '4');
        double[] doubleArray43 = new double[] {};
        double[] doubleArray44 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray43, doubleArray44, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray39, doubleArray44, (double) (short) 10);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", doubleArray34, doubleArray39, (double) 4);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", doubleArray7, doubleArray39, 0.0d);
        double[] doubleArray53 = new double[] {};
        double[] doubleArray54 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray53, doubleArray54, (double) '4');
        double[] doubleArray57 = new double[] {};
        double[] doubleArray58 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray57, doubleArray58, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray54, doubleArray58, (double) (byte) -1);
        org.junit.Assert.assertArrayEquals("", doubleArray39, doubleArray58, (double) 2);
        double[] doubleArray65 = new double[] {};
        double[] doubleArray66 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray65, doubleArray66, (double) '4');
        double[] doubleArray69 = new double[] {};
        double[] doubleArray70 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray69, doubleArray70, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray66, doubleArray70, (double) (byte) -1);
        double[] doubleArray75 = new double[] {};
        double[] doubleArray76 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray75, doubleArray76, (double) '4');
        double[] doubleArray79 = new double[] {};
        double[] doubleArray80 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray79, doubleArray80, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray75, doubleArray80, (double) (short) 10);
        org.junit.Assert.assertArrayEquals(doubleArray66, doubleArray75, (double) 100);
        org.junit.Assert.assertArrayEquals(doubleArray58, doubleArray66, (double) 3);
        org.junit.Assert.assertArrayEquals(doubleArray1, doubleArray58, 1.0d);
        double[] doubleArray91 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(doubleArray58, doubleArray91, 0.0d);
    }

    @Test
    public void test3999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test3999");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((double) (-1L), (double) (short) -1, (double) '4');
    }

    @Test
    public void test4000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest7.test4000");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Fields fields4 = null;
        org.apache.lucene.index.Fields fields5 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("enwiki.random.lines.txt", indexReader3, fields4, fields5, true);
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.monster", postingsEnum9, postingsEnum10, true);
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.apache.lucene.index.NumericDocValues numericDocValues18 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues19 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.monster", 0, numericDocValues18, numericDocValues19);
    }
}

