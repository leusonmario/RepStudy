import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ErrorTest8 {

    public static boolean debug = false;

    @Test
    public void test4001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4001");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (float) 2, (float) 5, (float) 1);
    }

    @Test
    public void test4002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4002");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((double) (byte) 1, 0.0d, 100.0d);
    }

    @Test
    public void test4003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4003");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 1.0f, (double) 1.0f);
    }

    @Test
    public void test4004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4004");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.nightly", (double) 3, 0.0d);
    }

    @Test
    public void test4005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4005");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum7 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum8 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.maxfailures", indexReader5, 0, postingsEnum7, postingsEnum8);
        kuromojiAnalysisTests1.tearDown();
        java.lang.String str11 = kuromojiAnalysisTests1.getTestName();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests12.ensureCheckIndexPassed();
        org.junit.rules.RuleChain ruleChain14 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain15 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain16 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain15);
        org.junit.rules.RuleChain ruleChain17 = ruleChain14.around((org.junit.rules.TestRule) ruleChain16);
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests12, (java.lang.Object) ruleChain17);
        org.junit.rules.TestRule testRule19 = kuromojiAnalysisTests12.ruleChain;
        org.junit.rules.RuleChain ruleChain20 = kuromojiAnalysisTests12.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.weekly", (java.lang.Object) str11, (java.lang.Object) kuromojiAnalysisTests12);
    }

    @Test
    public void test4006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4006");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.junit.rules.RuleChain ruleChain8 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement9 = null;
        org.junit.runner.Description description10 = null;
        org.junit.runners.model.Statement statement11 = ruleChain8.apply(statement9, description10);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests12.tearDown();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests12.assertTermsEquals("tests.failfast", indexReader15, terms16, terms17, false);
        kuromojiAnalysisTests12.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain22 = kuromojiAnalysisTests12.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain23 = ruleChain8.around((org.junit.rules.TestRule) ruleChain22);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain22;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests25 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests25.tearDown();
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.Terms terms29 = null;
        org.apache.lucene.index.Terms terms30 = null;
        kuromojiAnalysisTests25.assertTermsEquals("tests.failfast", indexReader28, terms29, terms30, false);
        kuromojiAnalysisTests25.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.PostingsEnum postingsEnum35 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum36 = null;
        kuromojiAnalysisTests25.assertDocsEnumEquals("europarl.lines.txt.gz", postingsEnum35, postingsEnum36, false);
        java.lang.String str39 = kuromojiAnalysisTests25.getTestName();
        org.junit.rules.RuleChain ruleChain40 = kuromojiAnalysisTests25.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain41 = ruleChain22.around((org.junit.rules.TestRule) ruleChain40);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests42 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests42.tearDown();
        org.apache.lucene.index.IndexReader indexReader45 = null;
        org.apache.lucene.index.Terms terms46 = null;
        org.apache.lucene.index.Terms terms47 = null;
        kuromojiAnalysisTests42.assertTermsEquals("tests.failfast", indexReader45, terms46, terms47, false);
        kuromojiAnalysisTests42.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests42.ensureCleanedUp();
        kuromojiAnalysisTests42.restoreIndexWriterMaxDocs();
        org.apache.lucene.util.LuceneTestCase[] luceneTestCaseArray53 = new org.apache.lucene.util.LuceneTestCase[] {};
        java.util.Set<org.apache.lucene.util.LuceneTestCase> luceneTestCaseSet54 = org.apache.lucene.util.LuceneTestCase.asSet(luceneTestCaseArray53);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests42, (java.lang.Object) luceneTestCaseSet54);
        org.junit.rules.TestRule testRule56 = kuromojiAnalysisTests42.ruleChain;
        org.junit.rules.RuleChain ruleChain57 = ruleChain41.around(testRule56);
        java.util.concurrent.ExecutorService[] executorServiceArray58 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean59 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray58);
        boolean boolean60 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray58);
        boolean boolean61 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray58);
        boolean boolean62 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray58);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) testRule56, (java.lang.Object) executorServiceArray58);
    }

    @Test
    public void test4007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4007");
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray2 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet3 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray2);
        java.io.Serializable[] serializableArray5 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet6 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray5);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray7 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet8 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray7);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray5, (java.lang.Object[]) throttlingArray7);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray2, (java.lang.Object[]) serializableArray5);
        java.io.Serializable[] serializableArray15 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet16 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray15);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray17 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet18 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray17);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray15, (java.lang.Object[]) throttlingArray17);
        java.io.Serializable[] serializableArray21 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet22 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray21);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray23 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet24 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray23);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray21, (java.lang.Object[]) throttlingArray23);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray15, (java.lang.Object[]) serializableArray21);
        java.io.Serializable[] serializableArray28 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet29 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray28);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray30 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet31 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray30);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray28, (java.lang.Object[]) throttlingArray30);
        java.io.Serializable[] serializableArray34 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet35 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray34);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray36 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet37 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray36);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray34, (java.lang.Object[]) throttlingArray36);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray28, (java.lang.Object[]) serializableArray34);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray41 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet42 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray41);
        java.io.Serializable[] serializableArray44 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet45 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray44);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray46 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet47 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray46);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray44, (java.lang.Object[]) throttlingArray46);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray41, (java.lang.Object[]) serializableArray44);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray51 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet52 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray51);
        java.io.Serializable[] serializableArray54 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet55 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray54);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray56 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet57 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray56);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray54, (java.lang.Object[]) throttlingArray56);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray51, (java.lang.Object[]) serializableArray54);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray44, (java.lang.Object[]) throttlingArray51);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray34, (java.lang.Object[]) throttlingArray51);
        org.junit.Assert.assertEquals("random", (java.lang.Object[]) serializableArray21, (java.lang.Object[]) serializableArray34);
        org.junit.Assert.assertNotEquals("tests.weekly", (java.lang.Object) serializableArray21, (java.lang.Object) (byte) 100);
        java.io.Serializable[] serializableArray67 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet68 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray67);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray69 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet70 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray69);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray67, (java.lang.Object[]) throttlingArray69);
        org.apache.lucene.util.LuceneTestCase[] luceneTestCaseArray72 = new org.apache.lucene.util.LuceneTestCase[] {};
        java.util.Set<org.apache.lucene.util.LuceneTestCase> luceneTestCaseSet73 = org.apache.lucene.util.LuceneTestCase.asSet(luceneTestCaseArray72);
        org.junit.Assert.assertEquals("<unknown>", (java.lang.Object[]) throttlingArray69, (java.lang.Object[]) luceneTestCaseArray72);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) serializableArray21, (java.lang.Object[]) luceneTestCaseArray72);
        org.junit.Assert.assertEquals("tests.badapples", (java.lang.Object[]) throttlingArray2, (java.lang.Object[]) serializableArray21);
        java.util.concurrent.ExecutorService[] executorServiceArray77 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean78 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray77);
        boolean boolean79 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray77);
        boolean boolean80 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray77);
        boolean boolean81 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray77);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray2, (java.lang.Object[]) executorServiceArray77);
        boolean boolean83 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray77);
        boolean boolean84 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray77);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) boolean84);
    }

    @Test
    public void test4008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4008");
        long[] longArray2 = new long[] {};
        long[] longArray3 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray2, longArray3);
        long[] longArray6 = new long[] {};
        long[] longArray7 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray6, longArray7);
        org.junit.Assert.assertArrayEquals(longArray3, longArray7);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.monster", (java.lang.Object) longArray7);
    }

    @Test
    public void test4009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4009");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (short) 0, (long) (short) 10);
    }

    @Test
    public void test4010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4010");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) (byte) 100, (float) 3, (float) '4');
    }

    @Test
    public void test4011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4011");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.weekly", postingsEnum9, postingsEnum10, true);
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) ' ');
        org.junit.rules.TestRule testRule15 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests20.tearDown();
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        org.apache.lucene.index.Terms terms25 = null;
        kuromojiAnalysisTests20.assertTermsEquals("tests.failfast", indexReader23, terms24, terms25, false);
        kuromojiAnalysisTests20.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests20.assertPathHasBeenCleared("tests.badapples");
        kuromojiAnalysisTests20.assertPathHasBeenCleared("tests.weekly");
        kuromojiAnalysisTests20.setIndexWriterMaxDocs((int) '4');
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) '4');
    }

    @Test
    public void test4012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4012");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (byte) 0, (long) 5);
    }

    @Test
    public void test4013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4013");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests9 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests9.tearDown();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        org.apache.lucene.index.Terms terms14 = null;
        kuromojiAnalysisTests9.assertTermsEquals("tests.failfast", indexReader12, terms13, terms14, false);
        kuromojiAnalysisTests9.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests9.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests9.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests9.ensureCheckIndexPassed();
        kuromojiAnalysisTests9.assertPathHasBeenCleared("tests.nightly");
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        org.apache.lucene.index.Terms terms28 = null;
        kuromojiAnalysisTests9.assertTermsEquals("tests.failfast", indexReader26, terms27, terms28, true);
        kuromojiAnalysisTests9.resetCheckIndexStatus();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests9);
        kuromojiAnalysisTests9.overrideTestDefaultQueryCache();
        java.lang.String str34 = kuromojiAnalysisTests9.getTestName();
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum39 = null;
        kuromojiAnalysisTests9.assertPositionsSkippingEquals("<unknown>", indexReader36, 1, postingsEnum38, postingsEnum39);
        org.junit.rules.TestRule testRule41 = kuromojiAnalysisTests9.ruleChain;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests42 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests42.tearDown();
        org.apache.lucene.index.IndexReader indexReader45 = null;
        org.apache.lucene.index.Terms terms46 = null;
        org.apache.lucene.index.Terms terms47 = null;
        kuromojiAnalysisTests42.assertTermsEquals("tests.failfast", indexReader45, terms46, terms47, false);
        kuromojiAnalysisTests42.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests42.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests42.ensureAllSearchContextsReleased();
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests9, (java.lang.Object) kuromojiAnalysisTests42);
        org.apache.lucene.index.NumericDocValues numericDocValues57 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues58 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests42.assertDocValuesEquals("tests.failfast", 10, numericDocValues57, numericDocValues58);
    }

    @Test
    public void test4014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4014");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests9 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests9.tearDown();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        org.apache.lucene.index.Terms terms14 = null;
        kuromojiAnalysisTests9.assertTermsEquals("tests.failfast", indexReader12, terms13, terms14, false);
        kuromojiAnalysisTests9.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests9.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests9.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests9.ensureCheckIndexPassed();
        kuromojiAnalysisTests9.assertPathHasBeenCleared("tests.nightly");
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        org.apache.lucene.index.Terms terms28 = null;
        kuromojiAnalysisTests9.assertTermsEquals("tests.failfast", indexReader26, terms27, terms28, true);
        kuromojiAnalysisTests9.resetCheckIndexStatus();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests9);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain34 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test4015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4015");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("<unknown>", indexReader12, (-1), postingsEnum14, postingsEnum15);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.NumericDocValues numericDocValues21 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues22 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("enwiki.random.lines.txt", (int) '#', numericDocValues21, numericDocValues22);
    }

    @Test
    public void test4016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4016");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests1.assertTermsEquals("hi!", indexReader11, terms12, terms13, true);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.maxfailures");
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests20.tearDown();
        kuromojiAnalysisTests20.assertPathHasBeenCleared("hi!");
        org.junit.Assert.assertNotEquals("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests20);
        org.junit.rules.RuleChain ruleChain25 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests27 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests27.tearDown();
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.Terms terms31 = null;
        org.apache.lucene.index.Terms terms32 = null;
        kuromojiAnalysisTests27.assertTermsEquals("tests.failfast", indexReader30, terms31, terms32, false);
        kuromojiAnalysisTests27.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests27.ensureCheckIndexPassed();
        org.junit.Assert.assertNotEquals("tests.badapples", (java.lang.Object) kuromojiAnalysisTests27, (java.lang.Object) '4');
        kuromojiAnalysisTests27.tearDown();
        org.apache.lucene.index.IndexReader indexReader42 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum44 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        kuromojiAnalysisTests27.assertDocsSkippingEquals("europarl.lines.txt.gz", indexReader42, 0, postingsEnum44, postingsEnum45, false);
        kuromojiAnalysisTests27.ensureCheckIndexPassed();
        org.junit.rules.RuleChain ruleChain49 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain50 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain49);
        org.junit.rules.RuleChain ruleChain51 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain52 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain51);
        org.junit.rules.RuleChain ruleChain53 = ruleChain50.around((org.junit.rules.TestRule) ruleChain52);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests56 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests56.tearDown();
        org.apache.lucene.index.IndexReader indexReader59 = null;
        org.apache.lucene.index.Terms terms60 = null;
        org.apache.lucene.index.Terms terms61 = null;
        kuromojiAnalysisTests56.assertTermsEquals("tests.failfast", indexReader59, terms60, terms61, false);
        kuromojiAnalysisTests56.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader66 = null;
        org.apache.lucene.index.Terms terms67 = null;
        org.apache.lucene.index.Terms terms68 = null;
        kuromojiAnalysisTests56.assertTermsEquals("hi!", indexReader66, terms67, terms68, true);
        kuromojiAnalysisTests56.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests56.assertPathHasBeenCleared("tests.maxfailures");
        kuromojiAnalysisTests56.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests75 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests75.tearDown();
        kuromojiAnalysisTests75.assertPathHasBeenCleared("hi!");
        org.junit.Assert.assertNotEquals("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests56, (java.lang.Object) kuromojiAnalysisTests75);
        org.junit.rules.TestRule testRule80 = null;
        org.junit.rules.RuleChain ruleChain81 = org.junit.rules.RuleChain.outerRule(testRule80);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain81;
        org.junit.rules.TestRule testRule83 = null;
        org.junit.rules.RuleChain ruleChain84 = org.junit.rules.RuleChain.outerRule(testRule83);
        org.junit.rules.RuleChain ruleChain85 = ruleChain81.around((org.junit.rules.TestRule) ruleChain84);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests56, (java.lang.Object) ruleChain81);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain81;
        java.lang.Object obj88 = null;
        org.junit.Assert.assertNotEquals("tests.nightly", (java.lang.Object) ruleChain81, obj88);
        org.junit.rules.RuleChain ruleChain90 = ruleChain53.around((org.junit.rules.TestRule) ruleChain81);
        kuromojiAnalysisTests27.failureAndSuccessEvents = ruleChain53;
        kuromojiAnalysisTests27.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests27.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests27.setUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) ruleChain25, (java.lang.Object) kuromojiAnalysisTests27);
    }

    @Test
    public void test4017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4017");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests0.assertTermsEquals("hi!", indexReader10, terms11, terms12, true);
        java.lang.String str15 = kuromojiAnalysisTests0.getTestName();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("", indexReader17, (int) (byte) 0, postingsEnum19, postingsEnum20, false);
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) '4');
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests26 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests26.tearDown();
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.Terms terms30 = null;
        org.apache.lucene.index.Terms terms31 = null;
        kuromojiAnalysisTests26.assertTermsEquals("tests.failfast", indexReader29, terms30, terms31, false);
        kuromojiAnalysisTests26.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests26.ensureCheckIndexPassed();
        org.junit.Assert.assertNotEquals("tests.badapples", (java.lang.Object) kuromojiAnalysisTests26, (java.lang.Object) '4');
        kuromojiAnalysisTests26.tearDown();
        kuromojiAnalysisTests26.tearDown();
        org.junit.rules.RuleChain ruleChain41 = kuromojiAnalysisTests26.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain41;
        org.apache.lucene.index.PostingsEnum postingsEnum44 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("random", postingsEnum44, postingsEnum45);
    }

    @Test
    public void test4018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4018");
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray2 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet3 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray2);
        java.io.Serializable[] serializableArray5 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet6 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray5);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray7 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet8 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray7);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray5, (java.lang.Object[]) throttlingArray7);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) throttlingArray2, (java.lang.Object[]) throttlingArray7);
        java.io.Serializable[] serializableArray13 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet14 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray13);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray15 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet16 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray15);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray13, (java.lang.Object[]) throttlingArray15);
        java.io.Serializable[] serializableArray19 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet20 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray19);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray21 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet22 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray21);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray19, (java.lang.Object[]) throttlingArray21);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray13, (java.lang.Object[]) serializableArray19);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray26 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet27 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray26);
        java.io.Serializable[] serializableArray29 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet30 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray29);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray31 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet32 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray31);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray29, (java.lang.Object[]) throttlingArray31);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray26, (java.lang.Object[]) serializableArray29);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray36 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet37 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray36);
        java.io.Serializable[] serializableArray39 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet40 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray39);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray41 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet42 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray41);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray39, (java.lang.Object[]) throttlingArray41);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray36, (java.lang.Object[]) serializableArray39);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray29, (java.lang.Object[]) throttlingArray36);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray19, (java.lang.Object[]) throttlingArray36);
        org.apache.lucene.util.LuceneTestCase[] luceneTestCaseArray47 = new org.apache.lucene.util.LuceneTestCase[] {};
        java.util.Set<org.apache.lucene.util.LuceneTestCase> luceneTestCaseSet48 = org.apache.lucene.util.LuceneTestCase.asSet(luceneTestCaseArray47);
        org.junit.Assert.assertEquals("tests.failfast", (java.lang.Object[]) serializableArray19, (java.lang.Object[]) luceneTestCaseArray47);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) throttlingArray7, (java.lang.Object[]) luceneTestCaseArray47);
        java.io.Serializable[] serializableArray52 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet53 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray52);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray54 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet55 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray54);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray52, (java.lang.Object[]) throttlingArray54);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray7, (java.lang.Object[]) serializableArray52);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests58 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests58.tearDown();
        org.apache.lucene.index.IndexReader indexReader61 = null;
        org.apache.lucene.index.Terms terms62 = null;
        org.apache.lucene.index.Terms terms63 = null;
        kuromojiAnalysisTests58.assertTermsEquals("tests.failfast", indexReader61, terms62, terms63, false);
        kuromojiAnalysisTests58.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader68 = null;
        org.apache.lucene.index.Terms terms69 = null;
        org.apache.lucene.index.Terms terms70 = null;
        kuromojiAnalysisTests58.assertTermsEquals("hi!", indexReader68, terms69, terms70, true);
        org.apache.lucene.index.IndexReader indexReader74 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum76 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum77 = null;
        kuromojiAnalysisTests58.assertPositionsSkippingEquals("tests.slow", indexReader74, (int) 'a', postingsEnum76, postingsEnum77);
        kuromojiAnalysisTests58.tearDown();
        org.apache.lucene.index.IndexReader indexReader81 = null;
        org.apache.lucene.index.Terms terms82 = null;
        org.apache.lucene.index.Terms terms83 = null;
        kuromojiAnalysisTests58.assertTermsEquals("tests.nightly", indexReader81, terms82, terms83, false);
        kuromojiAnalysisTests58.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotEquals((java.lang.Object) throttlingArray7, (java.lang.Object) kuromojiAnalysisTests58);
        kuromojiAnalysisTests58.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum90 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum91 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests58.assertDocsAndPositionsEnumEquals("tests.slow", postingsEnum90, postingsEnum91);
    }

    @Test
    public void test4019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4019");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) (short) -1, 100.0f, (float) (short) 1);
    }

    @Test
    public void test4020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4020");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (short) 100);
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests0);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests12.tearDown();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests12.assertTermsEquals("tests.failfast", indexReader15, terms16, terms17, false);
        kuromojiAnalysisTests12.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests12.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests12.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests12.ensureCheckIndexPassed();
        kuromojiAnalysisTests12.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain28 = kuromojiAnalysisTests12.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain28;
        org.junit.rules.TestRule testRule30 = kuromojiAnalysisTests0.ruleChain;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("<unknown>", postingsEnum32, postingsEnum33, true);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.NumericDocValues numericDocValues39 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues40 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.nightly", 4, numericDocValues39, numericDocValues40);
    }

    @Test
    public void test4021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4021");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (double) '4', (double) 100.0f, (double) 10.0f);
    }

    @Test
    public void test4022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4022");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals(0.0d, (-1.0d), (double) 2);
    }

    @Test
    public void test4023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4023");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) 10, (float) 100, (float) (byte) -1);
    }

    @Test
    public void test4024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4024");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 3, (double) 4);
    }

    @Test
    public void test4025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4025");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (byte) 0, (long) 4);
    }

    @Test
    public void test4026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4026");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((-1.0d), (double) (byte) 100);
    }

    @Test
    public void test4027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4027");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) "");
        java.lang.String str5 = kuromojiAnalysisTests1.getTestName();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (short) 0);
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocsAndPositionsEnumEquals("tests.slow", postingsEnum12, postingsEnum13);
    }

    @Test
    public void test4028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4028");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests1.assertTermsEquals("hi!", indexReader11, terms12, terms13, true);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.maxfailures");
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.junit.Assert.assertNotEquals("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) 0.0d);
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        org.apache.lucene.index.NumericDocValues numericDocValues25 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues26 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocValuesEquals("enwiki.random.lines.txt", (int) (byte) 10, numericDocValues25, numericDocValues26);
    }

    @Test
    public void test4029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4029");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("random", (double) 10L, (double) (short) 0, (double) '#');
    }

    @Test
    public void test4030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4030");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests2.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        kuromojiAnalysisTests2.assertTermsEquals("tests.failfast", indexReader5, terms6, terms7, false);
        kuromojiAnalysisTests2.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests2.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule13 = kuromojiAnalysisTests2.ruleChain;
        org.junit.rules.RuleChain ruleChain14 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("", indexReader16, (int) '#', postingsEnum18, postingsEnum19);
        java.lang.Object obj21 = null;
        org.junit.Assert.assertNotSame("<unknown>", (java.lang.Object) kuromojiAnalysisTests2, obj21);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests23.tearDown();
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        org.apache.lucene.index.Terms terms28 = null;
        kuromojiAnalysisTests23.assertTermsEquals("tests.failfast", indexReader26, terms27, terms28, false);
        kuromojiAnalysisTests23.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader33 = null;
        org.apache.lucene.index.Terms terms34 = null;
        org.apache.lucene.index.Terms terms35 = null;
        kuromojiAnalysisTests23.assertTermsEquals("hi!", indexReader33, terms34, terms35, true);
        java.lang.String str38 = kuromojiAnalysisTests23.getTestName();
        org.apache.lucene.index.IndexReader indexReader40 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum43 = null;
        kuromojiAnalysisTests23.assertDocsSkippingEquals("", indexReader40, (int) (byte) 0, postingsEnum42, postingsEnum43, false);
        kuromojiAnalysisTests23.ensureCheckIndexPassed();
        org.junit.rules.RuleChain ruleChain47 = kuromojiAnalysisTests23.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain48 = kuromojiAnalysisTests23.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader50 = null;
        org.apache.lucene.index.Fields fields51 = null;
        org.apache.lucene.index.Fields fields52 = null;
        kuromojiAnalysisTests23.assertFieldsEquals("hi!", indexReader50, fields51, fields52, false);
        java.lang.String str55 = kuromojiAnalysisTests23.getTestName();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotSame("tests.badapples", (java.lang.Object) "<unknown>", (java.lang.Object) str55);
    }

    @Test
    public void test4031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4031");
        org.apache.lucene.search.QueryCachingPolicy[][] queryCachingPolicyArray1 = new org.apache.lucene.search.QueryCachingPolicy[][] {};
        java.util.Set<org.apache.lucene.search.QueryCachingPolicy[]> queryCachingPolicyArraySet2 = org.apache.lucene.util.LuceneTestCase.asSet(queryCachingPolicyArray1);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray5 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet6 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray5);
        java.io.Serializable[] serializableArray8 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet9 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray8);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray10 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet11 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray10);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray8, (java.lang.Object[]) throttlingArray10);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) throttlingArray5, (java.lang.Object[]) throttlingArray10);
        java.io.Serializable[] serializableArray16 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet17 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray16);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray18 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet19 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray18);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray16, (java.lang.Object[]) throttlingArray18);
        java.io.Serializable[] serializableArray22 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet23 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray22);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray24 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet25 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray24);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray22, (java.lang.Object[]) throttlingArray24);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray16, (java.lang.Object[]) serializableArray22);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray29 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet30 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray29);
        java.io.Serializable[] serializableArray32 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet33 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray32);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray34 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet35 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray34);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray32, (java.lang.Object[]) throttlingArray34);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray29, (java.lang.Object[]) serializableArray32);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray39 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet40 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray39);
        java.io.Serializable[] serializableArray42 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet43 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray42);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray44 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet45 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray44);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray42, (java.lang.Object[]) throttlingArray44);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray39, (java.lang.Object[]) serializableArray42);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray32, (java.lang.Object[]) throttlingArray39);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray22, (java.lang.Object[]) throttlingArray39);
        org.apache.lucene.util.LuceneTestCase[] luceneTestCaseArray50 = new org.apache.lucene.util.LuceneTestCase[] {};
        java.util.Set<org.apache.lucene.util.LuceneTestCase> luceneTestCaseSet51 = org.apache.lucene.util.LuceneTestCase.asSet(luceneTestCaseArray50);
        org.junit.Assert.assertEquals("tests.failfast", (java.lang.Object[]) serializableArray22, (java.lang.Object[]) luceneTestCaseArray50);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) throttlingArray10, (java.lang.Object[]) luceneTestCaseArray50);
        java.io.Serializable[] serializableArray55 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet56 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray55);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray57 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet58 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray57);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray55, (java.lang.Object[]) throttlingArray57);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray10, (java.lang.Object[]) serializableArray55);
        org.junit.Assert.assertEquals((java.lang.Object[]) queryCachingPolicyArray1, (java.lang.Object[]) serializableArray55);
        java.util.concurrent.ExecutorService executorService63 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray64 = new java.util.concurrent.ExecutorService[] { executorService63 };
        java.util.concurrent.ExecutorService executorService65 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray66 = new java.util.concurrent.ExecutorService[] { executorService65 };
        java.util.concurrent.ExecutorService executorService67 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray68 = new java.util.concurrent.ExecutorService[] { executorService67 };
        java.util.concurrent.ExecutorService executorService69 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray70 = new java.util.concurrent.ExecutorService[] { executorService69 };
        java.util.concurrent.ExecutorService[][] executorServiceArray71 = new java.util.concurrent.ExecutorService[][] { executorServiceArray64, executorServiceArray66, executorServiceArray68, executorServiceArray70 };
        java.util.Set<java.util.concurrent.ExecutorService[]> executorServiceArraySet72 = org.apache.lucene.util.LuceneTestCase.asSet(executorServiceArray71);
        java.util.List<java.util.concurrent.ExecutorService[]> executorServiceArrayList73 = org.elasticsearch.test.ESTestCase.randomSubsetOf(3, executorServiceArray71);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", (java.lang.Object[]) serializableArray55, (java.lang.Object[]) executorServiceArray71);
    }

    @Test
    public void test4032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4032");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", (long) 5, (-1L));
    }

    @Test
    public void test4033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4033");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum7 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum8 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.badapples", indexReader5, 10, postingsEnum7, postingsEnum8, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests1);
        org.junit.rules.RuleChain ruleChain13 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests15 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests15.tearDown();
        kuromojiAnalysisTests15.assertPathHasBeenCleared("hi!");
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        org.apache.lucene.index.Terms terms22 = null;
        kuromojiAnalysisTests15.assertTermsEquals("<unknown>", indexReader20, terms21, terms22, false);
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Fields fields27 = null;
        org.apache.lucene.index.Fields fields28 = null;
        kuromojiAnalysisTests15.assertFieldsEquals("hi!", indexReader26, fields27, fields28, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests31 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule32 = kuromojiAnalysisTests31.ruleChain;
        org.junit.rules.TestRule testRule33 = null;
        org.junit.rules.RuleChain ruleChain34 = org.junit.rules.RuleChain.outerRule(testRule33);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain34;
        org.junit.rules.TestRule testRule36 = null;
        org.junit.rules.RuleChain ruleChain37 = org.junit.rules.RuleChain.outerRule(testRule36);
        org.junit.rules.RuleChain ruleChain38 = ruleChain34.around((org.junit.rules.TestRule) ruleChain37);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain34;
        kuromojiAnalysisTests31.failureAndSuccessEvents = ruleChain34;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests41 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests41.tearDown();
        org.apache.lucene.index.IndexReader indexReader44 = null;
        org.apache.lucene.index.Terms terms45 = null;
        org.apache.lucene.index.Terms terms46 = null;
        kuromojiAnalysisTests41.assertTermsEquals("tests.failfast", indexReader44, terms45, terms46, false);
        org.junit.rules.RuleChain ruleChain49 = kuromojiAnalysisTests41.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement50 = null;
        org.junit.runner.Description description51 = null;
        org.junit.runners.model.Statement statement52 = ruleChain49.apply(statement50, description51);
        org.junit.rules.RuleChain ruleChain53 = ruleChain34.around((org.junit.rules.TestRule) ruleChain49);
        org.junit.rules.TestRule testRule56 = null;
        org.junit.rules.RuleChain ruleChain57 = org.junit.rules.RuleChain.outerRule(testRule56);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain57;
        org.junit.rules.TestRule testRule59 = null;
        org.junit.rules.RuleChain ruleChain60 = org.junit.rules.RuleChain.outerRule(testRule59);
        org.junit.rules.RuleChain ruleChain61 = ruleChain57.around((org.junit.rules.TestRule) ruleChain60);
        org.junit.Assert.assertNotSame("tests.maxfailures", (java.lang.Object) "tests.weekly", (java.lang.Object) ruleChain60);
        org.junit.rules.TestRule testRule63 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.junit.rules.RuleChain ruleChain64 = ruleChain60.around(testRule63);
        org.junit.rules.RuleChain ruleChain65 = ruleChain53.around((org.junit.rules.TestRule) ruleChain60);
        org.junit.rules.RuleChain ruleChain66 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain65);
        org.junit.rules.RuleChain ruleChain67 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain65);
        org.junit.Assert.assertNotSame("random", (java.lang.Object) fields27, (java.lang.Object) ruleChain67);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain67;
        org.junit.rules.RuleChain ruleChain70 = ruleChain13.around((org.junit.rules.TestRule) ruleChain67);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) (short) -1, (java.lang.Object) ruleChain70);
    }

    @Test
    public void test4034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4034");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.assertPathHasBeenCleared("hi!");
        org.junit.rules.RuleChain ruleChain4 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        java.lang.String str5 = kuromojiAnalysisTests0.getTestName();
        org.apache.lucene.index.PostingsEnum postingsEnum7 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum8 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.badapples", postingsEnum7, postingsEnum8);
    }

    @Test
    public void test4035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4035");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) '#', (double) 10.0f, (double) (-1L));
    }

    @Test
    public void test4036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4036");
        float[] floatArray7 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray13 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray7, floatArray13, (float) (byte) 100);
        float[] floatArray22 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray28 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray22, floatArray28, (float) (byte) 100);
        float[] floatArray37 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray43 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray37, floatArray43, (float) (byte) 100);
        float[] floatArray52 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray58 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray52, floatArray58, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray37, floatArray52, (float) (short) 1);
        org.junit.Assert.assertArrayEquals(floatArray22, floatArray37, (float) (short) 100);
        org.junit.Assert.assertArrayEquals(floatArray7, floatArray37, (float) (short) 10);
        float[] floatArray67 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("", floatArray37, floatArray67, 100.0f);
    }

    @Test
    public void test4037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4037");
        java.lang.Object obj1 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotNull("tests.monster", obj1);
    }

    @Test
    public void test4038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4038");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) "tests.awaitsfix");
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.weekly");
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.weekly", indexReader23, (int) (short) 100, postingsEnum25, postingsEnum26, true);
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("", postingsEnum31, postingsEnum32);
    }

    @Test
    public void test4039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4039");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((double) '#', (double) (short) 1, (double) '4');
    }

    @Test
    public void test4040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4040");
        java.lang.Object[] objArray1 = null;
        java.io.Serializable[] serializableArray4 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet5 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray4);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray6 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet7 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray6);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray4, (java.lang.Object[]) throttlingArray6);
        java.io.Serializable[] serializableArray10 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet11 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray10);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray12 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet13 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray12);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray10, (java.lang.Object[]) throttlingArray12);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray4, (java.lang.Object[]) serializableArray10);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray17 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet18 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray17);
        java.io.Serializable[] serializableArray20 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet21 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray20);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray22 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet23 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray22);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray20, (java.lang.Object[]) throttlingArray22);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray17, (java.lang.Object[]) serializableArray20);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray27 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet28 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray27);
        java.io.Serializable[] serializableArray30 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet31 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray30);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray32 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet33 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray32);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray30, (java.lang.Object[]) throttlingArray32);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray27, (java.lang.Object[]) serializableArray30);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray20, (java.lang.Object[]) throttlingArray27);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray10, (java.lang.Object[]) throttlingArray27);
        java.io.Serializable[] serializableArray39 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet40 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray39);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray41 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet42 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray41);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray39, (java.lang.Object[]) throttlingArray41);
        java.io.Serializable[] serializableArray45 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet46 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray45);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray47 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet48 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray47);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray45, (java.lang.Object[]) throttlingArray47);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray39, (java.lang.Object[]) serializableArray45);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray52 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet53 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray52);
        java.io.Serializable[] serializableArray55 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet56 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray55);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray57 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet58 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray57);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray55, (java.lang.Object[]) throttlingArray57);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray52, (java.lang.Object[]) serializableArray55);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray62 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet63 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray62);
        java.io.Serializable[] serializableArray65 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet66 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray65);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray67 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet68 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray67);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray65, (java.lang.Object[]) throttlingArray67);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray62, (java.lang.Object[]) serializableArray65);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray55, (java.lang.Object[]) throttlingArray62);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray45, (java.lang.Object[]) throttlingArray62);
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object[]) throttlingArray27, (java.lang.Object[]) throttlingArray62);
        java.io.Serializable[] serializableArray75 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet76 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray75);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray77 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet78 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray77);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray75, (java.lang.Object[]) throttlingArray77);
        java.io.Serializable[] serializableArray81 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet82 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray81);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray83 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet84 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray83);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray81, (java.lang.Object[]) throttlingArray83);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray75, (java.lang.Object[]) serializableArray81);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) throttlingArray27, (java.lang.Object[]) serializableArray75);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray89 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet90 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray89);
        java.io.Serializable[] serializableArray92 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet93 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray92);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray94 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet95 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray94);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray92, (java.lang.Object[]) throttlingArray94);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) throttlingArray89, (java.lang.Object[]) throttlingArray94);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray27, (java.lang.Object[]) throttlingArray94);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.nightly", objArray1, (java.lang.Object[]) throttlingArray94);
    }

    @Test
    public void test4041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4041");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests3 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests3.tearDown();
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        kuromojiAnalysisTests3.assertTermsEquals("tests.failfast", indexReader6, terms7, terms8, false);
        kuromojiAnalysisTests3.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain13 = kuromojiAnalysisTests3.failureAndSuccessEvents;
        kuromojiAnalysisTests3.assertPathHasBeenCleared("tests.awaitsfix");
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) "tests.awaitsfix");
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule18 = kuromojiAnalysisTests0.ruleChain;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests20.setUp();
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        org.apache.lucene.index.Terms terms25 = null;
        kuromojiAnalysisTests20.assertTermsEquals("tests.slow", indexReader23, terms24, terms25, true);
        org.apache.lucene.search.QueryCachingPolicy queryCachingPolicy28 = org.apache.lucene.util.LuceneTestCase.MAYBE_CACHE_POLICY;
        org.junit.rules.TestRule testRule29 = null;
        org.junit.rules.RuleChain ruleChain30 = org.junit.rules.RuleChain.outerRule(testRule29);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain30;
        org.junit.rules.TestRule testRule32 = null;
        org.junit.rules.RuleChain ruleChain33 = org.junit.rules.RuleChain.outerRule(testRule32);
        org.junit.rules.RuleChain ruleChain34 = ruleChain30.around((org.junit.rules.TestRule) ruleChain33);
        org.junit.Assert.assertNotSame((java.lang.Object) queryCachingPolicy28, (java.lang.Object) ruleChain34);
        org.junit.rules.RuleChain ruleChain36 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain37 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain36);
        org.junit.rules.RuleChain ruleChain38 = ruleChain34.around((org.junit.rules.TestRule) ruleChain36);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain36;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests41 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests41.tearDown();
        org.apache.lucene.index.IndexReader indexReader44 = null;
        org.apache.lucene.index.Terms terms45 = null;
        org.apache.lucene.index.Terms terms46 = null;
        kuromojiAnalysisTests41.assertTermsEquals("tests.failfast", indexReader44, terms45, terms46, false);
        kuromojiAnalysisTests41.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests41.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule52 = kuromojiAnalysisTests41.ruleChain;
        org.junit.rules.RuleChain ruleChain53 = kuromojiAnalysisTests41.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals((java.lang.Object) "random", (java.lang.Object) ruleChain53);
        org.junit.rules.RuleChain ruleChain55 = ruleChain36.around((org.junit.rules.TestRule) ruleChain53);
        org.junit.Assert.assertNotNull((java.lang.Object) ruleChain36);
        org.junit.Assert.assertNotEquals("tests.badapples", (java.lang.Object) kuromojiAnalysisTests20, (java.lang.Object) ruleChain36);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests59 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests59.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests59, (java.lang.Object) "");
        kuromojiAnalysisTests59.setUp();
        kuromojiAnalysisTests59.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain65 = kuromojiAnalysisTests59.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain66 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain65);
        org.junit.runners.model.Statement statement67 = null;
        org.junit.runner.Description description68 = null;
        org.junit.runners.model.Statement statement69 = ruleChain65.apply(statement67, description68);
        org.junit.runner.Description description70 = null;
        org.junit.runners.model.Statement statement71 = ruleChain36.apply(statement69, description70);
        org.junit.rules.RuleChain ruleChain72 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain36);
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) ruleChain72);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        java.lang.Object obj75 = null;
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, obj75);
        org.apache.lucene.index.NumericDocValues numericDocValues79 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues80 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("europarl.lines.txt.gz", (int) 'a', numericDocValues79, numericDocValues80);
    }

    @Test
    public void test4042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4042");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((long) (short) 1, (long) (short) 1);
    }

    @Test
    public void test4043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4043");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) '4', (float) 10L, (float) ' ');
    }

    @Test
    public void test4044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4044");
        float[] floatArray7 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray13 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray7, floatArray13, (float) (byte) 100);
        float[] floatArray23 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray29 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray23, floatArray29, (float) (byte) 100);
        float[] floatArray38 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray44 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray38, floatArray44, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray23, floatArray38, (float) (short) 1);
        float[] floatArray55 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray61 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray55, floatArray61, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", floatArray38, floatArray55, 0.0f);
        org.junit.Assert.assertArrayEquals(floatArray7, floatArray38, (float) (byte) 100);
        float[] floatArray74 = new float[] { (short) 100, '4', 10.0f, (short) 1, 100, (byte) 0 };
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.monster", floatArray38, floatArray74, (float) 0L);
    }

    @Test
    public void test4045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4045");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.awaitsfix", (float) (short) 100, (float) (-1), (float) 0L);
    }

    @Test
    public void test4046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4046");
        long[] longArray0 = null;
        long[] longArray5 = new long[] {};
        long[] longArray6 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray5, longArray6);
        long[] longArray9 = new long[] {};
        long[] longArray10 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray9, longArray10);
        org.junit.Assert.assertArrayEquals(longArray6, longArray10);
        long[] longArray14 = new long[] {};
        long[] longArray15 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray14, longArray15);
        long[] longArray18 = new long[] {};
        long[] longArray19 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray18, longArray19);
        org.junit.Assert.assertArrayEquals(longArray15, longArray19);
        org.junit.Assert.assertArrayEquals(longArray6, longArray15);
        long[] longArray24 = new long[] {};
        long[] longArray25 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray24, longArray25);
        org.junit.Assert.assertArrayEquals("random", longArray15, longArray24);
        long[] longArray29 = new long[] {};
        long[] longArray30 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray29, longArray30);
        org.junit.Assert.assertArrayEquals("tests.weekly", longArray15, longArray29);
        long[] longArray36 = new long[] {};
        long[] longArray37 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray36, longArray37);
        long[] longArray40 = new long[] {};
        long[] longArray41 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray40, longArray41);
        org.junit.Assert.assertArrayEquals(longArray37, longArray41);
        long[] longArray45 = new long[] {};
        long[] longArray46 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray45, longArray46);
        long[] longArray49 = new long[] {};
        long[] longArray50 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray49, longArray50);
        org.junit.Assert.assertArrayEquals(longArray46, longArray50);
        org.junit.Assert.assertArrayEquals(longArray37, longArray46);
        long[] longArray55 = new long[] {};
        long[] longArray56 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray55, longArray56);
        org.junit.Assert.assertArrayEquals("random", longArray46, longArray55);
        long[] longArray60 = new long[] {};
        long[] longArray61 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray60, longArray61);
        long[] longArray64 = new long[] {};
        long[] longArray65 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray64, longArray65);
        org.junit.Assert.assertArrayEquals(longArray61, longArray65);
        org.junit.Assert.assertArrayEquals("hi!", longArray55, longArray65);
        long[] longArray70 = new long[] {};
        long[] longArray71 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray70, longArray71);
        long[] longArray74 = new long[] {};
        long[] longArray75 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray74, longArray75);
        org.junit.Assert.assertArrayEquals(longArray71, longArray75);
        long[] longArray79 = new long[] {};
        long[] longArray80 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray79, longArray80);
        long[] longArray83 = new long[] {};
        long[] longArray84 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray83, longArray84);
        org.junit.Assert.assertArrayEquals(longArray80, longArray84);
        org.junit.Assert.assertArrayEquals(longArray71, longArray80);
        org.junit.Assert.assertArrayEquals(longArray65, longArray71);
        org.junit.Assert.assertArrayEquals("tests.slow", longArray29, longArray65);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(longArray0, longArray65);
    }

    @Test
    public void test4047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4047");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 10L, (double) 1, (double) 3);
    }

    @Test
    public void test4048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4048");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (double) 10.0f, (double) 4, (double) 3);
    }

    @Test
    public void test4049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4049");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (double) 2, (double) '4', (double) (byte) 0);
    }

    @Test
    public void test4050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4050");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain10 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain11 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain10);
        org.junit.rules.RuleChain ruleChain12 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain13 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain12);
        org.junit.rules.RuleChain ruleChain14 = ruleChain11.around((org.junit.rules.TestRule) ruleChain13);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain11;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests16 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests16.tearDown();
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.Terms terms20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        kuromojiAnalysisTests16.assertTermsEquals("tests.failfast", indexReader19, terms20, terms21, false);
        kuromojiAnalysisTests16.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain26 = kuromojiAnalysisTests16.failureAndSuccessEvents;
        kuromojiAnalysisTests16.assertPathHasBeenCleared("tests.awaitsfix");
        kuromojiAnalysisTests16.setUp();
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests16);
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum35 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("random", indexReader32, (int) ' ', postingsEnum34, postingsEnum35);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("", (java.lang.Object) "random");
    }

    @Test
    public void test4051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4051");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests1.assertTermsEquals("hi!", indexReader11, terms12, terms13, true);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.maxfailures");
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        org.junit.Assert.assertNotNull("tests.monster", (java.lang.Object) kuromojiAnalysisTests1);
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.ensureCleanedUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test4052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4052");
        org.junit.rules.RuleChain ruleChain0 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain1 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain2 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain1);
        org.junit.rules.RuleChain ruleChain3 = ruleChain0.around((org.junit.rules.TestRule) ruleChain2);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests4 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests4.tearDown();
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        org.apache.lucene.index.Terms terms9 = null;
        kuromojiAnalysisTests4.assertTermsEquals("tests.failfast", indexReader7, terms8, terms9, false);
        kuromojiAnalysisTests4.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain14 = kuromojiAnalysisTests4.failureAndSuccessEvents;
        kuromojiAnalysisTests4.assertPathHasBeenCleared("tests.awaitsfix");
        kuromojiAnalysisTests4.setUp();
        java.lang.String str18 = kuromojiAnalysisTests4.getTestName();
        org.junit.rules.TestRule testRule19 = kuromojiAnalysisTests4.ruleChain;
        org.junit.rules.RuleChain ruleChain20 = kuromojiAnalysisTests4.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain21 = ruleChain0.around((org.junit.rules.TestRule) ruleChain20);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests22 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests22.setUp();
        kuromojiAnalysisTests22.tearDown();
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        kuromojiAnalysisTests22.assertPositionsSkippingEquals("tests.maxfailures", indexReader26, 0, postingsEnum28, postingsEnum29);
        java.lang.String str31 = kuromojiAnalysisTests22.getTestName();
        org.apache.lucene.index.IndexReader indexReader33 = null;
        org.apache.lucene.index.Terms terms34 = null;
        org.apache.lucene.index.Terms terms35 = null;
        kuromojiAnalysisTests22.assertTermsEquals("tests.badapples", indexReader33, terms34, terms35, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests38 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests38.tearDown();
        org.apache.lucene.index.IndexReader indexReader41 = null;
        org.apache.lucene.index.Terms terms42 = null;
        org.apache.lucene.index.Terms terms43 = null;
        kuromojiAnalysisTests38.assertTermsEquals("tests.failfast", indexReader41, terms42, terms43, false);
        kuromojiAnalysisTests38.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests38.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests38.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests38.ensureCheckIndexPassed();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests38, (java.lang.Object) "tests.awaitsfix");
        kuromojiAnalysisTests38.tearDown();
        kuromojiAnalysisTests38.setUp();
        kuromojiAnalysisTests38.restoreIndexWriterMaxDocs();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests57 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule58 = kuromojiAnalysisTests57.ruleChain;
        org.junit.rules.TestRule testRule59 = null;
        org.junit.rules.RuleChain ruleChain60 = org.junit.rules.RuleChain.outerRule(testRule59);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain60;
        org.junit.rules.TestRule testRule62 = null;
        org.junit.rules.RuleChain ruleChain63 = org.junit.rules.RuleChain.outerRule(testRule62);
        org.junit.rules.RuleChain ruleChain64 = ruleChain60.around((org.junit.rules.TestRule) ruleChain63);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain60;
        kuromojiAnalysisTests57.failureAndSuccessEvents = ruleChain60;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests67 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests67.tearDown();
        org.apache.lucene.index.IndexReader indexReader70 = null;
        org.apache.lucene.index.Terms terms71 = null;
        org.apache.lucene.index.Terms terms72 = null;
        kuromojiAnalysisTests67.assertTermsEquals("tests.failfast", indexReader70, terms71, terms72, false);
        org.junit.rules.RuleChain ruleChain75 = kuromojiAnalysisTests67.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement76 = null;
        org.junit.runner.Description description77 = null;
        org.junit.runners.model.Statement statement78 = ruleChain75.apply(statement76, description77);
        org.junit.rules.RuleChain ruleChain79 = ruleChain60.around((org.junit.rules.TestRule) ruleChain75);
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests38, (java.lang.Object) ruleChain75);
        kuromojiAnalysisTests22.failureAndSuccessEvents = ruleChain75;
        kuromojiAnalysisTests22.restoreIndexWriterMaxDocs();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) ruleChain20, (java.lang.Object) kuromojiAnalysisTests22);
    }

    @Test
    public void test4053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4053");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule1 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests4 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests4.tearDown();
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        org.apache.lucene.index.Terms terms9 = null;
        kuromojiAnalysisTests4.assertTermsEquals("tests.failfast", indexReader7, terms8, terms9, false);
        org.junit.rules.RuleChain ruleChain12 = kuromojiAnalysisTests4.failureAndSuccessEvents;
        org.junit.Assert.assertNotSame("hi!", (java.lang.Object) ruleChain12, (java.lang.Object) "tests.weekly");
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) ruleChain12);
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (short) 0);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.nightly", postingsEnum20, postingsEnum21);
    }

    @Test
    public void test4054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4054");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (double) (-1.0f), 1.0d);
    }

    @Test
    public void test4055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4055");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.junit.rules.TestRule testRule11 = kuromojiAnalysisTests0.ruleChain;
        org.apache.lucene.index.NumericDocValues numericDocValues14 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues15 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.awaitsfix", (int) (byte) 0, numericDocValues14, numericDocValues15);
    }

    @Test
    public void test4056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4056");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", 10.0d, 0.0d);
    }

    @Test
    public void test4057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4057");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.awaitsfix", (float) 5, (float) (-1), 0.0f);
    }

    @Test
    public void test4058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4058");
        short[] shortArray2 = new short[] {};
        short[] shortArray3 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray2, shortArray3);
        short[] shortArray6 = new short[] {};
        short[] shortArray7 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray6, shortArray7);
        short[] shortArray9 = new short[] {};
        short[] shortArray10 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray9, shortArray10);
        org.junit.Assert.assertArrayEquals("", shortArray7, shortArray9);
        short[] shortArray14 = new short[] {};
        short[] shortArray15 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray14, shortArray15);
        short[] shortArray17 = new short[] {};
        short[] shortArray18 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray17, shortArray18);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray14, shortArray18);
        org.junit.Assert.assertArrayEquals(shortArray7, shortArray14);
        org.junit.Assert.assertArrayEquals(shortArray2, shortArray7);
        short[] shortArray25 = new short[] {};
        short[] shortArray26 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray25, shortArray26);
        short[] shortArray28 = new short[] {};
        short[] shortArray29 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray28, shortArray29);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray25, shortArray29);
        short[] shortArray33 = new short[] {};
        short[] shortArray34 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray33, shortArray34);
        short[] shortArray36 = new short[] {};
        short[] shortArray37 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray36, shortArray37);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray33, shortArray37);
        org.junit.Assert.assertArrayEquals("<unknown>", shortArray25, shortArray37);
        short[] shortArray41 = new short[] {};
        short[] shortArray42 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray41, shortArray42);
        org.junit.Assert.assertArrayEquals(shortArray37, shortArray41);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray7, shortArray41);
        short[] shortArray49 = new short[] {};
        short[] shortArray50 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray49, shortArray50);
        short[] shortArray52 = new short[] {};
        short[] shortArray53 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray52, shortArray53);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray49, shortArray53);
        short[] shortArray57 = new short[] {};
        short[] shortArray58 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray57, shortArray58);
        short[] shortArray60 = new short[] {};
        short[] shortArray61 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray60, shortArray61);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray57, shortArray61);
        org.junit.Assert.assertArrayEquals("<unknown>", shortArray49, shortArray61);
        short[] shortArray66 = new short[] {};
        short[] shortArray67 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray66, shortArray67);
        short[] shortArray70 = new short[] {};
        short[] shortArray71 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray70, shortArray71);
        short[] shortArray73 = new short[] {};
        short[] shortArray74 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray73, shortArray74);
        org.junit.Assert.assertArrayEquals("", shortArray71, shortArray73);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", shortArray66, shortArray71);
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray49, shortArray71);
        org.junit.Assert.assertArrayEquals(shortArray7, shortArray71);
        short[] shortArray80 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("random", shortArray7, shortArray80);
    }

    @Test
    public void test4059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4059");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests0.assertTermsEquals("hi!", indexReader10, terms11, terms12, true);
        java.lang.String str15 = kuromojiAnalysisTests0.getTestName();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests16 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests16.tearDown();
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.Terms terms20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        kuromojiAnalysisTests16.assertTermsEquals("tests.failfast", indexReader19, terms20, terms21, false);
        kuromojiAnalysisTests16.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests16.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule27 = kuromojiAnalysisTests16.ruleChain;
        org.junit.rules.RuleChain ruleChain28 = kuromojiAnalysisTests16.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain28;
        int[] intArray31 = new int[] {};
        int[] intArray32 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray31, intArray32);
        int[] intArray34 = new int[] {};
        org.junit.Assert.assertArrayEquals(intArray31, intArray34);
        int[] intArray38 = new int[] {};
        int[] intArray39 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray38, intArray39);
        int[] intArray42 = new int[] {};
        int[] intArray43 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray42, intArray43);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray39, intArray43);
        org.junit.Assert.assertArrayEquals(intArray31, intArray43);
        int[] intArray48 = new int[] {};
        int[] intArray49 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray48, intArray49);
        org.junit.Assert.assertNotNull((java.lang.Object) intArray48);
        org.junit.Assert.assertArrayEquals(intArray31, intArray48);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) intArray48);
    }

    @Test
    public void test4060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4060");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", 0.0f, (float) (-1L), (-1.0f));
    }

    @Test
    public void test4061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4061");
        org.junit.rules.RuleChain[][] ruleChainArray1 = new org.junit.rules.RuleChain[][] {};
        java.util.Set<org.junit.rules.RuleChain[]> ruleChainArraySet2 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray1);
        java.util.Set<org.junit.rules.RuleChain[]> ruleChainArraySet3 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray1);
        java.util.Set<org.junit.rules.RuleChain[]> ruleChainArraySet4 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray1);
        java.util.Set<org.junit.rules.RuleChain[]> ruleChainArraySet5 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray1);
        java.io.Serializable[] serializableArray7 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet8 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray7);
        java.io.Serializable[] serializableArray9 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet10 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray9);
        java.lang.Iterable[] iterableArray12 = new java.lang.Iterable[2];
        @SuppressWarnings("unchecked")
        java.lang.Iterable<java.io.Serializable>[] serializableIterableArray13 = (java.lang.Iterable<java.io.Serializable>[]) iterableArray12;
        serializableIterableArray13[0] = serializableSet8;
        serializableIterableArray13[1] = serializableSet10;
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList18 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 0, serializableIterableArray13);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object[]) ruleChainArray1, (java.lang.Object[]) serializableIterableArray13);
    }

    @Test
    public void test4062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4062");
        short[] shortArray7 = new short[] { (byte) 100, (short) 1, (short) 1, (byte) 1, (byte) 0 };
        short[] shortArray13 = new short[] { (byte) 100, (short) 1, (short) 1, (byte) 1, (byte) 0 };
        short[] shortArray19 = new short[] { (byte) 100, (short) 1, (short) 1, (byte) 1, (byte) 0 };
        short[] shortArray25 = new short[] { (byte) 100, (short) 1, (short) 1, (byte) 1, (byte) 0 };
        short[] shortArray31 = new short[] { (byte) 100, (short) 1, (short) 1, (byte) 1, (byte) 0 };
        short[][] shortArray32 = new short[][] { shortArray7, shortArray13, shortArray19, shortArray25, shortArray31 };
        java.util.List<short[]> shortArrayList33 = org.elasticsearch.test.ESTestCase.randomSubsetOf(5, shortArray32);
        java.io.Serializable[] serializableArray35 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet36 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray35);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray37 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet38 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray37);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray35, (java.lang.Object[]) throttlingArray37);
        java.io.Serializable[] serializableArray41 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet42 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray41);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray43 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet44 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray43);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray41, (java.lang.Object[]) throttlingArray43);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray35, (java.lang.Object[]) serializableArray41);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) shortArray32, (java.lang.Object[]) serializableArray35);
    }

    @Test
    public void test4063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4063");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.junit.rules.RuleChain ruleChain2 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain3 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain4 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain3);
        org.junit.rules.RuleChain ruleChain5 = ruleChain2.around((org.junit.rules.TestRule) ruleChain4);
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) ruleChain5);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests7 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests7.tearDown();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests7.assertTermsEquals("tests.failfast", indexReader10, terms11, terms12, false);
        kuromojiAnalysisTests7.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests7.setIndexWriterMaxDocs((int) (short) 100);
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests7);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests19 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests19.tearDown();
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.Terms terms23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        kuromojiAnalysisTests19.assertTermsEquals("tests.failfast", indexReader22, terms23, terms24, false);
        kuromojiAnalysisTests19.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests19.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests19.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests19.ensureCheckIndexPassed();
        kuromojiAnalysisTests19.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain35 = kuromojiAnalysisTests19.failureAndSuccessEvents;
        kuromojiAnalysisTests7.failureAndSuccessEvents = ruleChain35;
        org.junit.rules.TestRule testRule37 = kuromojiAnalysisTests7.ruleChain;
        org.apache.lucene.index.PostingsEnum postingsEnum39 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum40 = null;
        kuromojiAnalysisTests7.assertDocsEnumEquals("<unknown>", postingsEnum39, postingsEnum40, true);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests7);
        org.apache.lucene.index.NumericDocValues numericDocValues46 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues47 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("europarl.lines.txt.gz", 1, numericDocValues46, numericDocValues47);
    }

    @Test
    public void test4064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4064");
        java.lang.Object[] objArray1 = null;
        java.io.Serializable[] serializableArray4 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet5 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray4);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray6 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet7 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray6);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray4, (java.lang.Object[]) throttlingArray6);
        java.io.Serializable[] serializableArray10 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet11 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray10);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray12 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet13 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray12);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray10, (java.lang.Object[]) throttlingArray12);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray4, (java.lang.Object[]) serializableArray10);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray17 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet18 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray17);
        java.io.Serializable[] serializableArray20 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet21 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray20);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray22 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet23 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray22);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray20, (java.lang.Object[]) throttlingArray22);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray17, (java.lang.Object[]) serializableArray20);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray27 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet28 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray27);
        java.io.Serializable[] serializableArray30 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet31 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray30);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray32 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet33 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray32);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray30, (java.lang.Object[]) throttlingArray32);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray27, (java.lang.Object[]) serializableArray30);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray20, (java.lang.Object[]) throttlingArray27);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray10, (java.lang.Object[]) throttlingArray27);
        org.apache.lucene.util.LuceneTestCase[] luceneTestCaseArray38 = new org.apache.lucene.util.LuceneTestCase[] {};
        java.util.Set<org.apache.lucene.util.LuceneTestCase> luceneTestCaseSet39 = org.apache.lucene.util.LuceneTestCase.asSet(luceneTestCaseArray38);
        org.junit.Assert.assertEquals("tests.failfast", (java.lang.Object[]) serializableArray10, (java.lang.Object[]) luceneTestCaseArray38);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.monster", objArray1, (java.lang.Object[]) luceneTestCaseArray38);
    }

    @Test
    public void test4065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4065");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests1.assertTermsEquals("hi!", indexReader11, terms12, terms13, true);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.maxfailures");
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("tests.weekly", postingsEnum21, postingsEnum22, false);
        org.junit.rules.TestRule testRule25 = kuromojiAnalysisTests1.ruleChain;
        org.junit.rules.RuleChain ruleChain26 = org.junit.rules.RuleChain.outerRule(testRule25);
        org.apache.lucene.search.QueryCachingPolicy queryCachingPolicy27 = org.apache.lucene.util.LuceneTestCase.MAYBE_CACHE_POLICY;
        org.junit.rules.TestRule testRule28 = null;
        org.junit.rules.RuleChain ruleChain29 = org.junit.rules.RuleChain.outerRule(testRule28);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain29;
        org.junit.rules.TestRule testRule31 = null;
        org.junit.rules.RuleChain ruleChain32 = org.junit.rules.RuleChain.outerRule(testRule31);
        org.junit.rules.RuleChain ruleChain33 = ruleChain29.around((org.junit.rules.TestRule) ruleChain32);
        org.junit.Assert.assertNotSame((java.lang.Object) queryCachingPolicy27, (java.lang.Object) ruleChain33);
        org.junit.rules.RuleChain ruleChain35 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain36 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain35);
        org.junit.rules.RuleChain ruleChain37 = ruleChain33.around((org.junit.rules.TestRule) ruleChain35);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", (java.lang.Object) testRule25, (java.lang.Object) ruleChain33);
    }

    @Test
    public void test4066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4066");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.junit.rules.RuleChain ruleChain8 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("enwiki.random.lines.txt", indexReader12, (int) (byte) 100, postingsEnum14, postingsEnum15);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) postingsEnum15, (java.lang.Object) (byte) 1);
    }

    @Test
    public void test4067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4067");
        double[] doubleArray1 = new double[] {};
        double[] doubleArray2 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray1, doubleArray2, (double) '#');
        double[] doubleArray5 = new double[] {};
        double[] doubleArray6 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray5, doubleArray6, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray1, doubleArray6, (double) 0.0f);
        double[] doubleArray11 = new double[] {};
        double[] doubleArray12 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray11, doubleArray12, (double) '#');
        double[] doubleArray15 = new double[] {};
        double[] doubleArray16 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray15, doubleArray16, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray11, doubleArray15, (double) 3);
        double[] doubleArray21 = new double[] {};
        double[] doubleArray22 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray21, doubleArray22, (double) '#');
        double[] doubleArray25 = new double[] {};
        double[] doubleArray26 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray25, doubleArray26, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray21, doubleArray25, (double) 3);
        org.junit.Assert.assertArrayEquals(doubleArray11, doubleArray21, (double) 100L);
        org.junit.Assert.assertArrayEquals(doubleArray6, doubleArray21, (double) '4');
        double[] doubleArray36 = new double[] {};
        double[] doubleArray37 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray36, doubleArray37, (double) '#');
        double[] doubleArray40 = new double[] {};
        double[] doubleArray41 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray40, doubleArray41, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray36, doubleArray41, (double) 0.0f);
        double[] doubleArray46 = new double[] {};
        double[] doubleArray47 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray46, doubleArray47, (double) '#');
        double[] doubleArray50 = new double[] {};
        double[] doubleArray51 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray50, doubleArray51, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray46, doubleArray51, (double) 0.0f);
        org.junit.Assert.assertArrayEquals("", doubleArray36, doubleArray51, (double) 1);
        double[] doubleArray58 = new double[] {};
        double[] doubleArray59 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray58, doubleArray59, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray51, doubleArray59, (double) 2);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", doubleArray21, doubleArray51, (double) 10L);
        double[] doubleArray66 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(doubleArray51, doubleArray66, 100.0d);
    }

    @Test
    public void test4068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4068");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) 5, (long) (-1));
    }

    @Test
    public void test4069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4069");
        java.lang.String[] strArray5 = new java.lang.String[] { "", "hi!", "tests.maxfailures", "tests.nightly" };
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "tests.maxfailures", "tests.nightly" };
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "tests.maxfailures", "tests.nightly" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "hi!", "tests.maxfailures", "tests.nightly" };
        java.lang.String[][] strArray21 = new java.lang.String[][] { strArray5, strArray10, strArray15, strArray20 };
        java.util.List<java.lang.String[]> strArrayList22 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (byte) 1, strArray21);
        java.util.Set<java.lang.String[]> strArraySet23 = org.apache.lucene.util.LuceneTestCase.asSet(strArray21);
        java.util.Set<java.lang.String[]> strArraySet24 = org.apache.lucene.util.LuceneTestCase.asSet(strArray21);
        org.apache.lucene.util.LuceneTestCase[] luceneTestCaseArray27 = new org.apache.lucene.util.LuceneTestCase[] {};
        java.util.Set<org.apache.lucene.util.LuceneTestCase> luceneTestCaseSet28 = org.apache.lucene.util.LuceneTestCase.asSet(luceneTestCaseArray27);
        java.io.Serializable[] serializableArray30 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet31 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray30);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray32 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet33 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray32);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray30, (java.lang.Object[]) throttlingArray32);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) luceneTestCaseArray27, (java.lang.Object[]) serializableArray30);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray37 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet38 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray37);
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet41 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray40);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray42 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet43 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray42);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray40, (java.lang.Object[]) throttlingArray42);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray37, (java.lang.Object[]) serializableArray40);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray47 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet48 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray47);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet51 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray50);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray52 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet53 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray52);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray50, (java.lang.Object[]) throttlingArray52);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray47, (java.lang.Object[]) serializableArray50);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray40, (java.lang.Object[]) throttlingArray47);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray58 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet59 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray58);
        java.io.Serializable[] serializableArray61 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet62 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray61);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray63 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet64 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray63);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray61, (java.lang.Object[]) throttlingArray63);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray58, (java.lang.Object[]) serializableArray61);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray47, (java.lang.Object[]) serializableArray61);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray30, (java.lang.Object[]) serializableArray61);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) strArraySet24, (java.lang.Object) serializableArray30);
    }

    @Test
    public void test4070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4070");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) (-1L), (float) (short) 100, (-1.0f));
    }

    @Test
    public void test4071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4071");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.apache.lucene.index.PostingsEnum postingsEnum5 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum6 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.maxfailures", postingsEnum5, postingsEnum6, false);
        org.junit.rules.RuleChain ruleChain9 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain10 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain9);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests11 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule12 = kuromojiAnalysisTests11.ruleChain;
        org.junit.rules.RuleChain ruleChain13 = ruleChain10.around(testRule12);
        org.junit.rules.RuleChain ruleChain14 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain13);
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain13;
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        org.apache.lucene.index.Fields fields19 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("", indexReader17, fields18, fields19, true);
        kuromojiAnalysisTests0.setIndexWriterMaxDocs(0);
        org.apache.lucene.index.NumericDocValues numericDocValues26 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues27 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.maxfailures", 0, numericDocValues26, numericDocValues27);
    }

    @Test
    public void test4072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4072");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("enwiki.random.lines.txt");
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (short) 10);
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.tearDown();
        org.junit.rules.TestRule testRule15 = kuromojiAnalysisTests0.ruleChain;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests16 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests16.tearDown();
        kuromojiAnalysisTests16.assertPathHasBeenCleared("hi!");
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        kuromojiAnalysisTests16.assertDocsSkippingEquals("tests.monster", indexReader21, 10, postingsEnum23, postingsEnum24, true);
        kuromojiAnalysisTests16.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests16.ensureCleanedUp();
        org.junit.rules.RuleChain ruleChain29 = kuromojiAnalysisTests16.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain30 = kuromojiAnalysisTests16.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) ruleChain30);
    }

    @Test
    public void test4073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4073");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", (long) (byte) 0, (long) (short) 1);
    }

    @Test
    public void test4074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4074");
        org.junit.rules.TestRule testRule0 = null;
        org.junit.rules.RuleChain ruleChain1 = org.junit.rules.RuleChain.outerRule(testRule0);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain1;
        org.junit.rules.TestRule testRule3 = null;
        org.junit.rules.RuleChain ruleChain4 = org.junit.rules.RuleChain.outerRule(testRule3);
        org.junit.rules.RuleChain ruleChain5 = ruleChain1.around((org.junit.rules.TestRule) ruleChain4);
        org.junit.rules.RuleChain ruleChain6 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain1);
        org.junit.rules.RuleChain ruleChain7 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain1);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests8 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests8.setUp();
        kuromojiAnalysisTests8.tearDown();
        kuromojiAnalysisTests8.setUp();
        java.lang.String str12 = kuromojiAnalysisTests8.getTestName();
        kuromojiAnalysisTests8.setUp();
        kuromojiAnalysisTests8.restoreIndexWriterMaxDocs();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) ruleChain7, (java.lang.Object) kuromojiAnalysisTests8);
    }

    @Test
    public void test4075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4075");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.awaitsfix", 10.0d, (double) (byte) -1, (double) ' ');
    }

    @Test
    public void test4076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4076");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        org.apache.lucene.index.Terms terms19 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader17, terms18, terms19, true);
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.nightly", indexReader25, (int) (byte) -1, postingsEnum27, postingsEnum28);
        org.junit.rules.RuleChain ruleChain30 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain31 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain30);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests32 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule33 = kuromojiAnalysisTests32.ruleChain;
        org.junit.rules.RuleChain ruleChain34 = ruleChain31.around(testRule33);
        org.junit.rules.RuleChain ruleChain35 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain31);
        org.junit.rules.TestRule testRule36 = null;
        org.junit.rules.RuleChain ruleChain37 = ruleChain31.around(testRule36);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests38 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests38.tearDown();
        org.apache.lucene.index.IndexReader indexReader41 = null;
        org.apache.lucene.index.Terms terms42 = null;
        org.apache.lucene.index.Terms terms43 = null;
        kuromojiAnalysisTests38.assertTermsEquals("tests.failfast", indexReader41, terms42, terms43, false);
        kuromojiAnalysisTests38.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests38.assertPathHasBeenCleared("tests.badapples");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests50 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule51 = kuromojiAnalysisTests50.ruleChain;
        org.junit.rules.TestRule testRule52 = null;
        org.junit.rules.RuleChain ruleChain53 = org.junit.rules.RuleChain.outerRule(testRule52);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain53;
        org.junit.rules.TestRule testRule55 = null;
        org.junit.rules.RuleChain ruleChain56 = org.junit.rules.RuleChain.outerRule(testRule55);
        org.junit.rules.RuleChain ruleChain57 = ruleChain53.around((org.junit.rules.TestRule) ruleChain56);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain53;
        kuromojiAnalysisTests50.failureAndSuccessEvents = ruleChain53;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests60 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests60.tearDown();
        org.apache.lucene.index.IndexReader indexReader63 = null;
        org.apache.lucene.index.Terms terms64 = null;
        org.apache.lucene.index.Terms terms65 = null;
        kuromojiAnalysisTests60.assertTermsEquals("tests.failfast", indexReader63, terms64, terms65, false);
        org.junit.rules.RuleChain ruleChain68 = kuromojiAnalysisTests60.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement69 = null;
        org.junit.runner.Description description70 = null;
        org.junit.runners.model.Statement statement71 = ruleChain68.apply(statement69, description70);
        org.junit.rules.RuleChain ruleChain72 = ruleChain53.around((org.junit.rules.TestRule) ruleChain68);
        org.junit.Assert.assertNotNull("europarl.lines.txt.gz", (java.lang.Object) ruleChain53);
        org.junit.rules.RuleChain ruleChain74 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain53);
        kuromojiAnalysisTests38.failureAndSuccessEvents = ruleChain53;
        java.lang.Object obj76 = null;
        org.junit.Assert.assertNotSame((java.lang.Object) ruleChain53, obj76);
        org.junit.rules.RuleChain ruleChain78 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain53);
        org.junit.rules.RuleChain ruleChain79 = ruleChain31.around((org.junit.rules.TestRule) ruleChain78);
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain31;
        org.apache.lucene.index.PostingsEnum postingsEnum82 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum83 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.weekly", postingsEnum82, postingsEnum83);
    }

    @Test
    public void test4077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4077");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (byte) 10, (double) 4);
    }

    @Test
    public void test4078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4078");
        short[] shortArray2 = new short[] {};
        short[] shortArray3 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray2, shortArray3);
        short[] shortArray5 = new short[] {};
        short[] shortArray6 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray5, shortArray6);
        org.junit.Assert.assertArrayEquals("", shortArray3, shortArray5);
        short[] shortArray10 = new short[] {};
        short[] shortArray11 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray10, shortArray11);
        short[] shortArray13 = new short[] {};
        short[] shortArray14 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray13, shortArray14);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray10, shortArray14);
        org.junit.Assert.assertArrayEquals(shortArray3, shortArray10);
        short[] shortArray19 = new short[] {};
        short[] shortArray20 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray19, shortArray20);
        short[] shortArray23 = new short[] {};
        short[] shortArray24 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray23, shortArray24);
        short[] shortArray26 = new short[] {};
        short[] shortArray27 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray26, shortArray27);
        org.junit.Assert.assertArrayEquals("", shortArray24, shortArray26);
        short[] shortArray31 = new short[] {};
        short[] shortArray32 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray31, shortArray32);
        short[] shortArray34 = new short[] {};
        short[] shortArray35 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray34, shortArray35);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray31, shortArray35);
        org.junit.Assert.assertArrayEquals(shortArray24, shortArray31);
        org.junit.Assert.assertArrayEquals(shortArray19, shortArray24);
        short[] shortArray42 = new short[] {};
        short[] shortArray43 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray42, shortArray43);
        short[] shortArray45 = new short[] {};
        short[] shortArray46 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray45, shortArray46);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray42, shortArray46);
        short[] shortArray50 = new short[] {};
        short[] shortArray51 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray50, shortArray51);
        short[] shortArray53 = new short[] {};
        short[] shortArray54 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray53, shortArray54);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray50, shortArray54);
        org.junit.Assert.assertArrayEquals("<unknown>", shortArray42, shortArray54);
        short[] shortArray58 = new short[] {};
        short[] shortArray59 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray58, shortArray59);
        org.junit.Assert.assertArrayEquals(shortArray54, shortArray58);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray24, shortArray58);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray10, shortArray24);
        short[] shortArray64 = new short[] {};
        short[] shortArray65 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray64, shortArray65);
        org.junit.Assert.assertArrayEquals(shortArray24, shortArray64);
        short[] shortArray68 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(shortArray64, shortArray68);
    }

    @Test
    public void test4079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4079");
        java.lang.Object obj0 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests1.assertTermsEquals("hi!", indexReader11, terms12, terms13, true);
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule19 = kuromojiAnalysisTests1.ruleChain;
        org.junit.Assert.assertNotSame(obj0, (java.lang.Object) kuromojiAnalysisTests1);
        org.junit.rules.RuleChain ruleChain21 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.nightly", indexReader25, (int) (byte) -1, postingsEnum27, postingsEnum28);
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum35 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocsAndPositionsEnumEquals("tests.awaitsfix", postingsEnum34, postingsEnum35);
    }

    @Test
    public void test4080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4080");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum6 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum7 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("hi!", indexReader4, (int) ' ', postingsEnum6, postingsEnum7);
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.badapples", indexReader10, terms11, terms12, false);
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) '4');
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertPathHasBeenCleared("");
    }

    @Test
    public void test4081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4081");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((double) 'a', (double) 100, (double) 100);
    }

    @Test
    public void test4082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4082");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests2.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        kuromojiAnalysisTests2.assertTermsEquals("tests.failfast", indexReader5, terms6, terms7, false);
        kuromojiAnalysisTests2.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain11 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain12 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain11);
        org.junit.rules.RuleChain ruleChain13 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain14 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain13);
        org.junit.rules.RuleChain ruleChain15 = ruleChain12.around((org.junit.rules.TestRule) ruleChain14);
        kuromojiAnalysisTests2.failureAndSuccessEvents = ruleChain12;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests17 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests17.tearDown();
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        org.apache.lucene.index.Terms terms22 = null;
        kuromojiAnalysisTests17.assertTermsEquals("tests.failfast", indexReader20, terms21, terms22, false);
        kuromojiAnalysisTests17.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain27 = kuromojiAnalysisTests17.failureAndSuccessEvents;
        kuromojiAnalysisTests17.assertPathHasBeenCleared("tests.awaitsfix");
        kuromojiAnalysisTests17.setUp();
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) kuromojiAnalysisTests17);
        org.junit.Assert.assertNotNull("tests.nightly", (java.lang.Object) kuromojiAnalysisTests17);
        kuromojiAnalysisTests17.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader35 = null;
        org.apache.lucene.index.Fields fields36 = null;
        org.apache.lucene.index.Fields fields37 = null;
        kuromojiAnalysisTests17.assertFieldsEquals("tests.nightly", indexReader35, fields36, fields37, false);
        kuromojiAnalysisTests17.tearDown();
        kuromojiAnalysisTests17.assertPathHasBeenCleared("enwiki.random.lines.txt");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("<unknown>", (java.lang.Object) kuromojiAnalysisTests17);
    }

    @Test
    public void test4083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4083");
        short[] shortArray3 = new short[] {};
        short[] shortArray4 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray3, shortArray4);
        short[] shortArray6 = new short[] {};
        short[] shortArray7 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray6, shortArray7);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray3, shortArray7);
        short[] shortArray11 = new short[] {};
        short[] shortArray12 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray11, shortArray12);
        short[] shortArray14 = new short[] {};
        short[] shortArray15 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray14, shortArray15);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray11, shortArray15);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray7, shortArray11);
        short[][][] shortArray20 = new short[][][] {};
        short[][][] shortArray21 = new short[][][] {};
        short[][][] shortArray22 = new short[][][] {};
        short[][][] shortArray23 = new short[][][] {};
        short[][][] shortArray24 = new short[][][] {};
        short[][][] shortArray25 = new short[][][] {};
        short[][][][] shortArray26 = new short[][][][] { shortArray20, shortArray21, shortArray22, shortArray23, shortArray24, shortArray25 };
        short[][][] shortArray27 = new short[][][] {};
        short[][][] shortArray28 = new short[][][] {};
        short[][][] shortArray29 = new short[][][] {};
        short[][][] shortArray30 = new short[][][] {};
        short[][][] shortArray31 = new short[][][] {};
        short[][][] shortArray32 = new short[][][] {};
        short[][][][] shortArray33 = new short[][][][] { shortArray27, shortArray28, shortArray29, shortArray30, shortArray31, shortArray32 };
        short[][][][][] shortArray34 = new short[][][][][] { shortArray26, shortArray33 };
        java.util.List<short[][][][]> shortArrayList35 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 0, shortArray34);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("hi!", (java.lang.Object) shortArray7, (java.lang.Object) shortArray34);
    }

    @Test
    public void test4084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4084");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests2.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) "");
        kuromojiAnalysisTests2.setUp();
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.Terms terms10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        kuromojiAnalysisTests2.assertTermsEquals("", indexReader9, terms10, terms11, false);
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        kuromojiAnalysisTests2.assertDocsEnumEquals("tests.badapples", postingsEnum15, postingsEnum16, false);
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.maxfailures", (java.lang.Object) kuromojiAnalysisTests2);
    }

    @Test
    public void test4085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4085");
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling1 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.NEVER;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling2 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.ALWAYS;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling3 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.NEVER;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling4 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.ALWAYS;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling5 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.ALWAYS;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray6 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] { throttling1, throttling2, throttling3, throttling4, throttling5 };
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingSet7 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray6);
        java.util.concurrent.ExecutorService executorService8 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray9 = new java.util.concurrent.ExecutorService[] { executorService8 };
        java.util.concurrent.ExecutorService executorService10 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray11 = new java.util.concurrent.ExecutorService[] { executorService10 };
        java.util.concurrent.ExecutorService executorService12 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray13 = new java.util.concurrent.ExecutorService[] { executorService12 };
        java.util.concurrent.ExecutorService executorService14 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray15 = new java.util.concurrent.ExecutorService[] { executorService14 };
        java.util.concurrent.ExecutorService[][] executorServiceArray16 = new java.util.concurrent.ExecutorService[][] { executorServiceArray9, executorServiceArray11, executorServiceArray13, executorServiceArray15 };
        java.util.concurrent.ExecutorService executorService17 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray18 = new java.util.concurrent.ExecutorService[] { executorService17 };
        java.util.concurrent.ExecutorService executorService19 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray20 = new java.util.concurrent.ExecutorService[] { executorService19 };
        java.util.concurrent.ExecutorService executorService21 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray22 = new java.util.concurrent.ExecutorService[] { executorService21 };
        java.util.concurrent.ExecutorService executorService23 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray24 = new java.util.concurrent.ExecutorService[] { executorService23 };
        java.util.concurrent.ExecutorService[][] executorServiceArray25 = new java.util.concurrent.ExecutorService[][] { executorServiceArray18, executorServiceArray20, executorServiceArray22, executorServiceArray24 };
        java.util.concurrent.ExecutorService executorService26 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray27 = new java.util.concurrent.ExecutorService[] { executorService26 };
        java.util.concurrent.ExecutorService executorService28 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray29 = new java.util.concurrent.ExecutorService[] { executorService28 };
        java.util.concurrent.ExecutorService executorService30 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray31 = new java.util.concurrent.ExecutorService[] { executorService30 };
        java.util.concurrent.ExecutorService executorService32 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray33 = new java.util.concurrent.ExecutorService[] { executorService32 };
        java.util.concurrent.ExecutorService[][] executorServiceArray34 = new java.util.concurrent.ExecutorService[][] { executorServiceArray27, executorServiceArray29, executorServiceArray31, executorServiceArray33 };
        java.util.concurrent.ExecutorService executorService35 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray36 = new java.util.concurrent.ExecutorService[] { executorService35 };
        java.util.concurrent.ExecutorService executorService37 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray38 = new java.util.concurrent.ExecutorService[] { executorService37 };
        java.util.concurrent.ExecutorService executorService39 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray40 = new java.util.concurrent.ExecutorService[] { executorService39 };
        java.util.concurrent.ExecutorService executorService41 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray42 = new java.util.concurrent.ExecutorService[] { executorService41 };
        java.util.concurrent.ExecutorService[][] executorServiceArray43 = new java.util.concurrent.ExecutorService[][] { executorServiceArray36, executorServiceArray38, executorServiceArray40, executorServiceArray42 };
        java.util.concurrent.ExecutorService[][][] executorServiceArray44 = new java.util.concurrent.ExecutorService[][][] { executorServiceArray16, executorServiceArray25, executorServiceArray34, executorServiceArray43 };
        java.util.Set<java.util.concurrent.ExecutorService[][]> executorServiceArraySet45 = org.apache.lucene.util.LuceneTestCase.asSet(executorServiceArray44);
        java.util.Set<java.util.concurrent.ExecutorService[][]> executorServiceArraySet46 = org.apache.lucene.util.LuceneTestCase.asSet(executorServiceArray44);
        java.util.Set<java.lang.Cloneable[]> cloneableArraySet47 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[][]) executorServiceArray44);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.maxfailures", (java.lang.Object[]) throttlingArray6, (java.lang.Object[]) executorServiceArray44);
    }

    @Test
    public void test4086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4086");
        char[] charArray1 = null;
        char[] charArray3 = new char[] {};
        char[] charArray4 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray3, charArray4);
        char[] charArray7 = new char[] {};
        char[] charArray8 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray7, charArray8);
        org.junit.Assert.assertArrayEquals(charArray4, charArray8);
        char[] charArray13 = new char[] {};
        char[] charArray14 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray13, charArray14);
        char[] charArray17 = new char[] {};
        char[] charArray18 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray17, charArray18);
        char[] charArray21 = new char[] {};
        char[] charArray22 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray21, charArray22);
        org.junit.Assert.assertArrayEquals(charArray18, charArray22);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray14, charArray18);
        org.junit.Assert.assertArrayEquals(charArray4, charArray14);
        char[] charArray28 = new char[] {};
        char[] charArray29 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray28, charArray29);
        char[] charArray32 = new char[] {};
        char[] charArray33 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray32, charArray33);
        org.junit.Assert.assertArrayEquals(charArray29, charArray33);
        char[] charArray38 = new char[] {};
        char[] charArray39 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray38, charArray39);
        char[] charArray42 = new char[] {};
        char[] charArray43 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray42, charArray43);
        char[] charArray46 = new char[] {};
        char[] charArray47 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray46, charArray47);
        org.junit.Assert.assertArrayEquals(charArray43, charArray47);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray39, charArray43);
        org.junit.Assert.assertArrayEquals(charArray29, charArray39);
        org.junit.Assert.assertArrayEquals(charArray14, charArray29);
        char[] charArray55 = new char[] {};
        char[] charArray56 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray55, charArray56);
        char[] charArray59 = new char[] {};
        char[] charArray60 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray59, charArray60);
        char[] charArray63 = new char[] {};
        char[] charArray64 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray63, charArray64);
        org.junit.Assert.assertArrayEquals(charArray60, charArray64);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray56, charArray60);
        org.junit.Assert.assertArrayEquals(charArray29, charArray56);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.nightly", charArray1, charArray56);
    }

    @Test
    public void test4087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4087");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", 10L, (long) '#');
    }

    @Test
    public void test4088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4088");
        java.util.concurrent.ExecutorService executorService0 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray1 = new java.util.concurrent.ExecutorService[] { executorService0 };
        java.util.concurrent.ExecutorService executorService2 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray3 = new java.util.concurrent.ExecutorService[] { executorService2 };
        java.util.concurrent.ExecutorService executorService4 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray5 = new java.util.concurrent.ExecutorService[] { executorService4 };
        java.util.concurrent.ExecutorService executorService6 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray7 = new java.util.concurrent.ExecutorService[] { executorService6 };
        java.util.concurrent.ExecutorService[][] executorServiceArray8 = new java.util.concurrent.ExecutorService[][] { executorServiceArray1, executorServiceArray3, executorServiceArray5, executorServiceArray7 };
        java.util.concurrent.ExecutorService executorService9 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray10 = new java.util.concurrent.ExecutorService[] { executorService9 };
        java.util.concurrent.ExecutorService executorService11 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray12 = new java.util.concurrent.ExecutorService[] { executorService11 };
        java.util.concurrent.ExecutorService executorService13 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray14 = new java.util.concurrent.ExecutorService[] { executorService13 };
        java.util.concurrent.ExecutorService executorService15 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray16 = new java.util.concurrent.ExecutorService[] { executorService15 };
        java.util.concurrent.ExecutorService[][] executorServiceArray17 = new java.util.concurrent.ExecutorService[][] { executorServiceArray10, executorServiceArray12, executorServiceArray14, executorServiceArray16 };
        java.util.concurrent.ExecutorService executorService18 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray19 = new java.util.concurrent.ExecutorService[] { executorService18 };
        java.util.concurrent.ExecutorService executorService20 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray21 = new java.util.concurrent.ExecutorService[] { executorService20 };
        java.util.concurrent.ExecutorService executorService22 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray23 = new java.util.concurrent.ExecutorService[] { executorService22 };
        java.util.concurrent.ExecutorService executorService24 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray25 = new java.util.concurrent.ExecutorService[] { executorService24 };
        java.util.concurrent.ExecutorService[][] executorServiceArray26 = new java.util.concurrent.ExecutorService[][] { executorServiceArray19, executorServiceArray21, executorServiceArray23, executorServiceArray25 };
        java.util.concurrent.ExecutorService executorService27 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray28 = new java.util.concurrent.ExecutorService[] { executorService27 };
        java.util.concurrent.ExecutorService executorService29 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray30 = new java.util.concurrent.ExecutorService[] { executorService29 };
        java.util.concurrent.ExecutorService executorService31 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray32 = new java.util.concurrent.ExecutorService[] { executorService31 };
        java.util.concurrent.ExecutorService executorService33 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray34 = new java.util.concurrent.ExecutorService[] { executorService33 };
        java.util.concurrent.ExecutorService[][] executorServiceArray35 = new java.util.concurrent.ExecutorService[][] { executorServiceArray28, executorServiceArray30, executorServiceArray32, executorServiceArray34 };
        java.util.concurrent.ExecutorService[][][] executorServiceArray36 = new java.util.concurrent.ExecutorService[][][] { executorServiceArray8, executorServiceArray17, executorServiceArray26, executorServiceArray35 };
        java.util.Set<java.util.concurrent.ExecutorService[][]> executorServiceArraySet37 = org.apache.lucene.util.LuceneTestCase.asSet(executorServiceArray36);
        java.util.concurrent.ExecutorService[] executorServiceArray39 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean40 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray39);
        boolean boolean41 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray39);
        boolean boolean42 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray39);
        boolean boolean43 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray39);
        java.io.Serializable[] serializableArray46 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet47 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray46);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray48 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet49 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray48);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray46, (java.lang.Object[]) throttlingArray48);
        org.apache.lucene.util.LuceneTestCase[] luceneTestCaseArray51 = new org.apache.lucene.util.LuceneTestCase[] {};
        java.util.Set<org.apache.lucene.util.LuceneTestCase> luceneTestCaseSet52 = org.apache.lucene.util.LuceneTestCase.asSet(luceneTestCaseArray51);
        org.junit.Assert.assertEquals("<unknown>", (java.lang.Object[]) throttlingArray48, (java.lang.Object[]) luceneTestCaseArray51);
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (java.lang.Object[]) executorServiceArray39, (java.lang.Object[]) luceneTestCaseArray51);
        java.io.Serializable[] serializableArray57 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet58 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray57);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray59 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet60 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray59);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray57, (java.lang.Object[]) throttlingArray59);
        java.io.Serializable[] serializableArray63 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet64 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray63);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray65 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet66 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray65);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray63, (java.lang.Object[]) throttlingArray65);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray57, (java.lang.Object[]) serializableArray63);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray70 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet71 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray70);
        java.io.Serializable[] serializableArray73 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet74 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray73);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray75 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet76 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray75);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray73, (java.lang.Object[]) throttlingArray75);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray70, (java.lang.Object[]) serializableArray73);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray80 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet81 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray80);
        java.io.Serializable[] serializableArray83 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet84 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray83);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray85 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet86 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray85);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray83, (java.lang.Object[]) throttlingArray85);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray80, (java.lang.Object[]) serializableArray83);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray73, (java.lang.Object[]) throttlingArray80);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray63, (java.lang.Object[]) throttlingArray80);
        org.apache.lucene.util.LuceneTestCase[] luceneTestCaseArray91 = new org.apache.lucene.util.LuceneTestCase[] {};
        java.util.Set<org.apache.lucene.util.LuceneTestCase> luceneTestCaseSet92 = org.apache.lucene.util.LuceneTestCase.asSet(luceneTestCaseArray91);
        org.junit.Assert.assertEquals("tests.failfast", (java.lang.Object[]) serializableArray63, (java.lang.Object[]) luceneTestCaseArray91);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray39, (java.lang.Object[]) luceneTestCaseArray91);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray36, (java.lang.Object[]) executorServiceArray39);
    }

    @Test
    public void test4089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4089");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", (float) (byte) 1, (float) 3, (-1.0f));
    }

    @Test
    public void test4090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4090");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.setUp();
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests0);
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        kuromojiAnalysisTests0.assertTermsEquals("enwiki.random.lines.txt", indexReader6, terms7, terms8, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("<unknown>", postingsEnum14, postingsEnum15);
    }

    @Test
    public void test4091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4091");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests0.assertTermsEquals("random", indexReader11, terms12, terms13, false);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        org.apache.lucene.index.Terms terms19 = null;
        kuromojiAnalysisTests0.assertTermsEquals("europarl.lines.txt.gz", indexReader17, terms18, terms19, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        java.lang.Class<?> wildcardClass23 = kuromojiAnalysisTests0.getClass();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test4092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4092");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((-1.0f), (float) (short) 100, (float) (byte) 10);
    }

    @Test
    public void test4093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4093");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("enwiki.random.lines.txt", (double) 'a', (double) (short) 0, (double) '#');
    }

    @Test
    public void test4094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4094");
        float[] floatArray1 = null;
        float[] floatArray8 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray14 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray8, floatArray14, (float) (byte) 100);
        float[] floatArray23 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray29 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray23, floatArray29, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray8, floatArray23, (float) (short) 1);
        float[] floatArray40 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray46 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray40, floatArray46, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray23, floatArray40, 1.0f);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("<unknown>", floatArray1, floatArray23, (float) (byte) 100);
    }

    @Test
    public void test4095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4095");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.setUp();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.slow", indexReader4, terms5, terms6, true);
        org.apache.lucene.search.QueryCachingPolicy queryCachingPolicy9 = org.apache.lucene.util.LuceneTestCase.MAYBE_CACHE_POLICY;
        org.junit.rules.TestRule testRule10 = null;
        org.junit.rules.RuleChain ruleChain11 = org.junit.rules.RuleChain.outerRule(testRule10);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain11;
        org.junit.rules.TestRule testRule13 = null;
        org.junit.rules.RuleChain ruleChain14 = org.junit.rules.RuleChain.outerRule(testRule13);
        org.junit.rules.RuleChain ruleChain15 = ruleChain11.around((org.junit.rules.TestRule) ruleChain14);
        org.junit.Assert.assertNotSame((java.lang.Object) queryCachingPolicy9, (java.lang.Object) ruleChain15);
        org.junit.rules.RuleChain ruleChain17 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain18 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain17);
        org.junit.rules.RuleChain ruleChain19 = ruleChain15.around((org.junit.rules.TestRule) ruleChain17);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain17;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests22 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests22.tearDown();
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.Terms terms26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        kuromojiAnalysisTests22.assertTermsEquals("tests.failfast", indexReader25, terms26, terms27, false);
        kuromojiAnalysisTests22.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests22.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule33 = kuromojiAnalysisTests22.ruleChain;
        org.junit.rules.RuleChain ruleChain34 = kuromojiAnalysisTests22.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals((java.lang.Object) "random", (java.lang.Object) ruleChain34);
        org.junit.rules.RuleChain ruleChain36 = ruleChain17.around((org.junit.rules.TestRule) ruleChain34);
        org.junit.Assert.assertNotNull((java.lang.Object) ruleChain17);
        org.junit.Assert.assertNotEquals("tests.badapples", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) ruleChain17);
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain43 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) '#');
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.PostingsEnum postingsEnum48 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum49 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocsAndPositionsEnumEquals("", postingsEnum48, postingsEnum49);
    }

    @Test
    public void test4096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4096");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(100L, (long) 5);
    }

    @Test
    public void test4097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4097");
        java.lang.Object[] objArray1 = null;
        org.apache.lucene.util.LuceneTestCase[] luceneTestCaseArray4 = new org.apache.lucene.util.LuceneTestCase[] {};
        java.util.Set<org.apache.lucene.util.LuceneTestCase> luceneTestCaseSet5 = org.apache.lucene.util.LuceneTestCase.asSet(luceneTestCaseArray4);
        java.io.Serializable[] serializableArray7 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet8 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray7);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray9 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet10 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray9);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray7, (java.lang.Object[]) throttlingArray9);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) luceneTestCaseArray4, (java.lang.Object[]) serializableArray7);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray14 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet15 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray14);
        java.io.Serializable[] serializableArray17 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet18 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray17);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray19 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet20 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray19);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray17, (java.lang.Object[]) throttlingArray19);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray14, (java.lang.Object[]) serializableArray17);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray7, (java.lang.Object[]) serializableArray17);
        java.io.Serializable[] serializableArray25 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet26 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray25);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray27 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet28 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray27);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray25, (java.lang.Object[]) throttlingArray27);
        java.io.Serializable[] serializableArray31 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet32 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray31);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray33 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet34 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray33);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray31, (java.lang.Object[]) throttlingArray33);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray25, (java.lang.Object[]) serializableArray31);
        java.io.Serializable[] serializableArray39 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet40 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray39);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray41 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet42 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray41);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray39, (java.lang.Object[]) throttlingArray41);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray45 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet46 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray45);
        java.io.Serializable[] serializableArray48 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet49 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray48);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray50 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet51 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray50);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray48, (java.lang.Object[]) throttlingArray50);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray45, (java.lang.Object[]) serializableArray48);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray55 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet56 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray55);
        java.io.Serializable[] serializableArray58 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet59 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray58);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray60 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet61 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray60);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray58, (java.lang.Object[]) throttlingArray60);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray55, (java.lang.Object[]) serializableArray58);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray48, (java.lang.Object[]) throttlingArray55);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray39, (java.lang.Object[]) serializableArray48);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray25, (java.lang.Object[]) serializableArray39);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray7, (java.lang.Object[]) serializableArray25);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("", objArray1, (java.lang.Object[]) serializableArray25);
    }

    @Test
    public void test4098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4098");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1);
        org.junit.rules.TestRule testRule4 = kuromojiAnalysisTests1.ruleChain;
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.Fields fields7 = null;
        org.apache.lucene.index.Fields fields8 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("tests.maxfailures", indexReader6, fields7, fields8, false);
        int[] intArray14 = new int[] {};
        int[] intArray15 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray14, intArray15);
        int[] intArray19 = new int[] {};
        int[] intArray20 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray19, intArray20);
        int[] intArray22 = new int[] {};
        org.junit.Assert.assertArrayEquals(intArray19, intArray22);
        int[] intArray24 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray22, intArray24);
        org.junit.Assert.assertArrayEquals("", intArray15, intArray24);
        int[] intArray28 = new int[] {};
        int[] intArray29 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray28, intArray29);
        int[] intArray31 = new int[] {};
        org.junit.Assert.assertArrayEquals(intArray28, intArray31);
        int[] intArray35 = new int[] {};
        int[] intArray36 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray35, intArray36);
        int[] intArray39 = new int[] {};
        int[] intArray40 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray39, intArray40);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray36, intArray40);
        org.junit.Assert.assertArrayEquals(intArray28, intArray40);
        int[] intArray46 = new int[] {};
        int[] intArray47 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray46, intArray47);
        int[] intArray51 = new int[] {};
        int[] intArray52 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray51, intArray52);
        int[] intArray54 = new int[] {};
        org.junit.Assert.assertArrayEquals(intArray51, intArray54);
        int[] intArray56 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray54, intArray56);
        org.junit.Assert.assertArrayEquals("", intArray47, intArray56);
        org.junit.Assert.assertArrayEquals(intArray28, intArray56);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", intArray15, intArray56);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) fields7, (java.lang.Object) "enwiki.random.lines.txt");
    }

    @Test
    public void test4099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4099");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("<unknown>", (double) (-1), (double) (-1.0f));
    }

    @Test
    public void test4100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4100");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests0.assertTermsEquals("hi!", indexReader10, terms11, terms12, true);
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.Terms terms23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        kuromojiAnalysisTests0.assertTermsEquals("random", indexReader22, terms23, terms24, true);
        byte[] byteArray28 = new byte[] {};
        byte[] byteArray29 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray28, byteArray29);
        byte[] byteArray32 = new byte[] {};
        byte[] byteArray33 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray32, byteArray33);
        org.junit.Assert.assertArrayEquals(byteArray29, byteArray32);
        byte[] byteArray37 = new byte[] {};
        byte[] byteArray38 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray37, byteArray38);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray42 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray41, byteArray42);
        org.junit.Assert.assertArrayEquals(byteArray38, byteArray41);
        org.junit.Assert.assertArrayEquals(byteArray32, byteArray41);
        byte[] byteArray47 = new byte[] {};
        byte[] byteArray48 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray47, byteArray48);
        org.junit.Assert.assertArrayEquals(byteArray41, byteArray48);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray53 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray52, byteArray53);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray57 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray56, byteArray57);
        org.junit.Assert.assertArrayEquals(byteArray53, byteArray56);
        byte[] byteArray61 = new byte[] {};
        byte[] byteArray62 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray61, byteArray62);
        byte[] byteArray65 = new byte[] {};
        byte[] byteArray66 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray65, byteArray66);
        org.junit.Assert.assertArrayEquals(byteArray62, byteArray65);
        org.junit.Assert.assertArrayEquals(byteArray56, byteArray65);
        org.junit.Assert.assertArrayEquals(byteArray48, byteArray56);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray73 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray72, byteArray73);
        org.junit.Assert.assertArrayEquals(byteArray48, byteArray72);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) true, (java.lang.Object) byteArray48);
    }

    @Test
    public void test4101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4101");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.junit.rules.TestRule testRule11 = kuromojiAnalysisTests1.ruleChain;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests12.tearDown();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests12.assertTermsEquals("tests.failfast", indexReader15, terms16, terms17, false);
        kuromojiAnalysisTests12.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests12.setIndexWriterMaxDocs((int) (short) 100);
        kuromojiAnalysisTests12.ensureAllSearchContextsReleased();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests12);
    }

    @Test
    public void test4102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4102");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.junit.rules.RuleChain ruleChain9 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.tearDown();
        java.lang.String str12 = kuromojiAnalysisTests1.getTestName();
        org.junit.rules.TestRule testRule15 = null;
        org.junit.rules.RuleChain ruleChain16 = org.junit.rules.RuleChain.outerRule(testRule15);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain16;
        org.junit.rules.TestRule testRule18 = null;
        org.junit.rules.RuleChain ruleChain19 = org.junit.rules.RuleChain.outerRule(testRule18);
        org.junit.rules.RuleChain ruleChain20 = ruleChain16.around((org.junit.rules.TestRule) ruleChain19);
        org.junit.Assert.assertNotSame("tests.maxfailures", (java.lang.Object) "tests.weekly", (java.lang.Object) ruleChain19);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain19;
        org.junit.rules.TestRule testRule23 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) '#');
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests26 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests26.tearDown();
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.Terms terms30 = null;
        org.apache.lucene.index.Terms terms31 = null;
        kuromojiAnalysisTests26.assertTermsEquals("tests.failfast", indexReader29, terms30, terms31, false);
        kuromojiAnalysisTests26.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain35 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain36 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain35);
        org.junit.rules.RuleChain ruleChain37 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain38 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain37);
        org.junit.rules.RuleChain ruleChain39 = ruleChain36.around((org.junit.rules.TestRule) ruleChain38);
        kuromojiAnalysisTests26.failureAndSuccessEvents = ruleChain36;
        org.junit.Assert.assertNotEquals((java.lang.Object) '#', (java.lang.Object) ruleChain36);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests44 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule45 = kuromojiAnalysisTests44.ruleChain;
        kuromojiAnalysisTests44.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests48 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests48.tearDown();
        org.apache.lucene.index.IndexReader indexReader51 = null;
        org.apache.lucene.index.Terms terms52 = null;
        org.apache.lucene.index.Terms terms53 = null;
        kuromojiAnalysisTests48.assertTermsEquals("tests.failfast", indexReader51, terms52, terms53, false);
        org.junit.rules.RuleChain ruleChain56 = kuromojiAnalysisTests48.failureAndSuccessEvents;
        org.junit.Assert.assertNotSame("hi!", (java.lang.Object) ruleChain56, (java.lang.Object) "tests.weekly");
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests44, (java.lang.Object) ruleChain56);
        org.junit.Assert.assertNotSame("", (java.lang.Object) "tests.awaitsfix", (java.lang.Object) kuromojiAnalysisTests44);
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests44);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (java.lang.Object) '#', (java.lang.Object) kuromojiAnalysisTests44);
    }

    @Test
    public void test4103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4103");
        java.io.Serializable[] serializableArray5 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet6 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray5);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray7 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet8 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray7);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray5, (java.lang.Object[]) throttlingArray7);
        org.apache.lucene.util.LuceneTestCase[] luceneTestCaseArray10 = new org.apache.lucene.util.LuceneTestCase[] {};
        java.util.Set<org.apache.lucene.util.LuceneTestCase> luceneTestCaseSet11 = org.apache.lucene.util.LuceneTestCase.asSet(luceneTestCaseArray10);
        org.junit.Assert.assertEquals("<unknown>", (java.lang.Object[]) throttlingArray7, (java.lang.Object[]) luceneTestCaseArray10);
        java.util.concurrent.ExecutorService[] executorServiceArray13 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean14 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray13);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray16 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet17 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray16);
        java.io.Serializable[] serializableArray19 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet20 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray19);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray21 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet22 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray21);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray19, (java.lang.Object[]) throttlingArray21);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray16, (java.lang.Object[]) serializableArray19);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray26 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet27 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray26);
        java.io.Serializable[] serializableArray29 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet30 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray29);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray31 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet32 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray31);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray29, (java.lang.Object[]) throttlingArray31);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray26, (java.lang.Object[]) serializableArray29);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray19, (java.lang.Object[]) throttlingArray26);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray37 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet38 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray37);
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet41 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray40);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray42 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet43 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray42);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray40, (java.lang.Object[]) throttlingArray42);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray37, (java.lang.Object[]) serializableArray40);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray26, (java.lang.Object[]) serializableArray40);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray13, (java.lang.Object[]) serializableArray40);
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (java.lang.Object[]) luceneTestCaseArray10, (java.lang.Object[]) serializableArray40);
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet52 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray51);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray53 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet54 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray53);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray51, (java.lang.Object[]) throttlingArray53);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray57 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet58 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray57);
        java.io.Serializable[] serializableArray60 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet61 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray60);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray62 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet63 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray62);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray60, (java.lang.Object[]) throttlingArray62);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray57, (java.lang.Object[]) serializableArray60);
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (java.lang.Object[]) throttlingArray53, (java.lang.Object[]) throttlingArray57);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray40, (java.lang.Object[]) throttlingArray53);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures[][][] testRuleIgnoreAfterMaxFailuresArray68 = new org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures[][][] {};
        java.util.Set<org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures[][]> testRuleIgnoreAfterMaxFailuresArraySet69 = org.apache.lucene.util.LuceneTestCase.asSet(testRuleIgnoreAfterMaxFailuresArray68);
        java.io.Serializable[] serializableArray71 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet72 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray71);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray73 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet74 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray73);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray71, (java.lang.Object[]) throttlingArray73);
        java.io.Serializable[] serializableArray77 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet78 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray77);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray79 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet80 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray79);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray77, (java.lang.Object[]) throttlingArray79);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray71, (java.lang.Object[]) serializableArray77);
        java.util.concurrent.ExecutorService[] executorServiceArray83 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean84 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray83);
        boolean boolean85 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray83);
        boolean boolean86 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray83);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray77, (java.lang.Object[]) executorServiceArray83);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) testRuleIgnoreAfterMaxFailuresArray68, (java.lang.Object[]) executorServiceArray83);
        org.junit.Assert.assertNotSame("", (java.lang.Object) throttlingArray53, (java.lang.Object) executorServiceArray83);
        java.lang.Object obj90 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("hi!", (java.lang.Object) throttlingArray53, obj90);
    }

    @Test
    public void test4104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4104");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", (long) (byte) 1, (long) (byte) 10);
    }

    @Test
    public void test4105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4105");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (double) (short) -1, (double) (short) 10, (double) (byte) 0);
    }

    @Test
    public void test4106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4106");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("<unknown>", (double) (short) 1, (double) 'a');
    }

    @Test
    public void test4107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4107");
        java.lang.Object obj0 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests1.assertTermsEquals("hi!", indexReader11, terms12, terms13, true);
        java.lang.String str16 = kuromojiAnalysisTests1.getTestName();
        org.apache.lucene.index.IndexReader indexReader18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("", indexReader18, (int) (byte) 0, postingsEnum20, postingsEnum21, false);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.junit.rules.RuleChain ruleChain25 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("random", indexReader27, (int) (short) 0, postingsEnum29, postingsEnum30);
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.junit.rules.TestRule testRule34 = kuromojiAnalysisTests1.ruleChain;
        org.junit.Assert.assertNotSame(obj0, (java.lang.Object) kuromojiAnalysisTests1);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.NumericDocValues numericDocValues39 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues40 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocValuesEquals("tests.failfast", (int) (short) 10, numericDocValues39, numericDocValues40);
    }

    @Test
    public void test4108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4108");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.junit.rules.RuleChain ruleChain8 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.setUp();
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("hi!", postingsEnum14, postingsEnum15);
    }

    @Test
    public void test4109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4109");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) 5, (long) (byte) 1);
    }

    @Test
    public void test4110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4110");
        java.util.concurrent.ExecutorService executorService0 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray1 = new java.util.concurrent.ExecutorService[] { executorService0 };
        boolean boolean2 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean4 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean5 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        java.io.Serializable[][][][][][][] serializableArray6 = new java.io.Serializable[][][][][][][] {};
        java.util.Set<java.io.Serializable[][][][][][]> serializableArraySet7 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray6);
        java.util.Set<java.io.Serializable[][][][][][]> serializableArraySet8 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray6);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray1, (java.lang.Object[]) serializableArray6);
    }

    @Test
    public void test4111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4111");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.awaitsfix", (double) 10, (double) 0.0f, (double) (byte) 0);
    }

    @Test
    public void test4112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4112");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (float) 10L, (float) (-1), 0.0f);
    }

    @Test
    public void test4113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4113");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests3 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests3.tearDown();
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        kuromojiAnalysisTests3.assertTermsEquals("tests.failfast", indexReader6, terms7, terms8, false);
        kuromojiAnalysisTests3.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain13 = kuromojiAnalysisTests3.failureAndSuccessEvents;
        kuromojiAnalysisTests3.assertPathHasBeenCleared("tests.awaitsfix");
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) "tests.awaitsfix");
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test4114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4114");
        java.util.concurrent.ExecutorService executorService1 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray2 = new java.util.concurrent.ExecutorService[] { executorService1 };
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean4 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean5 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray10 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet11 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray10);
        java.io.Serializable[] serializableArray13 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet14 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray13);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray15 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet16 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray15);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray13, (java.lang.Object[]) throttlingArray15);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray10, (java.lang.Object[]) serializableArray13);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray20 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet21 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray20);
        java.io.Serializable[] serializableArray23 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet24 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray23);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray25 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet26 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray25);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray23, (java.lang.Object[]) throttlingArray25);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray20, (java.lang.Object[]) serializableArray23);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray13, (java.lang.Object[]) throttlingArray20);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray31 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet32 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray31);
        java.io.Serializable[] serializableArray34 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet35 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray34);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray36 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet37 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray36);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray34, (java.lang.Object[]) throttlingArray36);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray31, (java.lang.Object[]) serializableArray34);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray20, (java.lang.Object[]) serializableArray34);
        java.io.Serializable[] serializableArray44 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet45 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray44);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray46 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet47 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray46);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray44, (java.lang.Object[]) throttlingArray46);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet51 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray50);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray52 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet53 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray52);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray50, (java.lang.Object[]) throttlingArray52);
        java.io.Serializable[] serializableArray56 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet57 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray56);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray58 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet59 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray58);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray56, (java.lang.Object[]) throttlingArray58);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray50, (java.lang.Object[]) serializableArray56);
        org.junit.Assert.assertEquals("tests.badapples", (java.lang.Object[]) serializableArray44, (java.lang.Object[]) serializableArray50);
        java.util.concurrent.ExecutorService[] executorServiceArray63 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean64 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray63);
        boolean boolean65 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray63);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", (java.lang.Object[]) serializableArray50, (java.lang.Object[]) executorServiceArray63);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", (java.lang.Object[]) throttlingArray20, (java.lang.Object[]) serializableArray50);
        org.junit.Assert.assertNotNull("tests.maxfailures", (java.lang.Object) serializableArray50);
        java.util.List[][][] listArray70 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<org.junit.rules.RuleChain>[][][] ruleChainListArray71 = (java.util.List<org.junit.rules.RuleChain>[][][]) listArray70;
        java.util.Set<java.util.List<org.junit.rules.RuleChain>[][]> ruleChainListArraySet72 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainListArray71);
        org.junit.Assert.assertArrayEquals("<unknown>", (java.lang.Object[]) serializableArray50, (java.lang.Object[]) ruleChainListArray71);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) executorServiceArray2, (java.lang.Object[]) serializableArray50);
    }

    @Test
    public void test4115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4115");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) ' ', (double) 5, (double) 4);
    }

    @Test
    public void test4116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4116");
        java.io.Serializable[][][][] serializableArray1 = new java.io.Serializable[][][][] {};
        java.util.List<java.io.Serializable[][][]> serializableArrayList2 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 0, serializableArray1);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests3 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule4 = kuromojiAnalysisTests3.ruleChain;
        org.apache.lucene.index.PostingsEnum postingsEnum6 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum7 = null;
        kuromojiAnalysisTests3.assertDocsEnumEquals("random", postingsEnum6, postingsEnum7, true);
        org.junit.rules.TestRule testRule10 = kuromojiAnalysisTests3.ruleChain;
        kuromojiAnalysisTests3.setUp();
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        kuromojiAnalysisTests3.assertPositionsSkippingEquals("hi!", indexReader13, (int) (short) -1, postingsEnum15, postingsEnum16);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) (short) 0, (java.lang.Object) (short) -1);
    }

    @Test
    public void test4117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4117");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(0L, 100L);
    }

    @Test
    public void test4118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4118");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.awaitsfix", (double) 1L, (double) (byte) 0, (double) (short) 100);
    }

    @Test
    public void test4119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4119");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.weekly", (long) 5, (long) (short) -1);
    }

    @Test
    public void test4120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4120");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.weekly", (double) 100.0f, (double) (short) 1);
    }

    @Test
    public void test4121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4121");
        org.apache.lucene.util.LuceneTestCase[] luceneTestCaseArray1 = new org.apache.lucene.util.LuceneTestCase[] {};
        java.util.Set<org.apache.lucene.util.LuceneTestCase> luceneTestCaseSet2 = org.apache.lucene.util.LuceneTestCase.asSet(luceneTestCaseArray1);
        java.io.Serializable[] serializableArray4 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet5 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray4);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray6 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet7 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray6);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray4, (java.lang.Object[]) throttlingArray6);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) luceneTestCaseArray1, (java.lang.Object[]) serializableArray4);
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "tests.maxfailures", "tests.nightly" };
        java.lang.String[] strArray20 = new java.lang.String[] { "", "hi!", "tests.maxfailures", "tests.nightly" };
        java.lang.String[] strArray25 = new java.lang.String[] { "", "hi!", "tests.maxfailures", "tests.nightly" };
        java.lang.String[] strArray30 = new java.lang.String[] { "", "hi!", "tests.maxfailures", "tests.nightly" };
        java.lang.String[][] strArray31 = new java.lang.String[][] { strArray15, strArray20, strArray25, strArray30 };
        java.util.List<java.lang.String[]> strArrayList32 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (byte) 1, strArray31);
        java.util.Set<java.lang.String[]> strArraySet33 = org.apache.lucene.util.LuceneTestCase.asSet(strArray31);
        java.util.Set<java.lang.String[]> strArraySet34 = org.apache.lucene.util.LuceneTestCase.asSet(strArray31);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray4, (java.lang.Object[]) strArray31);
    }

    @Test
    public void test4122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4122");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule12 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum17 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("", postingsEnum16, postingsEnum17, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests20.tearDown();
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        org.apache.lucene.index.Terms terms25 = null;
        kuromojiAnalysisTests20.assertTermsEquals("tests.failfast", indexReader23, terms24, terms25, false);
        kuromojiAnalysisTests20.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.Terms terms31 = null;
        org.apache.lucene.index.Terms terms32 = null;
        kuromojiAnalysisTests20.assertTermsEquals("hi!", indexReader30, terms31, terms32, true);
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum39 = null;
        kuromojiAnalysisTests20.assertDocsSkippingEquals("hi!", indexReader36, (int) (byte) 1, postingsEnum38, postingsEnum39, false);
        org.junit.rules.RuleChain ruleChain42 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain43 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain42);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests44 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule45 = kuromojiAnalysisTests44.ruleChain;
        org.junit.rules.RuleChain ruleChain46 = ruleChain43.around(testRule45);
        kuromojiAnalysisTests20.failureAndSuccessEvents = ruleChain46;
        kuromojiAnalysisTests20.ensureCheckIndexPassed();
        kuromojiAnalysisTests20.ensureAllSearchContextsReleased();
        java.lang.String str50 = kuromojiAnalysisTests20.getTestName();
        kuromojiAnalysisTests20.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests20.restoreIndexWriterMaxDocs();
        org.junit.rules.TestRule testRule53 = kuromojiAnalysisTests20.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.failfast", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests20);
    }

    @Test
    public void test4123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4123");
        java.util.Locale locale2 = org.apache.lucene.util.LuceneTestCase.localeForName("hi!");
        org.apache.lucene.search.QueryCachingPolicy queryCachingPolicy3 = org.apache.lucene.util.LuceneTestCase.MAYBE_CACHE_POLICY;
        org.junit.rules.TestRule testRule4 = null;
        org.junit.rules.RuleChain ruleChain5 = org.junit.rules.RuleChain.outerRule(testRule4);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain5;
        org.junit.rules.TestRule testRule7 = null;
        org.junit.rules.RuleChain ruleChain8 = org.junit.rules.RuleChain.outerRule(testRule7);
        org.junit.rules.RuleChain ruleChain9 = ruleChain5.around((org.junit.rules.TestRule) ruleChain8);
        org.junit.Assert.assertNotSame((java.lang.Object) queryCachingPolicy3, (java.lang.Object) ruleChain9);
        org.junit.rules.RuleChain ruleChain11 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain12 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain11);
        org.junit.rules.RuleChain ruleChain13 = ruleChain9.around((org.junit.rules.TestRule) ruleChain11);
        org.junit.Assert.assertNotSame((java.lang.Object) locale2, (java.lang.Object) ruleChain9);
        java.util.Locale locale16 = org.apache.lucene.util.LuceneTestCase.localeForName("hi!");
        java.util.Locale locale18 = org.apache.lucene.util.LuceneTestCase.localeForName("<unknown>");
        java.util.Locale locale20 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.badapples");
        java.util.Locale locale22 = org.apache.lucene.util.LuceneTestCase.localeForName("europarl.lines.txt.gz");
        java.util.Locale locale24 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.nightly");
        java.util.Locale[] localeArray25 = new java.util.Locale[] { locale2, locale16, locale18, locale20, locale22, locale24 };
        java.util.Set<java.util.Locale> localeSet26 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray25);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("", (java.lang.Object) localeSet26);
    }

    @Test
    public void test4124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4124");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 10L, (double) (-1), 1.0d);
    }

    @Test
    public void test4125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4125");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests0.assertTermsEquals("hi!", indexReader10, terms11, terms12, true);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("hi!", indexReader16, (int) (byte) 1, postingsEnum18, postingsEnum19, false);
        org.junit.rules.RuleChain ruleChain22 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain23 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain22);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests24 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule25 = kuromojiAnalysisTests24.ruleChain;
        org.junit.rules.RuleChain ruleChain26 = ruleChain23.around(testRule25);
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain26;
        java.util.concurrent.ExecutorService executorService28 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray29 = new java.util.concurrent.ExecutorService[] { executorService28 };
        boolean boolean30 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray29);
        boolean boolean31 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray29);
        boolean boolean32 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray29);
        boolean boolean33 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray29);
        org.junit.Assert.assertNotSame((java.lang.Object) ruleChain26, (java.lang.Object) executorServiceArray29);
        boolean boolean35 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray29);
        boolean boolean36 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray29);
        boolean boolean37 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray29);
        boolean boolean38 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray29);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests39 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests39.tearDown();
        org.apache.lucene.index.IndexReader indexReader42 = null;
        org.apache.lucene.index.Terms terms43 = null;
        org.apache.lucene.index.Terms terms44 = null;
        kuromojiAnalysisTests39.assertTermsEquals("tests.failfast", indexReader42, terms43, terms44, false);
        kuromojiAnalysisTests39.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader49 = null;
        org.apache.lucene.index.Terms terms50 = null;
        org.apache.lucene.index.Terms terms51 = null;
        kuromojiAnalysisTests39.assertTermsEquals("hi!", indexReader49, terms50, terms51, true);
        kuromojiAnalysisTests39.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests39.assertPathHasBeenCleared("tests.maxfailures");
        kuromojiAnalysisTests39.ensureCleanedUp();
        kuromojiAnalysisTests39.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests39.setIndexWriterMaxDocs(100);
        kuromojiAnalysisTests39.overrideTestDefaultQueryCache();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) boolean38, (java.lang.Object) kuromojiAnalysisTests39);
    }

    @Test
    public void test4126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4126");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) "tests.awaitsfix");
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray22 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray21, byteArray22);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray26 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray25, byteArray26);
        org.junit.Assert.assertArrayEquals(byteArray22, byteArray25);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray31 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray30, byteArray31);
        byte[] byteArray34 = new byte[] {};
        byte[] byteArray35 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray34, byteArray35);
        org.junit.Assert.assertArrayEquals(byteArray31, byteArray34);
        org.junit.Assert.assertArrayEquals(byteArray25, byteArray34);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray42 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray41, byteArray42);
        byte[] byteArray45 = new byte[] {};
        byte[] byteArray46 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray45, byteArray46);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray42, byteArray46);
        org.junit.Assert.assertArrayEquals("tests.badapples", byteArray25, byteArray42);
        byte[] byteArray52 = new byte[] {};
        byte[] byteArray53 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray52, byteArray53);
        byte[] byteArray56 = new byte[] {};
        byte[] byteArray57 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray56, byteArray57);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray53, byteArray57);
        byte[] byteArray61 = new byte[] {};
        byte[] byteArray62 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray61, byteArray62);
        byte[] byteArray65 = new byte[] {};
        byte[] byteArray66 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray65, byteArray66);
        org.junit.Assert.assertArrayEquals(byteArray62, byteArray65);
        org.junit.Assert.assertArrayEquals(byteArray53, byteArray65);
        org.junit.Assert.assertArrayEquals(byteArray42, byteArray65);
        java.lang.Object obj71 = null;
        org.junit.Assert.assertNotEquals((java.lang.Object) byteArray65, obj71);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) kuromojiAnalysisTests0, obj71);
    }

    @Test
    public void test4127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4127");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) "");
        java.lang.String str5 = kuromojiAnalysisTests1.getTestName();
        org.junit.rules.RuleChain ruleChain6 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain7 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain6);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests8 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule9 = kuromojiAnalysisTests8.ruleChain;
        org.junit.rules.RuleChain ruleChain10 = ruleChain7.around(testRule9);
        org.junit.rules.RuleChain ruleChain11 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain10);
        org.apache.lucene.search.QueryCachingPolicy queryCachingPolicy14 = org.apache.lucene.util.LuceneTestCase.MAYBE_CACHE_POLICY;
        org.junit.rules.TestRule testRule15 = null;
        org.junit.rules.RuleChain ruleChain16 = org.junit.rules.RuleChain.outerRule(testRule15);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain16;
        org.junit.rules.TestRule testRule18 = null;
        org.junit.rules.RuleChain ruleChain19 = org.junit.rules.RuleChain.outerRule(testRule18);
        org.junit.rules.RuleChain ruleChain20 = ruleChain16.around((org.junit.rules.TestRule) ruleChain19);
        org.junit.Assert.assertNotSame((java.lang.Object) queryCachingPolicy14, (java.lang.Object) ruleChain20);
        org.junit.rules.RuleChain ruleChain22 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain23 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain22);
        org.junit.rules.RuleChain ruleChain24 = ruleChain20.around((org.junit.rules.TestRule) ruleChain22);
        org.junit.Assert.assertNotSame("tests.slow", (java.lang.Object) "tests.badapples", (java.lang.Object) ruleChain20);
        org.junit.rules.RuleChain ruleChain26 = ruleChain11.around((org.junit.rules.TestRule) ruleChain20);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain11;
        kuromojiAnalysisTests1.ensureCleanedUp();
        java.lang.String str29 = kuromojiAnalysisTests1.getTestName();
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests1);
        kuromojiAnalysisTests1.setIndexWriterMaxDocs(4);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.apache.lucene.index.PostingsEnum postingsEnum35 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum36 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocsAndPositionsEnumEquals("random", postingsEnum35, postingsEnum36);
    }

    @Test
    public void test4128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4128");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (long) (short) 1, (long) ' ');
    }

    @Test
    public void test4129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4129");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", (double) (-1L), (double) 100);
    }

    @Test
    public void test4130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4130");
        float[] floatArray1 = null;
        float[] floatArray9 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray15 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray9, floatArray15, (float) (byte) 100);
        float[] floatArray24 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray30 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray24, floatArray30, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray9, floatArray24, (float) (short) 1);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests35 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests35.tearDown();
        org.apache.lucene.index.IndexReader indexReader38 = null;
        org.apache.lucene.index.Terms terms39 = null;
        org.apache.lucene.index.Terms terms40 = null;
        kuromojiAnalysisTests35.assertTermsEquals("tests.failfast", indexReader38, terms39, terms40, false);
        kuromojiAnalysisTests35.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests35.ensureAllSearchContextsReleased();
        java.lang.String str46 = kuromojiAnalysisTests35.getTestName();
        kuromojiAnalysisTests35.assertPathHasBeenCleared("enwiki.random.lines.txt");
        kuromojiAnalysisTests35.setIndexWriterMaxDocs(1);
        org.apache.lucene.index.IndexReader indexReader52 = null;
        org.apache.lucene.index.Fields fields53 = null;
        org.apache.lucene.index.Fields fields54 = null;
        kuromojiAnalysisTests35.assertFieldsEquals("random", indexReader52, fields53, fields54, true);
        org.junit.rules.RuleChain ruleChain57 = kuromojiAnalysisTests35.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain58 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain57);
        org.junit.Assert.assertNotEquals("", (java.lang.Object) floatArray9, (java.lang.Object) ruleChain57);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.weekly", floatArray1, floatArray9, (float) (-1));
    }

    @Test
    public void test4131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4131");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.weekly", postingsEnum9, postingsEnum10, true);
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) ' ');
        org.junit.rules.TestRule testRule15 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests17 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule18 = kuromojiAnalysisTests17.ruleChain;
        kuromojiAnalysisTests17.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests21 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests21.tearDown();
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.Terms terms25 = null;
        org.apache.lucene.index.Terms terms26 = null;
        kuromojiAnalysisTests21.assertTermsEquals("tests.failfast", indexReader24, terms25, terms26, false);
        org.junit.rules.RuleChain ruleChain29 = kuromojiAnalysisTests21.failureAndSuccessEvents;
        org.junit.Assert.assertNotSame("hi!", (java.lang.Object) ruleChain29, (java.lang.Object) "tests.weekly");
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests17, (java.lang.Object) ruleChain29);
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum35 = null;
        kuromojiAnalysisTests17.assertDocsEnumEquals("tests.monster", postingsEnum34, postingsEnum35, true);
        kuromojiAnalysisTests17.tearDown();
        org.apache.lucene.index.IndexReader indexReader40 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum43 = null;
        kuromojiAnalysisTests17.assertPositionsSkippingEquals("tests.nightly", indexReader40, 100, postingsEnum42, postingsEnum43);
        kuromojiAnalysisTests17.ensureCheckIndexPassed();
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests17);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test4132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4132");
        float[] floatArray1 = null;
        float[] floatArray8 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray14 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray8, floatArray14, (float) (byte) 100);
        float[] floatArray23 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray29 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray23, floatArray29, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray8, floatArray23, (float) (short) 1);
        float[] floatArray40 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray46 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray40, floatArray46, (float) (byte) 100);
        float[] floatArray55 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray61 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray55, floatArray61, (float) (byte) 100);
        float[] floatArray70 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray76 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray70, floatArray76, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray55, floatArray70, (float) (short) 1);
        org.junit.Assert.assertArrayEquals(floatArray40, floatArray55, (float) (short) 100);
        org.junit.Assert.assertArrayEquals(floatArray8, floatArray40, (float) (-1));
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.maxfailures", floatArray1, floatArray8, (float) (short) 10);
    }

    @Test
    public void test4133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4133");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", (-1.0f), (float) (short) 100, (float) (byte) -1);
    }

    @Test
    public void test4134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4134");
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray4 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet5 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray4);
        java.io.Serializable[] serializableArray7 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet8 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray7);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray9 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet10 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray9);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray7, (java.lang.Object[]) throttlingArray9);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray4, (java.lang.Object[]) serializableArray7);
        java.io.Serializable[] serializableArray14 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet15 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray14);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray16 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet17 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray16);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray14, (java.lang.Object[]) throttlingArray16);
        org.junit.Assert.assertEquals("tests.monster", (java.lang.Object[]) throttlingArray4, (java.lang.Object[]) serializableArray14);
        java.util.List<java.lang.Object> objList20 = org.elasticsearch.test.ESTestCase.randomSubsetOf(0, (java.lang.Object[]) throttlingArray4);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray22 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet23 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray22);
        java.io.Serializable[] serializableArray25 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet26 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray25);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray27 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet28 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray27);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray25, (java.lang.Object[]) throttlingArray27);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray22, (java.lang.Object[]) serializableArray25);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray32 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet33 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray32);
        java.io.Serializable[] serializableArray35 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet36 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray35);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray37 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet38 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray37);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray35, (java.lang.Object[]) throttlingArray37);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray32, (java.lang.Object[]) serializableArray35);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray25, (java.lang.Object[]) throttlingArray32);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray43 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet44 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray43);
        java.io.Serializable[] serializableArray46 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet47 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray46);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray48 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet49 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray48);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray46, (java.lang.Object[]) throttlingArray48);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray43, (java.lang.Object[]) serializableArray46);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray32, (java.lang.Object[]) serializableArray46);
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingSet53 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray32);
        org.junit.Assert.assertArrayEquals("tests.monster", (java.lang.Object[]) throttlingArray4, (java.lang.Object[]) throttlingArray32);
        java.io.Serializable[] serializableArray56 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet57 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray56);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray58 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet59 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray58);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray56, (java.lang.Object[]) throttlingArray58);
        java.io.Serializable[] serializableArray62 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet63 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray62);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray64 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet65 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray64);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray62, (java.lang.Object[]) throttlingArray64);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray56, (java.lang.Object[]) serializableArray62);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) throttlingArray32, (java.lang.Object[]) serializableArray56);
        java.lang.Object[] objArray69 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray32, objArray69);
    }

    @Test
    public void test4135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4135");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (double) 10, 100.0d, (double) (-1));
    }

    @Test
    public void test4136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4136");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) "tests.awaitsfix");
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        org.apache.lucene.index.Terms terms19 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader17, terms18, terms19, true);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.apache.lucene.index.NumericDocValues numericDocValues25 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues26 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("enwiki.random.lines.txt", (-1), numericDocValues25, numericDocValues26);
    }

    @Test
    public void test4137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4137");
        short[] shortArray0 = null;
        short[] shortArray5 = new short[] {};
        short[] shortArray6 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray5, shortArray6);
        short[] shortArray8 = new short[] {};
        short[] shortArray9 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray8, shortArray9);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray5, shortArray9);
        short[] shortArray13 = new short[] {};
        short[] shortArray14 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray13, shortArray14);
        short[] shortArray16 = new short[] {};
        short[] shortArray17 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray16, shortArray17);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray13, shortArray17);
        org.junit.Assert.assertArrayEquals("<unknown>", shortArray5, shortArray17);
        short[] shortArray22 = new short[] {};
        short[] shortArray23 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray22, shortArray23);
        short[] shortArray26 = new short[] {};
        short[] shortArray27 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray26, shortArray27);
        short[] shortArray29 = new short[] {};
        short[] shortArray30 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray29, shortArray30);
        org.junit.Assert.assertArrayEquals("", shortArray27, shortArray29);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", shortArray22, shortArray27);
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray5, shortArray27);
        short[] shortArray36 = new short[] {};
        short[] shortArray37 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray36, shortArray37);
        short[] shortArray39 = new short[] {};
        short[] shortArray40 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray39, shortArray40);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray36, shortArray40);
        org.junit.Assert.assertArrayEquals(shortArray5, shortArray40);
        short[] shortArray44 = new short[] {};
        short[] shortArray45 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray44, shortArray45);
        short[] shortArray48 = new short[] {};
        short[] shortArray49 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray48, shortArray49);
        short[] shortArray51 = new short[] {};
        short[] shortArray52 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray51, shortArray52);
        org.junit.Assert.assertArrayEquals("", shortArray49, shortArray51);
        short[] shortArray56 = new short[] {};
        short[] shortArray57 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray56, shortArray57);
        short[] shortArray59 = new short[] {};
        short[] shortArray60 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray59, shortArray60);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray56, shortArray60);
        org.junit.Assert.assertArrayEquals(shortArray49, shortArray56);
        org.junit.Assert.assertArrayEquals(shortArray44, shortArray49);
        short[] shortArray66 = new short[] {};
        short[] shortArray67 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray66, shortArray67);
        short[] shortArray70 = new short[] {};
        short[] shortArray71 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray70, shortArray71);
        short[] shortArray73 = new short[] {};
        short[] shortArray74 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray73, shortArray74);
        org.junit.Assert.assertArrayEquals("", shortArray71, shortArray73);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", shortArray66, shortArray71);
        org.junit.Assert.assertArrayEquals(shortArray44, shortArray66);
        org.junit.Assert.assertArrayEquals(shortArray5, shortArray66);
        short[] shortArray81 = new short[] {};
        short[] shortArray82 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray81, shortArray82);
        short[] shortArray84 = new short[] {};
        short[] shortArray85 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray84, shortArray85);
        org.junit.Assert.assertArrayEquals("", shortArray82, shortArray84);
        short[] shortArray89 = new short[] {};
        short[] shortArray90 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray89, shortArray90);
        short[] shortArray92 = new short[] {};
        short[] shortArray93 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray92, shortArray93);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray89, shortArray93);
        org.junit.Assert.assertArrayEquals(shortArray82, shortArray89);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray5, shortArray89);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(shortArray0, shortArray5);
    }

    @Test
    public void test4138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4138");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((-1.0f), (float) '4', (float) (byte) 10);
    }

    @Test
    public void test4139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4139");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (float) 5, (float) 0L, (float) (byte) 0);
    }

    @Test
    public void test4140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4140");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule1 = kuromojiAnalysisTests0.ruleChain;
        org.apache.lucene.index.PostingsEnum postingsEnum3 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum4 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.failfast", postingsEnum3, postingsEnum4, true);
        org.junit.rules.TestRule testRule7 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.NumericDocValues numericDocValues12 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues13 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.weekly", (int) ' ', numericDocValues12, numericDocValues13);
    }

    @Test
    public void test4141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4141");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum7 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum8 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.maxfailures", indexReader5, 0, postingsEnum7, postingsEnum8);
        java.lang.String str10 = kuromojiAnalysisTests1.getTestName();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        org.apache.lucene.index.Terms terms14 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.badapples", indexReader12, terms13, terms14, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests17 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests17.tearDown();
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        org.apache.lucene.index.Terms terms22 = null;
        kuromojiAnalysisTests17.assertTermsEquals("tests.failfast", indexReader20, terms21, terms22, false);
        kuromojiAnalysisTests17.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests17.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests17.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests17.ensureCheckIndexPassed();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests17, (java.lang.Object) "tests.awaitsfix");
        kuromojiAnalysisTests17.tearDown();
        kuromojiAnalysisTests17.setUp();
        kuromojiAnalysisTests17.restoreIndexWriterMaxDocs();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests36 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule37 = kuromojiAnalysisTests36.ruleChain;
        org.junit.rules.TestRule testRule38 = null;
        org.junit.rules.RuleChain ruleChain39 = org.junit.rules.RuleChain.outerRule(testRule38);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain39;
        org.junit.rules.TestRule testRule41 = null;
        org.junit.rules.RuleChain ruleChain42 = org.junit.rules.RuleChain.outerRule(testRule41);
        org.junit.rules.RuleChain ruleChain43 = ruleChain39.around((org.junit.rules.TestRule) ruleChain42);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain39;
        kuromojiAnalysisTests36.failureAndSuccessEvents = ruleChain39;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests46 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests46.tearDown();
        org.apache.lucene.index.IndexReader indexReader49 = null;
        org.apache.lucene.index.Terms terms50 = null;
        org.apache.lucene.index.Terms terms51 = null;
        kuromojiAnalysisTests46.assertTermsEquals("tests.failfast", indexReader49, terms50, terms51, false);
        org.junit.rules.RuleChain ruleChain54 = kuromojiAnalysisTests46.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement55 = null;
        org.junit.runner.Description description56 = null;
        org.junit.runners.model.Statement statement57 = ruleChain54.apply(statement55, description56);
        org.junit.rules.RuleChain ruleChain58 = ruleChain39.around((org.junit.rules.TestRule) ruleChain54);
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests17, (java.lang.Object) ruleChain54);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain54;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests62 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests62.setUp();
        kuromojiAnalysisTests62.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests65 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests65.tearDown();
        org.apache.lucene.index.IndexReader indexReader68 = null;
        org.apache.lucene.index.Terms terms69 = null;
        org.apache.lucene.index.Terms terms70 = null;
        kuromojiAnalysisTests65.assertTermsEquals("tests.failfast", indexReader68, terms69, terms70, false);
        kuromojiAnalysisTests65.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain75 = kuromojiAnalysisTests65.failureAndSuccessEvents;
        kuromojiAnalysisTests65.assertPathHasBeenCleared("tests.awaitsfix");
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests62, (java.lang.Object) "tests.awaitsfix");
        kuromojiAnalysisTests62.resetCheckIndexStatus();
        java.io.Serializable[][][][] serializableArray81 = new java.io.Serializable[][][][] {};
        java.util.List<java.io.Serializable[][][]> serializableArrayList82 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 0, serializableArray81);
        org.junit.Assert.assertNotSame("tests.nightly", (java.lang.Object) kuromojiAnalysisTests62, (java.lang.Object) (short) 0);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) "tests.nightly");
    }

    @Test
    public void test4142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4142");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.junit.rules.RuleChain ruleChain8 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (short) -1);
        short[] shortArray16 = new short[] {};
        short[] shortArray17 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray16, shortArray17);
        short[] shortArray19 = new short[] {};
        short[] shortArray20 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray19, shortArray20);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray16, shortArray20);
        short[] shortArray24 = new short[] {};
        short[] shortArray25 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray24, shortArray25);
        short[] shortArray27 = new short[] {};
        short[] shortArray28 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray27, shortArray28);
        org.junit.Assert.assertArrayEquals("", shortArray25, shortArray27);
        short[] shortArray32 = new short[] {};
        short[] shortArray33 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray32, shortArray33);
        short[] shortArray35 = new short[] {};
        short[] shortArray36 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray35, shortArray36);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray32, shortArray36);
        org.junit.Assert.assertArrayEquals(shortArray27, shortArray36);
        org.junit.Assert.assertArrayEquals(shortArray20, shortArray36);
        short[] shortArray41 = new short[] {};
        short[] shortArray42 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray41, shortArray42);
        short[] shortArray45 = new short[] {};
        short[] shortArray46 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray45, shortArray46);
        short[] shortArray48 = new short[] {};
        short[] shortArray49 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray48, shortArray49);
        org.junit.Assert.assertArrayEquals("", shortArray46, shortArray48);
        short[] shortArray53 = new short[] {};
        short[] shortArray54 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray53, shortArray54);
        short[] shortArray56 = new short[] {};
        short[] shortArray57 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray56, shortArray57);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray53, shortArray57);
        org.junit.Assert.assertArrayEquals(shortArray46, shortArray53);
        org.junit.Assert.assertArrayEquals(shortArray41, shortArray46);
        short[] shortArray63 = new short[] {};
        short[] shortArray64 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray63, shortArray64);
        short[] shortArray67 = new short[] {};
        short[] shortArray68 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray67, shortArray68);
        short[] shortArray70 = new short[] {};
        short[] shortArray71 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray70, shortArray71);
        org.junit.Assert.assertArrayEquals("", shortArray68, shortArray70);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", shortArray63, shortArray68);
        org.junit.Assert.assertArrayEquals(shortArray41, shortArray63);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", shortArray36, shortArray63);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) (short) -1, (java.lang.Object) shortArray63);
    }

    @Test
    public void test4143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4143");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests0.assertTermsEquals("hi!", indexReader10, terms11, terms12, true);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("hi!", indexReader16, (int) (byte) 1, postingsEnum18, postingsEnum19, false);
        org.junit.rules.RuleChain ruleChain22 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain23 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain22);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests24 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule25 = kuromojiAnalysisTests24.ruleChain;
        org.junit.rules.RuleChain ruleChain26 = ruleChain23.around(testRule25);
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain26;
        java.util.concurrent.ExecutorService executorService28 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray29 = new java.util.concurrent.ExecutorService[] { executorService28 };
        boolean boolean30 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray29);
        boolean boolean31 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray29);
        boolean boolean32 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray29);
        boolean boolean33 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray29);
        org.junit.Assert.assertNotSame((java.lang.Object) ruleChain26, (java.lang.Object) executorServiceArray29);
        boolean boolean35 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray29);
        int[] intArray37 = new int[] { 1 };
        int[] intArray39 = new int[] { 1 };
        int[] intArray41 = new int[] { 1 };
        int[] intArray43 = new int[] { 1 };
        int[] intArray45 = new int[] { 1 };
        int[][] intArray46 = new int[][] { intArray37, intArray39, intArray41, intArray43, intArray45 };
        java.util.Set<int[]> intArraySet47 = org.apache.lucene.util.LuceneTestCase.asSet(intArray46);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray29, (java.lang.Object[]) intArray46);
    }

    @Test
    public void test4144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4144");
        org.junit.rules.RuleChain ruleChain2 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain3 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain2);
        org.apache.lucene.search.QueryCachingPolicy queryCachingPolicy4 = org.apache.lucene.util.LuceneTestCase.MAYBE_CACHE_POLICY;
        org.junit.rules.TestRule testRule5 = null;
        org.junit.rules.RuleChain ruleChain6 = org.junit.rules.RuleChain.outerRule(testRule5);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain6;
        org.junit.rules.TestRule testRule8 = null;
        org.junit.rules.RuleChain ruleChain9 = org.junit.rules.RuleChain.outerRule(testRule8);
        org.junit.rules.RuleChain ruleChain10 = ruleChain6.around((org.junit.rules.TestRule) ruleChain9);
        org.junit.Assert.assertNotSame((java.lang.Object) queryCachingPolicy4, (java.lang.Object) ruleChain10);
        org.junit.rules.RuleChain ruleChain12 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain13 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain12);
        org.junit.rules.RuleChain ruleChain14 = ruleChain10.around((org.junit.rules.TestRule) ruleChain12);
        org.junit.rules.RuleChain ruleChain15 = ruleChain3.around((org.junit.rules.TestRule) ruleChain14);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests16 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests16.tearDown();
        kuromojiAnalysisTests16.assertPathHasBeenCleared("hi!");
        kuromojiAnalysisTests16.setUp();
        org.junit.rules.TestRule testRule21 = null;
        org.junit.rules.RuleChain ruleChain22 = org.junit.rules.RuleChain.outerRule(testRule21);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain22;
        org.junit.rules.TestRule testRule24 = null;
        org.junit.rules.RuleChain ruleChain25 = org.junit.rules.RuleChain.outerRule(testRule24);
        org.junit.rules.RuleChain ruleChain26 = ruleChain22.around((org.junit.rules.TestRule) ruleChain25);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain26;
        kuromojiAnalysisTests16.failureAndSuccessEvents = ruleChain26;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain26;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests30 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule31 = kuromojiAnalysisTests30.ruleChain;
        org.junit.rules.TestRule testRule32 = null;
        org.junit.rules.RuleChain ruleChain33 = org.junit.rules.RuleChain.outerRule(testRule32);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain33;
        org.junit.rules.TestRule testRule35 = null;
        org.junit.rules.RuleChain ruleChain36 = org.junit.rules.RuleChain.outerRule(testRule35);
        org.junit.rules.RuleChain ruleChain37 = ruleChain33.around((org.junit.rules.TestRule) ruleChain36);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain33;
        kuromojiAnalysisTests30.failureAndSuccessEvents = ruleChain33;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests40 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule41 = kuromojiAnalysisTests40.ruleChain;
        org.junit.rules.TestRule testRule42 = null;
        org.junit.rules.RuleChain ruleChain43 = org.junit.rules.RuleChain.outerRule(testRule42);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain43;
        org.junit.rules.TestRule testRule45 = null;
        org.junit.rules.RuleChain ruleChain46 = org.junit.rules.RuleChain.outerRule(testRule45);
        org.junit.rules.RuleChain ruleChain47 = ruleChain43.around((org.junit.rules.TestRule) ruleChain46);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain43;
        kuromojiAnalysisTests40.failureAndSuccessEvents = ruleChain43;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests50 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests50.tearDown();
        org.apache.lucene.index.IndexReader indexReader53 = null;
        org.apache.lucene.index.Terms terms54 = null;
        org.apache.lucene.index.Terms terms55 = null;
        kuromojiAnalysisTests50.assertTermsEquals("tests.failfast", indexReader53, terms54, terms55, false);
        org.junit.rules.RuleChain ruleChain58 = kuromojiAnalysisTests50.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement59 = null;
        org.junit.runner.Description description60 = null;
        org.junit.runners.model.Statement statement61 = ruleChain58.apply(statement59, description60);
        org.junit.rules.RuleChain ruleChain62 = ruleChain43.around((org.junit.rules.TestRule) ruleChain58);
        org.junit.rules.TestRule testRule65 = null;
        org.junit.rules.RuleChain ruleChain66 = org.junit.rules.RuleChain.outerRule(testRule65);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain66;
        org.junit.rules.TestRule testRule68 = null;
        org.junit.rules.RuleChain ruleChain69 = org.junit.rules.RuleChain.outerRule(testRule68);
        org.junit.rules.RuleChain ruleChain70 = ruleChain66.around((org.junit.rules.TestRule) ruleChain69);
        org.junit.Assert.assertNotSame("tests.maxfailures", (java.lang.Object) "tests.weekly", (java.lang.Object) ruleChain69);
        org.junit.rules.TestRule testRule72 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.junit.rules.RuleChain ruleChain73 = ruleChain69.around(testRule72);
        org.junit.rules.RuleChain ruleChain74 = ruleChain62.around((org.junit.rules.TestRule) ruleChain69);
        org.junit.rules.RuleChain ruleChain75 = ruleChain33.around((org.junit.rules.TestRule) ruleChain62);
        org.junit.rules.RuleChain ruleChain76 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain33);
        org.junit.rules.RuleChain ruleChain77 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain33);
        org.junit.rules.RuleChain ruleChain78 = ruleChain26.around((org.junit.rules.TestRule) ruleChain77);
        org.junit.Assert.assertNotEquals("europarl.lines.txt.gz", (java.lang.Object) ruleChain3, (java.lang.Object) ruleChain78);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.slow", (java.lang.Object) ruleChain78);
    }

    @Test
    public void test4145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4145");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests1.assertTermsEquals("hi!", indexReader11, terms12, terms13, true);
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.maxfailures");
        kuromojiAnalysisTests1.setIndexWriterMaxDocs(0);
        org.junit.rules.RuleChain ruleChain21 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        java.lang.String str22 = kuromojiAnalysisTests1.getTestName();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("<unknown>", (java.lang.Object) str22);
    }

    @Test
    public void test4146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4146");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 10, (double) '4');
    }

    @Test
    public void test4147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4147");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("enwiki.random.lines.txt", (double) (-1L), (double) (-1L));
    }

    @Test
    public void test4148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4148");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Fields fields16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("random", indexReader15, fields16, fields17, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.setUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests22 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests22.tearDown();
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.Terms terms26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        kuromojiAnalysisTests22.assertTermsEquals("tests.failfast", indexReader25, terms26, terms27, false);
        kuromojiAnalysisTests22.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.Terms terms33 = null;
        org.apache.lucene.index.Terms terms34 = null;
        kuromojiAnalysisTests22.assertTermsEquals("hi!", indexReader32, terms33, terms34, true);
        java.lang.String str37 = kuromojiAnalysisTests22.getTestName();
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        kuromojiAnalysisTests22.assertDocsSkippingEquals("", indexReader39, (int) (byte) 0, postingsEnum41, postingsEnum42, false);
        kuromojiAnalysisTests22.ensureCheckIndexPassed();
        org.junit.rules.RuleChain ruleChain46 = kuromojiAnalysisTests22.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader48 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum50 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum51 = null;
        kuromojiAnalysisTests22.assertPositionsSkippingEquals("random", indexReader48, (int) (short) 0, postingsEnum50, postingsEnum51);
        kuromojiAnalysisTests22.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests22.restoreIndexWriterMaxDocs();
        java.lang.String str55 = kuromojiAnalysisTests22.getTestName();
        kuromojiAnalysisTests22.ensureCleanedUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests22);
    }

    @Test
    public void test4149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4149");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", (long) 10, (long) (short) 1);
    }

    @Test
    public void test4150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4150");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.weekly", (long) 4, (long) (byte) 10);
    }

    @Test
    public void test4151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4151");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.weekly", (long) 10, 100L);
    }

    @Test
    public void test4152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4152");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.slow", indexReader11, terms12, terms13, false);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("<unknown>", indexReader17, (int) ' ', postingsEnum19, postingsEnum20, true);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("<unknown>", postingsEnum25, postingsEnum26);
    }

    @Test
    public void test4153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4153");
        double[] doubleArray1 = null;
        double[] doubleArray4 = new double[] {};
        double[] doubleArray5 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray4, doubleArray5, (double) '#');
        double[] doubleArray8 = new double[] {};
        double[] doubleArray9 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray8, doubleArray9, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray4, doubleArray8, (double) 3);
        double[] doubleArray15 = new double[] {};
        double[] doubleArray16 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray15, doubleArray16, (double) '#');
        double[] doubleArray19 = new double[] {};
        double[] doubleArray20 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray19, doubleArray20, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray15, doubleArray20, (double) 0.0f);
        double[] doubleArray25 = new double[] {};
        double[] doubleArray26 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray25, doubleArray26, (double) '#');
        double[] doubleArray29 = new double[] {};
        double[] doubleArray30 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray29, doubleArray30, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray25, doubleArray30, (double) 0.0f);
        org.junit.Assert.assertArrayEquals("", doubleArray15, doubleArray30, (double) 1);
        double[] doubleArray37 = new double[] {};
        double[] doubleArray38 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray37, doubleArray38, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray30, doubleArray38, (double) 2);
        org.junit.Assert.assertArrayEquals(doubleArray4, doubleArray38, (double) (short) -1);
        double[] doubleArray45 = new double[] {};
        double[] doubleArray46 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray45, doubleArray46, (double) '#');
        double[] doubleArray49 = new double[] {};
        double[] doubleArray50 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray49, doubleArray50, (double) '#');
        double[] doubleArray53 = new double[] {};
        double[] doubleArray54 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray53, doubleArray54, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray49, doubleArray53, (double) 3);
        org.junit.Assert.assertArrayEquals(doubleArray45, doubleArray53, (-1.0d));
        org.junit.Assert.assertArrayEquals("random", doubleArray38, doubleArray53, (double) (-1.0f));
        org.junit.Assert.assertNotNull("tests.maxfailures", (java.lang.Object) doubleArray53);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("random", doubleArray1, doubleArray53, 0.0d);
    }

    @Test
    public void test4154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4154");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.badapples");
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests0);
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests13 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests13.tearDown();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        kuromojiAnalysisTests13.assertTermsEquals("tests.failfast", indexReader16, terms17, terms18, false);
        org.junit.rules.RuleChain ruleChain21 = kuromojiAnalysisTests13.failureAndSuccessEvents;
        kuromojiAnalysisTests13.ensureCleanedUp();
        kuromojiAnalysisTests13.tearDown();
        java.lang.String str24 = kuromojiAnalysisTests13.getTestName();
        org.junit.rules.TestRule testRule27 = null;
        org.junit.rules.RuleChain ruleChain28 = org.junit.rules.RuleChain.outerRule(testRule27);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain28;
        org.junit.rules.TestRule testRule30 = null;
        org.junit.rules.RuleChain ruleChain31 = org.junit.rules.RuleChain.outerRule(testRule30);
        org.junit.rules.RuleChain ruleChain32 = ruleChain28.around((org.junit.rules.TestRule) ruleChain31);
        org.junit.Assert.assertNotSame("tests.maxfailures", (java.lang.Object) "tests.weekly", (java.lang.Object) ruleChain31);
        kuromojiAnalysisTests13.failureAndSuccessEvents = ruleChain31;
        org.junit.rules.TestRule testRule35 = kuromojiAnalysisTests13.ruleChain;
        org.junit.rules.RuleChain ruleChain36 = org.junit.rules.RuleChain.outerRule(testRule35);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests37 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests37.tearDown();
        org.apache.lucene.index.IndexReader indexReader40 = null;
        org.apache.lucene.index.Terms terms41 = null;
        org.apache.lucene.index.Terms terms42 = null;
        kuromojiAnalysisTests37.assertTermsEquals("tests.failfast", indexReader40, terms41, terms42, false);
        org.apache.lucene.index.PostingsEnum postingsEnum46 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum47 = null;
        kuromojiAnalysisTests37.assertDocsEnumEquals("tests.weekly", postingsEnum46, postingsEnum47, true);
        kuromojiAnalysisTests37.setIndexWriterMaxDocs((int) ' ');
        org.junit.rules.TestRule testRule52 = kuromojiAnalysisTests37.ruleChain;
        org.junit.rules.RuleChain ruleChain53 = ruleChain36.around(testRule52);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) ruleChain53);
    }

    @Test
    public void test4155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4155");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) 5, 1L);
    }

    @Test
    public void test4156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4156");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (byte) 100, (double) 4);
    }

    @Test
    public void test4157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4157");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.junit.Assert.assertNotEquals("tests.badapples", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) '4');
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("europarl.lines.txt.gz", indexReader16, 0, postingsEnum18, postingsEnum19, false);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.junit.rules.RuleChain ruleChain23 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain24 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain23);
        org.junit.rules.RuleChain ruleChain25 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain26 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain25);
        org.junit.rules.RuleChain ruleChain27 = ruleChain24.around((org.junit.rules.TestRule) ruleChain26);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests30 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests30.tearDown();
        org.apache.lucene.index.IndexReader indexReader33 = null;
        org.apache.lucene.index.Terms terms34 = null;
        org.apache.lucene.index.Terms terms35 = null;
        kuromojiAnalysisTests30.assertTermsEquals("tests.failfast", indexReader33, terms34, terms35, false);
        kuromojiAnalysisTests30.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader40 = null;
        org.apache.lucene.index.Terms terms41 = null;
        org.apache.lucene.index.Terms terms42 = null;
        kuromojiAnalysisTests30.assertTermsEquals("hi!", indexReader40, terms41, terms42, true);
        kuromojiAnalysisTests30.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests30.assertPathHasBeenCleared("tests.maxfailures");
        kuromojiAnalysisTests30.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests49 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests49.tearDown();
        kuromojiAnalysisTests49.assertPathHasBeenCleared("hi!");
        org.junit.Assert.assertNotEquals("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests30, (java.lang.Object) kuromojiAnalysisTests49);
        org.junit.rules.TestRule testRule54 = null;
        org.junit.rules.RuleChain ruleChain55 = org.junit.rules.RuleChain.outerRule(testRule54);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain55;
        org.junit.rules.TestRule testRule57 = null;
        org.junit.rules.RuleChain ruleChain58 = org.junit.rules.RuleChain.outerRule(testRule57);
        org.junit.rules.RuleChain ruleChain59 = ruleChain55.around((org.junit.rules.TestRule) ruleChain58);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests30, (java.lang.Object) ruleChain55);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain55;
        java.lang.Object obj62 = null;
        org.junit.Assert.assertNotEquals("tests.nightly", (java.lang.Object) ruleChain55, obj62);
        org.junit.rules.RuleChain ruleChain64 = ruleChain27.around((org.junit.rules.TestRule) ruleChain55);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain27;
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.NumericDocValues numericDocValues69 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues70 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocValuesEquals("tests.awaitsfix", 0, numericDocValues69, numericDocValues70);
    }

    @Test
    public void test4158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4158");
        float[] floatArray7 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray13 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray7, floatArray13, (float) (byte) 100);
        float[] floatArray23 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray29 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray23, floatArray29, (float) (byte) 100);
        float[] floatArray38 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray44 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray38, floatArray44, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray23, floatArray38, (float) (short) 1);
        float[] floatArray55 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray61 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray55, floatArray61, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", floatArray38, floatArray55, 0.0f);
        org.junit.Assert.assertArrayEquals(floatArray7, floatArray38, (float) 0);
        float[] floatArray68 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.monster", floatArray7, floatArray68, (float) 3);
    }

    @Test
    public void test4159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4159");
        long[] longArray1 = new long[] {};
        long[] longArray2 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray1, longArray2);
        long[] longArray5 = new long[] {};
        long[] longArray6 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray5, longArray6);
        org.junit.Assert.assertArrayEquals(longArray2, longArray6);
        long[] longArray10 = new long[] {};
        long[] longArray11 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray10, longArray11);
        long[] longArray14 = new long[] {};
        long[] longArray15 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray14, longArray15);
        org.junit.Assert.assertArrayEquals(longArray11, longArray15);
        org.junit.Assert.assertArrayEquals(longArray2, longArray11);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests19 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests19.tearDown();
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.Terms terms23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        kuromojiAnalysisTests19.assertTermsEquals("tests.failfast", indexReader22, terms23, terms24, false);
        kuromojiAnalysisTests19.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        kuromojiAnalysisTests19.assertDocsEnumEquals("europarl.lines.txt.gz", postingsEnum29, postingsEnum30, false);
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum35 = null;
        kuromojiAnalysisTests19.assertDocsEnumEquals("tests.maxfailures", postingsEnum34, postingsEnum35, true);
        long[] longArray39 = new long[] {};
        long[] longArray40 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray39, longArray40);
        long[] longArray43 = new long[] {};
        long[] longArray44 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray43, longArray44);
        org.junit.Assert.assertArrayEquals(longArray40, longArray44);
        long[] longArray48 = new long[] {};
        long[] longArray49 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray48, longArray49);
        long[] longArray52 = new long[] {};
        long[] longArray53 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray52, longArray53);
        org.junit.Assert.assertArrayEquals(longArray49, longArray53);
        org.junit.Assert.assertArrayEquals(longArray40, longArray49);
        org.junit.Assert.assertNotEquals((java.lang.Object) postingsEnum34, (java.lang.Object) longArray49);
        org.junit.Assert.assertArrayEquals(longArray2, longArray49);
        long[] longArray59 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(longArray2, longArray59);
    }

    @Test
    public void test4160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4160");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (short) 100);
        kuromojiAnalysisTests1.setUp();
        java.lang.String str13 = kuromojiAnalysisTests1.getTestName();
        org.junit.rules.RuleChain ruleChain14 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain15 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain14);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests16 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule17 = kuromojiAnalysisTests16.ruleChain;
        org.junit.rules.RuleChain ruleChain18 = ruleChain15.around(testRule17);
        org.junit.rules.RuleChain ruleChain19 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain18);
        org.junit.rules.TestRule testRule22 = null;
        org.junit.rules.RuleChain ruleChain23 = org.junit.rules.RuleChain.outerRule(testRule22);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain23;
        org.junit.rules.TestRule testRule25 = null;
        org.junit.rules.RuleChain ruleChain26 = org.junit.rules.RuleChain.outerRule(testRule25);
        org.junit.rules.RuleChain ruleChain27 = ruleChain23.around((org.junit.rules.TestRule) ruleChain26);
        org.junit.Assert.assertNotSame("tests.maxfailures", (java.lang.Object) "tests.weekly", (java.lang.Object) ruleChain26);
        org.junit.rules.TestRule testRule29 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.junit.rules.RuleChain ruleChain30 = ruleChain26.around(testRule29);
        org.junit.rules.RuleChain ruleChain31 = ruleChain18.around((org.junit.rules.TestRule) ruleChain30);
        org.junit.rules.TestRule testRule34 = null;
        org.junit.rules.RuleChain ruleChain35 = org.junit.rules.RuleChain.outerRule(testRule34);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain35;
        org.junit.rules.TestRule testRule37 = null;
        org.junit.rules.RuleChain ruleChain38 = org.junit.rules.RuleChain.outerRule(testRule37);
        org.junit.rules.RuleChain ruleChain39 = ruleChain35.around((org.junit.rules.TestRule) ruleChain38);
        org.junit.Assert.assertNotSame("tests.maxfailures", (java.lang.Object) "tests.weekly", (java.lang.Object) ruleChain38);
        org.junit.rules.TestRule testRule41 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.junit.rules.RuleChain ruleChain42 = ruleChain38.around(testRule41);
        org.junit.rules.RuleChain ruleChain43 = ruleChain18.around((org.junit.rules.TestRule) ruleChain42);
        org.junit.rules.RuleChain ruleChain44 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain42);
        org.junit.Assert.assertNotSame("random", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) ruleChain44);
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader48 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum50 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum51 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("hi!", indexReader48, 2, postingsEnum50, postingsEnum51, true);
        org.apache.lucene.index.NumericDocValues numericDocValues56 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues57 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocValuesEquals("hi!", 2, numericDocValues56, numericDocValues57);
    }

    @Test
    public void test4161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4161");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (byte) 100, (double) (byte) 0);
    }

    @Test
    public void test4162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4162");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.weekly", postingsEnum9, postingsEnum10, true);
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) ' ');
        org.junit.rules.TestRule testRule15 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.ensureCleanedUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertPathHasBeenCleared("");
    }

    @Test
    public void test4163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4163");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum7 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum8 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.maxfailures", indexReader5, 0, postingsEnum7, postingsEnum8);
        org.junit.rules.RuleChain ruleChain10 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain11 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain10);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule13 = kuromojiAnalysisTests12.ruleChain;
        org.junit.rules.RuleChain ruleChain14 = ruleChain11.around(testRule13);
        org.junit.rules.RuleChain ruleChain15 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain14);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain14;
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.junit.Assert.assertNotNull("tests.failfast", (java.lang.Object) kuromojiAnalysisTests1);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) "tests.failfast");
    }

    @Test
    public void test4164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4164");
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures[][][] testRuleIgnoreAfterMaxFailuresArray1 = new org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures[][][] {};
        java.util.Set<org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures[][]> testRuleIgnoreAfterMaxFailuresArraySet2 = org.apache.lucene.util.LuceneTestCase.asSet(testRuleIgnoreAfterMaxFailuresArray1);
        java.io.Serializable[] serializableArray4 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet5 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray4);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray6 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet7 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray6);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray4, (java.lang.Object[]) throttlingArray6);
        java.io.Serializable[] serializableArray10 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet11 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray10);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray12 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet13 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray12);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray10, (java.lang.Object[]) throttlingArray12);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray4, (java.lang.Object[]) serializableArray10);
        java.util.concurrent.ExecutorService[] executorServiceArray16 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean17 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray16);
        boolean boolean18 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray16);
        boolean boolean19 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray16);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray10, (java.lang.Object[]) executorServiceArray16);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) testRuleIgnoreAfterMaxFailuresArray1, (java.lang.Object[]) executorServiceArray16);
        boolean boolean22 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray16);
        boolean boolean23 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray16);
        java.lang.Object[] objArray24 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", (java.lang.Object[]) executorServiceArray16, objArray24);
    }

    @Test
    public void test4165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4165");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.PostingsEnum postingsEnum2 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum3 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.failfast", postingsEnum2, postingsEnum3, true);
        java.lang.String str6 = kuromojiAnalysisTests0.getTestName();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests8 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests8.tearDown();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests8.assertTermsEquals("tests.failfast", indexReader11, terms12, terms13, false);
        kuromojiAnalysisTests8.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests8.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule19 = kuromojiAnalysisTests8.ruleChain;
        org.junit.rules.RuleChain ruleChain20 = kuromojiAnalysisTests8.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        kuromojiAnalysisTests8.assertPositionsSkippingEquals("", indexReader22, (int) '#', postingsEnum24, postingsEnum25);
        kuromojiAnalysisTests8.overrideTestDefaultQueryCache();
        org.junit.rules.TestRule testRule28 = kuromojiAnalysisTests8.ruleChain;
        kuromojiAnalysisTests8.setIndexWriterMaxDocs((int) '4');
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        kuromojiAnalysisTests8.assertDocsEnumEquals("enwiki.random.lines.txt", postingsEnum32, postingsEnum33, false);
        java.lang.String str36 = kuromojiAnalysisTests8.getTestName();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests8);
    }

    @Test
    public void test4166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4166");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.setUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests4 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests4.tearDown();
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        org.apache.lucene.index.Terms terms9 = null;
        kuromojiAnalysisTests4.assertTermsEquals("tests.failfast", indexReader7, terms8, terms9, false);
        kuromojiAnalysisTests4.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests4.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests4.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests4.ensureCheckIndexPassed();
        kuromojiAnalysisTests4.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain20 = kuromojiAnalysisTests4.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests21 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests21.tearDown();
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.Terms terms25 = null;
        org.apache.lucene.index.Terms terms26 = null;
        kuromojiAnalysisTests21.assertTermsEquals("tests.failfast", indexReader24, terms25, terms26, false);
        kuromojiAnalysisTests21.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests21.ensureAllSearchContextsReleased();
        java.lang.String str32 = kuromojiAnalysisTests21.getTestName();
        org.junit.Assert.assertNotSame("hi!", (java.lang.Object) kuromojiAnalysisTests4, (java.lang.Object) str32);
        org.apache.lucene.index.IndexReader indexReader35 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum37 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        kuromojiAnalysisTests4.assertPositionsSkippingEquals("tests.nightly", indexReader35, (int) (short) 10, postingsEnum37, postingsEnum38);
        org.junit.rules.TestRule testRule40 = kuromojiAnalysisTests4.ruleChain;
        kuromojiAnalysisTests4.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain42 = kuromojiAnalysisTests4.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests4);
    }

    @Test
    public void test4167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4167");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests1.assertTermsEquals("hi!", indexReader11, terms12, terms13, true);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.maxfailures");
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.Fields fields22 = null;
        org.apache.lucene.index.Fields fields23 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("tests.monster", indexReader21, fields22, fields23, true);
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests27 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests27.tearDown();
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.Terms terms31 = null;
        org.apache.lucene.index.Terms terms32 = null;
        kuromojiAnalysisTests27.assertTermsEquals("tests.failfast", indexReader30, terms31, terms32, false);
        org.junit.rules.RuleChain ruleChain35 = kuromojiAnalysisTests27.failureAndSuccessEvents;
        kuromojiAnalysisTests27.ensureCleanedUp();
        kuromojiAnalysisTests27.tearDown();
        java.lang.String str38 = kuromojiAnalysisTests27.getTestName();
        org.junit.rules.TestRule testRule41 = null;
        org.junit.rules.RuleChain ruleChain42 = org.junit.rules.RuleChain.outerRule(testRule41);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain42;
        org.junit.rules.TestRule testRule44 = null;
        org.junit.rules.RuleChain ruleChain45 = org.junit.rules.RuleChain.outerRule(testRule44);
        org.junit.rules.RuleChain ruleChain46 = ruleChain42.around((org.junit.rules.TestRule) ruleChain45);
        org.junit.Assert.assertNotSame("tests.maxfailures", (java.lang.Object) "tests.weekly", (java.lang.Object) ruleChain45);
        kuromojiAnalysisTests27.failureAndSuccessEvents = ruleChain45;
        org.junit.rules.TestRule testRule49 = kuromojiAnalysisTests27.ruleChain;
        kuromojiAnalysisTests27.assertPathHasBeenCleared("tests.failfast");
        org.junit.rules.RuleChain ruleChain52 = kuromojiAnalysisTests27.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.monster", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests27);
    }

    @Test
    public void test4168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4168");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.junit.rules.TestRule testRule11 = kuromojiAnalysisTests0.ruleChain;
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("", indexReader13, (int) (byte) 10, postingsEnum15, postingsEnum16);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests19 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests19.tearDown();
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.Terms terms23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        kuromojiAnalysisTests19.assertTermsEquals("tests.failfast", indexReader22, terms23, terms24, false);
        kuromojiAnalysisTests19.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests19.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests19.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests19.ensureCheckIndexPassed();
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum35 = null;
        kuromojiAnalysisTests19.assertDocsEnumEquals("enwiki.random.lines.txt", postingsEnum34, postingsEnum35, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests38 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests38.tearDown();
        org.apache.lucene.index.IndexReader indexReader41 = null;
        org.apache.lucene.index.Terms terms42 = null;
        org.apache.lucene.index.Terms terms43 = null;
        kuromojiAnalysisTests38.assertTermsEquals("tests.failfast", indexReader41, terms42, terms43, false);
        kuromojiAnalysisTests38.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain48 = kuromojiAnalysisTests38.failureAndSuccessEvents;
        kuromojiAnalysisTests38.assertPathHasBeenCleared("tests.awaitsfix");
        kuromojiAnalysisTests38.setUp();
        java.lang.String str52 = kuromojiAnalysisTests38.getTestName();
        org.junit.rules.TestRule testRule53 = kuromojiAnalysisTests38.ruleChain;
        org.junit.Assert.assertNotEquals((java.lang.Object) "enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests38);
        kuromojiAnalysisTests38.ensureAllSearchContextsReleased();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests57 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests57.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests57, (java.lang.Object) "");
        kuromojiAnalysisTests57.setUp();
        org.apache.lucene.index.IndexReader indexReader63 = null;
        org.apache.lucene.index.Terms terms64 = null;
        org.apache.lucene.index.Terms terms65 = null;
        kuromojiAnalysisTests57.assertTermsEquals("", indexReader63, terms64, terms65, true);
        org.junit.Assert.assertNotSame("tests.awaitsfix", (java.lang.Object) kuromojiAnalysisTests38, (java.lang.Object) indexReader63);
        kuromojiAnalysisTests38.tearDown();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) "", (java.lang.Object) kuromojiAnalysisTests38);
    }

    @Test
    public void test4169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4169");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.Fields fields13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("tests.weekly", indexReader12, fields13, fields14, true);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.monster", indexReader19, 0, postingsEnum21, postingsEnum22, true);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests27 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests27.tearDown();
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.Terms terms31 = null;
        org.apache.lucene.index.Terms terms32 = null;
        kuromojiAnalysisTests27.assertTermsEquals("tests.failfast", indexReader30, terms31, terms32, false);
        kuromojiAnalysisTests27.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests27.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule38 = kuromojiAnalysisTests27.ruleChain;
        org.junit.rules.RuleChain ruleChain39 = kuromojiAnalysisTests27.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals((java.lang.Object) "random", (java.lang.Object) ruleChain39);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain39;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain39;
        org.junit.rules.TestRule testRule43 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.ensureCleanedUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test4170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4170");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (short) 10, (long) 4);
    }

    @Test
    public void test4171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4171");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("<unknown>", indexReader12, (-1), postingsEnum14, postingsEnum15);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("hi!");
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests21 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests21.tearDown();
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.Terms terms25 = null;
        org.apache.lucene.index.Terms terms26 = null;
        kuromojiAnalysisTests21.assertTermsEquals("tests.failfast", indexReader24, terms25, terms26, false);
        org.junit.rules.RuleChain ruleChain29 = kuromojiAnalysisTests21.failureAndSuccessEvents;
        kuromojiAnalysisTests21.setUp();
        kuromojiAnalysisTests21.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests21.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader34 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum36 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum37 = null;
        kuromojiAnalysisTests21.assertDocsSkippingEquals("tests.slow", indexReader34, (int) '4', postingsEnum36, postingsEnum37, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests40 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests40.tearDown();
        org.apache.lucene.index.IndexReader indexReader43 = null;
        org.apache.lucene.index.Terms terms44 = null;
        org.apache.lucene.index.Terms terms45 = null;
        kuromojiAnalysisTests40.assertTermsEquals("tests.failfast", indexReader43, terms44, terms45, false);
        org.apache.lucene.index.PostingsEnum postingsEnum49 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum50 = null;
        kuromojiAnalysisTests40.assertDocsEnumEquals("tests.weekly", postingsEnum49, postingsEnum50, true);
        kuromojiAnalysisTests40.setIndexWriterMaxDocs((int) ' ');
        kuromojiAnalysisTests40.setIndexWriterMaxDocs((int) ' ');
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests57 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests57.tearDown();
        org.apache.lucene.index.IndexReader indexReader60 = null;
        org.apache.lucene.index.Terms terms61 = null;
        org.apache.lucene.index.Terms terms62 = null;
        kuromojiAnalysisTests57.assertTermsEquals("tests.failfast", indexReader60, terms61, terms62, false);
        kuromojiAnalysisTests57.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests57.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests57.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests57.ensureCleanedUp();
        org.junit.rules.RuleChain ruleChain71 = kuromojiAnalysisTests57.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests40, (java.lang.Object) ruleChain71);
        kuromojiAnalysisTests21.failureAndSuccessEvents = ruleChain71;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) ruleChain71);
    }

    @Test
    public void test4172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4172");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests2.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        kuromojiAnalysisTests2.assertTermsEquals("tests.failfast", indexReader5, terms6, terms7, false);
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        kuromojiAnalysisTests2.ensureCleanedUp();
        kuromojiAnalysisTests2.tearDown();
        java.io.Serializable[] serializableArray13 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet14 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray13);
        org.junit.Assert.assertNotEquals("europarl.lines.txt.gz", (java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) serializableArray13);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests16 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests16.tearDown();
        kuromojiAnalysisTests16.setIndexWriterMaxDocs((int) (short) 100);
        org.junit.Assert.assertNotEquals("tests.maxfailures", (java.lang.Object) serializableArray13, (java.lang.Object) kuromojiAnalysisTests16);
        kuromojiAnalysisTests16.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests16.setIndexWriterMaxDocs((int) '#');
        org.apache.lucene.index.NumericDocValues numericDocValues26 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues27 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests16.assertDocValuesEquals("tests.badapples", (int) (byte) 0, numericDocValues26, numericDocValues27);
    }

    @Test
    public void test4173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4173");
        short[] shortArray3 = new short[] { (byte) 0, (short) 1 };
        short[] shortArray6 = new short[] { (byte) 0, (short) 1 };
        short[][] shortArray7 = new short[][] { shortArray3, shortArray6 };
        short[] shortArray10 = new short[] { (byte) 0, (short) 1 };
        short[] shortArray13 = new short[] { (byte) 0, (short) 1 };
        short[][] shortArray14 = new short[][] { shortArray10, shortArray13 };
        short[] shortArray17 = new short[] { (byte) 0, (short) 1 };
        short[] shortArray20 = new short[] { (byte) 0, (short) 1 };
        short[][] shortArray21 = new short[][] { shortArray17, shortArray20 };
        short[] shortArray24 = new short[] { (byte) 0, (short) 1 };
        short[] shortArray27 = new short[] { (byte) 0, (short) 1 };
        short[][] shortArray28 = new short[][] { shortArray24, shortArray27 };
        short[] shortArray31 = new short[] { (byte) 0, (short) 1 };
        short[] shortArray34 = new short[] { (byte) 0, (short) 1 };
        short[][] shortArray35 = new short[][] { shortArray31, shortArray34 };
        short[][][] shortArray36 = new short[][][] { shortArray7, shortArray14, shortArray21, shortArray28, shortArray35 };
        short[][][][] shortArray37 = new short[][][][] { shortArray36 };
        java.util.List<short[][][]> shortArrayList38 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (byte) 1, shortArray37);
        java.util.Set<short[][][]> shortArraySet39 = org.apache.lucene.util.LuceneTestCase.asSet(shortArray37);
        java.util.Set<short[][][]> shortArraySet40 = org.apache.lucene.util.LuceneTestCase.asSet(shortArray37);
        java.util.concurrent.ExecutorService[] executorServiceArray42 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean43 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray42);
        boolean boolean44 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray42);
        boolean boolean45 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray42);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray47 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet48 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray47);
        java.io.Serializable[] serializableArray50 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet51 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray50);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray52 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet53 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray52);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray50, (java.lang.Object[]) throttlingArray52);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray47, (java.lang.Object[]) serializableArray50);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray57 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet58 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray57);
        java.io.Serializable[] serializableArray60 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet61 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray60);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray62 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet63 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray62);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray60, (java.lang.Object[]) throttlingArray62);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray57, (java.lang.Object[]) serializableArray60);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray50, (java.lang.Object[]) throttlingArray57);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray68 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet69 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray68);
        java.io.Serializable[] serializableArray71 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet72 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray71);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray73 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet74 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray73);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray71, (java.lang.Object[]) throttlingArray73);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray68, (java.lang.Object[]) serializableArray71);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray57, (java.lang.Object[]) serializableArray71);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray42, (java.lang.Object[]) serializableArray71);
        boolean boolean79 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray42);
        boolean boolean80 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray42);
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) executorServiceArray42);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) shortArray37, (java.lang.Object[]) executorServiceArray42);
    }

    @Test
    public void test4174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4174");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.junit.rules.RuleChain ruleChain8 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.tearDown();
        java.lang.String str11 = kuromojiAnalysisTests0.getTestName();
        org.junit.rules.TestRule testRule14 = null;
        org.junit.rules.RuleChain ruleChain15 = org.junit.rules.RuleChain.outerRule(testRule14);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain15;
        org.junit.rules.TestRule testRule17 = null;
        org.junit.rules.RuleChain ruleChain18 = org.junit.rules.RuleChain.outerRule(testRule17);
        org.junit.rules.RuleChain ruleChain19 = ruleChain15.around((org.junit.rules.TestRule) ruleChain18);
        org.junit.Assert.assertNotSame("tests.maxfailures", (java.lang.Object) "tests.weekly", (java.lang.Object) ruleChain18);
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain18;
        org.junit.rules.TestRule testRule22 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) '#');
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Fields fields27 = null;
        org.apache.lucene.index.Fields fields28 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("tests.badapples", indexReader26, fields27, fields28, true);
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.Fields fields33 = null;
        org.apache.lucene.index.Fields fields34 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("tests.slow", indexReader32, fields33, fields34, false);
        org.apache.lucene.index.IndexReader indexReader38 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum40 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("hi!", indexReader38, (-1), postingsEnum40, postingsEnum41, true);
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum46 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("", postingsEnum45, postingsEnum46);
    }

    @Test
    public void test4175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4175");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (short) 1, (long) (byte) 0);
    }

    @Test
    public void test4176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4176");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests[][] kuromojiAnalysisTestsArray2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests[][] {};
        java.util.List<org.elasticsearch.index.analysis.KuromojiAnalysisTests[]> kuromojiAnalysisTestsArrayList3 = org.elasticsearch.test.ESTestCase.randomSubsetOf(0, kuromojiAnalysisTestsArray2);
        java.util.Set<org.elasticsearch.index.analysis.KuromojiAnalysisTests[]> kuromojiAnalysisTestsArraySet4 = org.apache.lucene.util.LuceneTestCase.asSet(kuromojiAnalysisTestsArray2);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("random", (java.lang.Object) kuromojiAnalysisTestsArraySet4);
    }

    @Test
    public void test4177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4177");
        int[] intArray4 = new int[] {};
        int[] intArray5 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray4, intArray5);
        int[] intArray8 = new int[] {};
        int[] intArray9 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray8, intArray9);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray5, intArray9);
        int[] intArray13 = new int[] {};
        int[] intArray14 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray13, intArray14);
        org.junit.Assert.assertArrayEquals("", intArray5, intArray13);
        int[] intArray19 = new int[] {};
        int[] intArray20 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray19, intArray20);
        int[] intArray22 = new int[] {};
        org.junit.Assert.assertArrayEquals(intArray19, intArray22);
        int[] intArray24 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray22, intArray24);
        int[] intArray28 = new int[] {};
        int[] intArray29 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray28, intArray29);
        int[] intArray33 = new int[] {};
        int[] intArray34 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray33, intArray34);
        int[] intArray36 = new int[] {};
        org.junit.Assert.assertArrayEquals(intArray33, intArray36);
        int[] intArray38 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray36, intArray38);
        org.junit.Assert.assertArrayEquals("", intArray29, intArray38);
        org.junit.Assert.assertArrayEquals(intArray24, intArray29);
        org.junit.Assert.assertArrayEquals(intArray13, intArray24);
        int[] intArray43 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("hi!", intArray13, intArray43);
    }

    @Test
    public void test4178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4178");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (short) 1, (long) 0);
    }

    @Test
    public void test4179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4179");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule12 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests1.tearDown();
        org.junit.Assert.assertNotNull("", (java.lang.Object) kuromojiAnalysisTests1);
        org.apache.lucene.index.NumericDocValues numericDocValues18 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues19 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocValuesEquals("tests.maxfailures", (int) (byte) -1, numericDocValues18, numericDocValues19);
    }

    @Test
    public void test4180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4180");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("enwiki.random.lines.txt", (long) (byte) 0, (-1L));
    }

    @Test
    public void test4181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4181");
        long[] longArray2 = new long[] { (byte) -1 };
        long[] longArray4 = new long[] { (byte) -1 };
        long[] longArray6 = new long[] { (byte) -1 };
        long[][] longArray7 = new long[][] { longArray2, longArray4, longArray6 };
        java.util.Set<long[]> longArraySet8 = org.apache.lucene.util.LuceneTestCase.asSet(longArray7);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests9 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests9.tearDown();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        org.apache.lucene.index.Terms terms14 = null;
        kuromojiAnalysisTests9.assertTermsEquals("tests.failfast", indexReader12, terms13, terms14, false);
        kuromojiAnalysisTests9.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests9.setIndexWriterMaxDocs((int) (short) 100);
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests9);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests21 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests21.tearDown();
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.Terms terms25 = null;
        org.apache.lucene.index.Terms terms26 = null;
        kuromojiAnalysisTests21.assertTermsEquals("tests.failfast", indexReader24, terms25, terms26, false);
        kuromojiAnalysisTests21.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests21.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests21.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests21.ensureCheckIndexPassed();
        kuromojiAnalysisTests21.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain37 = kuromojiAnalysisTests21.failureAndSuccessEvents;
        kuromojiAnalysisTests9.failureAndSuccessEvents = ruleChain37;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests39 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests39.tearDown();
        org.apache.lucene.index.IndexReader indexReader42 = null;
        org.apache.lucene.index.Terms terms43 = null;
        org.apache.lucene.index.Terms terms44 = null;
        kuromojiAnalysisTests39.assertTermsEquals("tests.failfast", indexReader42, terms43, terms44, false);
        kuromojiAnalysisTests39.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.PostingsEnum postingsEnum49 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum50 = null;
        kuromojiAnalysisTests39.assertDocsEnumEquals("europarl.lines.txt.gz", postingsEnum49, postingsEnum50, false);
        java.lang.String str53 = kuromojiAnalysisTests39.getTestName();
        org.junit.Assert.assertNotSame((java.lang.Object) ruleChain37, (java.lang.Object) kuromojiAnalysisTests39);
        org.junit.rules.TestRule testRule57 = null;
        org.junit.rules.RuleChain ruleChain58 = org.junit.rules.RuleChain.outerRule(testRule57);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain58;
        org.junit.rules.TestRule testRule60 = null;
        org.junit.rules.RuleChain ruleChain61 = org.junit.rules.RuleChain.outerRule(testRule60);
        org.junit.rules.RuleChain ruleChain62 = ruleChain58.around((org.junit.rules.TestRule) ruleChain61);
        org.junit.Assert.assertNotSame("tests.maxfailures", (java.lang.Object) "tests.weekly", (java.lang.Object) ruleChain61);
        org.junit.rules.TestRule testRule64 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.junit.rules.RuleChain ruleChain65 = ruleChain61.around(testRule64);
        org.junit.rules.RuleChain ruleChain66 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain61);
        org.junit.rules.RuleChain ruleChain67 = ruleChain37.around((org.junit.rules.TestRule) ruleChain61);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", (java.lang.Object) longArraySet8, (java.lang.Object) ruleChain37);
    }

    @Test
    public void test4182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4182");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (float) 0, (float) 'a', (float) 1L);
    }

    @Test
    public void test4183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4183");
        short[] shortArray0 = null;
        java.util.Locale locale4 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.badapples");
        short[] shortArray6 = new short[] {};
        short[] shortArray7 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray6, shortArray7);
        short[] shortArray9 = new short[] {};
        short[] shortArray10 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray9, shortArray10);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray6, shortArray10);
        org.junit.Assert.assertNotEquals("tests.nightly", (java.lang.Object) "tests.badapples", (java.lang.Object) shortArray10);
        short[] shortArray15 = new short[] {};
        short[] shortArray16 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray15, shortArray16);
        short[] shortArray18 = new short[] {};
        short[] shortArray19 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray18, shortArray19);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray15, shortArray19);
        org.junit.Assert.assertArrayEquals(shortArray10, shortArray19);
        short[] shortArray25 = new short[] {};
        short[] shortArray26 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray25, shortArray26);
        short[] shortArray28 = new short[] {};
        short[] shortArray29 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray28, shortArray29);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray25, shortArray29);
        short[] shortArray33 = new short[] {};
        short[] shortArray34 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray33, shortArray34);
        short[] shortArray36 = new short[] {};
        short[] shortArray37 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray36, shortArray37);
        org.junit.Assert.assertArrayEquals("", shortArray34, shortArray36);
        short[] shortArray41 = new short[] {};
        short[] shortArray42 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray41, shortArray42);
        short[] shortArray44 = new short[] {};
        short[] shortArray45 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray44, shortArray45);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray41, shortArray45);
        org.junit.Assert.assertArrayEquals(shortArray36, shortArray45);
        org.junit.Assert.assertArrayEquals(shortArray29, shortArray45);
        short[] shortArray51 = new short[] {};
        short[] shortArray52 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray51, shortArray52);
        short[] shortArray54 = new short[] {};
        short[] shortArray55 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray54, shortArray55);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray51, shortArray55);
        org.junit.Assert.assertArrayEquals(shortArray45, shortArray55);
        short[] shortArray61 = new short[] {};
        short[] shortArray62 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray61, shortArray62);
        short[] shortArray64 = new short[] {};
        short[] shortArray65 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray64, shortArray65);
        org.junit.Assert.assertArrayEquals("", shortArray62, shortArray64);
        short[] shortArray70 = new short[] {};
        short[] shortArray71 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray70, shortArray71);
        short[] shortArray74 = new short[] {};
        short[] shortArray75 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray74, shortArray75);
        short[] shortArray77 = new short[] {};
        short[] shortArray78 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray77, shortArray78);
        org.junit.Assert.assertArrayEquals("", shortArray75, shortArray77);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", shortArray70, shortArray75);
        short[] shortArray83 = new short[] {};
        short[] shortArray84 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray83, shortArray84);
        short[] shortArray86 = new short[] {};
        short[] shortArray87 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray86, shortArray87);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray83, shortArray87);
        org.junit.Assert.assertArrayEquals("tests.nightly", shortArray70, shortArray83);
        org.junit.Assert.assertArrayEquals("random", shortArray62, shortArray83);
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray55, shortArray62);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray19, shortArray62);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(shortArray0, shortArray19);
    }

    @Test
    public void test4184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4184");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 0.0f, (double) (byte) 100);
    }

    @Test
    public void test4185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4185");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.awaitsfix", (long) 'a', (-1L));
    }

    @Test
    public void test4186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4186");
        float[] floatArray0 = null;
        float[] floatArray7 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray13 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray7, floatArray13, (float) (byte) 100);
        float[] floatArray22 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray28 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray22, floatArray28, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray7, floatArray22, (float) (short) 1);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(floatArray0, floatArray7, (float) 100L);
    }

    @Test
    public void test4187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4187");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (byte) 0, (long) (byte) 100);
    }

    @Test
    public void test4188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4188");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests0.assertTermsEquals("random", indexReader11, terms12, terms13, false);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        org.apache.lucene.index.Terms terms19 = null;
        kuromojiAnalysisTests0.assertTermsEquals("europarl.lines.txt.gz", indexReader17, terms18, terms19, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests24 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests24.setUp();
        kuromojiAnalysisTests24.tearDown();
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        kuromojiAnalysisTests24.assertPositionsSkippingEquals("tests.maxfailures", indexReader28, 0, postingsEnum30, postingsEnum31);
        kuromojiAnalysisTests24.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests34.tearDown();
        org.apache.lucene.index.IndexReader indexReader37 = null;
        org.apache.lucene.index.Terms terms38 = null;
        org.apache.lucene.index.Terms terms39 = null;
        kuromojiAnalysisTests34.assertTermsEquals("tests.failfast", indexReader37, terms38, terms39, false);
        org.junit.rules.RuleChain ruleChain42 = kuromojiAnalysisTests34.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement43 = null;
        org.junit.runner.Description description44 = null;
        org.junit.runners.model.Statement statement45 = ruleChain42.apply(statement43, description44);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests46 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests46.tearDown();
        org.apache.lucene.index.IndexReader indexReader49 = null;
        org.apache.lucene.index.Terms terms50 = null;
        org.apache.lucene.index.Terms terms51 = null;
        kuromojiAnalysisTests46.assertTermsEquals("tests.failfast", indexReader49, terms50, terms51, false);
        kuromojiAnalysisTests46.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain56 = kuromojiAnalysisTests46.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain57 = ruleChain42.around((org.junit.rules.TestRule) ruleChain56);
        kuromojiAnalysisTests24.failureAndSuccessEvents = ruleChain56;
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) ruleChain56);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.ensureCleanedUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test4189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4189");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.junit.rules.RuleChain ruleChain12 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.monster", indexReader14, terms15, terms16, false);
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.NumericDocValues numericDocValues22 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues23 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.weekly", (int) (byte) 0, numericDocValues22, numericDocValues23);
    }

    @Test
    public void test4190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4190");
        short[] shortArray1 = new short[] {};
        short[] shortArray2 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray1, shortArray2);
        short[] shortArray5 = new short[] {};
        short[] shortArray6 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray5, shortArray6);
        short[] shortArray8 = new short[] {};
        short[] shortArray9 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray8, shortArray9);
        org.junit.Assert.assertArrayEquals("", shortArray6, shortArray8);
        short[] shortArray13 = new short[] {};
        short[] shortArray14 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray13, shortArray14);
        short[] shortArray16 = new short[] {};
        short[] shortArray17 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray16, shortArray17);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray13, shortArray17);
        org.junit.Assert.assertArrayEquals(shortArray6, shortArray13);
        org.junit.Assert.assertArrayEquals(shortArray1, shortArray6);
        short[] shortArray23 = new short[] {};
        short[] shortArray24 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray23, shortArray24);
        short[] shortArray27 = new short[] {};
        short[] shortArray28 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray27, shortArray28);
        short[] shortArray30 = new short[] {};
        short[] shortArray31 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray30, shortArray31);
        org.junit.Assert.assertArrayEquals("", shortArray28, shortArray30);
        short[] shortArray35 = new short[] {};
        short[] shortArray36 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray35, shortArray36);
        short[] shortArray38 = new short[] {};
        short[] shortArray39 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray38, shortArray39);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray35, shortArray39);
        org.junit.Assert.assertArrayEquals(shortArray28, shortArray35);
        org.junit.Assert.assertArrayEquals(shortArray23, shortArray28);
        short[] shortArray46 = new short[] {};
        short[] shortArray47 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray46, shortArray47);
        short[] shortArray49 = new short[] {};
        short[] shortArray50 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray49, shortArray50);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray46, shortArray50);
        short[] shortArray54 = new short[] {};
        short[] shortArray55 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray54, shortArray55);
        short[] shortArray57 = new short[] {};
        short[] shortArray58 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray57, shortArray58);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray54, shortArray58);
        org.junit.Assert.assertArrayEquals("<unknown>", shortArray46, shortArray58);
        short[] shortArray62 = new short[] {};
        short[] shortArray63 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray62, shortArray63);
        org.junit.Assert.assertArrayEquals(shortArray58, shortArray62);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray28, shortArray62);
        org.junit.Assert.assertArrayEquals(shortArray6, shortArray62);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("enwiki.random.lines.txt", (java.lang.Object) shortArray6);
    }

    @Test
    public void test4191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4191");
        java.lang.Object[] objArray1 = null;
        java.io.Serializable[] serializableArray4 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet5 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray4);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray6 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet7 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray6);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray4, (java.lang.Object[]) throttlingArray6);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray10 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet11 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray10);
        java.io.Serializable[] serializableArray13 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet14 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray13);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray15 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet16 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray15);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray13, (java.lang.Object[]) throttlingArray15);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray10, (java.lang.Object[]) serializableArray13);
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (java.lang.Object[]) throttlingArray6, (java.lang.Object[]) throttlingArray10);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", objArray1, (java.lang.Object[]) throttlingArray10);
    }

    @Test
    public void test4192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4192");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.failfast", (-1.0d), (double) (byte) 10, (double) (short) 100);
    }

    @Test
    public void test4193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4193");
        char[] charArray4 = new char[] {};
        char[] charArray5 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray4, charArray5);
        char[] charArray8 = new char[] {};
        char[] charArray9 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray8, charArray9);
        org.junit.Assert.assertArrayEquals(charArray5, charArray9);
        char[] charArray14 = new char[] {};
        char[] charArray15 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray14, charArray15);
        char[] charArray18 = new char[] {};
        char[] charArray19 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray18, charArray19);
        char[] charArray22 = new char[] {};
        char[] charArray23 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray22, charArray23);
        org.junit.Assert.assertArrayEquals(charArray19, charArray23);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray15, charArray19);
        org.junit.Assert.assertArrayEquals(charArray5, charArray15);
        char[] charArray29 = new char[] {};
        char[] charArray30 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray29, charArray30);
        org.junit.Assert.assertArrayEquals("tests.weekly", charArray15, charArray29);
        char[] charArray34 = new char[] {};
        char[] charArray35 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray34, charArray35);
        char[] charArray38 = new char[] {};
        char[] charArray39 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray38, charArray39);
        org.junit.Assert.assertArrayEquals(charArray35, charArray39);
        org.junit.Assert.assertArrayEquals("tests.slow", charArray29, charArray39);
        char[] charArray45 = new char[] {};
        char[] charArray46 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray45, charArray46);
        char[] charArray49 = new char[] {};
        char[] charArray50 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray49, charArray50);
        org.junit.Assert.assertArrayEquals(charArray46, charArray50);
        char[] charArray55 = new char[] {};
        char[] charArray56 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray55, charArray56);
        char[] charArray59 = new char[] {};
        char[] charArray60 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray59, charArray60);
        char[] charArray63 = new char[] {};
        char[] charArray64 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray63, charArray64);
        org.junit.Assert.assertArrayEquals(charArray60, charArray64);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray56, charArray60);
        org.junit.Assert.assertArrayEquals(charArray46, charArray56);
        char[] charArray70 = new char[] {};
        char[] charArray71 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray70, charArray71);
        org.junit.Assert.assertArrayEquals("tests.weekly", charArray56, charArray70);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", charArray39, charArray56);
        char[] charArray76 = new char[] {};
        char[] charArray77 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray76, charArray77);
        org.junit.Assert.assertArrayEquals(charArray56, charArray76);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) charArray56);
    }

    @Test
    public void test4194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4194");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (double) '#', (double) 10L);
    }

    @Test
    public void test4195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4195");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("<unknown>", 100L, (long) ' ');
    }

    @Test
    public void test4196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4196");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", (float) 0L, (float) 100L, (float) 0L);
    }

    @Test
    public void test4197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4197");
        org.junit.rules.TestRule testRule2 = org.apache.lucene.util.LuceneTestCase.classRules;
        java.lang.Class<?> wildcardClass3 = testRule2.getClass();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests4 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule5 = kuromojiAnalysisTests4.ruleChain;
        org.junit.rules.TestRule testRule6 = null;
        org.junit.rules.RuleChain ruleChain7 = org.junit.rules.RuleChain.outerRule(testRule6);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain7;
        org.junit.rules.TestRule testRule9 = null;
        org.junit.rules.RuleChain ruleChain10 = org.junit.rules.RuleChain.outerRule(testRule9);
        org.junit.rules.RuleChain ruleChain11 = ruleChain7.around((org.junit.rules.TestRule) ruleChain10);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain7;
        kuromojiAnalysisTests4.failureAndSuccessEvents = ruleChain7;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests14 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests14.tearDown();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        org.apache.lucene.index.Terms terms19 = null;
        kuromojiAnalysisTests14.assertTermsEquals("tests.failfast", indexReader17, terms18, terms19, false);
        org.junit.rules.RuleChain ruleChain22 = kuromojiAnalysisTests14.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement23 = null;
        org.junit.runner.Description description24 = null;
        org.junit.runners.model.Statement statement25 = ruleChain22.apply(statement23, description24);
        org.junit.rules.RuleChain ruleChain26 = ruleChain7.around((org.junit.rules.TestRule) ruleChain22);
        org.junit.Assert.assertNotSame("", (java.lang.Object) wildcardClass3, (java.lang.Object) ruleChain7);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests30 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests30.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests30, (java.lang.Object) "");
        kuromojiAnalysisTests30.setUp();
        kuromojiAnalysisTests30.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain36 = kuromojiAnalysisTests30.failureAndSuccessEvents;
        org.junit.Assert.assertNotNull("tests.badapples", (java.lang.Object) kuromojiAnalysisTests30);
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        kuromojiAnalysisTests30.assertPositionsSkippingEquals("tests.awaitsfix", indexReader39, (int) ' ', postingsEnum41, postingsEnum42);
        org.junit.rules.RuleChain ruleChain44 = kuromojiAnalysisTests30.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals((java.lang.Object) wildcardClass3, (java.lang.Object) ruleChain44);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests46 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests46.setUp();
        kuromojiAnalysisTests46.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests49 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests49.tearDown();
        org.apache.lucene.index.IndexReader indexReader52 = null;
        org.apache.lucene.index.Terms terms53 = null;
        org.apache.lucene.index.Terms terms54 = null;
        kuromojiAnalysisTests49.assertTermsEquals("tests.failfast", indexReader52, terms53, terms54, false);
        kuromojiAnalysisTests49.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain59 = kuromojiAnalysisTests49.failureAndSuccessEvents;
        kuromojiAnalysisTests49.assertPathHasBeenCleared("tests.awaitsfix");
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests46, (java.lang.Object) "tests.awaitsfix");
        kuromojiAnalysisTests46.ensureAllSearchContextsReleased();
        org.apache.lucene.index.IndexReader indexReader65 = null;
        org.apache.lucene.index.Terms terms66 = null;
        org.apache.lucene.index.Terms terms67 = null;
        kuromojiAnalysisTests46.assertTermsEquals("hi!", indexReader65, terms66, terms67, true);
        kuromojiAnalysisTests46.ensureAllSearchContextsReleased();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.nightly", (java.lang.Object) ruleChain44, (java.lang.Object) kuromojiAnalysisTests46);
    }

    @Test
    public void test4198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4198");
        byte[] byteArray1 = null;
        byte[] byteArray4 = new byte[] {};
        byte[] byteArray5 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray4, byteArray5);
        byte[] byteArray8 = new byte[] {};
        byte[] byteArray9 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray8, byteArray9);
        org.junit.Assert.assertArrayEquals(byteArray5, byteArray8);
        byte[] byteArray13 = new byte[] {};
        byte[] byteArray14 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray13, byteArray14);
        byte[] byteArray17 = new byte[] {};
        byte[] byteArray18 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray17, byteArray18);
        org.junit.Assert.assertArrayEquals(byteArray14, byteArray17);
        org.junit.Assert.assertArrayEquals(byteArray8, byteArray17);
        byte[] byteArray24 = new byte[] {};
        byte[] byteArray25 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray24, byteArray25);
        byte[] byteArray28 = new byte[] {};
        byte[] byteArray29 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray28, byteArray29);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray25, byteArray29);
        org.junit.Assert.assertArrayEquals("tests.badapples", byteArray8, byteArray25);
        byte[] byteArray35 = new byte[] {};
        byte[] byteArray36 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray35, byteArray36);
        byte[] byteArray39 = new byte[] {};
        byte[] byteArray40 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray39, byteArray40);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray36, byteArray40);
        byte[] byteArray44 = new byte[] {};
        byte[] byteArray45 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray44, byteArray45);
        byte[] byteArray48 = new byte[] {};
        byte[] byteArray49 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray48, byteArray49);
        org.junit.Assert.assertArrayEquals(byteArray45, byteArray48);
        org.junit.Assert.assertArrayEquals(byteArray36, byteArray48);
        org.junit.Assert.assertArrayEquals(byteArray25, byteArray48);
        java.lang.Object obj54 = null;
        org.junit.Assert.assertNotEquals((java.lang.Object) byteArray48, obj54);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray60 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray59, byteArray60);
        byte[] byteArray63 = new byte[] {};
        byte[] byteArray64 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray63, byteArray64);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray60, byteArray64);
        byte[] byteArray67 = new byte[] {};
        org.junit.Assert.assertArrayEquals(byteArray60, byteArray67);
        byte[] byteArray70 = new byte[] {};
        byte[] byteArray71 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray70, byteArray71);
        byte[] byteArray74 = new byte[] {};
        byte[] byteArray75 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray74, byteArray75);
        org.junit.Assert.assertArrayEquals(byteArray71, byteArray74);
        byte[] byteArray79 = new byte[] {};
        byte[] byteArray80 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray79, byteArray80);
        byte[] byteArray83 = new byte[] {};
        byte[] byteArray84 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray83, byteArray84);
        org.junit.Assert.assertArrayEquals(byteArray80, byteArray83);
        org.junit.Assert.assertArrayEquals(byteArray74, byteArray83);
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray67, byteArray83);
        org.junit.Assert.assertArrayEquals(byteArray48, byteArray67);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", byteArray1, byteArray67);
    }

    @Test
    public void test4199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4199");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 1L, (double) (byte) 1);
    }

    @Test
    public void test4200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4200");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("", indexReader6, (int) (short) 0, postingsEnum8, postingsEnum9);
        kuromojiAnalysisTests1.tearDown();
        org.junit.rules.TestRule testRule12 = kuromojiAnalysisTests1.ruleChain;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests13 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests13.tearDown();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        kuromojiAnalysisTests13.assertTermsEquals("tests.failfast", indexReader16, terms17, terms18, false);
        kuromojiAnalysisTests13.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests13.assertPathHasBeenCleared("tests.badapples");
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests13);
        kuromojiAnalysisTests13.restoreIndexWriterMaxDocs();
        java.lang.Class<?> wildcardClass26 = kuromojiAnalysisTests13.getClass();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.badapples", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) wildcardClass26);
    }

    @Test
    public void test4201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4201");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.maxfailures", (double) 4, (double) 10L, (double) ' ');
    }

    @Test
    public void test4202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4202");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.awaitsfix", (long) 100, (long) (short) 10);
    }

    @Test
    public void test4203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4203");
        double[] doubleArray2 = new double[] {};
        double[] doubleArray3 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray2, doubleArray3, (double) '#');
        double[] doubleArray6 = new double[] {};
        double[] doubleArray7 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray6, doubleArray7, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray2, doubleArray7, (double) 0.0f);
        double[] doubleArray13 = new double[] {};
        double[] doubleArray14 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray13, doubleArray14, (double) '#');
        double[] doubleArray17 = new double[] {};
        double[] doubleArray18 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray17, doubleArray18, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray13, doubleArray17, (double) 3);
        double[] doubleArray23 = new double[] {};
        double[] doubleArray24 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray23, doubleArray24, (double) '#');
        double[] doubleArray27 = new double[] {};
        double[] doubleArray28 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray27, doubleArray28, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray23, doubleArray27, (double) 3);
        org.junit.Assert.assertArrayEquals("tests.monster", doubleArray13, doubleArray23, (double) 1.0f);
        org.junit.Assert.assertArrayEquals("tests.failfast", doubleArray2, doubleArray23, (double) 100.0f);
        double[] doubleArray38 = new double[] {};
        double[] doubleArray39 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray38, doubleArray39, (double) '#');
        double[] doubleArray42 = new double[] {};
        double[] doubleArray43 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray42, doubleArray43, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray38, doubleArray43, (double) 0.0f);
        double[] doubleArray48 = new double[] {};
        double[] doubleArray49 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray48, doubleArray49, (double) '#');
        double[] doubleArray52 = new double[] {};
        double[] doubleArray53 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray52, doubleArray53, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray48, doubleArray53, (double) 0.0f);
        org.junit.Assert.assertArrayEquals("", doubleArray38, doubleArray53, (double) 1);
        double[] doubleArray60 = new double[] {};
        double[] doubleArray61 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray60, doubleArray61, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray53, doubleArray61, (double) 2);
        double[] doubleArray67 = new double[] {};
        double[] doubleArray68 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray67, doubleArray68, (double) '#');
        double[] doubleArray71 = new double[] {};
        double[] doubleArray72 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray71, doubleArray72, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray67, doubleArray71, (double) 3);
        double[] doubleArray77 = new double[] {};
        double[] doubleArray78 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray77, doubleArray78, (double) '#');
        double[] doubleArray81 = new double[] {};
        double[] doubleArray82 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray81, doubleArray82, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray77, doubleArray81, (double) 3);
        org.junit.Assert.assertArrayEquals("tests.monster", doubleArray67, doubleArray77, (double) 1.0f);
        org.junit.Assert.assertArrayEquals(doubleArray61, doubleArray67, (double) (byte) 1);
        org.junit.Assert.assertArrayEquals("", doubleArray2, doubleArray61, (double) (short) 100);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) (short) 100);
    }

    @Test
    public void test4204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4204");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals(0.0d, 0.0d, (double) 4);
    }

    @Test
    public void test4205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4205");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests2.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        kuromojiAnalysisTests2.assertTermsEquals("tests.failfast", indexReader5, terms6, terms7, false);
        kuromojiAnalysisTests2.assertPathHasBeenCleared("tests.nightly");
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.Terms terms14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        kuromojiAnalysisTests2.assertTermsEquals("tests.slow", indexReader13, terms14, terms15, false);
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.Terms terms20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        kuromojiAnalysisTests2.assertTermsEquals("", indexReader19, terms20, terms21, false);
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        kuromojiAnalysisTests2.assertDocsSkippingEquals("europarl.lines.txt.gz", indexReader25, (int) (byte) -1, postingsEnum27, postingsEnum28, true);
        kuromojiAnalysisTests2.assertPathHasBeenCleared("tests.slow");
        kuromojiAnalysisTests2.ensureCheckIndexPassed();
        java.lang.Object obj34 = null;
        org.junit.Assert.assertNotSame("<unknown>", (java.lang.Object) kuromojiAnalysisTests2, obj34);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2);
    }

    @Test
    public void test4206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4206");
        java.util.concurrent.ExecutorService[][] executorServiceArray2 = new java.util.concurrent.ExecutorService[][] {};
        java.util.concurrent.ExecutorService[][] executorServiceArray3 = new java.util.concurrent.ExecutorService[][] {};
        java.util.concurrent.ExecutorService[][] executorServiceArray4 = new java.util.concurrent.ExecutorService[][] {};
        java.util.concurrent.ExecutorService[][] executorServiceArray5 = new java.util.concurrent.ExecutorService[][] {};
        java.util.concurrent.ExecutorService[][] executorServiceArray6 = new java.util.concurrent.ExecutorService[][] {};
        java.util.concurrent.ExecutorService[][][] executorServiceArray7 = new java.util.concurrent.ExecutorService[][][] { executorServiceArray2, executorServiceArray3, executorServiceArray4, executorServiceArray5, executorServiceArray6 };
        java.util.concurrent.ExecutorService[][] executorServiceArray8 = new java.util.concurrent.ExecutorService[][] {};
        java.util.concurrent.ExecutorService[][] executorServiceArray9 = new java.util.concurrent.ExecutorService[][] {};
        java.util.concurrent.ExecutorService[][] executorServiceArray10 = new java.util.concurrent.ExecutorService[][] {};
        java.util.concurrent.ExecutorService[][] executorServiceArray11 = new java.util.concurrent.ExecutorService[][] {};
        java.util.concurrent.ExecutorService[][] executorServiceArray12 = new java.util.concurrent.ExecutorService[][] {};
        java.util.concurrent.ExecutorService[][][] executorServiceArray13 = new java.util.concurrent.ExecutorService[][][] { executorServiceArray8, executorServiceArray9, executorServiceArray10, executorServiceArray11, executorServiceArray12 };
        java.util.concurrent.ExecutorService[][][][] executorServiceArray14 = new java.util.concurrent.ExecutorService[][][][] { executorServiceArray7, executorServiceArray13 };
        java.util.List<java.util.concurrent.ExecutorService[][][]> executorServiceArrayList15 = org.elasticsearch.test.ESTestCase.randomSubsetOf(1, executorServiceArray14);
        java.io.Serializable[] serializableArray18 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet19 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray18);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray20 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet21 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray20);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray18, (java.lang.Object[]) throttlingArray20);
        java.io.Serializable[] serializableArray24 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet25 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray24);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray26 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet27 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray26);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray24, (java.lang.Object[]) throttlingArray26);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray18, (java.lang.Object[]) serializableArray24);
        java.io.Serializable[] serializableArray32 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet33 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray32);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray34 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet35 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray34);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray32, (java.lang.Object[]) throttlingArray34);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray38 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet39 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray38);
        java.io.Serializable[] serializableArray41 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet42 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray41);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray43 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet44 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray43);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray41, (java.lang.Object[]) throttlingArray43);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray38, (java.lang.Object[]) serializableArray41);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray48 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet49 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray48);
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet52 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray51);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray53 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet54 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray53);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray51, (java.lang.Object[]) throttlingArray53);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray48, (java.lang.Object[]) serializableArray51);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray41, (java.lang.Object[]) throttlingArray48);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray32, (java.lang.Object[]) serializableArray41);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray18, (java.lang.Object[]) serializableArray32);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests60 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests60.tearDown();
        org.apache.lucene.index.IndexReader indexReader63 = null;
        org.apache.lucene.index.Terms terms64 = null;
        org.apache.lucene.index.Terms terms65 = null;
        kuromojiAnalysisTests60.assertTermsEquals("tests.failfast", indexReader63, terms64, terms65, false);
        kuromojiAnalysisTests60.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests60.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule71 = kuromojiAnalysisTests60.ruleChain;
        org.junit.rules.RuleChain ruleChain72 = kuromojiAnalysisTests60.failureAndSuccessEvents;
        kuromojiAnalysisTests60.tearDown();
        org.apache.lucene.index.PostingsEnum postingsEnum75 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum76 = null;
        kuromojiAnalysisTests60.assertDocsEnumEquals("tests.monster", postingsEnum75, postingsEnum76, true);
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) serializableArray32, (java.lang.Object) postingsEnum76);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", (java.lang.Object[]) executorServiceArray14, (java.lang.Object[]) serializableArray32);
    }

    @Test
    public void test4207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4207");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain11 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        org.junit.rules.RuleChain ruleChain13 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests15 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests15.tearDown();
        org.apache.lucene.index.IndexReader indexReader18 = null;
        org.apache.lucene.index.Terms terms19 = null;
        org.apache.lucene.index.Terms terms20 = null;
        kuromojiAnalysisTests15.assertTermsEquals("tests.failfast", indexReader18, terms19, terms20, false);
        org.junit.rules.RuleChain ruleChain23 = kuromojiAnalysisTests15.failureAndSuccessEvents;
        kuromojiAnalysisTests15.ensureCleanedUp();
        kuromojiAnalysisTests15.ensureCheckIndexPassed();
        org.junit.Assert.assertNotEquals("hi!", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests15);
        kuromojiAnalysisTests15.setIndexWriterMaxDocs(0);
        kuromojiAnalysisTests15.ensureAllSearchContextsReleased();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests30 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule31 = kuromojiAnalysisTests30.ruleChain;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        kuromojiAnalysisTests30.assertDocsEnumEquals("tests.failfast", postingsEnum33, postingsEnum34, true);
        org.junit.rules.TestRule testRule37 = kuromojiAnalysisTests30.ruleChain;
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests15, (java.lang.Object) kuromojiAnalysisTests30);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests30.assertPathHasBeenCleared("");
    }

    @Test
    public void test4208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4208");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (-1L), 100L);
    }

    @Test
    public void test4209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4209");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) "");
        java.lang.String str5 = kuromojiAnalysisTests1.getTestName();
        org.junit.rules.RuleChain ruleChain6 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain7 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain6);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests8 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule9 = kuromojiAnalysisTests8.ruleChain;
        org.junit.rules.RuleChain ruleChain10 = ruleChain7.around(testRule9);
        org.junit.rules.RuleChain ruleChain11 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain10);
        org.apache.lucene.search.QueryCachingPolicy queryCachingPolicy14 = org.apache.lucene.util.LuceneTestCase.MAYBE_CACHE_POLICY;
        org.junit.rules.TestRule testRule15 = null;
        org.junit.rules.RuleChain ruleChain16 = org.junit.rules.RuleChain.outerRule(testRule15);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain16;
        org.junit.rules.TestRule testRule18 = null;
        org.junit.rules.RuleChain ruleChain19 = org.junit.rules.RuleChain.outerRule(testRule18);
        org.junit.rules.RuleChain ruleChain20 = ruleChain16.around((org.junit.rules.TestRule) ruleChain19);
        org.junit.Assert.assertNotSame((java.lang.Object) queryCachingPolicy14, (java.lang.Object) ruleChain20);
        org.junit.rules.RuleChain ruleChain22 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain23 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain22);
        org.junit.rules.RuleChain ruleChain24 = ruleChain20.around((org.junit.rules.TestRule) ruleChain22);
        org.junit.Assert.assertNotSame("tests.slow", (java.lang.Object) "tests.badapples", (java.lang.Object) ruleChain20);
        org.junit.rules.RuleChain ruleChain26 = ruleChain11.around((org.junit.rules.TestRule) ruleChain20);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain11;
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.slow", indexReader31, (int) 'a', postingsEnum33, postingsEnum34);
        java.lang.String str36 = kuromojiAnalysisTests1.getTestName();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.Terms terms40 = null;
        org.apache.lucene.index.Terms terms41 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.monster", indexReader39, terms40, terms41, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests44 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests44.tearDown();
        org.apache.lucene.index.IndexReader indexReader47 = null;
        org.apache.lucene.index.Terms terms48 = null;
        org.apache.lucene.index.Terms terms49 = null;
        kuromojiAnalysisTests44.assertTermsEquals("tests.failfast", indexReader47, terms48, terms49, false);
        kuromojiAnalysisTests44.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests44.setIndexWriterMaxDocs((int) (short) 100);
        org.junit.rules.RuleChain ruleChain56 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain57 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain56);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests58 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule59 = kuromojiAnalysisTests58.ruleChain;
        org.junit.rules.RuleChain ruleChain60 = ruleChain57.around(testRule59);
        org.junit.Assert.assertNotSame("<unknown>", (java.lang.Object) ruleChain60, (java.lang.Object) 1.0d);
        kuromojiAnalysisTests44.failureAndSuccessEvents = ruleChain60;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) indexReader39, (java.lang.Object) kuromojiAnalysisTests44);
    }

    @Test
    public void test4210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4210");
        short[] shortArray1 = null;
        java.util.Locale locale4 = org.apache.lucene.util.LuceneTestCase.localeForName("europarl.lines.txt.gz");
        java.util.Locale locale6 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.failfast");
        java.util.Locale locale8 = org.apache.lucene.util.LuceneTestCase.localeForName("enwiki.random.lines.txt");
        java.util.Locale locale10 = org.apache.lucene.util.LuceneTestCase.localeForName("europarl.lines.txt.gz");
        java.util.Locale[] localeArray11 = new java.util.Locale[] { locale4, locale6, locale8, locale10 };
        java.util.Set<java.util.Locale> localeSet12 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray11);
        java.util.List<java.lang.Cloneable> cloneableList13 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 0, (java.lang.Cloneable[]) localeArray11);
        short[] shortArray17 = new short[] {};
        short[] shortArray18 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray17, shortArray18);
        short[] shortArray21 = new short[] {};
        short[] shortArray22 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray21, shortArray22);
        short[] shortArray24 = new short[] {};
        short[] shortArray25 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray24, shortArray25);
        org.junit.Assert.assertArrayEquals("", shortArray22, shortArray24);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", shortArray17, shortArray22);
        short[] shortArray30 = new short[] {};
        short[] shortArray31 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray30, shortArray31);
        short[] shortArray33 = new short[] {};
        short[] shortArray34 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray33, shortArray34);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray30, shortArray34);
        org.junit.Assert.assertArrayEquals("tests.nightly", shortArray17, shortArray30);
        short[] shortArray40 = new short[] {};
        short[] shortArray41 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray40, shortArray41);
        short[] shortArray43 = new short[] {};
        short[] shortArray44 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray43, shortArray44);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray40, shortArray44);
        short[] shortArray48 = new short[] {};
        short[] shortArray49 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray48, shortArray49);
        short[] shortArray51 = new short[] {};
        short[] shortArray52 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray51, shortArray52);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray48, shortArray52);
        org.junit.Assert.assertArrayEquals("<unknown>", shortArray40, shortArray52);
        short[] shortArray56 = new short[] {};
        short[] shortArray57 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray56, shortArray57);
        org.junit.Assert.assertArrayEquals(shortArray52, shortArray56);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray30, shortArray52);
        short[] shortArray62 = new short[] {};
        short[] shortArray63 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray62, shortArray63);
        short[] shortArray65 = new short[] {};
        short[] shortArray66 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray65, shortArray66);
        org.junit.Assert.assertArrayEquals("", shortArray63, shortArray65);
        short[] shortArray70 = new short[] {};
        short[] shortArray71 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray70, shortArray71);
        short[] shortArray73 = new short[] {};
        short[] shortArray74 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray73, shortArray74);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray70, shortArray74);
        org.junit.Assert.assertArrayEquals(shortArray63, shortArray70);
        org.junit.Assert.assertArrayEquals(shortArray30, shortArray63);
        org.junit.Assert.assertNotSame((java.lang.Object) localeArray11, (java.lang.Object) shortArray30);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.weekly", shortArray1, shortArray30);
    }

    @Test
    public void test4211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4211");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 100.0f, (double) 5, (double) 0.0f);
    }

    @Test
    public void test4212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4212");
        char[] charArray1 = null;
        char[] charArray4 = new char[] {};
        char[] charArray5 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray4, charArray5);
        char[] charArray8 = new char[] {};
        char[] charArray9 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray8, charArray9);
        char[] charArray12 = new char[] {};
        char[] charArray13 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray12, charArray13);
        org.junit.Assert.assertArrayEquals(charArray9, charArray13);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray5, charArray9);
        char[] charArray18 = new char[] {};
        char[] charArray19 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray18, charArray19);
        char[] charArray22 = new char[] {};
        char[] charArray23 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray22, charArray23);
        org.junit.Assert.assertArrayEquals(charArray19, charArray23);
        char[] charArray27 = new char[] {};
        char[] charArray28 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray27, charArray28);
        char[] charArray31 = new char[] {};
        char[] charArray32 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray31, charArray32);
        org.junit.Assert.assertArrayEquals(charArray28, charArray32);
        char[] charArray37 = new char[] {};
        char[] charArray38 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray37, charArray38);
        char[] charArray41 = new char[] {};
        char[] charArray42 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray41, charArray42);
        char[] charArray45 = new char[] {};
        char[] charArray46 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray45, charArray46);
        org.junit.Assert.assertArrayEquals(charArray42, charArray46);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray38, charArray42);
        org.junit.Assert.assertArrayEquals(charArray28, charArray38);
        org.junit.Assert.assertArrayEquals(charArray23, charArray28);
        org.junit.Assert.assertArrayEquals(charArray9, charArray28);
        char[] charArray54 = new char[] {};
        char[] charArray55 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray54, charArray55);
        char[] charArray58 = new char[] {};
        char[] charArray59 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray58, charArray59);
        org.junit.Assert.assertArrayEquals(charArray55, charArray59);
        org.junit.Assert.assertArrayEquals(charArray9, charArray55);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", charArray1, charArray9);
    }

    @Test
    public void test4213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4213");
        byte[] byteArray3 = new byte[] {};
        byte[] byteArray4 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray3, byteArray4);
        byte[] byteArray7 = new byte[] {};
        byte[] byteArray8 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray7, byteArray8);
        org.junit.Assert.assertArrayEquals(byteArray4, byteArray7);
        byte[] byteArray12 = new byte[] {};
        byte[] byteArray13 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray12, byteArray13);
        byte[] byteArray17 = new byte[] {};
        byte[] byteArray18 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray17, byteArray18);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray22 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray21, byteArray22);
        org.junit.Assert.assertArrayEquals(byteArray18, byteArray21);
        byte[] byteArray26 = new byte[] {};
        byte[] byteArray27 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray26, byteArray27);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray31 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray30, byteArray31);
        org.junit.Assert.assertArrayEquals(byteArray27, byteArray30);
        org.junit.Assert.assertArrayEquals(byteArray21, byteArray30);
        byte[] byteArray36 = new byte[] {};
        byte[] byteArray37 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray36, byteArray37);
        org.junit.Assert.assertArrayEquals(byteArray30, byteArray37);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray42 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray41, byteArray42);
        byte[] byteArray45 = new byte[] {};
        byte[] byteArray46 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray45, byteArray46);
        org.junit.Assert.assertArrayEquals(byteArray42, byteArray45);
        byte[] byteArray50 = new byte[] {};
        byte[] byteArray51 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray50, byteArray51);
        byte[] byteArray54 = new byte[] {};
        byte[] byteArray55 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray54, byteArray55);
        org.junit.Assert.assertArrayEquals(byteArray51, byteArray54);
        org.junit.Assert.assertArrayEquals(byteArray45, byteArray54);
        org.junit.Assert.assertArrayEquals(byteArray37, byteArray45);
        byte[] byteArray62 = new byte[] {};
        byte[] byteArray63 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray62, byteArray63);
        byte[] byteArray66 = new byte[] {};
        byte[] byteArray67 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray66, byteArray67);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray63, byteArray67);
        byte[] byteArray71 = new byte[] {};
        byte[] byteArray72 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray71, byteArray72);
        byte[] byteArray75 = new byte[] {};
        byte[] byteArray76 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray75, byteArray76);
        org.junit.Assert.assertArrayEquals(byteArray72, byteArray75);
        org.junit.Assert.assertArrayEquals(byteArray63, byteArray75);
        org.junit.Assert.assertArrayEquals("tests.badapples", byteArray37, byteArray63);
        org.junit.Assert.assertArrayEquals(byteArray12, byteArray63);
        org.junit.Assert.assertArrayEquals(byteArray4, byteArray63);
        byte[] byteArray84 = new byte[] {};
        byte[] byteArray85 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray84, byteArray85);
        byte[] byteArray88 = new byte[] {};
        byte[] byteArray89 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray88, byteArray89);
        org.junit.Assert.assertArrayEquals(byteArray85, byteArray88);
        org.junit.Assert.assertArrayEquals("tests.nightly", byteArray63, byteArray85);
        byte[] byteArray93 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.badapples", byteArray85, byteArray93);
    }

    @Test
    public void test4214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4214");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("enwiki.random.lines.txt", (long) (short) 10, (long) 10);
    }

    @Test
    public void test4215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4215");
        java.util.concurrent.ExecutorService executorService1 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray2 = new java.util.concurrent.ExecutorService[] { executorService1 };
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean4 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean5 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean6 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean7 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean8 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        boolean boolean9 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray2);
        java.util.concurrent.ExecutorService[] executorServiceArray12 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean13 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray12);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray15 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet16 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray15);
        java.io.Serializable[] serializableArray18 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet19 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray18);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray20 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet21 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray20);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray18, (java.lang.Object[]) throttlingArray20);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray15, (java.lang.Object[]) serializableArray18);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray25 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet26 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray25);
        java.io.Serializable[] serializableArray28 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet29 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray28);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray30 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet31 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray30);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray28, (java.lang.Object[]) throttlingArray30);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray25, (java.lang.Object[]) serializableArray28);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray18, (java.lang.Object[]) throttlingArray25);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray36 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet37 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray36);
        java.io.Serializable[] serializableArray39 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet40 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray39);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray41 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet42 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray41);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray39, (java.lang.Object[]) throttlingArray41);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray36, (java.lang.Object[]) serializableArray39);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray25, (java.lang.Object[]) serializableArray39);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray12, (java.lang.Object[]) serializableArray39);
        org.junit.Assert.assertNotEquals((java.lang.Object) 0.0f, (java.lang.Object) executorServiceArray12);
        boolean boolean48 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray12);
        java.io.Serializable[] serializableArray52 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet53 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray52);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray54 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet55 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray54);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray52, (java.lang.Object[]) throttlingArray54);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray58 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet59 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray58);
        java.io.Serializable[] serializableArray61 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet62 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray61);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray63 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet64 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray63);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray61, (java.lang.Object[]) throttlingArray63);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray58, (java.lang.Object[]) serializableArray61);
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (java.lang.Object[]) throttlingArray54, (java.lang.Object[]) throttlingArray58);
        java.io.Serializable[] serializableArray69 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet70 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray69);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray71 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet72 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray71);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray69, (java.lang.Object[]) throttlingArray71);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) throttlingArray58, (java.lang.Object[]) serializableArray69);
        java.io.Serializable[] serializableArray76 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet77 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray76);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray79 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet80 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray79);
        java.io.Serializable[] serializableArray82 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet83 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray82);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray84 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet85 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray84);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray82, (java.lang.Object[]) throttlingArray84);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray79, (java.lang.Object[]) serializableArray82);
        org.junit.Assert.assertArrayEquals("tests.badapples", (java.lang.Object[]) serializableArray76, (java.lang.Object[]) throttlingArray79);
        org.junit.Assert.assertEquals("tests.badapples", (java.lang.Object[]) throttlingArray58, (java.lang.Object[]) throttlingArray79);
        org.junit.Assert.assertEquals("enwiki.random.lines.txt", (java.lang.Object[]) executorServiceArray12, (java.lang.Object[]) throttlingArray58);
        boolean boolean91 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray12);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.badapples", (java.lang.Object[]) executorServiceArray2, (java.lang.Object[]) executorServiceArray12);
    }

    @Test
    public void test4216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4216");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule11 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        java.lang.Object obj13 = null;
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, obj13);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests15 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests15.tearDown();
        org.apache.lucene.index.IndexReader indexReader18 = null;
        org.apache.lucene.index.Terms terms19 = null;
        org.apache.lucene.index.Terms terms20 = null;
        kuromojiAnalysisTests15.assertTermsEquals("tests.failfast", indexReader18, terms19, terms20, false);
        org.junit.rules.RuleChain ruleChain23 = kuromojiAnalysisTests15.failureAndSuccessEvents;
        kuromojiAnalysisTests15.ensureCleanedUp();
        kuromojiAnalysisTests15.tearDown();
        java.lang.String str26 = kuromojiAnalysisTests15.getTestName();
        org.junit.rules.TestRule testRule29 = null;
        org.junit.rules.RuleChain ruleChain30 = org.junit.rules.RuleChain.outerRule(testRule29);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain30;
        org.junit.rules.TestRule testRule32 = null;
        org.junit.rules.RuleChain ruleChain33 = org.junit.rules.RuleChain.outerRule(testRule32);
        org.junit.rules.RuleChain ruleChain34 = ruleChain30.around((org.junit.rules.TestRule) ruleChain33);
        org.junit.Assert.assertNotSame("tests.maxfailures", (java.lang.Object) "tests.weekly", (java.lang.Object) ruleChain33);
        kuromojiAnalysisTests15.failureAndSuccessEvents = ruleChain33;
        kuromojiAnalysisTests15.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests15.setIndexWriterMaxDocs((int) (byte) -1);
        kuromojiAnalysisTests15.setUp();
        kuromojiAnalysisTests15.ensureAllSearchContextsReleased();
        org.junit.Assert.assertNotSame(obj13, (java.lang.Object) kuromojiAnalysisTests15);
        org.apache.lucene.index.NumericDocValues numericDocValues45 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues46 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests15.assertDocValuesEquals("enwiki.random.lines.txt", (-1), numericDocValues45, numericDocValues46);
    }

    @Test
    public void test4217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4217");
        java.lang.Object[] objArray1 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests3 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests3.tearDown();
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        kuromojiAnalysisTests3.assertTermsEquals("tests.failfast", indexReader6, terms7, terms8, false);
        kuromojiAnalysisTests3.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain12 = kuromojiAnalysisTests3.failureAndSuccessEvents;
        kuromojiAnalysisTests3.assertPathHasBeenCleared("tests.failfast");
        kuromojiAnalysisTests3.restoreIndexWriterMaxDocs();
        java.util.concurrent.ExecutorService executorService16 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray17 = new java.util.concurrent.ExecutorService[] { executorService16 };
        java.util.concurrent.ExecutorService executorService18 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray19 = new java.util.concurrent.ExecutorService[] { executorService18 };
        java.util.concurrent.ExecutorService executorService20 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray21 = new java.util.concurrent.ExecutorService[] { executorService20 };
        java.util.concurrent.ExecutorService executorService22 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray23 = new java.util.concurrent.ExecutorService[] { executorService22 };
        java.util.concurrent.ExecutorService[][] executorServiceArray24 = new java.util.concurrent.ExecutorService[][] { executorServiceArray17, executorServiceArray19, executorServiceArray21, executorServiceArray23 };
        java.util.concurrent.ExecutorService executorService25 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray26 = new java.util.concurrent.ExecutorService[] { executorService25 };
        java.util.concurrent.ExecutorService executorService27 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray28 = new java.util.concurrent.ExecutorService[] { executorService27 };
        java.util.concurrent.ExecutorService executorService29 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray30 = new java.util.concurrent.ExecutorService[] { executorService29 };
        java.util.concurrent.ExecutorService executorService31 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray32 = new java.util.concurrent.ExecutorService[] { executorService31 };
        java.util.concurrent.ExecutorService[][] executorServiceArray33 = new java.util.concurrent.ExecutorService[][] { executorServiceArray26, executorServiceArray28, executorServiceArray30, executorServiceArray32 };
        java.util.concurrent.ExecutorService executorService34 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray35 = new java.util.concurrent.ExecutorService[] { executorService34 };
        java.util.concurrent.ExecutorService executorService36 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray37 = new java.util.concurrent.ExecutorService[] { executorService36 };
        java.util.concurrent.ExecutorService executorService38 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray39 = new java.util.concurrent.ExecutorService[] { executorService38 };
        java.util.concurrent.ExecutorService executorService40 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray41 = new java.util.concurrent.ExecutorService[] { executorService40 };
        java.util.concurrent.ExecutorService[][] executorServiceArray42 = new java.util.concurrent.ExecutorService[][] { executorServiceArray35, executorServiceArray37, executorServiceArray39, executorServiceArray41 };
        java.util.concurrent.ExecutorService executorService43 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray44 = new java.util.concurrent.ExecutorService[] { executorService43 };
        java.util.concurrent.ExecutorService executorService45 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray46 = new java.util.concurrent.ExecutorService[] { executorService45 };
        java.util.concurrent.ExecutorService executorService47 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray48 = new java.util.concurrent.ExecutorService[] { executorService47 };
        java.util.concurrent.ExecutorService executorService49 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray50 = new java.util.concurrent.ExecutorService[] { executorService49 };
        java.util.concurrent.ExecutorService[][] executorServiceArray51 = new java.util.concurrent.ExecutorService[][] { executorServiceArray44, executorServiceArray46, executorServiceArray48, executorServiceArray50 };
        java.util.concurrent.ExecutorService[][][] executorServiceArray52 = new java.util.concurrent.ExecutorService[][][] { executorServiceArray24, executorServiceArray33, executorServiceArray42, executorServiceArray51 };
        java.util.Set<java.util.concurrent.ExecutorService[][]> executorServiceArraySet53 = org.apache.lucene.util.LuceneTestCase.asSet(executorServiceArray52);
        org.junit.Assert.assertNotSame("", (java.lang.Object) kuromojiAnalysisTests3, (java.lang.Object) executorServiceArray52);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("<unknown>", objArray1, (java.lang.Object[]) executorServiceArray52);
    }

    @Test
    public void test4218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4218");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain9 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.failfast");
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.badapples", postingsEnum15, postingsEnum16);
    }

    @Test
    public void test4219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4219");
        char[] charArray1 = null;
        char[] charArray4 = new char[] {};
        char[] charArray5 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray4, charArray5);
        char[] charArray9 = new char[] {};
        char[] charArray10 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray9, charArray10);
        char[] charArray13 = new char[] {};
        char[] charArray14 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray13, charArray14);
        char[] charArray17 = new char[] {};
        char[] charArray18 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray17, charArray18);
        org.junit.Assert.assertArrayEquals(charArray14, charArray18);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray10, charArray14);
        org.junit.Assert.assertArrayEquals("random", charArray5, charArray14);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", charArray1, charArray14);
    }

    @Test
    public void test4220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4220");
        java.io.Serializable[] serializableArray2 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet3 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray2);
        java.io.Serializable[] serializableArray4 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet5 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray4);
        java.io.Serializable[] serializableArray6 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet7 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray6);
        java.util.Set[] setArray9 = new java.util.Set[3];
        @SuppressWarnings("unchecked")
        java.util.Set<java.io.Serializable>[] serializableSetArray10 = (java.util.Set<java.io.Serializable>[]) setArray9;
        serializableSetArray10[0] = serializableSet3;
        serializableSetArray10[1] = serializableSet5;
        serializableSetArray10[2] = serializableSet7;
        java.util.Set<java.util.Set<java.io.Serializable>> serializableSetSet17 = org.apache.lucene.util.LuceneTestCase.asSet(serializableSetArray10);
        java.util.Set<java.util.Set<java.io.Serializable>> serializableSetSet18 = org.apache.lucene.util.LuceneTestCase.asSet(serializableSetArray10);
        java.util.Set<java.util.Collection<java.io.Serializable>> serializableCollectionSet19 = org.apache.lucene.util.LuceneTestCase.asSet((java.util.Collection<java.io.Serializable>[]) serializableSetArray10);
        java.util.List<java.util.Set<java.io.Serializable>> serializableSetList20 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 0, serializableSetArray10);
        java.util.concurrent.ExecutorService[] executorServiceArray22 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean23 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray22);
        boolean boolean24 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray22);
        boolean boolean25 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray22);
        boolean boolean26 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray22);
        java.io.Serializable[] serializableArray28 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet29 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray28);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray31 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet32 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray31);
        java.io.Serializable[] serializableArray34 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet35 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray34);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray36 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet37 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray36);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray34, (java.lang.Object[]) throttlingArray36);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray31, (java.lang.Object[]) serializableArray34);
        org.junit.Assert.assertArrayEquals("tests.badapples", (java.lang.Object[]) serializableArray28, (java.lang.Object[]) throttlingArray31);
        java.io.Serializable[] serializableArray42 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet43 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray42);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray44 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet45 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray44);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray42, (java.lang.Object[]) throttlingArray44);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray31, (java.lang.Object[]) serializableArray42);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", (java.lang.Object[]) executorServiceArray22, (java.lang.Object[]) serializableArray42);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableSetArray10, (java.lang.Object[]) executorServiceArray22);
    }

    @Test
    public void test4221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4221");
        java.io.Serializable[] serializableArray6 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet7 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray6);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray8 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet9 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray8);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray6, (java.lang.Object[]) throttlingArray8);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray12 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet13 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray12);
        java.io.Serializable[] serializableArray15 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet16 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray15);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray17 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet18 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray17);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray15, (java.lang.Object[]) throttlingArray17);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray12, (java.lang.Object[]) serializableArray15);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray22 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet23 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray22);
        java.io.Serializable[] serializableArray25 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet26 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray25);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray27 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet28 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray27);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray25, (java.lang.Object[]) throttlingArray27);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray22, (java.lang.Object[]) serializableArray25);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray15, (java.lang.Object[]) throttlingArray22);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray6, (java.lang.Object[]) serializableArray15);
        java.io.Serializable[] serializableArray35 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet36 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray35);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray37 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet38 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray37);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray35, (java.lang.Object[]) throttlingArray37);
        java.io.Serializable[] serializableArray41 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet42 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray41);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray43 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet44 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray43);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray41, (java.lang.Object[]) throttlingArray43);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray35, (java.lang.Object[]) serializableArray41);
        java.io.Serializable[] serializableArray48 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet49 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray48);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray50 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet51 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray50);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray48, (java.lang.Object[]) throttlingArray50);
        java.io.Serializable[] serializableArray54 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet55 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray54);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray56 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet57 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray56);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray54, (java.lang.Object[]) throttlingArray56);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray48, (java.lang.Object[]) serializableArray54);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray61 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet62 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray61);
        java.io.Serializable[] serializableArray64 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet65 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray64);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray66 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet67 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray66);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray64, (java.lang.Object[]) throttlingArray66);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray61, (java.lang.Object[]) serializableArray64);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray71 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet72 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray71);
        java.io.Serializable[] serializableArray74 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet75 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray74);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray76 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet77 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray76);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray74, (java.lang.Object[]) throttlingArray76);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray71, (java.lang.Object[]) serializableArray74);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray64, (java.lang.Object[]) throttlingArray71);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray54, (java.lang.Object[]) throttlingArray71);
        org.junit.Assert.assertEquals("random", (java.lang.Object[]) serializableArray41, (java.lang.Object[]) serializableArray54);
        org.junit.Assert.assertArrayEquals("tests.monster", (java.lang.Object[]) serializableArray6, (java.lang.Object[]) serializableArray54);
        java.io.Serializable[] serializableArray85 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet86 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray85);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray87 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet88 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray87);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray85, (java.lang.Object[]) throttlingArray87);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray54, (java.lang.Object[]) throttlingArray87);
        java.util.concurrent.ExecutorService[] executorServiceArray91 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean92 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray91);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray54, (java.lang.Object[]) executorServiceArray91);
        org.junit.Assert.assertNotNull("hi!", (java.lang.Object) executorServiceArray91);
        long[][][] longArray95 = new long[][][] {};
        java.util.Set<long[][]> longArraySet96 = org.apache.lucene.util.LuceneTestCase.asSet(longArray95);
        org.junit.Assert.assertArrayEquals("tests.weekly", (java.lang.Object[]) executorServiceArray91, (java.lang.Object[]) longArray95);
        java.lang.Object[] objArray98 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) longArray95, objArray98);
    }

    @Test
    public void test4222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4222");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.slow", indexReader11, terms12, terms13, false);
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        org.apache.lucene.index.Terms terms19 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader17, terms18, terms19, false);
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("europarl.lines.txt.gz", indexReader23, (int) (byte) -1, postingsEnum25, postingsEnum26, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests30 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests30.tearDown();
        org.apache.lucene.index.IndexReader indexReader33 = null;
        org.apache.lucene.index.Terms terms34 = null;
        org.apache.lucene.index.Terms terms35 = null;
        kuromojiAnalysisTests30.assertTermsEquals("tests.failfast", indexReader33, terms34, terms35, false);
        kuromojiAnalysisTests30.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests30.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule41 = kuromojiAnalysisTests30.ruleChain;
        org.junit.rules.RuleChain ruleChain42 = kuromojiAnalysisTests30.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals((java.lang.Object) "random", (java.lang.Object) ruleChain42);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests44 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests44.tearDown();
        org.apache.lucene.index.IndexReader indexReader47 = null;
        org.apache.lucene.index.Terms terms48 = null;
        org.apache.lucene.index.Terms terms49 = null;
        kuromojiAnalysisTests44.assertTermsEquals("tests.failfast", indexReader47, terms48, terms49, false);
        kuromojiAnalysisTests44.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests44.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule55 = kuromojiAnalysisTests44.ruleChain;
        org.junit.rules.RuleChain ruleChain56 = kuromojiAnalysisTests44.failureAndSuccessEvents;
        java.lang.Object obj57 = null;
        org.junit.Assert.assertNotEquals((java.lang.Object) ruleChain56, obj57);
        org.junit.rules.RuleChain ruleChain59 = ruleChain42.around((org.junit.rules.TestRule) ruleChain56);
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain59;
        org.apache.lucene.index.IndexReader indexReader62 = null;
        org.apache.lucene.index.Terms terms63 = null;
        org.apache.lucene.index.Terms terms64 = null;
        kuromojiAnalysisTests0.assertTermsEquals("<unknown>", indexReader62, terms63, terms64, true);
        org.junit.rules.TestRule testRule67 = kuromojiAnalysisTests0.ruleChain;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule67;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) testRule67);
    }

    @Test
    public void test4223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4223");
        org.junit.rules.RuleChain ruleChain1 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain2 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain3 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain2);
        org.junit.rules.RuleChain ruleChain4 = ruleChain1.around((org.junit.rules.TestRule) ruleChain3);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests5 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests5.tearDown();
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.Terms terms9 = null;
        org.apache.lucene.index.Terms terms10 = null;
        kuromojiAnalysisTests5.assertTermsEquals("tests.failfast", indexReader8, terms9, terms10, false);
        kuromojiAnalysisTests5.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain15 = kuromojiAnalysisTests5.failureAndSuccessEvents;
        kuromojiAnalysisTests5.assertPathHasBeenCleared("tests.awaitsfix");
        kuromojiAnalysisTests5.setUp();
        java.lang.String str19 = kuromojiAnalysisTests5.getTestName();
        org.junit.rules.TestRule testRule20 = kuromojiAnalysisTests5.ruleChain;
        org.junit.rules.RuleChain ruleChain21 = kuromojiAnalysisTests5.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain22 = ruleChain1.around((org.junit.rules.TestRule) ruleChain21);
        org.junit.Assert.assertNotNull("tests.monster", (java.lang.Object) ruleChain21);
        java.lang.Object obj24 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests25 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests25.tearDown();
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.Terms terms29 = null;
        org.apache.lucene.index.Terms terms30 = null;
        kuromojiAnalysisTests25.assertTermsEquals("tests.failfast", indexReader28, terms29, terms30, false);
        kuromojiAnalysisTests25.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests25.assertPathHasBeenCleared("tests.badapples");
        kuromojiAnalysisTests25.assertPathHasBeenCleared("tests.monster");
        org.junit.Assert.assertNotEquals(obj24, (java.lang.Object) kuromojiAnalysisTests25);
        kuromojiAnalysisTests25.ensureAllSearchContextsReleased();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) ruleChain21, (java.lang.Object) kuromojiAnalysisTests25);
    }

    @Test
    public void test4224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4224");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.awaitsfix", (double) (short) 0, (double) (-1.0f), (double) '#');
    }

    @Test
    public void test4225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4225");
        long[] longArray1 = null;
        long[] longArray4 = new long[] {};
        long[] longArray5 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray4, longArray5);
        long[] longArray8 = new long[] {};
        long[] longArray9 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray8, longArray9);
        org.junit.Assert.assertArrayEquals(longArray5, longArray9);
        long[] longArray13 = new long[] {};
        long[] longArray14 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray13, longArray14);
        long[] longArray17 = new long[] {};
        long[] longArray18 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray17, longArray18);
        org.junit.Assert.assertArrayEquals(longArray14, longArray18);
        org.junit.Assert.assertArrayEquals(longArray5, longArray14);
        long[] longArray23 = new long[] {};
        long[] longArray24 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray23, longArray24);
        org.junit.Assert.assertArrayEquals("random", longArray14, longArray23);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("", longArray1, longArray23);
    }

    @Test
    public void test4226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4226");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule12 = kuromojiAnalysisTests1.ruleChain;
        org.junit.rules.RuleChain ruleChain13 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals((java.lang.Object) "random", (java.lang.Object) ruleChain13);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain13;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain13;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests17 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests17.tearDown();
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        org.apache.lucene.index.Terms terms22 = null;
        kuromojiAnalysisTests17.assertTermsEquals("tests.failfast", indexReader20, terms21, terms22, false);
        org.junit.rules.RuleChain ruleChain25 = kuromojiAnalysisTests17.failureAndSuccessEvents;
        kuromojiAnalysisTests17.ensureCleanedUp();
        kuromojiAnalysisTests17.tearDown();
        java.lang.String str28 = kuromojiAnalysisTests17.getTestName();
        org.junit.rules.TestRule testRule31 = null;
        org.junit.rules.RuleChain ruleChain32 = org.junit.rules.RuleChain.outerRule(testRule31);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain32;
        org.junit.rules.TestRule testRule34 = null;
        org.junit.rules.RuleChain ruleChain35 = org.junit.rules.RuleChain.outerRule(testRule34);
        org.junit.rules.RuleChain ruleChain36 = ruleChain32.around((org.junit.rules.TestRule) ruleChain35);
        org.junit.Assert.assertNotSame("tests.maxfailures", (java.lang.Object) "tests.weekly", (java.lang.Object) ruleChain35);
        kuromojiAnalysisTests17.failureAndSuccessEvents = ruleChain35;
        kuromojiAnalysisTests17.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests17.setIndexWriterMaxDocs((int) (byte) -1);
        org.junit.rules.TestRule testRule42 = kuromojiAnalysisTests17.ruleChain;
        org.apache.lucene.index.PostingsEnum postingsEnum44 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        kuromojiAnalysisTests17.assertDocsEnumEquals("tests.nightly", postingsEnum44, postingsEnum45, true);
        java.lang.String str48 = kuromojiAnalysisTests17.getTestName();
        java.lang.String str49 = kuromojiAnalysisTests17.getTestName();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) ruleChain13, (java.lang.Object) kuromojiAnalysisTests17);
    }

    @Test
    public void test4227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4227");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests1.assertTermsEquals("hi!", indexReader11, terms12, terms13, true);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.maxfailures");
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests20.tearDown();
        kuromojiAnalysisTests20.assertPathHasBeenCleared("hi!");
        org.junit.Assert.assertNotEquals("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests20);
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        kuromojiAnalysisTests20.assertDocsSkippingEquals("tests.nightly", indexReader26, (int) (short) 100, postingsEnum28, postingsEnum29, true);
        org.apache.lucene.index.NumericDocValues numericDocValues34 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues35 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests20.assertDocValuesEquals("tests.monster", 0, numericDocValues34, numericDocValues35);
    }

    @Test
    public void test4228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4228");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) "");
        java.lang.String str5 = kuromojiAnalysisTests1.getTestName();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests6 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests6.tearDown();
        org.apache.lucene.index.IndexReader indexReader9 = null;
        org.apache.lucene.index.Terms terms10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        kuromojiAnalysisTests6.assertTermsEquals("tests.failfast", indexReader9, terms10, terms11, false);
        org.junit.rules.RuleChain ruleChain14 = kuromojiAnalysisTests6.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement15 = null;
        org.junit.runner.Description description16 = null;
        org.junit.runners.model.Statement statement17 = ruleChain14.apply(statement15, description16);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests18 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests18.tearDown();
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.Terms terms22 = null;
        org.apache.lucene.index.Terms terms23 = null;
        kuromojiAnalysisTests18.assertTermsEquals("tests.failfast", indexReader21, terms22, terms23, false);
        kuromojiAnalysisTests18.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain28 = kuromojiAnalysisTests18.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain29 = ruleChain14.around((org.junit.rules.TestRule) ruleChain28);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests31 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests31.tearDown();
        org.apache.lucene.index.IndexReader indexReader34 = null;
        org.apache.lucene.index.Terms terms35 = null;
        org.apache.lucene.index.Terms terms36 = null;
        kuromojiAnalysisTests31.assertTermsEquals("tests.failfast", indexReader34, terms35, terms36, false);
        org.junit.rules.RuleChain ruleChain39 = kuromojiAnalysisTests31.failureAndSuccessEvents;
        org.junit.Assert.assertNotSame("hi!", (java.lang.Object) ruleChain39, (java.lang.Object) "tests.weekly");
        org.junit.rules.RuleChain ruleChain42 = ruleChain14.around((org.junit.rules.TestRule) ruleChain39);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain39;
        kuromojiAnalysisTests1.setUp();
        org.apache.lucene.index.IndexReader indexReader46 = null;
        org.apache.lucene.index.Terms terms47 = null;
        org.apache.lucene.index.Terms terms48 = null;
        kuromojiAnalysisTests1.assertTermsEquals("random", indexReader46, terms47, terms48, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests51 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests51.tearDown();
        kuromojiAnalysisTests51.assertPathHasBeenCleared("hi!");
        org.apache.lucene.index.IndexReader indexReader56 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum58 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum59 = null;
        kuromojiAnalysisTests51.assertDocsSkippingEquals("tests.monster", indexReader56, 10, postingsEnum58, postingsEnum59, true);
        kuromojiAnalysisTests51.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule63 = kuromojiAnalysisTests51.ruleChain;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule63;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule63;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule63;
        org.junit.rules.RuleChain ruleChain67 = org.junit.rules.RuleChain.outerRule(testRule63);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) terms48, (java.lang.Object) testRule63);
    }

    @Test
    public void test4229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4229");
        org.junit.rules.RuleChain ruleChain0 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain1 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain0);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule3 = kuromojiAnalysisTests2.ruleChain;
        org.junit.rules.RuleChain ruleChain4 = ruleChain1.around(testRule3);
        org.junit.rules.RuleChain ruleChain5 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain4);
        org.junit.rules.TestRule testRule8 = null;
        org.junit.rules.RuleChain ruleChain9 = org.junit.rules.RuleChain.outerRule(testRule8);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain9;
        org.junit.rules.TestRule testRule11 = null;
        org.junit.rules.RuleChain ruleChain12 = org.junit.rules.RuleChain.outerRule(testRule11);
        org.junit.rules.RuleChain ruleChain13 = ruleChain9.around((org.junit.rules.TestRule) ruleChain12);
        org.junit.Assert.assertNotSame("tests.maxfailures", (java.lang.Object) "tests.weekly", (java.lang.Object) ruleChain12);
        org.junit.rules.TestRule testRule15 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.junit.rules.RuleChain ruleChain16 = ruleChain12.around(testRule15);
        org.junit.rules.RuleChain ruleChain17 = ruleChain4.around((org.junit.rules.TestRule) ruleChain16);
        org.junit.rules.RuleChain ruleChain18 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain17);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain17;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests20.tearDown();
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        org.apache.lucene.index.Terms terms25 = null;
        kuromojiAnalysisTests20.assertTermsEquals("tests.failfast", indexReader23, terms24, terms25, false);
        org.junit.rules.RuleChain ruleChain28 = kuromojiAnalysisTests20.failureAndSuccessEvents;
        kuromojiAnalysisTests20.ensureCleanedUp();
        kuromojiAnalysisTests20.tearDown();
        java.lang.String str31 = kuromojiAnalysisTests20.getTestName();
        org.junit.rules.TestRule testRule34 = null;
        org.junit.rules.RuleChain ruleChain35 = org.junit.rules.RuleChain.outerRule(testRule34);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain35;
        org.junit.rules.TestRule testRule37 = null;
        org.junit.rules.RuleChain ruleChain38 = org.junit.rules.RuleChain.outerRule(testRule37);
        org.junit.rules.RuleChain ruleChain39 = ruleChain35.around((org.junit.rules.TestRule) ruleChain38);
        org.junit.Assert.assertNotSame("tests.maxfailures", (java.lang.Object) "tests.weekly", (java.lang.Object) ruleChain38);
        kuromojiAnalysisTests20.failureAndSuccessEvents = ruleChain38;
        kuromojiAnalysisTests20.restoreIndexWriterMaxDocs();
        org.junit.rules.TestRule testRule43 = kuromojiAnalysisTests20.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) ruleChain17, (java.lang.Object) testRule43);
    }

    @Test
    public void test4230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4230");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) ' ', 100.0d, (double) 1);
    }

    @Test
    public void test4231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4231");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", (long) 4, (long) 3);
    }

    @Test
    public void test4232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4232");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 0L, 100.0d);
    }

    @Test
    public void test4233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4233");
        java.lang.Object[] objArray1 = null;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray4 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet5 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray4);
        java.io.Serializable[] serializableArray7 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet8 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray7);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray9 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet10 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray9);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray7, (java.lang.Object[]) throttlingArray9);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) throttlingArray4, (java.lang.Object[]) throttlingArray9);
        java.io.Serializable[] serializableArray15 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet16 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray15);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray17 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet18 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray17);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray15, (java.lang.Object[]) throttlingArray17);
        java.io.Serializable[] serializableArray21 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet22 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray21);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray23 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet24 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray23);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray21, (java.lang.Object[]) throttlingArray23);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray15, (java.lang.Object[]) serializableArray21);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray28 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet29 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray28);
        java.io.Serializable[] serializableArray31 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet32 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray31);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray33 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet34 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray33);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray31, (java.lang.Object[]) throttlingArray33);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray28, (java.lang.Object[]) serializableArray31);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray38 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet39 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray38);
        java.io.Serializable[] serializableArray41 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet42 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray41);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray43 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet44 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray43);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray41, (java.lang.Object[]) throttlingArray43);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray38, (java.lang.Object[]) serializableArray41);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray31, (java.lang.Object[]) throttlingArray38);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray21, (java.lang.Object[]) throttlingArray38);
        org.apache.lucene.util.LuceneTestCase[] luceneTestCaseArray49 = new org.apache.lucene.util.LuceneTestCase[] {};
        java.util.Set<org.apache.lucene.util.LuceneTestCase> luceneTestCaseSet50 = org.apache.lucene.util.LuceneTestCase.asSet(luceneTestCaseArray49);
        org.junit.Assert.assertEquals("tests.failfast", (java.lang.Object[]) serializableArray21, (java.lang.Object[]) luceneTestCaseArray49);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) throttlingArray9, (java.lang.Object[]) luceneTestCaseArray49);
        java.io.Serializable[] serializableArray54 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet55 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray54);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray56 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet57 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray56);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray54, (java.lang.Object[]) throttlingArray56);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray9, (java.lang.Object[]) serializableArray54);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("random", objArray1, (java.lang.Object[]) serializableArray54);
    }

    @Test
    public void test4234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4234");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) (byte) 1, (float) (byte) -1, (float) (-1L));
    }

    @Test
    public void test4235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4235");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) 10, (long) (byte) 0);
    }

    @Test
    public void test4236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4236");
        short[] shortArray0 = null;
        short[] shortArray3 = new short[] {};
        short[] shortArray4 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray3, shortArray4);
        short[] shortArray6 = new short[] {};
        short[] shortArray7 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray6, shortArray7);
        org.junit.Assert.assertArrayEquals("", shortArray4, shortArray6);
        short[] shortArray11 = new short[] {};
        short[] shortArray12 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray11, shortArray12);
        short[] shortArray15 = new short[] {};
        short[] shortArray16 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray15, shortArray16);
        short[] shortArray18 = new short[] {};
        short[] shortArray19 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray18, shortArray19);
        org.junit.Assert.assertArrayEquals("", shortArray16, shortArray18);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", shortArray11, shortArray16);
        org.junit.Assert.assertArrayEquals(shortArray4, shortArray16);
        short[] shortArray26 = new short[] {};
        short[] shortArray27 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray26, shortArray27);
        short[] shortArray29 = new short[] {};
        short[] shortArray30 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray29, shortArray30);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray26, shortArray30);
        short[] shortArray34 = new short[] {};
        short[] shortArray35 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray34, shortArray35);
        short[] shortArray37 = new short[] {};
        short[] shortArray38 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray37, shortArray38);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray34, shortArray38);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray30, shortArray34);
        org.junit.Assert.assertArrayEquals("random", shortArray16, shortArray34);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(shortArray0, shortArray34);
    }

    @Test
    public void test4237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4237");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((double) (short) 0, (double) 1.0f, (double) 1L);
    }

    @Test
    public void test4238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4238");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", (long) (short) 100, 0L);
    }

    @Test
    public void test4239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4239");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(0.0d, (double) (short) 10);
    }

    @Test
    public void test4240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4240");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) (short) 100, 1.0f, (-1.0f));
    }

    @Test
    public void test4241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4241");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests1.assertTermsEquals("hi!", indexReader11, terms12, terms13, true);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.maxfailures");
        kuromojiAnalysisTests1.setIndexWriterMaxDocs(3);
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("hi!", indexReader22, 10, postingsEnum24, postingsEnum25, false);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("hi!", (java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test4242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4242");
        byte[] byteArray2 = new byte[] {};
        byte[] byteArray3 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray2, byteArray3);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray7 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray6, byteArray7);
        org.junit.Assert.assertArrayEquals(byteArray3, byteArray6);
        byte[] byteArray11 = new byte[] {};
        byte[] byteArray12 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray11, byteArray12);
        byte[] byteArray15 = new byte[] {};
        byte[] byteArray16 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray15, byteArray16);
        org.junit.Assert.assertArrayEquals(byteArray12, byteArray15);
        org.junit.Assert.assertArrayEquals(byteArray6, byteArray15);
        byte[] byteArray22 = new byte[] {};
        byte[] byteArray23 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray22, byteArray23);
        byte[] byteArray26 = new byte[] {};
        byte[] byteArray27 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray26, byteArray27);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray23, byteArray27);
        org.junit.Assert.assertArrayEquals("tests.badapples", byteArray6, byteArray23);
        byte[] byteArray33 = new byte[] {};
        byte[] byteArray34 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray33, byteArray34);
        byte[] byteArray37 = new byte[] {};
        byte[] byteArray38 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray37, byteArray38);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray34, byteArray38);
        byte[] byteArray42 = new byte[] {};
        byte[] byteArray43 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray42, byteArray43);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray47 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray46, byteArray47);
        org.junit.Assert.assertArrayEquals(byteArray43, byteArray46);
        org.junit.Assert.assertArrayEquals(byteArray34, byteArray46);
        org.junit.Assert.assertArrayEquals(byteArray23, byteArray46);
        java.lang.Object obj52 = null;
        org.junit.Assert.assertNotEquals((java.lang.Object) byteArray46, obj52);
        byte[] byteArray57 = new byte[] {};
        byte[] byteArray58 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray57, byteArray58);
        byte[] byteArray61 = new byte[] {};
        byte[] byteArray62 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray61, byteArray62);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray58, byteArray62);
        byte[] byteArray65 = new byte[] {};
        org.junit.Assert.assertArrayEquals(byteArray58, byteArray65);
        byte[] byteArray68 = new byte[] {};
        byte[] byteArray69 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray68, byteArray69);
        byte[] byteArray72 = new byte[] {};
        byte[] byteArray73 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray72, byteArray73);
        org.junit.Assert.assertArrayEquals(byteArray69, byteArray72);
        byte[] byteArray77 = new byte[] {};
        byte[] byteArray78 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray77, byteArray78);
        byte[] byteArray81 = new byte[] {};
        byte[] byteArray82 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray81, byteArray82);
        org.junit.Assert.assertArrayEquals(byteArray78, byteArray81);
        org.junit.Assert.assertArrayEquals(byteArray72, byteArray81);
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray65, byteArray81);
        org.junit.Assert.assertArrayEquals(byteArray46, byteArray65);
        byte[] byteArray88 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(byteArray65, byteArray88);
    }

    @Test
    public void test4243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4243");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("enwiki.random.lines.txt", (double) 10L, (double) '#', (double) 10L);
    }

    @Test
    public void test4244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4244");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (float) (byte) 10, 0.0f, (float) 1L);
    }

    @Test
    public void test4245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4245");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", 0.0d, (double) 100.0f, 1.0d);
    }

    @Test
    public void test4246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4246");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule3 = kuromojiAnalysisTests2.ruleChain;
        org.junit.rules.TestRule testRule4 = null;
        org.junit.rules.RuleChain ruleChain5 = org.junit.rules.RuleChain.outerRule(testRule4);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain5;
        org.junit.rules.TestRule testRule7 = null;
        org.junit.rules.RuleChain ruleChain8 = org.junit.rules.RuleChain.outerRule(testRule7);
        org.junit.rules.RuleChain ruleChain9 = ruleChain5.around((org.junit.rules.TestRule) ruleChain8);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain5;
        kuromojiAnalysisTests2.failureAndSuccessEvents = ruleChain5;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests12.tearDown();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests12.assertTermsEquals("tests.failfast", indexReader15, terms16, terms17, false);
        org.junit.rules.RuleChain ruleChain20 = kuromojiAnalysisTests12.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement21 = null;
        org.junit.runner.Description description22 = null;
        org.junit.runners.model.Statement statement23 = ruleChain20.apply(statement21, description22);
        org.junit.rules.RuleChain ruleChain24 = ruleChain5.around((org.junit.rules.TestRule) ruleChain20);
        org.junit.Assert.assertNotNull((java.lang.Object) ruleChain5);
        java.io.Serializable[] serializableArray26 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet27 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray26);
        java.io.Serializable[] serializableArray28 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet29 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray28);
        java.io.Serializable[] serializableArray30 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet31 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray30);
        java.util.Set[] setArray33 = new java.util.Set[3];
        @SuppressWarnings("unchecked")
        java.util.Set<java.io.Serializable>[] serializableSetArray34 = (java.util.Set<java.io.Serializable>[]) setArray33;
        serializableSetArray34[0] = serializableSet27;
        serializableSetArray34[1] = serializableSet29;
        serializableSetArray34[2] = serializableSet31;
        java.util.Set<java.util.Set<java.io.Serializable>> serializableSetSet41 = org.apache.lucene.util.LuceneTestCase.asSet(serializableSetArray34);
        org.junit.Assert.assertNotSame("<unknown>", (java.lang.Object) ruleChain5, (java.lang.Object) serializableSetArray34);
        java.io.Serializable[] serializableArray44 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet45 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray44);
        java.io.Serializable[] serializableArray46 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet47 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray46);
        java.io.Serializable[] serializableArray48 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet49 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray48);
        java.util.Set[] setArray51 = new java.util.Set[3];
        @SuppressWarnings("unchecked")
        java.util.Set<java.io.Serializable>[] serializableSetArray52 = (java.util.Set<java.io.Serializable>[]) setArray51;
        serializableSetArray52[0] = serializableSet45;
        serializableSetArray52[1] = serializableSet47;
        serializableSetArray52[2] = serializableSet49;
        java.util.Set<java.util.Set<java.io.Serializable>> serializableSetSet59 = org.apache.lucene.util.LuceneTestCase.asSet(serializableSetArray52);
        java.util.Set<java.util.Set<java.io.Serializable>> serializableSetSet60 = org.apache.lucene.util.LuceneTestCase.asSet(serializableSetArray52);
        java.util.Set<java.util.Collection<java.io.Serializable>> serializableCollectionSet61 = org.apache.lucene.util.LuceneTestCase.asSet((java.util.Collection<java.io.Serializable>[]) serializableSetArray52);
        java.util.List<java.util.Set<java.io.Serializable>> serializableSetList62 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 0, serializableSetArray52);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableSetArray34, (java.lang.Object[]) serializableSetArray52);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("random", (java.lang.Object) serializableSetArray34);
    }

    @Test
    public void test4247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4247");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("hi!", 0.0d, (double) 4, (double) 1);
    }

    @Test
    public void test4248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4248");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (double) 100L, (double) 10, (double) (short) 0);
    }

    @Test
    public void test4249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4249");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests1.assertTermsEquals("hi!", indexReader11, terms12, terms13, true);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.maxfailures");
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests20.tearDown();
        kuromojiAnalysisTests20.assertPathHasBeenCleared("hi!");
        org.junit.Assert.assertNotEquals("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests20);
        org.junit.rules.TestRule testRule25 = null;
        org.junit.rules.RuleChain ruleChain26 = org.junit.rules.RuleChain.outerRule(testRule25);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain26;
        org.junit.rules.TestRule testRule28 = null;
        org.junit.rules.RuleChain ruleChain29 = org.junit.rules.RuleChain.outerRule(testRule28);
        org.junit.rules.RuleChain ruleChain30 = ruleChain26.around((org.junit.rules.TestRule) ruleChain29);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) ruleChain26);
        kuromojiAnalysisTests1.ensureCleanedUp();
        java.lang.String str33 = kuromojiAnalysisTests1.getTestName();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests34.tearDown();
        org.apache.lucene.index.IndexReader indexReader37 = null;
        org.apache.lucene.index.Terms terms38 = null;
        org.apache.lucene.index.Terms terms39 = null;
        kuromojiAnalysisTests34.assertTermsEquals("tests.failfast", indexReader37, terms38, terms39, false);
        org.junit.rules.RuleChain ruleChain42 = kuromojiAnalysisTests34.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement43 = null;
        org.junit.runner.Description description44 = null;
        org.junit.runners.model.Statement statement45 = ruleChain42.apply(statement43, description44);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests46 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests46.tearDown();
        org.apache.lucene.index.IndexReader indexReader49 = null;
        org.apache.lucene.index.Terms terms50 = null;
        org.apache.lucene.index.Terms terms51 = null;
        kuromojiAnalysisTests46.assertTermsEquals("tests.failfast", indexReader49, terms50, terms51, false);
        kuromojiAnalysisTests46.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain56 = kuromojiAnalysisTests46.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain57 = ruleChain42.around((org.junit.rules.TestRule) ruleChain56);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests59 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests59.tearDown();
        org.apache.lucene.index.IndexReader indexReader62 = null;
        org.apache.lucene.index.Terms terms63 = null;
        org.apache.lucene.index.Terms terms64 = null;
        kuromojiAnalysisTests59.assertTermsEquals("tests.failfast", indexReader62, terms63, terms64, false);
        org.junit.rules.RuleChain ruleChain67 = kuromojiAnalysisTests59.failureAndSuccessEvents;
        org.junit.Assert.assertNotSame("hi!", (java.lang.Object) ruleChain67, (java.lang.Object) "tests.weekly");
        org.junit.rules.RuleChain ruleChain70 = ruleChain42.around((org.junit.rules.TestRule) ruleChain67);
        org.junit.rules.RuleChain ruleChain71 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain72 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain71);
        org.junit.rules.RuleChain ruleChain73 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain74 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain73);
        org.junit.rules.RuleChain ruleChain75 = ruleChain72.around((org.junit.rules.TestRule) ruleChain74);
        org.junit.rules.RuleChain ruleChain76 = ruleChain67.around((org.junit.rules.TestRule) ruleChain74);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain74;
        org.apache.lucene.index.PostingsEnum postingsEnum79 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum80 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests1.assertDocsAndPositionsEnumEquals("tests.monster", postingsEnum79, postingsEnum80);
    }

    @Test
    public void test4250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4250");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests9 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests9.tearDown();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        org.apache.lucene.index.Terms terms14 = null;
        kuromojiAnalysisTests9.assertTermsEquals("tests.failfast", indexReader12, terms13, terms14, false);
        kuromojiAnalysisTests9.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests9.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests9.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests9.ensureCheckIndexPassed();
        kuromojiAnalysisTests9.assertPathHasBeenCleared("tests.nightly");
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        org.apache.lucene.index.Terms terms28 = null;
        kuromojiAnalysisTests9.assertTermsEquals("tests.failfast", indexReader26, terms27, terms28, true);
        kuromojiAnalysisTests9.resetCheckIndexStatus();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests9);
        kuromojiAnalysisTests9.overrideTestDefaultQueryCache();
        java.lang.String str34 = kuromojiAnalysisTests9.getTestName();
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum39 = null;
        kuromojiAnalysisTests9.assertPositionsSkippingEquals("<unknown>", indexReader36, 1, postingsEnum38, postingsEnum39);
        org.junit.rules.TestRule testRule41 = kuromojiAnalysisTests9.ruleChain;
        org.apache.lucene.search.QueryCachingPolicy queryCachingPolicy42 = org.apache.lucene.util.LuceneTestCase.MAYBE_CACHE_POLICY;
        org.junit.rules.TestRule testRule43 = null;
        org.junit.rules.RuleChain ruleChain44 = org.junit.rules.RuleChain.outerRule(testRule43);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain44;
        org.junit.rules.TestRule testRule46 = null;
        org.junit.rules.RuleChain ruleChain47 = org.junit.rules.RuleChain.outerRule(testRule46);
        org.junit.rules.RuleChain ruleChain48 = ruleChain44.around((org.junit.rules.TestRule) ruleChain47);
        org.junit.Assert.assertNotSame((java.lang.Object) queryCachingPolicy42, (java.lang.Object) ruleChain48);
        org.junit.rules.RuleChain ruleChain50 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain51 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain50);
        org.junit.rules.RuleChain ruleChain52 = ruleChain48.around((org.junit.rules.TestRule) ruleChain50);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain50;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests55 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests55.tearDown();
        org.apache.lucene.index.IndexReader indexReader58 = null;
        org.apache.lucene.index.Terms terms59 = null;
        org.apache.lucene.index.Terms terms60 = null;
        kuromojiAnalysisTests55.assertTermsEquals("tests.failfast", indexReader58, terms59, terms60, false);
        kuromojiAnalysisTests55.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests55.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule66 = kuromojiAnalysisTests55.ruleChain;
        org.junit.rules.RuleChain ruleChain67 = kuromojiAnalysisTests55.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals((java.lang.Object) "random", (java.lang.Object) ruleChain67);
        org.junit.rules.RuleChain ruleChain69 = ruleChain50.around((org.junit.rules.TestRule) ruleChain67);
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests9, (java.lang.Object) ruleChain69);
        org.apache.lucene.index.PostingsEnum postingsEnum72 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum73 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests9.assertDocsAndPositionsEnumEquals("", postingsEnum72, postingsEnum73);
    }

    @Test
    public void test4251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4251");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (short) 0, (double) 1, (double) (-1L));
    }

    @Test
    public void test4252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4252");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.junit.rules.RuleChain ruleChain8 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("hi!", indexReader11, (int) '4', postingsEnum13, postingsEnum14, true);
        java.lang.String str17 = kuromojiAnalysisTests0.getTestName();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        java.lang.String str19 = kuromojiAnalysisTests0.getTestName();
        org.apache.lucene.index.NumericDocValues numericDocValues22 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues23 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("", (int) (byte) 100, numericDocValues22, numericDocValues23);
    }

    @Test
    public void test4253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4253");
        long[] longArray1 = new long[] {};
        long[] longArray2 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray1, longArray2);
        java.lang.Object obj5 = null;
        long[] longArray10 = new long[] {};
        long[] longArray11 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray10, longArray11);
        long[] longArray14 = new long[] {};
        long[] longArray15 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray14, longArray15);
        org.junit.Assert.assertArrayEquals(longArray11, longArray15);
        long[] longArray19 = new long[] {};
        long[] longArray20 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray19, longArray20);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", longArray11, longArray19);
        long[] longArray25 = new long[] {};
        long[] longArray26 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray25, longArray26);
        long[] longArray29 = new long[] {};
        long[] longArray30 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray29, longArray30);
        org.junit.Assert.assertArrayEquals(longArray26, longArray30);
        long[] longArray34 = new long[] {};
        long[] longArray35 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray34, longArray35);
        long[] longArray38 = new long[] {};
        long[] longArray39 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray38, longArray39);
        org.junit.Assert.assertArrayEquals(longArray35, longArray39);
        org.junit.Assert.assertArrayEquals(longArray26, longArray35);
        long[] longArray44 = new long[] {};
        long[] longArray45 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray44, longArray45);
        org.junit.Assert.assertArrayEquals("random", longArray35, longArray44);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", longArray19, longArray44);
        long[] longArray52 = new long[] {};
        long[] longArray53 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray52, longArray53);
        long[] longArray56 = new long[] {};
        long[] longArray57 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray56, longArray57);
        org.junit.Assert.assertArrayEquals(longArray53, longArray57);
        long[] longArray61 = new long[] {};
        long[] longArray62 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray61, longArray62);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", longArray53, longArray61);
        long[] longArray66 = new long[] {};
        long[] longArray67 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray66, longArray67);
        long[] longArray70 = new long[] {};
        long[] longArray71 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray70, longArray71);
        org.junit.Assert.assertArrayEquals(longArray67, longArray71);
        long[] longArray75 = new long[] {};
        long[] longArray76 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray75, longArray76);
        long[] longArray79 = new long[] {};
        long[] longArray80 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray79, longArray80);
        org.junit.Assert.assertArrayEquals(longArray76, longArray80);
        org.junit.Assert.assertArrayEquals(longArray67, longArray76);
        org.junit.Assert.assertArrayEquals("random", longArray61, longArray67);
        org.junit.Assert.assertArrayEquals("random", longArray44, longArray67);
        org.junit.Assert.assertNotEquals("tests.weekly", obj5, (java.lang.Object) longArray67);
        org.junit.Assert.assertArrayEquals(longArray2, longArray67);
        long[] longArray88 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(longArray67, longArray88);
    }

    @Test
    public void test4254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4254");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests[][] kuromojiAnalysisTestsArray2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests[][] {};
        java.util.List<org.elasticsearch.index.analysis.KuromojiAnalysisTests[]> kuromojiAnalysisTestsArrayList3 = org.elasticsearch.test.ESTestCase.randomSubsetOf(0, kuromojiAnalysisTestsArray2);
        java.util.Set<org.elasticsearch.index.analysis.KuromojiAnalysisTests[]> kuromojiAnalysisTestsArraySet4 = org.apache.lucene.util.LuceneTestCase.asSet(kuromojiAnalysisTestsArray2);
        java.util.Set<org.elasticsearch.test.ESTestCase[]> eSTestCaseArraySet5 = org.apache.lucene.util.LuceneTestCase.asSet((org.elasticsearch.test.ESTestCase[][]) kuromojiAnalysisTestsArray2);
        java.util.concurrent.ExecutorService executorService6 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray7 = new java.util.concurrent.ExecutorService[] { executorService6 };
        java.util.concurrent.ExecutorService executorService8 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray9 = new java.util.concurrent.ExecutorService[] { executorService8 };
        java.util.concurrent.ExecutorService executorService10 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray11 = new java.util.concurrent.ExecutorService[] { executorService10 };
        java.util.concurrent.ExecutorService executorService12 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray13 = new java.util.concurrent.ExecutorService[] { executorService12 };
        java.util.concurrent.ExecutorService[][] executorServiceArray14 = new java.util.concurrent.ExecutorService[][] { executorServiceArray7, executorServiceArray9, executorServiceArray11, executorServiceArray13 };
        java.util.concurrent.ExecutorService executorService15 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray16 = new java.util.concurrent.ExecutorService[] { executorService15 };
        java.util.concurrent.ExecutorService executorService17 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray18 = new java.util.concurrent.ExecutorService[] { executorService17 };
        java.util.concurrent.ExecutorService executorService19 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray20 = new java.util.concurrent.ExecutorService[] { executorService19 };
        java.util.concurrent.ExecutorService executorService21 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray22 = new java.util.concurrent.ExecutorService[] { executorService21 };
        java.util.concurrent.ExecutorService[][] executorServiceArray23 = new java.util.concurrent.ExecutorService[][] { executorServiceArray16, executorServiceArray18, executorServiceArray20, executorServiceArray22 };
        java.util.concurrent.ExecutorService executorService24 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray25 = new java.util.concurrent.ExecutorService[] { executorService24 };
        java.util.concurrent.ExecutorService executorService26 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray27 = new java.util.concurrent.ExecutorService[] { executorService26 };
        java.util.concurrent.ExecutorService executorService28 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray29 = new java.util.concurrent.ExecutorService[] { executorService28 };
        java.util.concurrent.ExecutorService executorService30 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray31 = new java.util.concurrent.ExecutorService[] { executorService30 };
        java.util.concurrent.ExecutorService[][] executorServiceArray32 = new java.util.concurrent.ExecutorService[][] { executorServiceArray25, executorServiceArray27, executorServiceArray29, executorServiceArray31 };
        java.util.concurrent.ExecutorService executorService33 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray34 = new java.util.concurrent.ExecutorService[] { executorService33 };
        java.util.concurrent.ExecutorService executorService35 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray36 = new java.util.concurrent.ExecutorService[] { executorService35 };
        java.util.concurrent.ExecutorService executorService37 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray38 = new java.util.concurrent.ExecutorService[] { executorService37 };
        java.util.concurrent.ExecutorService executorService39 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray40 = new java.util.concurrent.ExecutorService[] { executorService39 };
        java.util.concurrent.ExecutorService[][] executorServiceArray41 = new java.util.concurrent.ExecutorService[][] { executorServiceArray34, executorServiceArray36, executorServiceArray38, executorServiceArray40 };
        java.util.concurrent.ExecutorService[][][] executorServiceArray42 = new java.util.concurrent.ExecutorService[][][] { executorServiceArray14, executorServiceArray23, executorServiceArray32, executorServiceArray41 };
        java.util.Set<java.util.concurrent.ExecutorService[][]> executorServiceArraySet43 = org.apache.lucene.util.LuceneTestCase.asSet(executorServiceArray42);
        java.util.Set<java.util.concurrent.ExecutorService[][]> executorServiceArraySet44 = org.apache.lucene.util.LuceneTestCase.asSet(executorServiceArray42);
        java.util.Set<java.lang.Cloneable[]> cloneableArraySet45 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[][]) executorServiceArray42);
        java.util.Set<java.util.concurrent.ExecutorService[][]> executorServiceArraySet46 = org.apache.lucene.util.LuceneTestCase.asSet(executorServiceArray42);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.awaitsfix", (java.lang.Object[]) kuromojiAnalysisTestsArray2, (java.lang.Object[]) executorServiceArray42);
    }

    @Test
    public void test4255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4255");
        java.lang.Object obj0 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests2.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        kuromojiAnalysisTests2.assertTermsEquals("tests.failfast", indexReader5, terms6, terms7, false);
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests2.setIndexWriterMaxDocs((int) (short) 100);
        org.junit.Assert.assertNotEquals((java.lang.Object) 0, (java.lang.Object) kuromojiAnalysisTests2);
        kuromojiAnalysisTests2.ensureAllSearchContextsReleased();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(obj0, (java.lang.Object) kuromojiAnalysisTests2);
    }

    @Test
    public void test4256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4256");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("<unknown>", indexReader12, (-1), postingsEnum14, postingsEnum15);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("hi!");
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests22 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests22.tearDown();
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.Terms terms26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        kuromojiAnalysisTests22.assertTermsEquals("tests.failfast", indexReader25, terms26, terms27, false);
        kuromojiAnalysisTests22.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests22.assertPathHasBeenCleared("tests.badapples");
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests22);
        kuromojiAnalysisTests22.resetCheckIndexStatus();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests36 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests36.tearDown();
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.Terms terms40 = null;
        org.apache.lucene.index.Terms terms41 = null;
        kuromojiAnalysisTests36.assertTermsEquals("tests.failfast", indexReader39, terms40, terms41, false);
        kuromojiAnalysisTests36.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader46 = null;
        org.apache.lucene.index.Terms terms47 = null;
        org.apache.lucene.index.Terms terms48 = null;
        kuromojiAnalysisTests36.assertTermsEquals("hi!", indexReader46, terms47, terms48, true);
        kuromojiAnalysisTests36.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests36.assertPathHasBeenCleared("tests.maxfailures");
        kuromojiAnalysisTests36.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests55 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests55.tearDown();
        kuromojiAnalysisTests55.assertPathHasBeenCleared("hi!");
        org.junit.Assert.assertNotEquals("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests36, (java.lang.Object) kuromojiAnalysisTests55);
        org.junit.rules.TestRule testRule60 = null;
        org.junit.rules.RuleChain ruleChain61 = org.junit.rules.RuleChain.outerRule(testRule60);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain61;
        org.junit.rules.TestRule testRule63 = null;
        org.junit.rules.RuleChain ruleChain64 = org.junit.rules.RuleChain.outerRule(testRule63);
        org.junit.rules.RuleChain ruleChain65 = ruleChain61.around((org.junit.rules.TestRule) ruleChain64);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests36, (java.lang.Object) ruleChain61);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain61;
        org.junit.Assert.assertNotEquals("tests.awaitsfix", (java.lang.Object) kuromojiAnalysisTests22, (java.lang.Object) ruleChain61);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests69 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests69.tearDown();
        org.apache.lucene.index.IndexReader indexReader72 = null;
        org.apache.lucene.index.Terms terms73 = null;
        org.apache.lucene.index.Terms terms74 = null;
        kuromojiAnalysisTests69.assertTermsEquals("tests.failfast", indexReader72, terms73, terms74, false);
        org.junit.rules.RuleChain ruleChain77 = kuromojiAnalysisTests69.failureAndSuccessEvents;
        kuromojiAnalysisTests69.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests69.setIndexWriterMaxDocs((-1));
        org.junit.rules.RuleChain ruleChain81 = kuromojiAnalysisTests69.failureAndSuccessEvents;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures82 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures83 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures82);
        org.junit.rules.RuleChain ruleChain84 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) testRuleIgnoreAfterMaxFailures82);
        kuromojiAnalysisTests69.failureAndSuccessEvents = ruleChain84;
        kuromojiAnalysisTests22.failureAndSuccessEvents = ruleChain84;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain84;
        org.apache.lucene.index.PostingsEnum postingsEnum89 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum90 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("random", postingsEnum89, postingsEnum90);
    }

    @Test
    public void test4257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4257");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.apache.lucene.index.PostingsEnum postingsEnum10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum11 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("tests.weekly", postingsEnum10, postingsEnum11, true);
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) ' ');
        org.junit.rules.TestRule testRule16 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("<unknown>", indexReader20, (int) (byte) 10, postingsEnum22, postingsEnum23);
        org.junit.rules.TestRule testRule25 = kuromojiAnalysisTests1.ruleChain;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests26 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests26.tearDown();
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.Terms terms30 = null;
        org.apache.lucene.index.Terms terms31 = null;
        kuromojiAnalysisTests26.assertTermsEquals("tests.failfast", indexReader29, terms30, terms31, false);
        kuromojiAnalysisTests26.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.Terms terms37 = null;
        org.apache.lucene.index.Terms terms38 = null;
        kuromojiAnalysisTests26.assertTermsEquals("hi!", indexReader36, terms37, terms38, true);
        java.lang.String str41 = kuromojiAnalysisTests26.getTestName();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests42 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests42.tearDown();
        org.apache.lucene.index.IndexReader indexReader45 = null;
        org.apache.lucene.index.Terms terms46 = null;
        org.apache.lucene.index.Terms terms47 = null;
        kuromojiAnalysisTests42.assertTermsEquals("tests.failfast", indexReader45, terms46, terms47, false);
        kuromojiAnalysisTests42.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests42.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule53 = kuromojiAnalysisTests42.ruleChain;
        org.junit.rules.RuleChain ruleChain54 = kuromojiAnalysisTests42.failureAndSuccessEvents;
        kuromojiAnalysisTests26.failureAndSuccessEvents = ruleChain54;
        org.apache.lucene.index.PostingsEnum postingsEnum57 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum58 = null;
        kuromojiAnalysisTests26.assertDocsEnumEquals("", postingsEnum57, postingsEnum58, false);
        org.apache.lucene.index.IndexReader indexReader62 = null;
        org.apache.lucene.index.Terms terms63 = null;
        org.apache.lucene.index.Terms terms64 = null;
        kuromojiAnalysisTests26.assertTermsEquals("", indexReader62, terms63, terms64, false);
        org.apache.lucene.index.PostingsEnum postingsEnum68 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum69 = null;
        kuromojiAnalysisTests26.assertDocsEnumEquals("europarl.lines.txt.gz", postingsEnum68, postingsEnum69, true);
        org.junit.Assert.assertNotEquals("tests.maxfailures", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests26);
        kuromojiAnalysisTests26.overrideTestDefaultQueryCache();
        org.apache.lucene.index.NumericDocValues numericDocValues76 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues77 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests26.assertDocValuesEquals("<unknown>", 0, numericDocValues76, numericDocValues77);
    }

    @Test
    public void test4258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4258");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.awaitsfix", (long) (byte) 1, (long) 1);
    }

    @Test
    public void test4259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4259");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain10 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain11 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain10);
        org.junit.rules.RuleChain ruleChain12 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain13 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain12);
        org.junit.rules.RuleChain ruleChain14 = ruleChain11.around((org.junit.rules.TestRule) ruleChain13);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain11;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests16 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests16.tearDown();
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.Terms terms20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        kuromojiAnalysisTests16.assertTermsEquals("tests.failfast", indexReader19, terms20, terms21, false);
        kuromojiAnalysisTests16.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain26 = kuromojiAnalysisTests16.failureAndSuccessEvents;
        kuromojiAnalysisTests16.assertPathHasBeenCleared("tests.awaitsfix");
        kuromojiAnalysisTests16.setUp();
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests16);
        org.junit.Assert.assertNotNull("tests.nightly", (java.lang.Object) kuromojiAnalysisTests16);
        kuromojiAnalysisTests16.ensureCleanedUp();
        org.apache.lucene.index.NumericDocValues numericDocValues35 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues36 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests16.assertDocValuesEquals("tests.failfast", (int) (byte) 10, numericDocValues35, numericDocValues36);
    }

    @Test
    public void test4260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4260");
        short[] shortArray2 = new short[] {};
        short[] shortArray3 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray2, shortArray3);
        short[] shortArray5 = new short[] {};
        short[] shortArray6 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray5, shortArray6);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray2, shortArray6);
        short[] shortArray10 = new short[] {};
        short[] shortArray11 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray10, shortArray11);
        short[] shortArray13 = new short[] {};
        short[] shortArray14 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray13, shortArray14);
        org.junit.Assert.assertArrayEquals("", shortArray11, shortArray13);
        short[] shortArray18 = new short[] {};
        short[] shortArray19 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray18, shortArray19);
        short[] shortArray21 = new short[] {};
        short[] shortArray22 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray21, shortArray22);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray18, shortArray22);
        org.junit.Assert.assertArrayEquals(shortArray13, shortArray22);
        org.junit.Assert.assertArrayEquals(shortArray6, shortArray22);
        short[] shortArray28 = new short[] {};
        short[] shortArray29 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray28, shortArray29);
        short[] shortArray31 = new short[] {};
        short[] shortArray32 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray31, shortArray32);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray28, shortArray32);
        org.junit.Assert.assertArrayEquals(shortArray22, shortArray32);
        short[] shortArray36 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.failfast", shortArray32, shortArray36);
    }

    @Test
    public void test4261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4261");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", (double) (-1L), (double) (-1L));
    }

    @Test
    public void test4262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4262");
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray2 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet3 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray2);
        java.io.Serializable[] serializableArray5 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet6 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray5);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray7 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet8 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray7);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray5, (java.lang.Object[]) throttlingArray7);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray2, (java.lang.Object[]) serializableArray5);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray12 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet13 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray12);
        java.io.Serializable[] serializableArray15 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet16 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray15);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray17 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet18 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray17);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray15, (java.lang.Object[]) throttlingArray17);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray12, (java.lang.Object[]) serializableArray15);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray5, (java.lang.Object[]) throttlingArray12);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray23 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet24 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray23);
        java.io.Serializable[] serializableArray26 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet27 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray26);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray28 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet29 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray28);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray26, (java.lang.Object[]) throttlingArray28);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray23, (java.lang.Object[]) serializableArray26);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray12, (java.lang.Object[]) serializableArray26);
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet33 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray12);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule35 = kuromojiAnalysisTests34.ruleChain;
        org.apache.lucene.index.PostingsEnum postingsEnum37 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        kuromojiAnalysisTests34.assertDocsEnumEquals("random", postingsEnum37, postingsEnum38, true);
        org.junit.rules.TestRule testRule41 = kuromojiAnalysisTests34.ruleChain;
        java.util.concurrent.ExecutorService[] executorServiceArray43 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean44 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray43);
        boolean boolean45 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray43);
        boolean boolean46 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray43);
        boolean boolean47 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray43);
        java.io.Serializable[] serializableArray49 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet50 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray49);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray51 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet52 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray51);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray49, (java.lang.Object[]) throttlingArray51);
        java.io.Serializable[] serializableArray55 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet56 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray55);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray57 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet58 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray57);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray55, (java.lang.Object[]) throttlingArray57);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray49, (java.lang.Object[]) serializableArray55);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray62 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet63 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray62);
        java.io.Serializable[] serializableArray65 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet66 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray65);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray67 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet68 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray67);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray65, (java.lang.Object[]) throttlingArray67);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray62, (java.lang.Object[]) serializableArray65);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray72 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet73 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray72);
        java.io.Serializable[] serializableArray75 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet76 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray75);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray77 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet78 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray77);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray75, (java.lang.Object[]) throttlingArray77);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray72, (java.lang.Object[]) serializableArray75);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray65, (java.lang.Object[]) throttlingArray72);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray55, (java.lang.Object[]) throttlingArray72);
        org.junit.Assert.assertArrayEquals("tests.weekly", (java.lang.Object[]) executorServiceArray43, (java.lang.Object[]) throttlingArray72);
        org.junit.Assert.assertNotEquals((java.lang.Object) testRule41, (java.lang.Object) throttlingArray72);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray12, (java.lang.Object[]) throttlingArray72);
        java.lang.Object[] objArray86 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) throttlingArray12, objArray86);
    }

    @Test
    public void test4263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4263");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (long) (byte) 1, (long) 2);
    }

    @Test
    public void test4264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4264");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.nightly", (double) 100, (double) 100.0f, (-1.0d));
    }

    @Test
    public void test4265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4265");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) (short) 10, (float) 3, (float) 1L);
    }

    @Test
    public void test4266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4266");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.junit.rules.RuleChain ruleChain14 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.slow", indexReader16, (int) (short) 1, postingsEnum18, postingsEnum19, false);
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.slow", indexReader23, 2, postingsEnum25, postingsEnum26);
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("<unknown>", postingsEnum29, postingsEnum30);
    }

    @Test
    public void test4267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4267");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 100.0f, (double) ' ', (double) '4');
    }

    @Test
    public void test4268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4268");
        double[] doubleArray3 = new double[] {};
        double[] doubleArray4 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray3, doubleArray4, (double) '#');
        double[] doubleArray7 = new double[] {};
        double[] doubleArray8 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray7, doubleArray8, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray3, doubleArray8, (double) 0.0f);
        double[] doubleArray13 = new double[] {};
        double[] doubleArray14 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray13, doubleArray14, (double) '#');
        double[] doubleArray17 = new double[] {};
        double[] doubleArray18 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray17, doubleArray18, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray13, doubleArray18, (double) 0.0f);
        org.junit.Assert.assertArrayEquals("", doubleArray3, doubleArray18, (double) 1);
        double[] doubleArray25 = new double[] {};
        double[] doubleArray26 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray25, doubleArray26, (double) '#');
        org.junit.Assert.assertArrayEquals("tests.badapples", doubleArray18, doubleArray25, (-1.0d));
        double[] doubleArray34 = new double[] {};
        double[] doubleArray35 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray34, doubleArray35, (double) '#');
        double[] doubleArray38 = new double[] {};
        double[] doubleArray39 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray38, doubleArray39, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray34, doubleArray38, (double) 3);
        double[] doubleArray44 = new double[] {};
        double[] doubleArray45 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray44, doubleArray45, (double) '#');
        double[] doubleArray48 = new double[] {};
        double[] doubleArray49 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray48, doubleArray49, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray44, doubleArray48, (double) 3);
        org.junit.Assert.assertArrayEquals("tests.monster", doubleArray34, doubleArray44, (double) 1.0f);
        double[] doubleArray56 = new double[] {};
        double[] doubleArray57 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray56, doubleArray57, (double) '#');
        double[] doubleArray60 = new double[] {};
        double[] doubleArray61 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray60, doubleArray61, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray56, doubleArray60, (double) 3);
        org.junit.Assert.assertArrayEquals("hi!", doubleArray44, doubleArray60, (double) 1.0f);
        double[] doubleArray69 = new double[] {};
        double[] doubleArray70 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray69, doubleArray70, (double) '#');
        double[] doubleArray73 = new double[] {};
        double[] doubleArray74 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray73, doubleArray74, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray69, doubleArray74, (double) 0.0f);
        double[] doubleArray79 = new double[] {};
        double[] doubleArray80 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray79, doubleArray80, (double) '#');
        double[] doubleArray83 = new double[] {};
        double[] doubleArray84 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray83, doubleArray84, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray79, doubleArray84, (double) 0.0f);
        org.junit.Assert.assertArrayEquals("", doubleArray69, doubleArray84, (double) 1);
        org.junit.Assert.assertArrayEquals("<unknown>", doubleArray60, doubleArray84, (double) '4');
        org.junit.Assert.assertArrayEquals(doubleArray18, doubleArray60, (double) 0);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests95 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests95.tearDown();
        kuromojiAnalysisTests95.ensureAllSearchContextsReleased();
        java.lang.Class<?> wildcardClass98 = kuromojiAnalysisTests95.getClass();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", (java.lang.Object) doubleArray60, (java.lang.Object) wildcardClass98);
    }

    @Test
    public void test4269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4269");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("<unknown>", indexReader12, (-1), postingsEnum14, postingsEnum15);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("hi!");
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.tearDown();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test4270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4270");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.badapples");
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests1);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests14 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests14.tearDown();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        org.apache.lucene.index.Terms terms19 = null;
        kuromojiAnalysisTests14.assertTermsEquals("tests.failfast", indexReader17, terms18, terms19, false);
        kuromojiAnalysisTests14.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain24 = kuromojiAnalysisTests14.failureAndSuccessEvents;
        kuromojiAnalysisTests14.assertPathHasBeenCleared("tests.awaitsfix");
        kuromojiAnalysisTests14.setUp();
        java.lang.String str28 = kuromojiAnalysisTests14.getTestName();
        org.junit.rules.TestRule testRule29 = kuromojiAnalysisTests14.ruleChain;
        kuromojiAnalysisTests14.ensureCheckIndexPassed();
        kuromojiAnalysisTests14.setUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests14);
    }

    @Test
    public void test4271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4271");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum7 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum8 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.maxfailures", indexReader5, 0, postingsEnum7, postingsEnum8);
        org.junit.rules.RuleChain ruleChain10 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain11 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain10);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule13 = kuromojiAnalysisTests12.ruleChain;
        org.junit.rules.RuleChain ruleChain14 = ruleChain11.around(testRule13);
        org.junit.rules.RuleChain ruleChain15 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain14);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain14;
        org.junit.rules.TestRule testRule17 = null;
        org.junit.rules.RuleChain ruleChain18 = ruleChain14.around(testRule17);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests19 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule20 = kuromojiAnalysisTests19.ruleChain;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        kuromojiAnalysisTests19.assertDocsEnumEquals("tests.failfast", postingsEnum22, postingsEnum23, true);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.slow", (java.lang.Object) ruleChain14, (java.lang.Object) postingsEnum23);
    }

    @Test
    public void test4272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4272");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) '4', (double) 10L, (double) (-1.0f));
    }

    @Test
    public void test4273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4273");
        int[] intArray1 = new int[] { 1 };
        int[] intArray3 = new int[] { 1 };
        int[] intArray5 = new int[] { 1 };
        int[] intArray7 = new int[] { 1 };
        int[] intArray9 = new int[] { 1 };
        int[][] intArray10 = new int[][] { intArray1, intArray3, intArray5, intArray7, intArray9 };
        java.util.Set<int[]> intArraySet11 = org.apache.lucene.util.LuceneTestCase.asSet(intArray10);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray14 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet15 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray14);
        java.io.Serializable[] serializableArray17 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet18 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray17);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray19 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet20 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray19);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray17, (java.lang.Object[]) throttlingArray19);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray14, (java.lang.Object[]) serializableArray17);
        java.io.Serializable[] serializableArray24 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet25 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray24);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray26 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet27 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray26);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray24, (java.lang.Object[]) throttlingArray26);
        org.junit.Assert.assertEquals("tests.monster", (java.lang.Object[]) throttlingArray14, (java.lang.Object[]) serializableArray24);
        java.util.concurrent.ExecutorService[] executorServiceArray31 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean32 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray31);
        boolean boolean33 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray31);
        boolean boolean34 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray31);
        boolean boolean35 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray31);
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet38 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray37);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray39 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet40 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray39);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray37, (java.lang.Object[]) throttlingArray39);
        java.io.Serializable[] serializableArray43 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet44 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray43);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray45 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet46 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray45);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray43, (java.lang.Object[]) throttlingArray45);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray37, (java.lang.Object[]) serializableArray43);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray50 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet51 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray50);
        java.io.Serializable[] serializableArray53 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet54 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray53);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray55 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet56 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray55);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray53, (java.lang.Object[]) throttlingArray55);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray50, (java.lang.Object[]) serializableArray53);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray60 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet61 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray60);
        java.io.Serializable[] serializableArray63 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet64 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray63);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray65 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet66 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray65);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray63, (java.lang.Object[]) throttlingArray65);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray60, (java.lang.Object[]) serializableArray63);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray53, (java.lang.Object[]) throttlingArray60);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray43, (java.lang.Object[]) throttlingArray60);
        org.junit.Assert.assertArrayEquals("tests.weekly", (java.lang.Object[]) executorServiceArray31, (java.lang.Object[]) throttlingArray60);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray14, (java.lang.Object[]) executorServiceArray31);
        boolean boolean73 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray31);
        boolean boolean74 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray31);
        boolean boolean75 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray31);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) intArray10, (java.lang.Object[]) executorServiceArray31);
    }

    @Test
    public void test4274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4274");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        org.apache.lucene.index.Terms terms19 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader17, terms18, terms19, true);
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("enwiki.random.lines.txt", postingsEnum26, postingsEnum27);
    }

    @Test
    public void test4275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4275");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain11 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        org.junit.rules.RuleChain ruleChain13 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests15 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests15.tearDown();
        org.apache.lucene.index.IndexReader indexReader18 = null;
        org.apache.lucene.index.Terms terms19 = null;
        org.apache.lucene.index.Terms terms20 = null;
        kuromojiAnalysisTests15.assertTermsEquals("tests.failfast", indexReader18, terms19, terms20, false);
        org.junit.rules.RuleChain ruleChain23 = kuromojiAnalysisTests15.failureAndSuccessEvents;
        kuromojiAnalysisTests15.ensureCleanedUp();
        kuromojiAnalysisTests15.ensureCheckIndexPassed();
        org.junit.Assert.assertNotEquals("hi!", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests15);
        kuromojiAnalysisTests15.ensureCleanedUp();
        kuromojiAnalysisTests15.ensureCheckIndexPassed();
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests15.assertDocsAndPositionsEnumEquals("tests.slow", postingsEnum30, postingsEnum31);
    }

    @Test
    public void test4276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4276");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", 10L, 0L);
    }

    @Test
    public void test4277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4277");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain10 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.junit.rules.RuleChain ruleChain12 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.monster", indexReader14, terms15, terms16, false);
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.slow", indexReader20, (int) (byte) 10, postingsEnum22, postingsEnum23, true);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) (byte) 10);
    }

    @Test
    public void test4278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4278");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests2.setUp();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        kuromojiAnalysisTests2.assertTermsEquals("tests.slow", indexReader5, terms6, terms7, true);
        org.apache.lucene.search.QueryCachingPolicy queryCachingPolicy10 = org.apache.lucene.util.LuceneTestCase.MAYBE_CACHE_POLICY;
        org.junit.rules.TestRule testRule11 = null;
        org.junit.rules.RuleChain ruleChain12 = org.junit.rules.RuleChain.outerRule(testRule11);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain12;
        org.junit.rules.TestRule testRule14 = null;
        org.junit.rules.RuleChain ruleChain15 = org.junit.rules.RuleChain.outerRule(testRule14);
        org.junit.rules.RuleChain ruleChain16 = ruleChain12.around((org.junit.rules.TestRule) ruleChain15);
        org.junit.Assert.assertNotSame((java.lang.Object) queryCachingPolicy10, (java.lang.Object) ruleChain16);
        org.junit.rules.RuleChain ruleChain18 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain19 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain18);
        org.junit.rules.RuleChain ruleChain20 = ruleChain16.around((org.junit.rules.TestRule) ruleChain18);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain18;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests23.tearDown();
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        org.apache.lucene.index.Terms terms28 = null;
        kuromojiAnalysisTests23.assertTermsEquals("tests.failfast", indexReader26, terms27, terms28, false);
        kuromojiAnalysisTests23.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests23.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule34 = kuromojiAnalysisTests23.ruleChain;
        org.junit.rules.RuleChain ruleChain35 = kuromojiAnalysisTests23.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals((java.lang.Object) "random", (java.lang.Object) ruleChain35);
        org.junit.rules.RuleChain ruleChain37 = ruleChain18.around((org.junit.rules.TestRule) ruleChain35);
        org.junit.Assert.assertNotNull((java.lang.Object) ruleChain18);
        org.junit.Assert.assertNotEquals("tests.badapples", (java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) ruleChain18);
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain44 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests45 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests45.setUp();
        kuromojiAnalysisTests45.tearDown();
        org.apache.lucene.index.IndexReader indexReader49 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum51 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum52 = null;
        kuromojiAnalysisTests45.assertPositionsSkippingEquals("tests.maxfailures", indexReader49, 0, postingsEnum51, postingsEnum52);
        org.junit.rules.RuleChain ruleChain54 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain55 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain54);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests56 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule57 = kuromojiAnalysisTests56.ruleChain;
        org.junit.rules.RuleChain ruleChain58 = ruleChain55.around(testRule57);
        org.junit.rules.RuleChain ruleChain59 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain58);
        kuromojiAnalysisTests45.failureAndSuccessEvents = ruleChain58;
        kuromojiAnalysisTests45.ensureCheckIndexPassed();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) kuromojiAnalysisTests45);
    }

    @Test
    public void test4279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4279");
        java.lang.String[] strArray1 = new java.lang.String[] { "random" };
        java.lang.String[] strArray3 = new java.lang.String[] { "random" };
        java.lang.String[] strArray5 = new java.lang.String[] { "random" };
        java.lang.String[] strArray7 = new java.lang.String[] { "random" };
        java.lang.String[] strArray9 = new java.lang.String[] { "random" };
        java.lang.String[][] strArray10 = new java.lang.String[][] { strArray1, strArray3, strArray5, strArray7, strArray9 };
        java.util.Set<java.lang.String[]> strArraySet11 = org.apache.lucene.util.LuceneTestCase.asSet(strArray10);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray14 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet15 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray14);
        java.io.Serializable[] serializableArray17 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet18 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray17);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray19 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet20 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray19);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray17, (java.lang.Object[]) throttlingArray19);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray14, (java.lang.Object[]) serializableArray17);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray24 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet25 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray24);
        java.io.Serializable[] serializableArray27 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet28 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray27);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray29 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet30 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray29);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray27, (java.lang.Object[]) throttlingArray29);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray24, (java.lang.Object[]) serializableArray27);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray17, (java.lang.Object[]) throttlingArray24);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray35 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet36 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray35);
        java.io.Serializable[] serializableArray38 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet39 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray38);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray40 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet41 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray40);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray38, (java.lang.Object[]) throttlingArray40);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray35, (java.lang.Object[]) serializableArray38);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray24, (java.lang.Object[]) serializableArray38);
        java.io.Serializable[] serializableArray48 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet49 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray48);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray50 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet51 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray50);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray48, (java.lang.Object[]) throttlingArray50);
        java.io.Serializable[] serializableArray54 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet55 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray54);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray56 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet57 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray56);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray54, (java.lang.Object[]) throttlingArray56);
        java.io.Serializable[] serializableArray60 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet61 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray60);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray62 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet63 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray62);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray60, (java.lang.Object[]) throttlingArray62);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray54, (java.lang.Object[]) serializableArray60);
        org.junit.Assert.assertEquals("tests.badapples", (java.lang.Object[]) serializableArray48, (java.lang.Object[]) serializableArray54);
        java.util.concurrent.ExecutorService[] executorServiceArray67 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean68 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray67);
        boolean boolean69 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray67);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", (java.lang.Object[]) serializableArray54, (java.lang.Object[]) executorServiceArray67);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", (java.lang.Object[]) throttlingArray24, (java.lang.Object[]) serializableArray54);
        org.junit.rules.RuleChain[][] ruleChainArray72 = new org.junit.rules.RuleChain[][] {};
        java.util.Set<org.junit.rules.RuleChain[]> ruleChainArraySet73 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray72);
        java.util.Set<org.junit.rules.RuleChain[]> ruleChainArraySet74 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray72);
        java.util.Set<org.junit.rules.RuleChain[]> ruleChainArraySet75 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainArray72);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray24, (java.lang.Object[]) ruleChainArray72);
        java.util.List[][][] listArray78 = new java.util.List[0][][];
        @SuppressWarnings("unchecked")
        java.util.List<org.junit.rules.RuleChain>[][][] ruleChainListArray79 = (java.util.List<org.junit.rules.RuleChain>[][][]) listArray78;
        java.util.Set<java.util.List<org.junit.rules.RuleChain>[][]> ruleChainListArraySet80 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainListArray79);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray24, (java.lang.Object[]) ruleChainListArray79);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) strArray10, (java.lang.Object[]) ruleChainListArray79);
    }

    @Test
    public void test4280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4280");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum6 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum7 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.maxfailures", indexReader4, 0, postingsEnum6, postingsEnum7);
        org.junit.rules.RuleChain ruleChain9 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain10 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain9);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests11 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule12 = kuromojiAnalysisTests11.ruleChain;
        org.junit.rules.RuleChain ruleChain13 = ruleChain10.around(testRule12);
        org.junit.rules.RuleChain ruleChain14 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain13);
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain13;
        org.junit.rules.TestRule testRule16 = null;
        org.junit.rules.RuleChain ruleChain17 = ruleChain13.around(testRule16);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotNull((java.lang.Object) testRule16);
    }

    @Test
    public void test4281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4281");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.junit.rules.RuleChain ruleChain8 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.tearDown();
        java.lang.String str11 = kuromojiAnalysisTests0.getTestName();
        org.junit.rules.TestRule testRule14 = null;
        org.junit.rules.RuleChain ruleChain15 = org.junit.rules.RuleChain.outerRule(testRule14);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain15;
        org.junit.rules.TestRule testRule17 = null;
        org.junit.rules.RuleChain ruleChain18 = org.junit.rules.RuleChain.outerRule(testRule17);
        org.junit.rules.RuleChain ruleChain19 = ruleChain15.around((org.junit.rules.TestRule) ruleChain18);
        org.junit.Assert.assertNotSame("tests.maxfailures", (java.lang.Object) "tests.weekly", (java.lang.Object) ruleChain18);
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain18;
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.junit.rules.TestRule testRule23 = kuromojiAnalysisTests0.ruleChain;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests26 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests26.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests26, (java.lang.Object) "");
        java.lang.String str30 = kuromojiAnalysisTests26.getTestName();
        kuromojiAnalysisTests26.setIndexWriterMaxDocs((int) (short) 0);
        kuromojiAnalysisTests26.resetCheckIndexStatus();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests34.tearDown();
        org.apache.lucene.index.IndexReader indexReader37 = null;
        org.apache.lucene.index.Terms terms38 = null;
        org.apache.lucene.index.Terms terms39 = null;
        kuromojiAnalysisTests34.assertTermsEquals("tests.failfast", indexReader37, terms38, terms39, false);
        org.junit.rules.RuleChain ruleChain42 = kuromojiAnalysisTests34.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement43 = null;
        org.junit.runner.Description description44 = null;
        org.junit.runners.model.Statement statement45 = ruleChain42.apply(statement43, description44);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests46 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests46.tearDown();
        org.apache.lucene.index.IndexReader indexReader49 = null;
        org.apache.lucene.index.Terms terms50 = null;
        org.apache.lucene.index.Terms terms51 = null;
        kuromojiAnalysisTests46.assertTermsEquals("tests.failfast", indexReader49, terms50, terms51, false);
        kuromojiAnalysisTests46.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain56 = kuromojiAnalysisTests46.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain57 = ruleChain42.around((org.junit.rules.TestRule) ruleChain56);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests59 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests59.tearDown();
        org.apache.lucene.index.IndexReader indexReader62 = null;
        org.apache.lucene.index.Terms terms63 = null;
        org.apache.lucene.index.Terms terms64 = null;
        kuromojiAnalysisTests59.assertTermsEquals("tests.failfast", indexReader62, terms63, terms64, false);
        org.junit.rules.RuleChain ruleChain67 = kuromojiAnalysisTests59.failureAndSuccessEvents;
        org.junit.Assert.assertNotSame("hi!", (java.lang.Object) ruleChain67, (java.lang.Object) "tests.weekly");
        org.junit.rules.RuleChain ruleChain70 = ruleChain42.around((org.junit.rules.TestRule) ruleChain67);
        kuromojiAnalysisTests26.failureAndSuccessEvents = ruleChain70;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests72 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests72.tearDown();
        org.apache.lucene.index.IndexReader indexReader75 = null;
        org.apache.lucene.index.Terms terms76 = null;
        org.apache.lucene.index.Terms terms77 = null;
        kuromojiAnalysisTests72.assertTermsEquals("tests.failfast", indexReader75, terms76, terms77, false);
        kuromojiAnalysisTests72.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests72.ensureCleanedUp();
        kuromojiAnalysisTests72.resetCheckIndexStatus();
        kuromojiAnalysisTests72.overrideTestDefaultQueryCache();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) ruleChain70, (java.lang.Object) kuromojiAnalysisTests72);
        org.junit.rules.RuleChain ruleChain85 = kuromojiAnalysisTests72.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) testRule23, (java.lang.Object) kuromojiAnalysisTests72);
    }

    @Test
    public void test4282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4282");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests0.assertTermsEquals("hi!", indexReader10, terms11, terms12, true);
        java.lang.String str15 = kuromojiAnalysisTests0.getTestName();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("", indexReader17, (int) (byte) 0, postingsEnum19, postingsEnum20, false);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.junit.rules.RuleChain ruleChain24 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("random", indexReader26, (int) (short) 0, postingsEnum28, postingsEnum29);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        java.lang.String str33 = kuromojiAnalysisTests0.getTestName();
        org.apache.lucene.index.IndexReader indexReader35 = null;
        org.apache.lucene.index.Fields fields36 = null;
        org.apache.lucene.index.Fields fields37 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("tests.weekly", indexReader35, fields36, fields37, true);
        org.apache.lucene.index.IndexReader indexReader41 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum43 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum44 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.awaitsfix", indexReader41, (int) 'a', postingsEnum43, postingsEnum44);
        org.apache.lucene.index.NumericDocValues numericDocValues48 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues49 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.slow", (int) '4', numericDocValues48, numericDocValues49);
    }

    @Test
    public void test4283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4283");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((long) (byte) 10, (long) (short) 10);
    }

    @Test
    public void test4284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4284");
        double[] doubleArray2 = new double[] {};
        double[] doubleArray3 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray2, doubleArray3, (double) '#');
        double[] doubleArray6 = new double[] {};
        double[] doubleArray7 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray6, doubleArray7, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray2, doubleArray7, (double) 0.0f);
        double[] doubleArray12 = new double[] {};
        double[] doubleArray13 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray12, doubleArray13, (double) '#');
        double[] doubleArray16 = new double[] {};
        double[] doubleArray17 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray16, doubleArray17, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray12, doubleArray17, (double) 0.0f);
        org.junit.Assert.assertArrayEquals("", doubleArray2, doubleArray17, (double) 1);
        double[] doubleArray24 = new double[] {};
        double[] doubleArray25 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray24, doubleArray25, (double) '#');
        org.junit.Assert.assertArrayEquals("tests.badapples", doubleArray17, doubleArray24, (-1.0d));
        double[] doubleArray31 = new double[] {};
        double[] doubleArray32 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray31, doubleArray32, (double) '#');
        double[] doubleArray35 = new double[] {};
        double[] doubleArray36 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray35, doubleArray36, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray31, doubleArray35, (double) 3);
        double[] doubleArray42 = new double[] {};
        double[] doubleArray43 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray42, doubleArray43, (double) '#');
        double[] doubleArray46 = new double[] {};
        double[] doubleArray47 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray46, doubleArray47, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray42, doubleArray47, (double) 0.0f);
        double[] doubleArray52 = new double[] {};
        double[] doubleArray53 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray52, doubleArray53, (double) '#');
        double[] doubleArray56 = new double[] {};
        double[] doubleArray57 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray56, doubleArray57, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray52, doubleArray57, (double) 0.0f);
        org.junit.Assert.assertArrayEquals("", doubleArray42, doubleArray57, (double) 1);
        double[] doubleArray64 = new double[] {};
        double[] doubleArray65 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray64, doubleArray65, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray57, doubleArray65, (double) 2);
        org.junit.Assert.assertArrayEquals(doubleArray31, doubleArray65, (double) (short) -1);
        double[] doubleArray72 = new double[] {};
        double[] doubleArray73 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray72, doubleArray73, (double) '#');
        double[] doubleArray76 = new double[] {};
        double[] doubleArray77 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray76, doubleArray77, (double) '#');
        double[] doubleArray80 = new double[] {};
        double[] doubleArray81 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray80, doubleArray81, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray76, doubleArray80, (double) 3);
        org.junit.Assert.assertArrayEquals(doubleArray72, doubleArray80, (-1.0d));
        org.junit.Assert.assertArrayEquals("random", doubleArray65, doubleArray80, (double) (-1.0f));
        org.junit.Assert.assertArrayEquals(doubleArray17, doubleArray65, 1.0d);
        double[] doubleArray92 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(doubleArray17, doubleArray92, (double) (short) 100);
    }

    @Test
    public void test4285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4285");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("enwiki.random.lines.txt");
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests0.assertTermsEquals("hi!", indexReader11, terms12, terms13, false);
        org.apache.lucene.index.PostingsEnum postingsEnum17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("<unknown>", postingsEnum17, postingsEnum18);
    }

    @Test
    public void test4286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4286");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.junit.rules.RuleChain ruleChain9 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("hi!", indexReader12, (int) '4', postingsEnum14, postingsEnum15, true);
        java.lang.String str18 = kuromojiAnalysisTests1.getTestName();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("tests.maxfailures", postingsEnum21, postingsEnum22, true);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.badapples", (java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test4287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4287");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests0.assertTermsEquals("hi!", indexReader10, terms11, terms12, true);
        java.lang.String str15 = kuromojiAnalysisTests0.getTestName();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("", indexReader17, (int) (byte) 0, postingsEnum19, postingsEnum20, false);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.junit.rules.RuleChain ruleChain24 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("random", indexReader26, (int) (short) 0, postingsEnum28, postingsEnum29);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        java.lang.String str33 = kuromojiAnalysisTests0.getTestName();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.Fields fields37 = null;
        org.apache.lucene.index.Fields fields38 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("hi!", indexReader36, fields37, fields38, false);
        org.junit.rules.TestRule testRule41 = kuromojiAnalysisTests0.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test4288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4288");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (float) 2, (float) 100L, (float) (byte) -1);
    }

    @Test
    public void test4289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4289");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", 0L, (long) 2);
    }

    @Test
    public void test4290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4290");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests17 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests17.tearDown();
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        org.apache.lucene.index.Terms terms22 = null;
        kuromojiAnalysisTests17.assertTermsEquals("tests.failfast", indexReader20, terms21, terms22, false);
        org.junit.rules.RuleChain ruleChain25 = kuromojiAnalysisTests17.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement26 = null;
        org.junit.runner.Description description27 = null;
        org.junit.runners.model.Statement statement28 = ruleChain25.apply(statement26, description27);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests29 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests29.tearDown();
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.Terms terms33 = null;
        org.apache.lucene.index.Terms terms34 = null;
        kuromojiAnalysisTests29.assertTermsEquals("tests.failfast", indexReader32, terms33, terms34, false);
        kuromojiAnalysisTests29.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain39 = kuromojiAnalysisTests29.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain40 = ruleChain25.around((org.junit.rules.TestRule) ruleChain39);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests42 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests42.tearDown();
        org.apache.lucene.index.IndexReader indexReader45 = null;
        org.apache.lucene.index.Terms terms46 = null;
        org.apache.lucene.index.Terms terms47 = null;
        kuromojiAnalysisTests42.assertTermsEquals("tests.failfast", indexReader45, terms46, terms47, false);
        org.junit.rules.RuleChain ruleChain50 = kuromojiAnalysisTests42.failureAndSuccessEvents;
        org.junit.Assert.assertNotSame("hi!", (java.lang.Object) ruleChain50, (java.lang.Object) "tests.weekly");
        org.junit.rules.RuleChain ruleChain53 = ruleChain25.around((org.junit.rules.TestRule) ruleChain50);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests54 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests54.tearDown();
        org.apache.lucene.index.IndexReader indexReader57 = null;
        org.apache.lucene.index.Terms terms58 = null;
        org.apache.lucene.index.Terms terms59 = null;
        kuromojiAnalysisTests54.assertTermsEquals("tests.failfast", indexReader57, terms58, terms59, false);
        kuromojiAnalysisTests54.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader64 = null;
        org.apache.lucene.index.Terms terms65 = null;
        org.apache.lucene.index.Terms terms66 = null;
        kuromojiAnalysisTests54.assertTermsEquals("hi!", indexReader64, terms65, terms66, true);
        java.lang.String str69 = kuromojiAnalysisTests54.getTestName();
        org.apache.lucene.index.IndexReader indexReader71 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum73 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum74 = null;
        kuromojiAnalysisTests54.assertDocsSkippingEquals("", indexReader71, (int) (byte) 0, postingsEnum73, postingsEnum74, false);
        kuromojiAnalysisTests54.ensureCheckIndexPassed();
        org.junit.rules.RuleChain ruleChain78 = kuromojiAnalysisTests54.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain79 = kuromojiAnalysisTests54.failureAndSuccessEvents;
        org.junit.Assert.assertNotSame("tests.weekly", (java.lang.Object) ruleChain53, (java.lang.Object) kuromojiAnalysisTests54);
        org.junit.Assert.assertNotEquals("<unknown>", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) "tests.weekly");
        org.junit.rules.RuleChain ruleChain82 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test4291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4291");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.weekly", (double) 'a', (double) 100, (double) 0.0f);
    }

    @Test
    public void test4292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4292");
        double[] doubleArray2 = new double[] { (short) 100, (short) 100 };
        double[] doubleArray5 = new double[] { (short) 100, (short) 100 };
        double[] doubleArray8 = new double[] { (short) 100, (short) 100 };
        double[] doubleArray11 = new double[] { (short) 100, (short) 100 };
        double[][] doubleArray12 = new double[][] { doubleArray2, doubleArray5, doubleArray8, doubleArray11 };
        double[] doubleArray15 = new double[] { (short) 100, (short) 100 };
        double[] doubleArray18 = new double[] { (short) 100, (short) 100 };
        double[] doubleArray21 = new double[] { (short) 100, (short) 100 };
        double[] doubleArray24 = new double[] { (short) 100, (short) 100 };
        double[][] doubleArray25 = new double[][] { doubleArray15, doubleArray18, doubleArray21, doubleArray24 };
        double[] doubleArray28 = new double[] { (short) 100, (short) 100 };
        double[] doubleArray31 = new double[] { (short) 100, (short) 100 };
        double[] doubleArray34 = new double[] { (short) 100, (short) 100 };
        double[] doubleArray37 = new double[] { (short) 100, (short) 100 };
        double[][] doubleArray38 = new double[][] { doubleArray28, doubleArray31, doubleArray34, doubleArray37 };
        double[] doubleArray41 = new double[] { (short) 100, (short) 100 };
        double[] doubleArray44 = new double[] { (short) 100, (short) 100 };
        double[] doubleArray47 = new double[] { (short) 100, (short) 100 };
        double[] doubleArray50 = new double[] { (short) 100, (short) 100 };
        double[][] doubleArray51 = new double[][] { doubleArray41, doubleArray44, doubleArray47, doubleArray50 };
        double[][][] doubleArray52 = new double[][][] { doubleArray12, doubleArray25, doubleArray38, doubleArray51 };
        java.util.Set<double[][]> doubleArraySet53 = org.apache.lucene.util.LuceneTestCase.asSet(doubleArray52);
        java.lang.Object[] objArray54 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) doubleArray52, objArray54);
    }

    @Test
    public void test4293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4293");
        java.util.concurrent.ExecutorService[] executorServiceArray1 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean2 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean3 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        boolean boolean4 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray6 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet7 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray6);
        java.io.Serializable[] serializableArray9 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet10 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray9);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray11 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet12 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray11);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray9, (java.lang.Object[]) throttlingArray11);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray6, (java.lang.Object[]) serializableArray9);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", (java.lang.Object[]) executorServiceArray1, (java.lang.Object[]) serializableArray9);
        boolean boolean16 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray1);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray19 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet20 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray19);
        java.io.Serializable[] serializableArray22 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet23 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray22);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray24 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet25 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray24);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray22, (java.lang.Object[]) throttlingArray24);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray19, (java.lang.Object[]) serializableArray22);
        java.io.Serializable[] serializableArray29 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet30 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray29);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray31 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet32 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray31);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray29, (java.lang.Object[]) throttlingArray31);
        org.junit.Assert.assertEquals("tests.monster", (java.lang.Object[]) throttlingArray19, (java.lang.Object[]) serializableArray29);
        java.util.concurrent.ExecutorService[] executorServiceArray36 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean37 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray36);
        boolean boolean38 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray36);
        boolean boolean39 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray36);
        boolean boolean40 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray36);
        java.io.Serializable[] serializableArray42 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet43 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray42);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray44 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet45 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray44);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray42, (java.lang.Object[]) throttlingArray44);
        java.io.Serializable[] serializableArray48 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet49 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray48);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray50 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet51 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray50);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray48, (java.lang.Object[]) throttlingArray50);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray42, (java.lang.Object[]) serializableArray48);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray55 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet56 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray55);
        java.io.Serializable[] serializableArray58 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet59 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray58);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray60 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet61 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray60);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray58, (java.lang.Object[]) throttlingArray60);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray55, (java.lang.Object[]) serializableArray58);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray65 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet66 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray65);
        java.io.Serializable[] serializableArray68 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet69 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray68);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray70 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet71 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray70);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray68, (java.lang.Object[]) throttlingArray70);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray65, (java.lang.Object[]) serializableArray68);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray58, (java.lang.Object[]) throttlingArray65);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray48, (java.lang.Object[]) throttlingArray65);
        org.junit.Assert.assertArrayEquals("tests.weekly", (java.lang.Object[]) executorServiceArray36, (java.lang.Object[]) throttlingArray65);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray19, (java.lang.Object[]) executorServiceArray36);
        boolean boolean78 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray36);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray1, (java.lang.Object[]) executorServiceArray36);
        java.lang.Object[] objArray80 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray1, objArray80);
    }

    @Test
    public void test4294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4294");
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray2 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet3 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray2);
        java.io.Serializable[] serializableArray5 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet6 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray5);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray7 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet8 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray7);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray5, (java.lang.Object[]) throttlingArray7);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) throttlingArray2, (java.lang.Object[]) throttlingArray7);
        java.io.Serializable[] serializableArray13 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet14 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray13);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray15 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet16 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray15);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray13, (java.lang.Object[]) throttlingArray15);
        java.io.Serializable[] serializableArray19 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet20 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray19);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray21 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet22 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray21);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray19, (java.lang.Object[]) throttlingArray21);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray13, (java.lang.Object[]) serializableArray19);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray26 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet27 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray26);
        java.io.Serializable[] serializableArray29 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet30 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray29);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray31 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet32 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray31);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray29, (java.lang.Object[]) throttlingArray31);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray26, (java.lang.Object[]) serializableArray29);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray36 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet37 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray36);
        java.io.Serializable[] serializableArray39 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet40 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray39);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray41 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet42 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray41);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray39, (java.lang.Object[]) throttlingArray41);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray36, (java.lang.Object[]) serializableArray39);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray29, (java.lang.Object[]) throttlingArray36);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray19, (java.lang.Object[]) throttlingArray36);
        org.apache.lucene.util.LuceneTestCase[] luceneTestCaseArray47 = new org.apache.lucene.util.LuceneTestCase[] {};
        java.util.Set<org.apache.lucene.util.LuceneTestCase> luceneTestCaseSet48 = org.apache.lucene.util.LuceneTestCase.asSet(luceneTestCaseArray47);
        org.junit.Assert.assertEquals("tests.failfast", (java.lang.Object[]) serializableArray19, (java.lang.Object[]) luceneTestCaseArray47);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) throttlingArray7, (java.lang.Object[]) luceneTestCaseArray47);
        java.io.Serializable[] serializableArray52 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet53 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray52);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray54 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet55 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray54);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray52, (java.lang.Object[]) throttlingArray54);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray7, (java.lang.Object[]) serializableArray52);
        org.apache.lucene.search.QueryCachingPolicy queryCachingPolicy59 = org.apache.lucene.util.LuceneTestCase.MAYBE_CACHE_POLICY;
        org.junit.Assert.assertNotSame("tests.slow", (java.lang.Object) queryCachingPolicy59, (java.lang.Object) (short) 1);
        org.apache.lucene.search.QueryCachingPolicy queryCachingPolicy62 = org.apache.lucene.util.LuceneTestCase.MAYBE_CACHE_POLICY;
        org.junit.rules.TestRule testRule63 = null;
        org.junit.rules.RuleChain ruleChain64 = org.junit.rules.RuleChain.outerRule(testRule63);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain64;
        org.junit.rules.TestRule testRule66 = null;
        org.junit.rules.RuleChain ruleChain67 = org.junit.rules.RuleChain.outerRule(testRule66);
        org.junit.rules.RuleChain ruleChain68 = ruleChain64.around((org.junit.rules.TestRule) ruleChain67);
        org.junit.Assert.assertNotSame((java.lang.Object) queryCachingPolicy62, (java.lang.Object) ruleChain68);
        org.apache.lucene.search.QueryCachingPolicy queryCachingPolicy71 = org.apache.lucene.util.LuceneTestCase.MAYBE_CACHE_POLICY;
        org.junit.Assert.assertNotSame("tests.slow", (java.lang.Object) queryCachingPolicy71, (java.lang.Object) (short) 1);
        org.apache.lucene.search.QueryCachingPolicy queryCachingPolicy74 = org.apache.lucene.util.LuceneTestCase.MAYBE_CACHE_POLICY;
        org.junit.rules.TestRule testRule75 = null;
        org.junit.rules.RuleChain ruleChain76 = org.junit.rules.RuleChain.outerRule(testRule75);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain76;
        org.junit.rules.TestRule testRule78 = null;
        org.junit.rules.RuleChain ruleChain79 = org.junit.rules.RuleChain.outerRule(testRule78);
        org.junit.rules.RuleChain ruleChain80 = ruleChain76.around((org.junit.rules.TestRule) ruleChain79);
        org.junit.Assert.assertNotSame((java.lang.Object) queryCachingPolicy74, (java.lang.Object) ruleChain80);
        org.apache.lucene.search.QueryCachingPolicy[] queryCachingPolicyArray82 = new org.apache.lucene.search.QueryCachingPolicy[] { queryCachingPolicy59, queryCachingPolicy62, queryCachingPolicy71, queryCachingPolicy74 };
        java.util.Set<org.apache.lucene.search.QueryCachingPolicy> queryCachingPolicySet83 = org.apache.lucene.util.LuceneTestCase.asSet(queryCachingPolicyArray82);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray52, (java.lang.Object[]) queryCachingPolicyArray82);
    }

    @Test
    public void test4295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4295");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", (long) 2, (long) (short) 10);
    }

    @Test
    public void test4296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4296");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", (float) 10L, (float) 0, (float) 2);
    }

    @Test
    public void test4297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4297");
        char[] charArray3 = new char[] {};
        char[] charArray4 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray3, charArray4);
        char[] charArray7 = new char[] {};
        char[] charArray8 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray7, charArray8);
        org.junit.Assert.assertArrayEquals(charArray4, charArray8);
        char[] charArray12 = new char[] {};
        char[] charArray13 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray12, charArray13);
        char[] charArray16 = new char[] {};
        char[] charArray17 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray16, charArray17);
        org.junit.Assert.assertArrayEquals(charArray13, charArray17);
        char[] charArray22 = new char[] {};
        char[] charArray23 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray22, charArray23);
        char[] charArray26 = new char[] {};
        char[] charArray27 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray26, charArray27);
        char[] charArray30 = new char[] {};
        char[] charArray31 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray30, charArray31);
        org.junit.Assert.assertArrayEquals(charArray27, charArray31);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray23, charArray27);
        org.junit.Assert.assertArrayEquals(charArray13, charArray23);
        org.junit.Assert.assertArrayEquals("random", charArray4, charArray13);
        char[] charArray38 = new char[] {};
        char[] charArray39 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray38, charArray39);
        char[] charArray42 = new char[] {};
        char[] charArray43 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray42, charArray43);
        org.junit.Assert.assertArrayEquals(charArray39, charArray43);
        char[] charArray48 = new char[] {};
        char[] charArray49 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray48, charArray49);
        char[] charArray52 = new char[] {};
        char[] charArray53 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray52, charArray53);
        char[] charArray56 = new char[] {};
        char[] charArray57 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray56, charArray57);
        org.junit.Assert.assertArrayEquals(charArray53, charArray57);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray49, charArray53);
        org.junit.Assert.assertArrayEquals(charArray39, charArray49);
        org.junit.Assert.assertArrayEquals(charArray4, charArray49);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests63 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests63.tearDown();
        org.apache.lucene.index.IndexReader indexReader66 = null;
        org.apache.lucene.index.Terms terms67 = null;
        org.apache.lucene.index.Terms terms68 = null;
        kuromojiAnalysisTests63.assertTermsEquals("tests.failfast", indexReader66, terms67, terms68, false);
        org.apache.lucene.index.PostingsEnum postingsEnum72 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum73 = null;
        kuromojiAnalysisTests63.assertDocsEnumEquals("tests.weekly", postingsEnum72, postingsEnum73, true);
        kuromojiAnalysisTests63.setIndexWriterMaxDocs((int) ' ');
        kuromojiAnalysisTests63.setIndexWriterMaxDocs(2);
        kuromojiAnalysisTests63.ensureCheckIndexPassed();
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests63);
        org.junit.Assert.assertNotEquals("<unknown>", (java.lang.Object) charArray4, (java.lang.Object) kuromojiAnalysisTests63);
        char[] charArray83 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(charArray4, charArray83);
    }

    @Test
    public void test4298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4298");
        int[] intArray5 = new int[] { '4', (byte) 100, (short) -1, 4, (byte) 1 };
        int[] intArray11 = new int[] { '4', (byte) 100, (short) -1, 4, (byte) 1 };
        int[][] intArray12 = new int[][] { intArray5, intArray11 };
        int[][][] intArray13 = new int[][][] { intArray12 };
        int[][][][] intArray14 = new int[][][][] { intArray13 };
        int[] intArray20 = new int[] { '4', (byte) 100, (short) -1, 4, (byte) 1 };
        int[] intArray26 = new int[] { '4', (byte) 100, (short) -1, 4, (byte) 1 };
        int[][] intArray27 = new int[][] { intArray20, intArray26 };
        int[][][] intArray28 = new int[][][] { intArray27 };
        int[][][][] intArray29 = new int[][][][] { intArray28 };
        int[][][][][] intArray30 = new int[][][][][] { intArray14, intArray29 };
        java.util.Set<int[][][][]> intArraySet31 = org.apache.lucene.util.LuceneTestCase.asSet(intArray30);
        java.util.Set<int[][][][]> intArraySet32 = org.apache.lucene.util.LuceneTestCase.asSet(intArray30);
        java.util.Set<int[][][][]> intArraySet33 = org.apache.lucene.util.LuceneTestCase.asSet(intArray30);
        char[] charArray39 = new char[] { '4', '#', '#', 'a', 'a' };
        char[] charArray45 = new char[] { '4', '#', '#', 'a', 'a' };
        char[] charArray51 = new char[] { '4', '#', '#', 'a', 'a' };
        char[] charArray57 = new char[] { '4', '#', '#', 'a', 'a' };
        char[] charArray63 = new char[] { '4', '#', '#', 'a', 'a' };
        char[] charArray69 = new char[] { '4', '#', '#', 'a', 'a' };
        char[][] charArray70 = new char[][] { charArray39, charArray45, charArray51, charArray57, charArray63, charArray69 };
        char[][][] charArray71 = new char[][][] { charArray70 };
        java.util.Set<char[][]> charArraySet72 = org.apache.lucene.util.LuceneTestCase.asSet(charArray71);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) intArray30, (java.lang.Object[]) charArray71);
    }

    @Test
    public void test4299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4299");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 0, (double) 1L);
    }

    @Test
    public void test4300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4300");
        float[] floatArray0 = null;
        float[] floatArray8 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray14 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray8, floatArray14, (float) (byte) 100);
        float[] floatArray23 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray29 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray23, floatArray29, (float) (byte) 100);
        float[] floatArray38 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray44 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray38, floatArray44, (float) (byte) 100);
        float[] floatArray53 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray59 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray53, floatArray59, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray38, floatArray53, (float) (short) 1);
        org.junit.Assert.assertArrayEquals(floatArray23, floatArray38, (float) (short) 100);
        org.junit.Assert.assertArrayEquals(floatArray8, floatArray38, (float) (short) 10);
        float[] floatArray74 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray80 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray74, floatArray80, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", floatArray38, floatArray74, (float) (byte) -1);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(floatArray0, floatArray74, 1.0f);
    }

    @Test
    public void test4301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4301");
        byte[] byteArray0 = null;
        byte[] byteArray5 = new byte[] {};
        byte[] byteArray6 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray5, byteArray6);
        byte[] byteArray9 = new byte[] {};
        byte[] byteArray10 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray9, byteArray10);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray6, byteArray10);
        byte[] byteArray13 = new byte[] {};
        org.junit.Assert.assertArrayEquals(byteArray6, byteArray13);
        byte[] byteArray16 = new byte[] {};
        byte[] byteArray17 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray16, byteArray17);
        byte[] byteArray20 = new byte[] {};
        byte[] byteArray21 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray20, byteArray21);
        org.junit.Assert.assertArrayEquals(byteArray17, byteArray20);
        byte[] byteArray25 = new byte[] {};
        byte[] byteArray26 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray25, byteArray26);
        byte[] byteArray29 = new byte[] {};
        byte[] byteArray30 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray29, byteArray30);
        org.junit.Assert.assertArrayEquals(byteArray26, byteArray29);
        org.junit.Assert.assertArrayEquals(byteArray20, byteArray29);
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray13, byteArray29);
        byte[] byteArray37 = new byte[] {};
        byte[] byteArray38 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray37, byteArray38);
        byte[] byteArray41 = new byte[] {};
        byte[] byteArray42 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray41, byteArray42);
        org.junit.Assert.assertArrayEquals(byteArray38, byteArray41);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray47 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray46, byteArray47);
        byte[] byteArray50 = new byte[] {};
        byte[] byteArray51 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray50, byteArray51);
        org.junit.Assert.assertArrayEquals(byteArray47, byteArray50);
        org.junit.Assert.assertArrayEquals(byteArray41, byteArray50);
        byte[] byteArray57 = new byte[] {};
        byte[] byteArray58 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray57, byteArray58);
        byte[] byteArray61 = new byte[] {};
        byte[] byteArray62 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray61, byteArray62);
        org.junit.Assert.assertArrayEquals("tests.monster", byteArray58, byteArray62);
        org.junit.Assert.assertArrayEquals("tests.badapples", byteArray41, byteArray58);
        org.junit.Assert.assertArrayEquals("", byteArray13, byteArray58);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(byteArray0, byteArray13);
    }

    @Test
    public void test4302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4302");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.junit.rules.RuleChain ruleChain8 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests14 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests14.tearDown();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        org.apache.lucene.index.Terms terms19 = null;
        kuromojiAnalysisTests14.assertTermsEquals("tests.failfast", indexReader17, terms18, terms19, false);
        kuromojiAnalysisTests14.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.Terms terms25 = null;
        org.apache.lucene.index.Terms terms26 = null;
        kuromojiAnalysisTests14.assertTermsEquals("hi!", indexReader24, terms25, terms26, true);
        kuromojiAnalysisTests14.setUp();
        kuromojiAnalysisTests14.tearDown();
        kuromojiAnalysisTests14.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule32 = kuromojiAnalysisTests14.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) testRule32);
    }

    @Test
    public void test4303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4303");
        java.util.List[] listArray1 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<org.junit.rules.RuleChain>[] ruleChainListArray2 = (java.util.List<org.junit.rules.RuleChain>[]) listArray1;
        java.util.List[] listArray4 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<org.junit.rules.RuleChain>[] ruleChainListArray5 = (java.util.List<org.junit.rules.RuleChain>[]) listArray4;
        java.util.List[] listArray7 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<org.junit.rules.RuleChain>[] ruleChainListArray8 = (java.util.List<org.junit.rules.RuleChain>[]) listArray7;
        java.util.List[] listArray10 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<org.junit.rules.RuleChain>[] ruleChainListArray11 = (java.util.List<org.junit.rules.RuleChain>[]) listArray10;
        java.util.List[] listArray13 = new java.util.List[0];
        @SuppressWarnings("unchecked")
        java.util.List<org.junit.rules.RuleChain>[] ruleChainListArray14 = (java.util.List<org.junit.rules.RuleChain>[]) listArray13;
        java.util.List[][] listArray16 = new java.util.List[5][];
        @SuppressWarnings("unchecked")
        java.util.List<org.junit.rules.RuleChain>[][] ruleChainListArray17 = (java.util.List<org.junit.rules.RuleChain>[][]) listArray16;
        ruleChainListArray17[0] = ruleChainListArray2;
        ruleChainListArray17[1] = listArray4;
        ruleChainListArray17[2] = listArray7;
        ruleChainListArray17[3] = listArray10;
        ruleChainListArray17[4] = listArray13;
        java.util.Set<java.util.List<org.junit.rules.RuleChain>[]> ruleChainListArraySet28 = org.apache.lucene.util.LuceneTestCase.asSet(ruleChainListArray17);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests29 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests29.tearDown();
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.Terms terms33 = null;
        org.apache.lucene.index.Terms terms34 = null;
        kuromojiAnalysisTests29.assertTermsEquals("tests.failfast", indexReader32, terms33, terms34, false);
        kuromojiAnalysisTests29.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain38 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain39 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain38);
        org.junit.rules.RuleChain ruleChain40 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain41 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain40);
        org.junit.rules.RuleChain ruleChain42 = ruleChain39.around((org.junit.rules.TestRule) ruleChain41);
        kuromojiAnalysisTests29.failureAndSuccessEvents = ruleChain39;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests44 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests44.tearDown();
        org.apache.lucene.index.IndexReader indexReader47 = null;
        org.apache.lucene.index.Terms terms48 = null;
        org.apache.lucene.index.Terms terms49 = null;
        kuromojiAnalysisTests44.assertTermsEquals("tests.failfast", indexReader47, terms48, terms49, false);
        kuromojiAnalysisTests44.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain54 = kuromojiAnalysisTests44.failureAndSuccessEvents;
        kuromojiAnalysisTests44.assertPathHasBeenCleared("tests.awaitsfix");
        kuromojiAnalysisTests44.setUp();
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests29, (java.lang.Object) kuromojiAnalysisTests44);
        org.junit.rules.TestRule testRule59 = kuromojiAnalysisTests44.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) ruleChainListArraySet28, (java.lang.Object) testRule59);
    }

    @Test
    public void test4304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4304");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (short) 100);
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests0);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests12.tearDown();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests12.assertTermsEquals("tests.failfast", indexReader15, terms16, terms17, false);
        kuromojiAnalysisTests12.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests12.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests12.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests12.ensureCheckIndexPassed();
        kuromojiAnalysisTests12.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain28 = kuromojiAnalysisTests12.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain28;
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.Terms terms32 = null;
        org.apache.lucene.index.Terms terms33 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader31, terms32, terms33, false);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.apache.lucene.index.IndexReader indexReader38 = null;
        org.apache.lucene.index.Terms terms39 = null;
        org.apache.lucene.index.Terms terms40 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader38, terms39, terms40, true);
        org.apache.lucene.index.PostingsEnum postingsEnum44 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.monster", postingsEnum44, postingsEnum45, true);
        org.apache.lucene.index.PostingsEnum postingsEnum49 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum50 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.monster", postingsEnum49, postingsEnum50);
    }

    @Test
    public void test4305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4305");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.slow", (double) 10L, (double) 2, (double) 'a');
    }

    @Test
    public void test4306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4306");
        java.lang.Object[] objArray0 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule3 = kuromojiAnalysisTests2.ruleChain;
        org.junit.rules.TestRule testRule4 = null;
        org.junit.rules.RuleChain ruleChain5 = org.junit.rules.RuleChain.outerRule(testRule4);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain5;
        org.junit.rules.TestRule testRule7 = null;
        org.junit.rules.RuleChain ruleChain8 = org.junit.rules.RuleChain.outerRule(testRule7);
        org.junit.rules.RuleChain ruleChain9 = ruleChain5.around((org.junit.rules.TestRule) ruleChain8);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain5;
        kuromojiAnalysisTests2.failureAndSuccessEvents = ruleChain5;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests12.tearDown();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests12.assertTermsEquals("tests.failfast", indexReader15, terms16, terms17, false);
        org.junit.rules.RuleChain ruleChain20 = kuromojiAnalysisTests12.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement21 = null;
        org.junit.runner.Description description22 = null;
        org.junit.runners.model.Statement statement23 = ruleChain20.apply(statement21, description22);
        org.junit.rules.RuleChain ruleChain24 = ruleChain5.around((org.junit.rules.TestRule) ruleChain20);
        org.junit.Assert.assertNotNull((java.lang.Object) ruleChain5);
        java.io.Serializable[] serializableArray26 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet27 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray26);
        java.io.Serializable[] serializableArray28 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet29 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray28);
        java.io.Serializable[] serializableArray30 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet31 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray30);
        java.util.Set[] setArray33 = new java.util.Set[3];
        @SuppressWarnings("unchecked")
        java.util.Set<java.io.Serializable>[] serializableSetArray34 = (java.util.Set<java.io.Serializable>[]) setArray33;
        serializableSetArray34[0] = serializableSet27;
        serializableSetArray34[1] = serializableSet29;
        serializableSetArray34[2] = serializableSet31;
        java.util.Set<java.util.Set<java.io.Serializable>> serializableSetSet41 = org.apache.lucene.util.LuceneTestCase.asSet(serializableSetArray34);
        org.junit.Assert.assertNotSame("<unknown>", (java.lang.Object) ruleChain5, (java.lang.Object) serializableSetArray34);
        java.io.Serializable[] serializableArray44 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet45 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray44);
        java.io.Serializable[] serializableArray46 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet47 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray46);
        java.io.Serializable[] serializableArray48 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet49 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray48);
        java.util.Set[] setArray51 = new java.util.Set[3];
        @SuppressWarnings("unchecked")
        java.util.Set<java.io.Serializable>[] serializableSetArray52 = (java.util.Set<java.io.Serializable>[]) setArray51;
        serializableSetArray52[0] = serializableSet45;
        serializableSetArray52[1] = serializableSet47;
        serializableSetArray52[2] = serializableSet49;
        java.util.Set<java.util.Set<java.io.Serializable>> serializableSetSet59 = org.apache.lucene.util.LuceneTestCase.asSet(serializableSetArray52);
        java.util.Set<java.util.Set<java.io.Serializable>> serializableSetSet60 = org.apache.lucene.util.LuceneTestCase.asSet(serializableSetArray52);
        java.util.Set<java.util.Collection<java.io.Serializable>> serializableCollectionSet61 = org.apache.lucene.util.LuceneTestCase.asSet((java.util.Collection<java.io.Serializable>[]) serializableSetArray52);
        java.util.List<java.util.Set<java.io.Serializable>> serializableSetList62 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 0, serializableSetArray52);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableSetArray34, (java.lang.Object[]) serializableSetArray52);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(objArray0, (java.lang.Object[]) serializableSetArray52);
    }

    @Test
    public void test4307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4307");
        java.lang.Object obj0 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests2.setUp();
        kuromojiAnalysisTests2.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests5 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests5.tearDown();
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.Terms terms9 = null;
        org.apache.lucene.index.Terms terms10 = null;
        kuromojiAnalysisTests5.assertTermsEquals("tests.failfast", indexReader8, terms9, terms10, false);
        kuromojiAnalysisTests5.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain15 = kuromojiAnalysisTests5.failureAndSuccessEvents;
        kuromojiAnalysisTests5.assertPathHasBeenCleared("tests.awaitsfix");
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) "tests.awaitsfix");
        kuromojiAnalysisTests2.ensureAllSearchContextsReleased();
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests2);
        org.junit.Assert.assertNotNull("tests.failfast", (java.lang.Object) kuromojiAnalysisTests2);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(obj0, (java.lang.Object) "tests.failfast");
    }

    @Test
    public void test4308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4308");
        int[] intArray3 = new int[] {};
        int[] intArray4 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray3, intArray4);
        int[] intArray6 = new int[] {};
        org.junit.Assert.assertArrayEquals(intArray3, intArray6);
        int[] intArray8 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray6, intArray8);
        org.junit.rules.RuleChain ruleChain10 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain11 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain12 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain11);
        org.junit.rules.RuleChain ruleChain13 = ruleChain10.around((org.junit.rules.TestRule) ruleChain12);
        org.junit.rules.RuleChain ruleChain14 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain12);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain12;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests17 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests17.tearDown();
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        org.apache.lucene.index.Terms terms22 = null;
        kuromojiAnalysisTests17.assertTermsEquals("tests.failfast", indexReader20, terms21, terms22, false);
        kuromojiAnalysisTests17.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests17.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests17.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests17.ensureCleanedUp();
        org.junit.rules.RuleChain ruleChain31 = kuromojiAnalysisTests17.failureAndSuccessEvents;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray34 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet35 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray34);
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet38 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray37);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray39 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet40 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray39);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray37, (java.lang.Object[]) throttlingArray39);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) throttlingArray34, (java.lang.Object[]) throttlingArray39);
        java.util.Set<java.lang.Object> objSet43 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Object[]) throttlingArray39);
        org.junit.Assert.assertNotNull("tests.nightly", (java.lang.Object) objSet43);
        org.junit.Assert.assertNotSame("tests.weekly", (java.lang.Object) kuromojiAnalysisTests17, (java.lang.Object) objSet43);
        kuromojiAnalysisTests17.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests48 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests48.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests48, (java.lang.Object) "");
        java.lang.String str52 = kuromojiAnalysisTests48.getTestName();
        org.junit.rules.RuleChain ruleChain53 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain54 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain53);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests55 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule56 = kuromojiAnalysisTests55.ruleChain;
        org.junit.rules.RuleChain ruleChain57 = ruleChain54.around(testRule56);
        org.junit.rules.RuleChain ruleChain58 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain57);
        org.apache.lucene.search.QueryCachingPolicy queryCachingPolicy61 = org.apache.lucene.util.LuceneTestCase.MAYBE_CACHE_POLICY;
        org.junit.rules.TestRule testRule62 = null;
        org.junit.rules.RuleChain ruleChain63 = org.junit.rules.RuleChain.outerRule(testRule62);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain63;
        org.junit.rules.TestRule testRule65 = null;
        org.junit.rules.RuleChain ruleChain66 = org.junit.rules.RuleChain.outerRule(testRule65);
        org.junit.rules.RuleChain ruleChain67 = ruleChain63.around((org.junit.rules.TestRule) ruleChain66);
        org.junit.Assert.assertNotSame((java.lang.Object) queryCachingPolicy61, (java.lang.Object) ruleChain67);
        org.junit.rules.RuleChain ruleChain69 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain70 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain69);
        org.junit.rules.RuleChain ruleChain71 = ruleChain67.around((org.junit.rules.TestRule) ruleChain69);
        org.junit.Assert.assertNotSame("tests.slow", (java.lang.Object) "tests.badapples", (java.lang.Object) ruleChain67);
        org.junit.rules.RuleChain ruleChain73 = ruleChain58.around((org.junit.rules.TestRule) ruleChain67);
        kuromojiAnalysisTests48.failureAndSuccessEvents = ruleChain58;
        org.junit.rules.RuleChain ruleChain75 = kuromojiAnalysisTests48.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain76 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain75);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain76;
        kuromojiAnalysisTests17.failureAndSuccessEvents = ruleChain76;
        org.junit.rules.RuleChain ruleChain79 = ruleChain12.around((org.junit.rules.TestRule) ruleChain76);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", (java.lang.Object) intArray6, (java.lang.Object) ruleChain79);
    }

    @Test
    public void test4309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4309");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (-1L), (double) 0.0f);
    }

    @Test
    public void test4310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4310");
        double[] doubleArray1 = null;
        double[] doubleArray3 = new double[] {};
        double[] doubleArray4 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray3, doubleArray4, (double) '#');
        double[] doubleArray9 = new double[] {};
        double[] doubleArray10 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray9, doubleArray10, (double) '#');
        double[] doubleArray13 = new double[] {};
        double[] doubleArray14 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray13, doubleArray14, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray9, doubleArray13, (double) 3);
        double[] doubleArray19 = new double[] {};
        double[] doubleArray20 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray19, doubleArray20, (double) '#');
        double[] doubleArray23 = new double[] {};
        double[] doubleArray24 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray23, doubleArray24, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray19, doubleArray23, (double) 3);
        org.junit.Assert.assertArrayEquals("tests.monster", doubleArray9, doubleArray19, (double) 1.0f);
        double[] doubleArray31 = new double[] {};
        double[] doubleArray32 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray31, doubleArray32, (double) '#');
        double[] doubleArray35 = new double[] {};
        double[] doubleArray36 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray35, doubleArray36, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray31, doubleArray35, (double) 3);
        org.junit.Assert.assertArrayEquals("hi!", doubleArray19, doubleArray35, (double) 1.0f);
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", doubleArray3, doubleArray35, (double) (-1));
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("", doubleArray1, doubleArray3, 0.0d);
    }

    @Test
    public void test4311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4311");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.util.LuceneTestCase[] luceneTestCaseArray11 = new org.apache.lucene.util.LuceneTestCase[] {};
        java.util.Set<org.apache.lucene.util.LuceneTestCase> luceneTestCaseSet12 = org.apache.lucene.util.LuceneTestCase.asSet(luceneTestCaseArray11);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) luceneTestCaseSet12);
        org.junit.rules.TestRule testRule14 = kuromojiAnalysisTests0.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test4312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4312");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(0.0f, 100.0f, 0.0f);
    }

    @Test
    public void test4313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4313");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 1.0f, 0.0d);
    }

    @Test
    public void test4314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4314");
        java.util.concurrent.ExecutorService executorService1 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray2 = new java.util.concurrent.ExecutorService[] { executorService1 };
        java.util.concurrent.ExecutorService executorService3 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray4 = new java.util.concurrent.ExecutorService[] { executorService3 };
        java.util.concurrent.ExecutorService executorService5 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray6 = new java.util.concurrent.ExecutorService[] { executorService5 };
        java.util.concurrent.ExecutorService executorService7 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray8 = new java.util.concurrent.ExecutorService[] { executorService7 };
        java.util.concurrent.ExecutorService[][] executorServiceArray9 = new java.util.concurrent.ExecutorService[][] { executorServiceArray2, executorServiceArray4, executorServiceArray6, executorServiceArray8 };
        java.util.Set<java.util.concurrent.ExecutorService[]> executorServiceArraySet10 = org.apache.lucene.util.LuceneTestCase.asSet(executorServiceArray9);
        java.util.Set<java.util.concurrent.ExecutorService[]> executorServiceArraySet11 = org.apache.lucene.util.LuceneTestCase.asSet(executorServiceArray9);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray13 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet14 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray13);
        java.io.Serializable[] serializableArray16 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet17 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray16);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray18 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet19 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray18);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray16, (java.lang.Object[]) throttlingArray18);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray13, (java.lang.Object[]) serializableArray16);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray23 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet24 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray23);
        java.io.Serializable[] serializableArray26 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet27 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray26);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray28 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet29 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray28);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray26, (java.lang.Object[]) throttlingArray28);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray23, (java.lang.Object[]) serializableArray26);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray16, (java.lang.Object[]) throttlingArray23);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray34 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet35 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray34);
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet38 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray37);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray39 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet40 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray39);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray37, (java.lang.Object[]) throttlingArray39);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray34, (java.lang.Object[]) serializableArray37);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray23, (java.lang.Object[]) serializableArray37);
        java.util.Set<org.apache.lucene.store.MockDirectoryWrapper.Throttling> throttlingSet44 = org.apache.lucene.util.LuceneTestCase.asSet(throttlingArray23);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", (java.lang.Object[]) executorServiceArray9, (java.lang.Object[]) throttlingArray23);
    }

    @Test
    public void test4315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4315");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) (byte) 100, (float) (short) 0, 0.0f);
    }

    @Test
    public void test4316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4316");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests0.assertTermsEquals("hi!", indexReader10, terms11, terms12, true);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.slow", indexReader18, 3, postingsEnum20, postingsEnum21);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests24 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests24.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests24, (java.lang.Object) "");
        java.lang.String str28 = kuromojiAnalysisTests24.getTestName();
        kuromojiAnalysisTests24.setIndexWriterMaxDocs((int) (short) 0);
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.Fields fields33 = null;
        org.apache.lucene.index.Fields fields34 = null;
        kuromojiAnalysisTests24.assertFieldsEquals("random", indexReader32, fields33, fields34, true);
        org.junit.rules.RuleChain ruleChain37 = kuromojiAnalysisTests24.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) postingsEnum20, (java.lang.Object) kuromojiAnalysisTests24);
    }

    @Test
    public void test4317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4317");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", (double) (byte) 0, (double) 0);
    }

    @Test
    public void test4318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4318");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule11 = kuromojiAnalysisTests0.ruleChain;
        org.junit.rules.RuleChain ruleChain12 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum17 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("", indexReader14, (int) '#', postingsEnum16, postingsEnum17);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.junit.rules.TestRule testRule20 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) '4');
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("", indexReader24, 0, postingsEnum26, postingsEnum27, false);
        org.junit.rules.TestRule testRule30 = kuromojiAnalysisTests0.ruleChain;
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.Fields fields33 = null;
        org.apache.lucene.index.Fields fields34 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("hi!", indexReader32, fields33, fields34, true);
        org.apache.lucene.index.IndexReader indexReader38 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum40 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.badapples", indexReader38, (int) (byte) 0, postingsEnum40, postingsEnum41, false);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.apache.lucene.index.NumericDocValues numericDocValues47 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues48 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.nightly", (int) (short) -1, numericDocValues47, numericDocValues48);
    }

    @Test
    public void test4319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4319");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.nightly", (double) 1, (double) (-1), (double) 100.0f);
    }

    @Test
    public void test4320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4320");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests2.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        kuromojiAnalysisTests2.assertTermsEquals("tests.failfast", indexReader5, terms6, terms7, false);
        kuromojiAnalysisTests2.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests2.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests2.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests2.ensureCheckIndexPassed();
        kuromojiAnalysisTests2.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain18 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests19 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests19.tearDown();
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.Terms terms23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        kuromojiAnalysisTests19.assertTermsEquals("tests.failfast", indexReader22, terms23, terms24, false);
        kuromojiAnalysisTests19.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests19.ensureAllSearchContextsReleased();
        java.lang.String str30 = kuromojiAnalysisTests19.getTestName();
        org.junit.Assert.assertNotSame("hi!", (java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) str30);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("", (java.lang.Object) "hi!");
    }

    @Test
    public void test4321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4321");
        double[] doubleArray1 = null;
        double[] doubleArray3 = new double[] {};
        double[] doubleArray4 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray3, doubleArray4, (double) '#');
        double[] doubleArray7 = new double[] {};
        double[] doubleArray8 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray7, doubleArray8, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray3, doubleArray8, (double) 0.0f);
        double[] doubleArray13 = new double[] {};
        double[] doubleArray14 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray13, doubleArray14, (double) '#');
        double[] doubleArray17 = new double[] {};
        double[] doubleArray18 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray17, doubleArray18, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray13, doubleArray18, (double) 0.0f);
        org.junit.Assert.assertArrayEquals("", doubleArray3, doubleArray18, (double) 1);
        double[] doubleArray25 = new double[] {};
        double[] doubleArray26 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray25, doubleArray26, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray18, doubleArray26, (double) 2);
        double[] doubleArray32 = new double[] {};
        double[] doubleArray33 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray32, doubleArray33, (double) '#');
        double[] doubleArray36 = new double[] {};
        double[] doubleArray37 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray36, doubleArray37, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray32, doubleArray36, (double) 3);
        double[] doubleArray42 = new double[] {};
        double[] doubleArray43 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray42, doubleArray43, (double) '#');
        double[] doubleArray46 = new double[] {};
        double[] doubleArray47 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray46, doubleArray47, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray42, doubleArray46, (double) 3);
        org.junit.Assert.assertArrayEquals("tests.monster", doubleArray32, doubleArray42, (double) 1.0f);
        org.junit.Assert.assertArrayEquals(doubleArray26, doubleArray32, (double) (byte) 1);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.weekly", doubleArray1, doubleArray26, (double) 10L);
    }

    @Test
    public void test4322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4322");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (byte) 10, (long) 2);
    }

    @Test
    public void test4323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4323");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.awaitsfix", (double) (short) 1, (double) 10.0f, (double) 2);
    }

    @Test
    public void test4324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4324");
        char[] charArray0 = null;
        char[] charArray3 = new char[] {};
        char[] charArray4 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray3, charArray4);
        char[] charArray7 = new char[] {};
        char[] charArray8 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray7, charArray8);
        org.junit.Assert.assertArrayEquals(charArray4, charArray8);
        char[] charArray12 = new char[] {};
        char[] charArray13 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray12, charArray13);
        char[] charArray16 = new char[] {};
        char[] charArray17 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray16, charArray17);
        org.junit.Assert.assertArrayEquals(charArray13, charArray17);
        char[] charArray22 = new char[] {};
        char[] charArray23 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray22, charArray23);
        char[] charArray26 = new char[] {};
        char[] charArray27 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray26, charArray27);
        char[] charArray30 = new char[] {};
        char[] charArray31 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray30, charArray31);
        org.junit.Assert.assertArrayEquals(charArray27, charArray31);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray23, charArray27);
        org.junit.Assert.assertArrayEquals(charArray13, charArray23);
        org.junit.Assert.assertArrayEquals(charArray8, charArray13);
        char[] charArray38 = new char[] {};
        char[] charArray39 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray38, charArray39);
        char[] charArray42 = new char[] {};
        char[] charArray43 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray42, charArray43);
        org.junit.Assert.assertArrayEquals(charArray39, charArray43);
        char[] charArray48 = new char[] {};
        char[] charArray49 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray48, charArray49);
        char[] charArray52 = new char[] {};
        char[] charArray53 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray52, charArray53);
        char[] charArray56 = new char[] {};
        char[] charArray57 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray56, charArray57);
        org.junit.Assert.assertArrayEquals(charArray53, charArray57);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray49, charArray53);
        org.junit.Assert.assertArrayEquals(charArray39, charArray49);
        org.junit.Assert.assertArrayEquals(charArray8, charArray39);
        char[] charArray64 = new char[] {};
        char[] charArray65 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray64, charArray65);
        char[] charArray68 = new char[] {};
        char[] charArray69 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray68, charArray69);
        org.junit.Assert.assertArrayEquals(charArray65, charArray69);
        org.junit.Assert.assertArrayEquals("tests.nightly", charArray39, charArray65);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(charArray0, charArray65);
    }

    @Test
    public void test4325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4325");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests1.setUp();
        org.apache.lucene.index.IndexReader indexReader18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.nightly", indexReader18, (int) (byte) -1, postingsEnum20, postingsEnum21);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests23.tearDown();
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        org.apache.lucene.index.Terms terms28 = null;
        kuromojiAnalysisTests23.assertTermsEquals("tests.failfast", indexReader26, terms27, terms28, false);
        kuromojiAnalysisTests23.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests23.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule34 = kuromojiAnalysisTests23.ruleChain;
        kuromojiAnalysisTests23.overrideTestDefaultQueryCache();
        java.lang.Object obj36 = null;
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests23, obj36);
        org.apache.lucene.index.PostingsEnum postingsEnum39 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum40 = null;
        kuromojiAnalysisTests23.assertDocsEnumEquals("hi!", postingsEnum39, postingsEnum40, true);
        org.apache.lucene.index.IndexReader indexReader44 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum46 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum47 = null;
        kuromojiAnalysisTests23.assertDocsSkippingEquals("tests.nightly", indexReader44, (int) (byte) 0, postingsEnum46, postingsEnum47, false);
        kuromojiAnalysisTests23.setUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.nightly", (java.lang.Object) "tests.nightly", (java.lang.Object) kuromojiAnalysisTests23);
    }

    @Test
    public void test4326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4326");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (long) 'a', (long) (short) 10);
    }

    @Test
    public void test4327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4327");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", 0L, (long) (-1));
    }

    @Test
    public void test4328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4328");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.junit.Assert.assertNotEquals("tests.badapples", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) '4');
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("europarl.lines.txt.gz", indexReader16, 0, postingsEnum18, postingsEnum19, false);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.junit.rules.RuleChain ruleChain23 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain24 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain23);
        org.junit.rules.RuleChain ruleChain25 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain26 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain25);
        org.junit.rules.RuleChain ruleChain27 = ruleChain24.around((org.junit.rules.TestRule) ruleChain26);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests30 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests30.tearDown();
        org.apache.lucene.index.IndexReader indexReader33 = null;
        org.apache.lucene.index.Terms terms34 = null;
        org.apache.lucene.index.Terms terms35 = null;
        kuromojiAnalysisTests30.assertTermsEquals("tests.failfast", indexReader33, terms34, terms35, false);
        kuromojiAnalysisTests30.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader40 = null;
        org.apache.lucene.index.Terms terms41 = null;
        org.apache.lucene.index.Terms terms42 = null;
        kuromojiAnalysisTests30.assertTermsEquals("hi!", indexReader40, terms41, terms42, true);
        kuromojiAnalysisTests30.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests30.assertPathHasBeenCleared("tests.maxfailures");
        kuromojiAnalysisTests30.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests49 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests49.tearDown();
        kuromojiAnalysisTests49.assertPathHasBeenCleared("hi!");
        org.junit.Assert.assertNotEquals("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests30, (java.lang.Object) kuromojiAnalysisTests49);
        org.junit.rules.TestRule testRule54 = null;
        org.junit.rules.RuleChain ruleChain55 = org.junit.rules.RuleChain.outerRule(testRule54);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain55;
        org.junit.rules.TestRule testRule57 = null;
        org.junit.rules.RuleChain ruleChain58 = org.junit.rules.RuleChain.outerRule(testRule57);
        org.junit.rules.RuleChain ruleChain59 = ruleChain55.around((org.junit.rules.TestRule) ruleChain58);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests30, (java.lang.Object) ruleChain55);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain55;
        java.lang.Object obj62 = null;
        org.junit.Assert.assertNotEquals("tests.nightly", (java.lang.Object) ruleChain55, obj62);
        org.junit.rules.RuleChain ruleChain64 = ruleChain27.around((org.junit.rules.TestRule) ruleChain55);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain27;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests66 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests66.tearDown();
        org.apache.lucene.index.IndexReader indexReader69 = null;
        org.apache.lucene.index.Terms terms70 = null;
        org.apache.lucene.index.Terms terms71 = null;
        kuromojiAnalysisTests66.assertTermsEquals("tests.failfast", indexReader69, terms70, terms71, false);
        kuromojiAnalysisTests66.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests66.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests66.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests66.ensureCheckIndexPassed();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests66, (java.lang.Object) "tests.awaitsfix");
        kuromojiAnalysisTests66.tearDown();
        kuromojiAnalysisTests66.setUp();
        kuromojiAnalysisTests66.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests66.ensureAllSearchContextsReleased();
        org.junit.rules.RuleChain ruleChain86 = kuromojiAnalysisTests66.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) ruleChain27, (java.lang.Object) kuromojiAnalysisTests66);
    }

    @Test
    public void test4329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4329");
        byte[] byteArray2 = new byte[] {};
        byte[] byteArray3 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray2, byteArray3);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray7 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray6, byteArray7);
        org.junit.Assert.assertArrayEquals(byteArray3, byteArray6);
        byte[] byteArray11 = new byte[] {};
        byte[] byteArray12 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray11, byteArray12);
        byte[] byteArray15 = new byte[] {};
        byte[] byteArray16 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray15, byteArray16);
        org.junit.Assert.assertArrayEquals(byteArray12, byteArray15);
        org.junit.Assert.assertArrayEquals(byteArray6, byteArray15);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray22 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray21, byteArray22);
        org.junit.Assert.assertArrayEquals(byteArray15, byteArray22);
        byte[] byteArray26 = new byte[] {};
        byte[] byteArray27 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray26, byteArray27);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray31 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray30, byteArray31);
        org.junit.Assert.assertArrayEquals(byteArray27, byteArray30);
        byte[] byteArray35 = new byte[] {};
        byte[] byteArray36 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray35, byteArray36);
        byte[] byteArray39 = new byte[] {};
        byte[] byteArray40 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray39, byteArray40);
        org.junit.Assert.assertArrayEquals(byteArray36, byteArray39);
        org.junit.Assert.assertArrayEquals(byteArray30, byteArray39);
        org.junit.Assert.assertArrayEquals(byteArray22, byteArray30);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray47 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray46, byteArray47);
        byte[] byteArray50 = new byte[] {};
        byte[] byteArray51 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray50, byteArray51);
        org.junit.Assert.assertArrayEquals(byteArray47, byteArray50);
        byte[] byteArray55 = new byte[] {};
        byte[] byteArray56 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray55, byteArray56);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray60 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray59, byteArray60);
        org.junit.Assert.assertArrayEquals(byteArray56, byteArray59);
        org.junit.Assert.assertArrayEquals(byteArray50, byteArray59);
        org.junit.Assert.assertArrayEquals(byteArray22, byteArray59);
        byte[] byteArray65 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.nightly", byteArray22, byteArray65);
    }

    @Test
    public void test4330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4330");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum6 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum7 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.maxfailures", indexReader4, 0, postingsEnum6, postingsEnum7);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.apache.lucene.index.NumericDocValues numericDocValues12 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues13 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("random", (int) (short) 1, numericDocValues12, numericDocValues13);
    }

    @Test
    public void test4331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4331");
        float[] floatArray7 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray13 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray7, floatArray13, (float) (byte) 100);
        float[] floatArray22 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray28 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray22, floatArray28, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray7, floatArray22, (float) (short) 1);
        float[] floatArray39 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray45 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray39, floatArray45, (float) (byte) 100);
        float[] floatArray54 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray60 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray54, floatArray60, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray39, floatArray54, (float) (short) 1);
        float[] floatArray71 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray77 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray71, floatArray77, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray54, floatArray71, 1.0f);
        org.junit.Assert.assertArrayEquals("", floatArray22, floatArray54, 1.0f);
        float[] floatArray84 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(floatArray54, floatArray84, (float) 1L);
    }

    @Test
    public void test4332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4332");
        java.io.Serializable[] serializableArray3 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet4 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray3);
        java.io.Serializable[] serializableArray5 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet6 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray5);
        java.io.Serializable[] serializableArray7 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet8 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray7);
        java.util.Set[] setArray10 = new java.util.Set[3];
        @SuppressWarnings("unchecked")
        java.util.Set<java.io.Serializable>[] serializableSetArray11 = (java.util.Set<java.io.Serializable>[]) setArray10;
        serializableSetArray11[0] = serializableSet4;
        serializableSetArray11[1] = serializableSet6;
        serializableSetArray11[2] = serializableSet8;
        java.util.Set<java.util.Set<java.io.Serializable>> serializableSetSet18 = org.apache.lucene.util.LuceneTestCase.asSet(serializableSetArray11);
        org.junit.Assert.assertNotNull((java.lang.Object) serializableSetArray11);
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList20 = org.elasticsearch.test.ESTestCase.randomSubsetOf(1, (java.lang.Iterable<java.io.Serializable>[]) serializableSetArray11);
        java.util.List<java.util.Set<java.io.Serializable>> serializableSetList21 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 1, serializableSetArray11);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests22 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests22.tearDown();
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.Terms terms26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        kuromojiAnalysisTests22.assertTermsEquals("tests.failfast", indexReader25, terms26, terms27, false);
        kuromojiAnalysisTests22.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests22.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests22.ensureCheckIndexPassed();
        char[] charArray40 = new char[] { '4', '#', '4', '4', '4', ' ' };
        char[] charArray47 = new char[] { '4', '#', '4', '4', '4', ' ' };
        char[][] charArray48 = new char[][] { charArray40, charArray47 };
        java.util.Set<char[]> charArraySet49 = org.apache.lucene.util.LuceneTestCase.asSet(charArray48);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests22, (java.lang.Object) charArray48);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("<unknown>", (java.lang.Object[]) serializableSetArray11, (java.lang.Object[]) charArray48);
    }

    @Test
    public void test4333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4333");
        double[] doubleArray1 = new double[] {};
        double[] doubleArray2 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray1, doubleArray2, (double) '#');
        double[] doubleArray5 = new double[] {};
        double[] doubleArray6 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray5, doubleArray6, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray1, doubleArray5, (double) 3);
        double[] doubleArray11 = new double[] {};
        double[] doubleArray12 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray11, doubleArray12, (double) '#');
        double[] doubleArray15 = new double[] {};
        double[] doubleArray16 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray15, doubleArray16, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray11, doubleArray15, (double) 3);
        org.junit.Assert.assertArrayEquals("tests.monster", doubleArray1, doubleArray11, (double) 1.0f);
        double[] doubleArray24 = new double[] {};
        double[] doubleArray25 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray24, doubleArray25, (double) '#');
        double[] doubleArray28 = new double[] {};
        double[] doubleArray29 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray28, doubleArray29, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray24, doubleArray29, (double) 0.0f);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests34.setUp();
        kuromojiAnalysisTests34.tearDown();
        kuromojiAnalysisTests34.setUp();
        java.lang.String str38 = kuromojiAnalysisTests34.getTestName();
        kuromojiAnalysisTests34.setUp();
        org.junit.Assert.assertNotEquals("tests.awaitsfix", (java.lang.Object) doubleArray29, (java.lang.Object) kuromojiAnalysisTests34);
        org.junit.Assert.assertArrayEquals(doubleArray11, doubleArray29, (double) 10.0f);
        double[] doubleArray46 = new double[] {};
        double[] doubleArray47 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray46, doubleArray47, (double) '#');
        double[] doubleArray50 = new double[] {};
        double[] doubleArray51 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray50, doubleArray51, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray46, doubleArray50, (double) 3);
        double[] doubleArray56 = new double[] {};
        double[] doubleArray57 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray56, doubleArray57, (double) '#');
        double[] doubleArray60 = new double[] {};
        double[] doubleArray61 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray60, doubleArray61, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray56, doubleArray60, (double) 3);
        org.junit.Assert.assertArrayEquals("tests.monster", doubleArray46, doubleArray56, (double) 1.0f);
        double[] doubleArray68 = new double[] {};
        double[] doubleArray69 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray68, doubleArray69, (double) '#');
        double[] doubleArray72 = new double[] {};
        double[] doubleArray73 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray72, doubleArray73, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray68, doubleArray72, (double) 3);
        org.junit.Assert.assertArrayEquals("hi!", doubleArray56, doubleArray72, (double) 1.0f);
        double[] doubleArray80 = new double[] {};
        double[] doubleArray81 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray80, doubleArray81, (double) '#');
        org.junit.Assert.assertArrayEquals("", doubleArray56, doubleArray81, (-1.0d));
        org.junit.Assert.assertArrayEquals(doubleArray11, doubleArray56, (double) '4');
        double[] doubleArray88 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(doubleArray11, doubleArray88, (double) 2);
    }

    @Test
    public void test4334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4334");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        java.lang.String str11 = kuromojiAnalysisTests0.getTestName();
        kuromojiAnalysisTests0.assertPathHasBeenCleared("enwiki.random.lines.txt");
        org.junit.rules.RuleChain ruleChain14 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain15 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain14);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests16 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule17 = kuromojiAnalysisTests16.ruleChain;
        org.junit.rules.RuleChain ruleChain18 = ruleChain15.around(testRule17);
        org.junit.rules.RuleChain ruleChain19 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain18);
        org.apache.lucene.search.QueryCachingPolicy queryCachingPolicy22 = org.apache.lucene.util.LuceneTestCase.MAYBE_CACHE_POLICY;
        org.junit.rules.TestRule testRule23 = null;
        org.junit.rules.RuleChain ruleChain24 = org.junit.rules.RuleChain.outerRule(testRule23);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain24;
        org.junit.rules.TestRule testRule26 = null;
        org.junit.rules.RuleChain ruleChain27 = org.junit.rules.RuleChain.outerRule(testRule26);
        org.junit.rules.RuleChain ruleChain28 = ruleChain24.around((org.junit.rules.TestRule) ruleChain27);
        org.junit.Assert.assertNotSame((java.lang.Object) queryCachingPolicy22, (java.lang.Object) ruleChain28);
        org.junit.rules.RuleChain ruleChain30 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain31 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain30);
        org.junit.rules.RuleChain ruleChain32 = ruleChain28.around((org.junit.rules.TestRule) ruleChain30);
        org.junit.Assert.assertNotSame("tests.slow", (java.lang.Object) "tests.badapples", (java.lang.Object) ruleChain28);
        org.junit.rules.RuleChain ruleChain34 = ruleChain19.around((org.junit.rules.TestRule) ruleChain28);
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain19;
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum39 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("hi!", postingsEnum38, postingsEnum39, true);
        org.apache.lucene.index.IndexReader indexReader43 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum46 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.nightly", indexReader43, (int) (byte) 1, postingsEnum45, postingsEnum46, false);
        kuromojiAnalysisTests0.tearDown();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test4335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4335");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 10, (double) 'a', 0.0d);
    }

    @Test
    public void test4336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4336");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((double) (byte) 1, 1.0d, 100.0d);
    }

    @Test
    public void test4337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4337");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("hi!", (-1.0d), 0.0d, (double) 10L);
    }

    @Test
    public void test4338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4338");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.junit.Assert[] assertArray11 = new org.junit.Assert[] {};
        org.junit.Assert[] assertArray12 = new org.junit.Assert[] {};
        org.junit.Assert[] assertArray13 = new org.junit.Assert[] {};
        org.junit.Assert[][] assertArray14 = new org.junit.Assert[][] { assertArray11, assertArray12, assertArray13 };
        java.util.Set<org.junit.Assert[]> assertArraySet15 = org.apache.lucene.util.LuceneTestCase.asSet(assertArray14);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("<unknown>", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) assertArraySet15);
    }

    @Test
    public void test4339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4339");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) 5, (long) (short) 0);
    }

    @Test
    public void test4340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4340");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 100L, (double) 0L, (double) 0L);
    }

    @Test
    public void test4341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4341");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", (long) (-1), (long) (byte) 1);
    }

    @Test
    public void test4342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4342");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.junit.rules.RuleChain ruleChain9 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement10 = null;
        org.junit.runner.Description description11 = null;
        org.junit.runners.model.Statement statement12 = ruleChain9.apply(statement10, description11);
        org.junit.rules.RuleChain ruleChain13 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain14 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain13);
        org.junit.rules.RuleChain ruleChain15 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain16 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain15);
        org.junit.rules.RuleChain ruleChain17 = ruleChain14.around((org.junit.rules.TestRule) ruleChain16);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests20.tearDown();
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        org.apache.lucene.index.Terms terms25 = null;
        kuromojiAnalysisTests20.assertTermsEquals("tests.failfast", indexReader23, terms24, terms25, false);
        kuromojiAnalysisTests20.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.Terms terms31 = null;
        org.apache.lucene.index.Terms terms32 = null;
        kuromojiAnalysisTests20.assertTermsEquals("hi!", indexReader30, terms31, terms32, true);
        kuromojiAnalysisTests20.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests20.assertPathHasBeenCleared("tests.maxfailures");
        kuromojiAnalysisTests20.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests39 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests39.tearDown();
        kuromojiAnalysisTests39.assertPathHasBeenCleared("hi!");
        org.junit.Assert.assertNotEquals("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests20, (java.lang.Object) kuromojiAnalysisTests39);
        org.junit.rules.TestRule testRule44 = null;
        org.junit.rules.RuleChain ruleChain45 = org.junit.rules.RuleChain.outerRule(testRule44);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain45;
        org.junit.rules.TestRule testRule47 = null;
        org.junit.rules.RuleChain ruleChain48 = org.junit.rules.RuleChain.outerRule(testRule47);
        org.junit.rules.RuleChain ruleChain49 = ruleChain45.around((org.junit.rules.TestRule) ruleChain48);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests20, (java.lang.Object) ruleChain45);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain45;
        java.lang.Object obj52 = null;
        org.junit.Assert.assertNotEquals("tests.nightly", (java.lang.Object) ruleChain45, obj52);
        org.junit.rules.RuleChain ruleChain54 = ruleChain17.around((org.junit.rules.TestRule) ruleChain45);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests55 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests55.tearDown();
        org.apache.lucene.index.IndexReader indexReader58 = null;
        org.apache.lucene.index.Terms terms59 = null;
        org.apache.lucene.index.Terms terms60 = null;
        kuromojiAnalysisTests55.assertTermsEquals("tests.failfast", indexReader58, terms59, terms60, false);
        kuromojiAnalysisTests55.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain65 = kuromojiAnalysisTests55.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests66 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests66.tearDown();
        org.apache.lucene.index.IndexReader indexReader69 = null;
        org.apache.lucene.index.Terms terms70 = null;
        org.apache.lucene.index.Terms terms71 = null;
        kuromojiAnalysisTests66.assertTermsEquals("tests.failfast", indexReader69, terms70, terms71, false);
        org.junit.rules.RuleChain ruleChain74 = kuromojiAnalysisTests66.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement75 = null;
        org.junit.runner.Description description76 = null;
        org.junit.runners.model.Statement statement77 = ruleChain74.apply(statement75, description76);
        org.junit.runner.Description description78 = null;
        org.junit.runners.model.Statement statement79 = ruleChain65.apply(statement77, description78);
        org.junit.runner.Description description80 = null;
        org.junit.runners.model.Statement statement81 = ruleChain17.apply(statement77, description80);
        org.junit.runner.Description description82 = null;
        org.junit.runners.model.Statement statement83 = ruleChain9.apply(statement81, description82);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("", (java.lang.Object) statement83);
    }

    @Test
    public void test4343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4343");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 100L, (double) 4, (double) (short) -1);
    }

    @Test
    public void test4344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4344");
        long[] longArray3 = new long[] {};
        long[] longArray4 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray3, longArray4);
        long[] longArray7 = new long[] {};
        long[] longArray8 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray7, longArray8);
        org.junit.Assert.assertArrayEquals(longArray4, longArray8);
        long[] longArray12 = new long[] {};
        long[] longArray13 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray12, longArray13);
        long[] longArray16 = new long[] {};
        long[] longArray17 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray16, longArray17);
        org.junit.Assert.assertArrayEquals(longArray13, longArray17);
        org.junit.Assert.assertArrayEquals(longArray4, longArray13);
        long[] longArray22 = new long[] {};
        long[] longArray23 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray22, longArray23);
        org.junit.Assert.assertArrayEquals("random", longArray13, longArray22);
        long[] longArray26 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.monster", longArray13, longArray26);
    }

    @Test
    public void test4345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4345");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.assertPathHasBeenCleared("hi!");
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum8 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum9 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.monster", indexReader6, 10, postingsEnum8, postingsEnum9, true);
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule13 = kuromojiAnalysisTests1.ruleChain;
        org.junit.rules.TestRule testRule14 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests16 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests16.setUp();
        kuromojiAnalysisTests16.tearDown();
        kuromojiAnalysisTests16.setUp();
        java.lang.String str20 = kuromojiAnalysisTests16.getTestName();
        kuromojiAnalysisTests16.setUp();
        kuromojiAnalysisTests16.restoreIndexWriterMaxDocs();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.awaitsfix", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests16);
    }

    @Test
    public void test4346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4346");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule11 = kuromojiAnalysisTests0.ruleChain;
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.monster", indexReader13, (int) (byte) -1, postingsEnum15, postingsEnum16, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests19 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule20 = kuromojiAnalysisTests19.ruleChain;
        org.junit.rules.TestRule testRule21 = null;
        org.junit.rules.RuleChain ruleChain22 = org.junit.rules.RuleChain.outerRule(testRule21);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain22;
        org.junit.rules.TestRule testRule24 = null;
        org.junit.rules.RuleChain ruleChain25 = org.junit.rules.RuleChain.outerRule(testRule24);
        org.junit.rules.RuleChain ruleChain26 = ruleChain22.around((org.junit.rules.TestRule) ruleChain25);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain22;
        kuromojiAnalysisTests19.failureAndSuccessEvents = ruleChain22;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests29 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests29.tearDown();
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.Terms terms33 = null;
        org.apache.lucene.index.Terms terms34 = null;
        kuromojiAnalysisTests29.assertTermsEquals("tests.failfast", indexReader32, terms33, terms34, false);
        org.junit.rules.RuleChain ruleChain37 = kuromojiAnalysisTests29.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement38 = null;
        org.junit.runner.Description description39 = null;
        org.junit.runners.model.Statement statement40 = ruleChain37.apply(statement38, description39);
        org.junit.rules.RuleChain ruleChain41 = ruleChain22.around((org.junit.rules.TestRule) ruleChain37);
        org.junit.rules.TestRule testRule44 = null;
        org.junit.rules.RuleChain ruleChain45 = org.junit.rules.RuleChain.outerRule(testRule44);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain45;
        org.junit.rules.TestRule testRule47 = null;
        org.junit.rules.RuleChain ruleChain48 = org.junit.rules.RuleChain.outerRule(testRule47);
        org.junit.rules.RuleChain ruleChain49 = ruleChain45.around((org.junit.rules.TestRule) ruleChain48);
        org.junit.Assert.assertNotSame("tests.maxfailures", (java.lang.Object) "tests.weekly", (java.lang.Object) ruleChain48);
        org.junit.rules.TestRule testRule51 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.junit.rules.RuleChain ruleChain52 = ruleChain48.around(testRule51);
        org.junit.rules.RuleChain ruleChain53 = ruleChain41.around((org.junit.rules.TestRule) ruleChain48);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain53;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain53;
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests59 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests59.tearDown();
        org.apache.lucene.index.IndexReader indexReader62 = null;
        org.apache.lucene.index.Terms terms63 = null;
        org.apache.lucene.index.Terms terms64 = null;
        kuromojiAnalysisTests59.assertTermsEquals("tests.failfast", indexReader62, terms63, terms64, false);
        kuromojiAnalysisTests59.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader69 = null;
        org.apache.lucene.index.Terms terms70 = null;
        org.apache.lucene.index.Terms terms71 = null;
        kuromojiAnalysisTests59.assertTermsEquals("hi!", indexReader69, terms70, terms71, true);
        kuromojiAnalysisTests59.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests59.assertPathHasBeenCleared("tests.maxfailures");
        kuromojiAnalysisTests59.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests78 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests78.tearDown();
        kuromojiAnalysisTests78.assertPathHasBeenCleared("hi!");
        org.junit.Assert.assertNotEquals("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests59, (java.lang.Object) kuromojiAnalysisTests78);
        kuromojiAnalysisTests59.tearDown();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests59);
    }

    @Test
    public void test4347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4347");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", (double) 0.0f, 0.0d);
    }

    @Test
    public void test4348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4348");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (long) (-1), (long) ' ');
    }

    @Test
    public void test4349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4349");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) ' ', 0.0d, (double) (short) 10);
    }

    @Test
    public void test4350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4350");
        long[] longArray3 = new long[] {};
        long[] longArray4 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray3, longArray4);
        long[] longArray9 = new long[] {};
        long[] longArray10 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray9, longArray10);
        long[] longArray13 = new long[] {};
        long[] longArray14 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray13, longArray14);
        org.junit.Assert.assertArrayEquals(longArray10, longArray14);
        long[] longArray18 = new long[] {};
        long[] longArray19 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray18, longArray19);
        long[] longArray22 = new long[] {};
        long[] longArray23 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray22, longArray23);
        org.junit.Assert.assertArrayEquals(longArray19, longArray23);
        org.junit.Assert.assertArrayEquals(longArray10, longArray19);
        long[] longArray28 = new long[] {};
        long[] longArray29 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray28, longArray29);
        org.junit.Assert.assertArrayEquals("random", longArray19, longArray28);
        long[] longArray33 = new long[] {};
        long[] longArray34 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray33, longArray34);
        long[] longArray37 = new long[] {};
        long[] longArray38 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray37, longArray38);
        org.junit.Assert.assertArrayEquals(longArray34, longArray38);
        org.junit.Assert.assertArrayEquals("hi!", longArray28, longArray38);
        long[] longArray43 = new long[] {};
        long[] longArray44 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray43, longArray44);
        long[] longArray47 = new long[] {};
        long[] longArray48 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray47, longArray48);
        org.junit.Assert.assertArrayEquals(longArray44, longArray48);
        long[] longArray52 = new long[] {};
        long[] longArray53 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray52, longArray53);
        long[] longArray56 = new long[] {};
        long[] longArray57 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray56, longArray57);
        org.junit.Assert.assertArrayEquals(longArray53, longArray57);
        org.junit.Assert.assertArrayEquals(longArray44, longArray53);
        long[] longArray62 = new long[] {};
        long[] longArray63 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray62, longArray63);
        org.junit.Assert.assertArrayEquals(longArray53, longArray62);
        org.junit.Assert.assertArrayEquals(longArray38, longArray62);
        org.junit.Assert.assertArrayEquals("tests.badapples", longArray3, longArray38);
        org.junit.rules.TestRule testRule68 = null;
        org.junit.rules.RuleChain ruleChain69 = org.junit.rules.RuleChain.outerRule(testRule68);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain69;
        org.junit.rules.TestRule testRule71 = null;
        org.junit.rules.RuleChain ruleChain72 = org.junit.rules.RuleChain.outerRule(testRule71);
        org.junit.rules.RuleChain ruleChain73 = ruleChain69.around((org.junit.rules.TestRule) ruleChain72);
        org.junit.rules.RuleChain ruleChain74 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain69);
        org.junit.rules.RuleChain ruleChain75 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain69);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.badapples", (java.lang.Object) "tests.badapples", (java.lang.Object) ruleChain75);
    }

    @Test
    public void test4351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4351");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.awaitsfix", (long) (byte) -1, 1L);
    }

    @Test
    public void test4352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4352");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests1.assertTermsEquals("hi!", indexReader11, terms12, terms13, true);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.maxfailures");
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests20.tearDown();
        kuromojiAnalysisTests20.assertPathHasBeenCleared("hi!");
        org.junit.Assert.assertNotEquals("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests20);
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        kuromojiAnalysisTests20.assertDocsSkippingEquals("tests.nightly", indexReader26, (int) (short) 100, postingsEnum28, postingsEnum29, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests33 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests33.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests33, (java.lang.Object) "");
        java.lang.String str37 = kuromojiAnalysisTests33.getTestName();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests20, (java.lang.Object) str37);
        kuromojiAnalysisTests20.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests20.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests20.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader43 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum46 = null;
        kuromojiAnalysisTests20.assertDocsSkippingEquals("<unknown>", indexReader43, (int) (short) 1, postingsEnum45, postingsEnum46, true);
        org.apache.lucene.index.NumericDocValues numericDocValues51 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues52 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests20.assertDocValuesEquals("tests.slow", (int) ' ', numericDocValues51, numericDocValues52);
    }

    @Test
    public void test4353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4353");
        java.util.concurrent.ExecutorService[] executorServiceArray3 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean4 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray3);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray6 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet7 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray6);
        java.io.Serializable[] serializableArray9 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet10 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray9);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray11 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet12 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray11);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray9, (java.lang.Object[]) throttlingArray11);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray6, (java.lang.Object[]) serializableArray9);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray16 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet17 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray16);
        java.io.Serializable[] serializableArray19 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet20 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray19);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray21 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet22 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray21);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray19, (java.lang.Object[]) throttlingArray21);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray16, (java.lang.Object[]) serializableArray19);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray9, (java.lang.Object[]) throttlingArray16);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray27 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet28 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray27);
        java.io.Serializable[] serializableArray30 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet31 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray30);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray32 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet33 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray32);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray30, (java.lang.Object[]) throttlingArray32);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray27, (java.lang.Object[]) serializableArray30);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray16, (java.lang.Object[]) serializableArray30);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray3, (java.lang.Object[]) serializableArray30);
        org.junit.Assert.assertNotEquals((java.lang.Object) 0.0f, (java.lang.Object) executorServiceArray3);
        long[][][] longArray39 = new long[][][] {};
        java.util.Set<long[][]> longArraySet40 = org.apache.lucene.util.LuceneTestCase.asSet(longArray39);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) executorServiceArray3, (java.lang.Object[]) longArray39);
        java.lang.String[] strArray44 = new java.lang.String[] { "tests.slow", "tests.weekly" };
        java.util.Set<java.lang.String> strSet45 = org.apache.lucene.util.LuceneTestCase.asSet(strArray44);
        java.util.Set<java.lang.String> strSet46 = org.apache.lucene.util.LuceneTestCase.asSet(strArray44);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", (java.lang.Object[]) longArray39, (java.lang.Object[]) strArray44);
    }

    @Test
    public void test4354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4354");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("<unknown>", (double) (short) 10, (double) (-1.0f));
    }

    @Test
    public void test4355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4355");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum7 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum8 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.maxfailures", indexReader5, 0, postingsEnum7, postingsEnum8);
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests13 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests13.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests13, (java.lang.Object) "");
        kuromojiAnalysisTests13.setUp();
        kuromojiAnalysisTests13.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain19 = kuromojiAnalysisTests13.failureAndSuccessEvents;
        org.junit.Assert.assertNotNull("tests.badapples", (java.lang.Object) kuromojiAnalysisTests13);
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        kuromojiAnalysisTests13.assertPositionsSkippingEquals("tests.awaitsfix", indexReader22, (int) ' ', postingsEnum24, postingsEnum25);
        org.junit.rules.RuleChain ruleChain27 = kuromojiAnalysisTests13.failureAndSuccessEvents;
        kuromojiAnalysisTests13.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.Terms terms31 = null;
        org.apache.lucene.index.Terms terms32 = null;
        kuromojiAnalysisTests13.assertTermsEquals("tests.nightly", indexReader30, terms31, terms32, true);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) terms32);
    }

    @Test
    public void test4356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4356");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.junit.rules.RuleChain ruleChain8 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((-1));
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.badapples");
        org.junit.rules.RuleChain ruleChain16 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain17 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain18 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain17);
        org.junit.rules.RuleChain ruleChain19 = ruleChain16.around((org.junit.rules.TestRule) ruleChain18);
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain18;
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.slow", postingsEnum22, postingsEnum23);
    }

    @Test
    public void test4357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4357");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(100.0d, (double) 0L, (double) (-1));
    }

    @Test
    public void test4358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4358");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 3, (double) 5);
    }

    @Test
    public void test4359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4359");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (double) (byte) 0, (double) (short) 10);
    }

    @Test
    public void test4360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4360");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) ' ', 1.0d);
    }

    @Test
    public void test4361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4361");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule2 = kuromojiAnalysisTests1.ruleChain;
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests5 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests5.tearDown();
        org.apache.lucene.index.IndexReader indexReader8 = null;
        org.apache.lucene.index.Terms terms9 = null;
        org.apache.lucene.index.Terms terms10 = null;
        kuromojiAnalysisTests5.assertTermsEquals("tests.failfast", indexReader8, terms9, terms10, false);
        org.junit.rules.RuleChain ruleChain13 = kuromojiAnalysisTests5.failureAndSuccessEvents;
        org.junit.Assert.assertNotSame("hi!", (java.lang.Object) ruleChain13, (java.lang.Object) "tests.weekly");
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) ruleChain13);
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (short) 0);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.setUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests23.tearDown();
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        org.apache.lucene.index.Terms terms28 = null;
        kuromojiAnalysisTests23.assertTermsEquals("tests.failfast", indexReader26, terms27, terms28, false);
        kuromojiAnalysisTests23.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain33 = kuromojiAnalysisTests23.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests34.tearDown();
        org.apache.lucene.index.IndexReader indexReader37 = null;
        org.apache.lucene.index.Terms terms38 = null;
        org.apache.lucene.index.Terms terms39 = null;
        kuromojiAnalysisTests34.assertTermsEquals("tests.failfast", indexReader37, terms38, terms39, false);
        org.junit.rules.RuleChain ruleChain42 = kuromojiAnalysisTests34.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement43 = null;
        org.junit.runner.Description description44 = null;
        org.junit.runners.model.Statement statement45 = ruleChain42.apply(statement43, description44);
        org.junit.runner.Description description46 = null;
        org.junit.runners.model.Statement statement47 = ruleChain33.apply(statement45, description46);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests50 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule51 = kuromojiAnalysisTests50.ruleChain;
        org.junit.Assert.assertNotSame("tests.weekly", (java.lang.Object) "tests.maxfailures", (java.lang.Object) testRule51);
        org.junit.rules.RuleChain ruleChain53 = ruleChain33.around(testRule51);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests54 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests54.tearDown();
        org.apache.lucene.index.IndexReader indexReader57 = null;
        org.apache.lucene.index.Terms terms58 = null;
        org.apache.lucene.index.Terms terms59 = null;
        kuromojiAnalysisTests54.assertTermsEquals("tests.failfast", indexReader57, terms58, terms59, false);
        kuromojiAnalysisTests54.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests54.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule65 = kuromojiAnalysisTests54.ruleChain;
        kuromojiAnalysisTests54.overrideTestDefaultQueryCache();
        java.lang.Object obj67 = null;
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests54, obj67);
        org.apache.lucene.index.PostingsEnum postingsEnum70 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum71 = null;
        kuromojiAnalysisTests54.assertDocsEnumEquals("hi!", postingsEnum70, postingsEnum71, true);
        org.junit.Assert.assertNotSame("tests.badapples", (java.lang.Object) testRule51, (java.lang.Object) true);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.maxfailures", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) testRule51);
    }

    @Test
    public void test4362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4362");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests2.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        kuromojiAnalysisTests2.assertTermsEquals("tests.failfast", indexReader5, terms6, terms7, false);
        kuromojiAnalysisTests2.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests2.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests2.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests2.ensureCleanedUp();
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        java.lang.Object obj17 = null;
        org.junit.Assert.assertNotSame("tests.badapples", (java.lang.Object) kuromojiAnalysisTests2, obj17);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotNull("tests.monster", obj17);
    }

    @Test
    public void test4363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4363");
        java.io.Serializable[] serializableArray2 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet3 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray2);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray4 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet5 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray4);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray2, (java.lang.Object[]) throttlingArray4);
        org.apache.lucene.util.LuceneTestCase[] luceneTestCaseArray7 = new org.apache.lucene.util.LuceneTestCase[] {};
        java.util.Set<org.apache.lucene.util.LuceneTestCase> luceneTestCaseSet8 = org.apache.lucene.util.LuceneTestCase.asSet(luceneTestCaseArray7);
        org.junit.Assert.assertEquals("<unknown>", (java.lang.Object[]) throttlingArray4, (java.lang.Object[]) luceneTestCaseArray7);
        java.lang.Object[] objArray10 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray4, objArray10);
    }

    @Test
    public void test4364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4364");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.setUp();
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests0);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests5 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests5.tearDown();
        kuromojiAnalysisTests5.assertPathHasBeenCleared("hi!");
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        kuromojiAnalysisTests5.assertDocsSkippingEquals("tests.monster", indexReader10, 10, postingsEnum12, postingsEnum13, true);
        kuromojiAnalysisTests5.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule17 = kuromojiAnalysisTests5.ruleChain;
        org.junit.rules.TestRule testRule18 = kuromojiAnalysisTests5.ruleChain;
        org.junit.rules.RuleChain ruleChain19 = kuromojiAnalysisTests5.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain19;
        java.io.Serializable[][][][] serializableArray22 = new java.io.Serializable[][][][] {};
        java.util.List<java.io.Serializable[][][]> serializableArrayList23 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 0, serializableArray22);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) ruleChain19, (java.lang.Object) serializableArray22);
    }

    @Test
    public void test4365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4365");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("<unknown>", (long) (short) 100, (long) 10);
    }

    @Test
    public void test4366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4366");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests2.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) "");
        java.lang.String str6 = kuromojiAnalysisTests2.getTestName();
        org.junit.rules.RuleChain ruleChain7 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain8 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain7);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests9 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule10 = kuromojiAnalysisTests9.ruleChain;
        org.junit.rules.RuleChain ruleChain11 = ruleChain8.around(testRule10);
        org.junit.rules.RuleChain ruleChain12 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain11);
        org.apache.lucene.search.QueryCachingPolicy queryCachingPolicy15 = org.apache.lucene.util.LuceneTestCase.MAYBE_CACHE_POLICY;
        org.junit.rules.TestRule testRule16 = null;
        org.junit.rules.RuleChain ruleChain17 = org.junit.rules.RuleChain.outerRule(testRule16);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain17;
        org.junit.rules.TestRule testRule19 = null;
        org.junit.rules.RuleChain ruleChain20 = org.junit.rules.RuleChain.outerRule(testRule19);
        org.junit.rules.RuleChain ruleChain21 = ruleChain17.around((org.junit.rules.TestRule) ruleChain20);
        org.junit.Assert.assertNotSame((java.lang.Object) queryCachingPolicy15, (java.lang.Object) ruleChain21);
        org.junit.rules.RuleChain ruleChain23 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain24 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain23);
        org.junit.rules.RuleChain ruleChain25 = ruleChain21.around((org.junit.rules.TestRule) ruleChain23);
        org.junit.Assert.assertNotSame("tests.slow", (java.lang.Object) "tests.badapples", (java.lang.Object) ruleChain21);
        org.junit.rules.RuleChain ruleChain27 = ruleChain12.around((org.junit.rules.TestRule) ruleChain21);
        kuromojiAnalysisTests2.failureAndSuccessEvents = ruleChain12;
        kuromojiAnalysisTests2.ensureCleanedUp();
        kuromojiAnalysisTests2.setUp();
        kuromojiAnalysisTests2.resetCheckIndexStatus();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.monster", (java.lang.Object) kuromojiAnalysisTests2);
    }

    @Test
    public void test4367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4367");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) (-1L), (float) 2, 0.0f);
    }

    @Test
    public void test4368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4368");
        char[] charArray6 = new char[] { 'a', '#', '4', '4', '4' };
        char[][] charArray7 = new char[][] { charArray6 };
        java.util.Set<char[]> charArraySet8 = org.apache.lucene.util.LuceneTestCase.asSet(charArray7);
        java.util.Set<char[]> charArraySet9 = org.apache.lucene.util.LuceneTestCase.asSet(charArray7);
        java.lang.Object[] objArray10 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (java.lang.Object[]) charArray7, objArray10);
    }

    @Test
    public void test4369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4369");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((double) '#', (double) '#', (double) (-1));
    }

    @Test
    public void test4370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4370");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 100.0f, (double) (short) 10, (double) (-1L));
    }

    @Test
    public void test4371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4371");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("enwiki.random.lines.txt", (double) 100L, (double) (-1L), (double) (-1.0f));
    }

    @Test
    public void test4372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4372");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) '#', (double) (-1L), (double) 1.0f);
    }

    @Test
    public void test4373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4373");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("<unknown>", (double) 10L, (double) ' ');
    }

    @Test
    public void test4374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4374");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (short) 1, (long) 3);
    }

    @Test
    public void test4375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4375");
        java.lang.Object obj1 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests2.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        kuromojiAnalysisTests2.assertTermsEquals("tests.failfast", indexReader5, terms6, terms7, false);
        kuromojiAnalysisTests2.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests2.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests2.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests2.ensureCheckIndexPassed();
        kuromojiAnalysisTests2.assertPathHasBeenCleared("tests.nightly");
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.Terms terms20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        kuromojiAnalysisTests2.assertTermsEquals("tests.failfast", indexReader19, terms20, terms21, true);
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        kuromojiAnalysisTests2.assertDocsSkippingEquals("tests.badapples", indexReader25, (int) '4', postingsEnum27, postingsEnum28, true);
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.Fields fields33 = null;
        org.apache.lucene.index.Fields fields34 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("", indexReader32, fields33, fields34, true);
        org.junit.rules.TestRule testRule37 = kuromojiAnalysisTests2.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.failfast", obj1, (java.lang.Object) testRule37);
    }

    @Test
    public void test4376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4376");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", (float) (short) 0, (float) 100, (float) (byte) 10);
    }

    @Test
    public void test4377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4377");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule1 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests0);
        org.junit.rules.RuleChain ruleChain4 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests5 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests5.tearDown();
        kuromojiAnalysisTests5.assertPathHasBeenCleared("hi!");
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests5.assertTermsEquals("<unknown>", indexReader10, terms11, terms12, false);
        java.lang.Class<?> wildcardClass15 = kuromojiAnalysisTests5.getClass();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) wildcardClass15);
    }

    @Test
    public void test4378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4378");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 4, 100.0d);
    }

    @Test
    public void test4379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4379");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", 0L, (long) 2);
    }

    @Test
    public void test4380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4380");
        int[] intArray3 = new int[] {};
        int[] intArray4 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray3, intArray4);
        int[] intArray8 = new int[] {};
        int[] intArray9 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray8, intArray9);
        int[] intArray11 = new int[] {};
        org.junit.Assert.assertArrayEquals(intArray8, intArray11);
        int[] intArray13 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray11, intArray13);
        int[] intArray17 = new int[] {};
        int[] intArray18 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray17, intArray18);
        int[] intArray20 = new int[] {};
        org.junit.Assert.assertArrayEquals(intArray17, intArray20);
        int[] intArray22 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray20, intArray22);
        org.junit.Assert.assertArrayEquals(intArray11, intArray22);
        org.junit.Assert.assertArrayEquals("random", intArray4, intArray11);
        int[] intArray27 = new int[] {};
        int[] intArray28 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray27, intArray28);
        int[] intArray30 = new int[] {};
        org.junit.Assert.assertArrayEquals(intArray27, intArray30);
        int[] intArray34 = new int[] {};
        int[] intArray35 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray34, intArray35);
        int[] intArray38 = new int[] {};
        int[] intArray39 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray38, intArray39);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray35, intArray39);
        org.junit.Assert.assertArrayEquals(intArray27, intArray39);
        org.junit.Assert.assertArrayEquals(intArray11, intArray27);
        int[] intArray44 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("<unknown>", intArray27, intArray44);
    }

    @Test
    public void test4381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4381");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests2.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) "");
        kuromojiAnalysisTests2.setUp();
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain8 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        org.junit.rules.TestRule testRule9 = kuromojiAnalysisTests2.ruleChain;
        kuromojiAnalysisTests2.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.Fields fields13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        kuromojiAnalysisTests2.assertFieldsEquals("tests.failfast", indexReader12, fields13, fields14, true);
        org.junit.rules.TestRule testRule17 = kuromojiAnalysisTests2.ruleChain;
        kuromojiAnalysisTests2.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests22 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests22.tearDown();
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.Terms terms26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        kuromojiAnalysisTests22.assertTermsEquals("tests.failfast", indexReader25, terms26, terms27, false);
        org.junit.rules.RuleChain ruleChain30 = kuromojiAnalysisTests22.failureAndSuccessEvents;
        kuromojiAnalysisTests22.ensureCleanedUp();
        kuromojiAnalysisTests22.tearDown();
        java.io.Serializable[] serializableArray33 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet34 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray33);
        org.junit.Assert.assertNotEquals("europarl.lines.txt.gz", (java.lang.Object) kuromojiAnalysisTests22, (java.lang.Object) serializableArray33);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests36 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests36.tearDown();
        kuromojiAnalysisTests36.setIndexWriterMaxDocs((int) (short) 100);
        org.junit.Assert.assertNotEquals("tests.maxfailures", (java.lang.Object) serializableArray33, (java.lang.Object) kuromojiAnalysisTests36);
        java.util.concurrent.ExecutorService[] executorServiceArray42 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean43 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray42);
        boolean boolean44 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray42);
        boolean boolean45 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray42);
        boolean boolean46 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray42);
        java.io.Serializable[] serializableArray48 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet49 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray48);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray50 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet51 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray50);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray48, (java.lang.Object[]) throttlingArray50);
        java.io.Serializable[] serializableArray54 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet55 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray54);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray56 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet57 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray56);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray54, (java.lang.Object[]) throttlingArray56);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray48, (java.lang.Object[]) serializableArray54);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray61 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet62 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray61);
        java.io.Serializable[] serializableArray64 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet65 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray64);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray66 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet67 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray66);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray64, (java.lang.Object[]) throttlingArray66);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray61, (java.lang.Object[]) serializableArray64);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray71 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet72 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray71);
        java.io.Serializable[] serializableArray74 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet75 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray74);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray76 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet77 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray76);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray74, (java.lang.Object[]) throttlingArray76);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray71, (java.lang.Object[]) serializableArray74);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray64, (java.lang.Object[]) throttlingArray71);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray54, (java.lang.Object[]) throttlingArray71);
        org.junit.Assert.assertArrayEquals("tests.weekly", (java.lang.Object[]) executorServiceArray42, (java.lang.Object[]) throttlingArray71);
        org.junit.Assert.assertEquals("", (java.lang.Object[]) serializableArray33, (java.lang.Object[]) executorServiceArray42);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) "");
    }

    @Test
    public void test4382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4382");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests0.assertTermsEquals("hi!", indexReader10, terms11, terms12, true);
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("", indexReader16, fields17, fields18, false);
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (short) 1);
        org.junit.rules.RuleChain ruleChain23 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests26 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests26.tearDown();
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.Terms terms30 = null;
        org.apache.lucene.index.Terms terms31 = null;
        kuromojiAnalysisTests26.assertTermsEquals("tests.failfast", indexReader29, terms30, terms31, false);
        kuromojiAnalysisTests26.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests26.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule37 = kuromojiAnalysisTests26.ruleChain;
        org.junit.rules.RuleChain ruleChain38 = kuromojiAnalysisTests26.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader40 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum43 = null;
        kuromojiAnalysisTests26.assertPositionsSkippingEquals("", indexReader40, (int) '#', postingsEnum42, postingsEnum43);
        kuromojiAnalysisTests26.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain46 = kuromojiAnalysisTests26.failureAndSuccessEvents;
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) ruleChain46);
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain46;
        double[] doubleArray51 = new double[] {};
        double[] doubleArray52 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray51, doubleArray52, (double) '#');
        double[] doubleArray55 = new double[] {};
        double[] doubleArray56 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray55, doubleArray56, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray51, doubleArray56, (double) 0.0f);
        double[] doubleArray61 = new double[] {};
        double[] doubleArray62 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray61, doubleArray62, (double) '#');
        double[] doubleArray65 = new double[] {};
        double[] doubleArray66 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray65, doubleArray66, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray61, doubleArray66, (double) 0.0f);
        org.junit.Assert.assertArrayEquals("", doubleArray51, doubleArray66, (double) 1);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests73 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests73.tearDown();
        org.apache.lucene.index.IndexReader indexReader76 = null;
        org.apache.lucene.index.Terms terms77 = null;
        org.apache.lucene.index.Terms terms78 = null;
        kuromojiAnalysisTests73.assertTermsEquals("tests.failfast", indexReader76, terms77, terms78, false);
        org.apache.lucene.index.PostingsEnum postingsEnum82 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum83 = null;
        kuromojiAnalysisTests73.assertDocsEnumEquals("tests.weekly", postingsEnum82, postingsEnum83, true);
        kuromojiAnalysisTests73.setIndexWriterMaxDocs((int) ' ');
        org.junit.rules.TestRule testRule88 = kuromojiAnalysisTests73.ruleChain;
        kuromojiAnalysisTests73.ensureCheckIndexPassed();
        org.junit.Assert.assertNotEquals("tests.weekly", (java.lang.Object) doubleArray66, (java.lang.Object) kuromojiAnalysisTests73);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) ruleChain46, (java.lang.Object) doubleArray66);
    }

    @Test
    public void test4383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4383");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (short) 1, (long) (-1));
    }

    @Test
    public void test4384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4384");
        java.lang.Object obj0 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests1.assertTermsEquals("hi!", indexReader11, terms12, terms13, true);
        java.lang.String str16 = kuromojiAnalysisTests1.getTestName();
        org.apache.lucene.index.IndexReader indexReader18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("", indexReader18, (int) (byte) 0, postingsEnum20, postingsEnum21, false);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.junit.rules.RuleChain ruleChain25 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("random", indexReader27, (int) (short) 0, postingsEnum29, postingsEnum30);
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests1.setUp();
        org.junit.rules.TestRule testRule34 = kuromojiAnalysisTests1.ruleChain;
        org.apache.lucene.util.LuceneTestCase.classRules = testRule34;
        org.junit.Assert.assertNotEquals(obj0, (java.lang.Object) testRule34);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) testRule34);
    }

    @Test
    public void test4385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4385");
        double[] doubleArray4 = new double[] { 10.0d, 10, 100L, 4 };
        double[] doubleArray7 = new double[] {};
        double[] doubleArray8 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray7, doubleArray8, (double) '#');
        double[] doubleArray11 = new double[] {};
        double[] doubleArray12 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray11, doubleArray12, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray7, doubleArray12, (double) 0.0f);
        double[] doubleArray17 = new double[] {};
        double[] doubleArray18 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray17, doubleArray18, (double) '#');
        double[] doubleArray21 = new double[] {};
        double[] doubleArray22 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray21, doubleArray22, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray17, doubleArray22, (double) 0.0f);
        org.junit.Assert.assertArrayEquals("", doubleArray7, doubleArray22, (double) 1);
        double[] doubleArray29 = new double[] {};
        double[] doubleArray30 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray29, doubleArray30, (double) '#');
        org.junit.Assert.assertArrayEquals("tests.badapples", doubleArray22, doubleArray29, (-1.0d));
        double[] doubleArray36 = new double[] {};
        double[] doubleArray37 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray36, doubleArray37, (double) '#');
        double[] doubleArray40 = new double[] {};
        double[] doubleArray41 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray40, doubleArray41, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray36, doubleArray40, (double) 3);
        double[] doubleArray47 = new double[] {};
        double[] doubleArray48 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray47, doubleArray48, (double) '#');
        double[] doubleArray51 = new double[] {};
        double[] doubleArray52 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray51, doubleArray52, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray47, doubleArray52, (double) 0.0f);
        double[] doubleArray57 = new double[] {};
        double[] doubleArray58 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray57, doubleArray58, (double) '#');
        double[] doubleArray61 = new double[] {};
        double[] doubleArray62 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray61, doubleArray62, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray57, doubleArray62, (double) 0.0f);
        org.junit.Assert.assertArrayEquals("", doubleArray47, doubleArray62, (double) 1);
        double[] doubleArray69 = new double[] {};
        double[] doubleArray70 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray69, doubleArray70, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray62, doubleArray70, (double) 2);
        org.junit.Assert.assertArrayEquals(doubleArray36, doubleArray70, (double) (short) -1);
        double[] doubleArray77 = new double[] {};
        double[] doubleArray78 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray77, doubleArray78, (double) '#');
        double[] doubleArray81 = new double[] {};
        double[] doubleArray82 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray81, doubleArray82, (double) '#');
        double[] doubleArray85 = new double[] {};
        double[] doubleArray86 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray85, doubleArray86, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray81, doubleArray85, (double) 3);
        org.junit.Assert.assertArrayEquals(doubleArray77, doubleArray85, (-1.0d));
        org.junit.Assert.assertArrayEquals("random", doubleArray70, doubleArray85, (double) (-1.0f));
        org.junit.Assert.assertArrayEquals(doubleArray22, doubleArray70, 1.0d);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(doubleArray4, doubleArray22, (double) 100.0f);
    }

    @Test
    public void test4386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4386");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) 3, 100.0f, (float) 0L);
    }

    @Test
    public void test4387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4387");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 1, (double) 100L, (double) 1);
    }

    @Test
    public void test4388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4388");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        org.apache.lucene.index.Fields fields18 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("random", indexReader16, fields17, fields18, false);
        org.junit.rules.TestRule testRule21 = kuromojiAnalysisTests1.ruleChain;
        org.junit.rules.TestRule testRule22 = kuromojiAnalysisTests1.ruleChain;
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.Fields fields25 = null;
        org.apache.lucene.index.Fields fields26 = null;
        kuromojiAnalysisTests1.assertFieldsEquals("tests.badapples", indexReader24, fields25, fields26, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests29 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests29.tearDown();
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.Terms terms33 = null;
        org.apache.lucene.index.Terms terms34 = null;
        kuromojiAnalysisTests29.assertTermsEquals("tests.failfast", indexReader32, terms33, terms34, false);
        kuromojiAnalysisTests29.assertPathHasBeenCleared("tests.nightly");
        org.apache.lucene.index.IndexReader indexReader40 = null;
        org.apache.lucene.index.Terms terms41 = null;
        org.apache.lucene.index.Terms terms42 = null;
        kuromojiAnalysisTests29.assertTermsEquals("tests.slow", indexReader40, terms41, terms42, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests45 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests45.tearDown();
        org.apache.lucene.index.IndexReader indexReader48 = null;
        org.apache.lucene.index.Terms terms49 = null;
        org.apache.lucene.index.Terms terms50 = null;
        kuromojiAnalysisTests45.assertTermsEquals("tests.failfast", indexReader48, terms49, terms50, false);
        kuromojiAnalysisTests45.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader55 = null;
        org.apache.lucene.index.Terms terms56 = null;
        org.apache.lucene.index.Terms terms57 = null;
        kuromojiAnalysisTests45.assertTermsEquals("hi!", indexReader55, terms56, terms57, true);
        org.apache.lucene.index.IndexReader indexReader61 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum63 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum64 = null;
        kuromojiAnalysisTests45.assertDocsSkippingEquals("hi!", indexReader61, (int) (byte) 1, postingsEnum63, postingsEnum64, false);
        org.junit.rules.RuleChain ruleChain67 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain68 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain67);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests69 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule70 = kuromojiAnalysisTests69.ruleChain;
        org.junit.rules.RuleChain ruleChain71 = ruleChain68.around(testRule70);
        kuromojiAnalysisTests45.failureAndSuccessEvents = ruleChain71;
        java.util.concurrent.ExecutorService executorService73 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray74 = new java.util.concurrent.ExecutorService[] { executorService73 };
        boolean boolean75 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray74);
        boolean boolean76 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray74);
        boolean boolean77 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray74);
        boolean boolean78 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray74);
        org.junit.Assert.assertNotSame((java.lang.Object) ruleChain71, (java.lang.Object) executorServiceArray74);
        kuromojiAnalysisTests29.failureAndSuccessEvents = ruleChain71;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (java.lang.Object) fields26, (java.lang.Object) kuromojiAnalysisTests29);
    }

    @Test
    public void test4389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4389");
        float[] floatArray6 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray12 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray6, floatArray12, (float) (byte) 100);
        float[] floatArray21 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray27 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray21, floatArray27, (float) (byte) 100);
        float[] floatArray36 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray42 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray36, floatArray42, (float) (byte) 100);
        float[] floatArray51 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray57 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray51, floatArray57, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray36, floatArray51, (float) (short) 1);
        org.junit.Assert.assertArrayEquals(floatArray21, floatArray36, (float) (short) 100);
        org.junit.Assert.assertArrayEquals(floatArray6, floatArray36, (float) (short) 10);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests66 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests66.tearDown();
        org.apache.lucene.index.IndexReader indexReader69 = null;
        org.apache.lucene.index.Terms terms70 = null;
        org.apache.lucene.index.Terms terms71 = null;
        kuromojiAnalysisTests66.assertTermsEquals("tests.failfast", indexReader69, terms70, terms71, false);
        kuromojiAnalysisTests66.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests66.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests66.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests66.ensureCheckIndexPassed();
        org.apache.lucene.index.PostingsEnum postingsEnum81 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum82 = null;
        kuromojiAnalysisTests66.assertDocsEnumEquals("enwiki.random.lines.txt", postingsEnum81, postingsEnum82, true);
        kuromojiAnalysisTests66.tearDown();
        org.junit.Assert.assertNotEquals((java.lang.Object) floatArray36, (java.lang.Object) kuromojiAnalysisTests66);
        kuromojiAnalysisTests66.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader89 = null;
        org.apache.lucene.index.Terms terms90 = null;
        org.apache.lucene.index.Terms terms91 = null;
        kuromojiAnalysisTests66.assertTermsEquals("<unknown>", indexReader89, terms90, terms91, false);
        java.lang.Object obj94 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotSame((java.lang.Object) terms90, obj94);
    }

    @Test
    public void test4390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4390");
        java.lang.Object obj1 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests3 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests3.tearDown();
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        kuromojiAnalysisTests3.assertTermsEquals("tests.failfast", indexReader6, terms7, terms8, false);
        kuromojiAnalysisTests3.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain12 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain13 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain12);
        org.junit.rules.RuleChain ruleChain14 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain15 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain14);
        org.junit.rules.RuleChain ruleChain16 = ruleChain13.around((org.junit.rules.TestRule) ruleChain15);
        kuromojiAnalysisTests3.failureAndSuccessEvents = ruleChain13;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests18 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests18.tearDown();
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.Terms terms22 = null;
        org.apache.lucene.index.Terms terms23 = null;
        kuromojiAnalysisTests18.assertTermsEquals("tests.failfast", indexReader21, terms22, terms23, false);
        kuromojiAnalysisTests18.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain28 = kuromojiAnalysisTests18.failureAndSuccessEvents;
        kuromojiAnalysisTests18.assertPathHasBeenCleared("tests.awaitsfix");
        kuromojiAnalysisTests18.setUp();
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests3, (java.lang.Object) kuromojiAnalysisTests18);
        org.junit.Assert.assertNotNull("tests.nightly", (java.lang.Object) kuromojiAnalysisTests18);
        kuromojiAnalysisTests18.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.Fields fields37 = null;
        org.apache.lucene.index.Fields fields38 = null;
        kuromojiAnalysisTests18.assertFieldsEquals("tests.nightly", indexReader36, fields37, fields38, false);
        kuromojiAnalysisTests18.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader43 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum46 = null;
        kuromojiAnalysisTests18.assertDocsSkippingEquals("tests.slow", indexReader43, (int) ' ', postingsEnum45, postingsEnum46, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotSame("tests.weekly", obj1, (java.lang.Object) indexReader43);
    }

    @Test
    public void test4391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4391");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", (double) 100.0f, (-1.0d), 100.0d);
    }

    @Test
    public void test4392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4392");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests3 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests3.tearDown();
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        kuromojiAnalysisTests3.assertTermsEquals("tests.failfast", indexReader6, terms7, terms8, false);
        kuromojiAnalysisTests3.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain13 = kuromojiAnalysisTests3.failureAndSuccessEvents;
        kuromojiAnalysisTests3.assertPathHasBeenCleared("tests.awaitsfix");
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) "tests.awaitsfix");
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        org.apache.lucene.index.NumericDocValues numericDocValues20 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues21 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.badapples", (int) '4', numericDocValues20, numericDocValues21);
    }

    @Test
    public void test4393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4393");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", (long) 'a', 0L);
    }

    @Test
    public void test4394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4394");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests0.assertTermsEquals("hi!", indexReader10, terms11, terms12, true);
        java.lang.String str15 = kuromojiAnalysisTests0.getTestName();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("", indexReader17, (int) (byte) 0, postingsEnum19, postingsEnum20, false);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.junit.rules.RuleChain ruleChain24 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain25 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.Fields fields28 = null;
        org.apache.lucene.index.Fields fields29 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("hi!", indexReader27, fields28, fields29, false);
        org.apache.lucene.index.IndexReader indexReader33 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum35 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum36 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.awaitsfix", indexReader33, (int) (short) 10, postingsEnum35, postingsEnum36);
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 100);
        org.junit.rules.RuleChain ruleChain40 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.apache.lucene.index.NumericDocValues numericDocValues43 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues44 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.failfast", 1, numericDocValues43, numericDocValues44);
    }

    @Test
    public void test4395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4395");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(1.0d, (double) (short) 100);
    }

    @Test
    public void test4396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4396");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.failfast", 100L, (long) (short) 100);
    }

    @Test
    public void test4397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4397");
        char[] charArray1 = null;
        char[] charArray6 = new char[] {};
        char[] charArray7 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray6, charArray7);
        char[] charArray10 = new char[] {};
        char[] charArray11 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray10, charArray11);
        char[] charArray14 = new char[] {};
        char[] charArray15 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray14, charArray15);
        org.junit.Assert.assertArrayEquals(charArray11, charArray15);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray7, charArray11);
        char[] charArray20 = new char[] {};
        char[] charArray21 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray20, charArray21);
        char[] charArray24 = new char[] {};
        char[] charArray25 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray24, charArray25);
        org.junit.Assert.assertArrayEquals(charArray21, charArray25);
        char[] charArray30 = new char[] {};
        char[] charArray31 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray30, charArray31);
        char[] charArray34 = new char[] {};
        char[] charArray35 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray34, charArray35);
        char[] charArray38 = new char[] {};
        char[] charArray39 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray38, charArray39);
        org.junit.Assert.assertArrayEquals(charArray35, charArray39);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray31, charArray35);
        org.junit.Assert.assertArrayEquals(charArray21, charArray35);
        org.junit.Assert.assertArrayEquals("hi!", charArray11, charArray35);
        char[] charArray48 = new char[] {};
        char[] charArray49 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray48, charArray49);
        char[] charArray52 = new char[] {};
        char[] charArray53 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray52, charArray53);
        char[] charArray56 = new char[] {};
        char[] charArray57 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray56, charArray57);
        org.junit.Assert.assertArrayEquals(charArray53, charArray57);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray49, charArray53);
        char[] charArray62 = new char[] {};
        char[] charArray63 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray62, charArray63);
        char[] charArray66 = new char[] {};
        char[] charArray67 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray66, charArray67);
        org.junit.Assert.assertArrayEquals(charArray63, charArray67);
        char[] charArray72 = new char[] {};
        char[] charArray73 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray72, charArray73);
        char[] charArray76 = new char[] {};
        char[] charArray77 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray76, charArray77);
        char[] charArray80 = new char[] {};
        char[] charArray81 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray80, charArray81);
        org.junit.Assert.assertArrayEquals(charArray77, charArray81);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray73, charArray77);
        org.junit.Assert.assertArrayEquals(charArray63, charArray77);
        org.junit.Assert.assertArrayEquals("hi!", charArray53, charArray77);
        org.junit.Assert.assertArrayEquals("", charArray11, charArray77);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("tests.nightly", charArray1, charArray77);
    }

    @Test
    public void test4398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4398");
        short[] shortArray4 = new short[] {};
        short[] shortArray5 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray4, shortArray5);
        short[] shortArray7 = new short[] {};
        short[] shortArray8 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray7, shortArray8);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray4, shortArray8);
        short[] shortArray12 = new short[] {};
        short[] shortArray13 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray12, shortArray13);
        short[] shortArray15 = new short[] {};
        short[] shortArray16 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray15, shortArray16);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray12, shortArray16);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray8, shortArray12);
        short[] shortArray20 = new short[] {};
        short[] shortArray21 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray20, shortArray21);
        org.junit.Assert.assertArrayEquals("hi!", shortArray8, shortArray20);
        short[] shortArray24 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", shortArray20, shortArray24);
    }

    @Test
    public void test4399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4399");
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray3 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet4 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray3);
        java.io.Serializable[] serializableArray6 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet7 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray6);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray8 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet9 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray8);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) serializableArray6, (java.lang.Object[]) throttlingArray8);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) throttlingArray3, (java.lang.Object[]) throttlingArray8);
        java.io.Serializable[] serializableArray14 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet15 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray14);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray16 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet17 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray16);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray14, (java.lang.Object[]) throttlingArray16);
        java.io.Serializable[] serializableArray20 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet21 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray20);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray22 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet23 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray22);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray20, (java.lang.Object[]) throttlingArray22);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray14, (java.lang.Object[]) serializableArray20);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray27 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet28 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray27);
        java.io.Serializable[] serializableArray30 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet31 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray30);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray32 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet33 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray32);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray30, (java.lang.Object[]) throttlingArray32);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray27, (java.lang.Object[]) serializableArray30);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray37 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet38 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray37);
        java.io.Serializable[] serializableArray40 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet41 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray40);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray42 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet43 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray42);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray40, (java.lang.Object[]) throttlingArray42);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray37, (java.lang.Object[]) serializableArray40);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray30, (java.lang.Object[]) throttlingArray37);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray20, (java.lang.Object[]) throttlingArray37);
        org.apache.lucene.util.LuceneTestCase[] luceneTestCaseArray48 = new org.apache.lucene.util.LuceneTestCase[] {};
        java.util.Set<org.apache.lucene.util.LuceneTestCase> luceneTestCaseSet49 = org.apache.lucene.util.LuceneTestCase.asSet(luceneTestCaseArray48);
        org.junit.Assert.assertEquals("tests.failfast", (java.lang.Object[]) serializableArray20, (java.lang.Object[]) luceneTestCaseArray48);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) throttlingArray8, (java.lang.Object[]) luceneTestCaseArray48);
        java.io.Serializable[] serializableArray53 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet54 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray53);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray55 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet56 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray55);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray53, (java.lang.Object[]) throttlingArray55);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray8, (java.lang.Object[]) serializableArray53);
        java.util.Locale locale60 = org.apache.lucene.util.LuceneTestCase.localeForName("europarl.lines.txt.gz");
        java.util.Locale locale62 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.failfast");
        java.util.Locale locale64 = org.apache.lucene.util.LuceneTestCase.localeForName("enwiki.random.lines.txt");
        java.util.Locale locale66 = org.apache.lucene.util.LuceneTestCase.localeForName("europarl.lines.txt.gz");
        java.util.Locale[] localeArray67 = new java.util.Locale[] { locale60, locale62, locale64, locale66 };
        java.util.Set<java.util.Locale> localeSet68 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray67);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", (java.lang.Object[]) throttlingArray8, (java.lang.Object[]) localeArray67);
    }

    @Test
    public void test4400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4400");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.badapples", (double) 1, (double) (short) 10, (double) (byte) 10);
    }

    @Test
    public void test4401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4401");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (float) 'a', (float) 0L, (float) (short) 1);
    }

    @Test
    public void test4402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4402");
        short[] shortArray3 = new short[] {};
        short[] shortArray4 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray3, shortArray4);
        short[] shortArray6 = new short[] {};
        short[] shortArray7 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray6, shortArray7);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray3, shortArray7);
        short[] shortArray13 = new short[] {};
        short[] shortArray14 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray13, shortArray14);
        short[] shortArray16 = new short[] {};
        short[] shortArray17 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray16, shortArray17);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray13, shortArray17);
        short[] shortArray21 = new short[] {};
        short[] shortArray22 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray21, shortArray22);
        short[] shortArray24 = new short[] {};
        short[] shortArray25 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray24, shortArray25);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray21, shortArray25);
        org.junit.Assert.assertArrayEquals("<unknown>", shortArray13, shortArray25);
        short[] shortArray32 = new short[] {};
        short[] shortArray33 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray32, shortArray33);
        short[] shortArray35 = new short[] {};
        short[] shortArray36 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray35, shortArray36);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray32, shortArray36);
        short[] shortArray40 = new short[] {};
        short[] shortArray41 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray40, shortArray41);
        short[] shortArray43 = new short[] {};
        short[] shortArray44 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray43, shortArray44);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray40, shortArray44);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray36, shortArray40);
        short[] shortArray48 = new short[] {};
        short[] shortArray49 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray48, shortArray49);
        org.junit.Assert.assertArrayEquals("hi!", shortArray36, shortArray48);
        org.junit.Assert.assertArrayEquals("tests.monster", shortArray25, shortArray48);
        org.junit.Assert.assertArrayEquals("<unknown>", shortArray3, shortArray25);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests55 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests55.tearDown();
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests55);
        org.junit.rules.TestRule testRule58 = kuromojiAnalysisTests55.ruleChain;
        org.junit.rules.TestRule testRule59 = kuromojiAnalysisTests55.ruleChain;
        kuromojiAnalysisTests55.assertPathHasBeenCleared("tests.failfast");
        org.junit.Assert.assertNotEquals("tests.monster", (java.lang.Object) "<unknown>", (java.lang.Object) kuromojiAnalysisTests55);
        org.apache.lucene.index.NumericDocValues numericDocValues65 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues66 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests55.assertDocValuesEquals("", (int) 'a', numericDocValues65, numericDocValues66);
    }

    @Test
    public void test4403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4403");
        java.lang.Object obj1 = null;
        java.lang.Object obj3 = null;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests4 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests4.tearDown();
        org.apache.lucene.index.IndexReader indexReader7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        org.apache.lucene.index.Terms terms9 = null;
        kuromojiAnalysisTests4.assertTermsEquals("tests.failfast", indexReader7, terms8, terms9, false);
        kuromojiAnalysisTests4.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        kuromojiAnalysisTests4.assertTermsEquals("hi!", indexReader14, terms15, terms16, true);
        kuromojiAnalysisTests4.setUp();
        kuromojiAnalysisTests4.tearDown();
        kuromojiAnalysisTests4.resetCheckIndexStatus();
        org.junit.rules.TestRule testRule22 = kuromojiAnalysisTests4.ruleChain;
        org.junit.Assert.assertNotSame(obj3, (java.lang.Object) kuromojiAnalysisTests4);
        org.junit.rules.RuleChain ruleChain24 = kuromojiAnalysisTests4.failureAndSuccessEvents;
        kuromojiAnalysisTests4.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests4.ensureCheckIndexPassed();
        kuromojiAnalysisTests4.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        kuromojiAnalysisTests4.assertDocsEnumEquals("tests.awaitsfix", postingsEnum29, postingsEnum30, false);
        kuromojiAnalysisTests4.resetCheckIndexStatus();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests34.tearDown();
        org.apache.lucene.index.IndexReader indexReader37 = null;
        org.apache.lucene.index.Terms terms38 = null;
        org.apache.lucene.index.Terms terms39 = null;
        kuromojiAnalysisTests34.assertTermsEquals("tests.failfast", indexReader37, terms38, terms39, false);
        kuromojiAnalysisTests34.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests34.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests34.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests34.ensureCleanedUp();
        org.junit.Assert.assertNotEquals("tests.awaitsfix", (java.lang.Object) kuromojiAnalysisTests4, (java.lang.Object) kuromojiAnalysisTests34);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.failfast", obj1, (java.lang.Object) kuromojiAnalysisTests4);
    }

    @Test
    public void test4404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4404");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.slow", (float) 3, (float) 0, (float) (short) 0);
    }

    @Test
    public void test4405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4405");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.junit.rules.TestRule testRule10 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        int[] intArray15 = new int[] {};
        int[] intArray16 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray15, intArray16);
        int[] intArray20 = new int[] {};
        int[] intArray21 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray20, intArray21);
        int[] intArray23 = new int[] {};
        org.junit.Assert.assertArrayEquals(intArray20, intArray23);
        int[] intArray25 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray23, intArray25);
        int[] intArray29 = new int[] {};
        int[] intArray30 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray29, intArray30);
        int[] intArray32 = new int[] {};
        org.junit.Assert.assertArrayEquals(intArray29, intArray32);
        int[] intArray34 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray32, intArray34);
        org.junit.Assert.assertArrayEquals(intArray23, intArray34);
        org.junit.Assert.assertArrayEquals("random", intArray16, intArray23);
        int[] intArray39 = new int[] {};
        int[] intArray40 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray39, intArray40);
        org.junit.Assert.assertNotNull((java.lang.Object) intArray39);
        org.junit.Assert.assertArrayEquals("tests.nightly", intArray16, intArray39);
        int[] intArray46 = new int[] {};
        int[] intArray47 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray46, intArray47);
        int[] intArray49 = new int[] {};
        org.junit.Assert.assertArrayEquals(intArray46, intArray49);
        int[] intArray51 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray49, intArray51);
        org.junit.Assert.assertArrayEquals(intArray39, intArray51);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) intArray51);
    }

    @Test
    public void test4406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4406");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", (float) 4, (float) (byte) 1, (float) (byte) 1);
    }

    @Test
    public void test4407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4407");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule1 = kuromojiAnalysisTests0.ruleChain;
        org.junit.rules.TestRule testRule2 = null;
        org.junit.rules.RuleChain ruleChain3 = org.junit.rules.RuleChain.outerRule(testRule2);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain3;
        org.junit.rules.TestRule testRule5 = null;
        org.junit.rules.RuleChain ruleChain6 = org.junit.rules.RuleChain.outerRule(testRule5);
        org.junit.rules.RuleChain ruleChain7 = ruleChain3.around((org.junit.rules.TestRule) ruleChain6);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain3;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain3;
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain3;
        org.junit.rules.RuleChain ruleChain11 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain3);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests12.tearDown();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests12.assertTermsEquals("tests.failfast", indexReader15, terms16, terms17, false);
        kuromojiAnalysisTests12.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests12.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule23 = kuromojiAnalysisTests12.ruleChain;
        org.junit.rules.RuleChain ruleChain24 = kuromojiAnalysisTests12.failureAndSuccessEvents;
        java.lang.Object obj25 = null;
        org.junit.Assert.assertNotEquals((java.lang.Object) ruleChain24, obj25);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests27 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests27.tearDown();
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.Terms terms31 = null;
        org.apache.lucene.index.Terms terms32 = null;
        kuromojiAnalysisTests27.assertTermsEquals("tests.failfast", indexReader30, terms31, terms32, false);
        kuromojiAnalysisTests27.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests27.ensureAllSearchContextsReleased();
        java.lang.String str38 = kuromojiAnalysisTests27.getTestName();
        kuromojiAnalysisTests27.assertPathHasBeenCleared("enwiki.random.lines.txt");
        org.junit.rules.RuleChain ruleChain41 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain42 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain41);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests43 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule44 = kuromojiAnalysisTests43.ruleChain;
        org.junit.rules.RuleChain ruleChain45 = ruleChain42.around(testRule44);
        org.junit.rules.RuleChain ruleChain46 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain45);
        org.apache.lucene.search.QueryCachingPolicy queryCachingPolicy49 = org.apache.lucene.util.LuceneTestCase.MAYBE_CACHE_POLICY;
        org.junit.rules.TestRule testRule50 = null;
        org.junit.rules.RuleChain ruleChain51 = org.junit.rules.RuleChain.outerRule(testRule50);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain51;
        org.junit.rules.TestRule testRule53 = null;
        org.junit.rules.RuleChain ruleChain54 = org.junit.rules.RuleChain.outerRule(testRule53);
        org.junit.rules.RuleChain ruleChain55 = ruleChain51.around((org.junit.rules.TestRule) ruleChain54);
        org.junit.Assert.assertNotSame((java.lang.Object) queryCachingPolicy49, (java.lang.Object) ruleChain55);
        org.junit.rules.RuleChain ruleChain57 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain58 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain57);
        org.junit.rules.RuleChain ruleChain59 = ruleChain55.around((org.junit.rules.TestRule) ruleChain57);
        org.junit.Assert.assertNotSame("tests.slow", (java.lang.Object) "tests.badapples", (java.lang.Object) ruleChain55);
        org.junit.rules.RuleChain ruleChain61 = ruleChain46.around((org.junit.rules.TestRule) ruleChain55);
        kuromojiAnalysisTests27.failureAndSuccessEvents = ruleChain46;
        org.junit.rules.RuleChain ruleChain63 = ruleChain24.around((org.junit.rules.TestRule) ruleChain46);
        org.junit.rules.RuleChain ruleChain64 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain46);
        org.junit.rules.RuleChain ruleChain65 = ruleChain3.around((org.junit.rules.TestRule) ruleChain46);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests66 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests66.tearDown();
        org.apache.lucene.index.IndexReader indexReader69 = null;
        org.apache.lucene.index.Terms terms70 = null;
        org.apache.lucene.index.Terms terms71 = null;
        kuromojiAnalysisTests66.assertTermsEquals("tests.failfast", indexReader69, terms70, terms71, false);
        kuromojiAnalysisTests66.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader76 = null;
        org.apache.lucene.index.Terms terms77 = null;
        org.apache.lucene.index.Terms terms78 = null;
        kuromojiAnalysisTests66.assertTermsEquals("hi!", indexReader76, terms77, terms78, true);
        kuromojiAnalysisTests66.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests66.ensureAllSearchContextsReleased();
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests66);
        org.apache.lucene.index.IndexReader indexReader85 = null;
        org.apache.lucene.index.Terms terms86 = null;
        org.apache.lucene.index.Terms terms87 = null;
        kuromojiAnalysisTests66.assertTermsEquals("", indexReader85, terms86, terms87, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) ruleChain3, (java.lang.Object) terms86);
    }

    @Test
    public void test4408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4408");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests4 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule5 = kuromojiAnalysisTests4.ruleChain;
        kuromojiAnalysisTests4.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests8 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests8.tearDown();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests8.assertTermsEquals("tests.failfast", indexReader11, terms12, terms13, false);
        org.junit.rules.RuleChain ruleChain16 = kuromojiAnalysisTests8.failureAndSuccessEvents;
        org.junit.Assert.assertNotSame("hi!", (java.lang.Object) ruleChain16, (java.lang.Object) "tests.weekly");
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests4, (java.lang.Object) ruleChain16);
        org.junit.Assert.assertNotSame("", (java.lang.Object) "tests.awaitsfix", (java.lang.Object) kuromojiAnalysisTests4);
        java.lang.String str21 = kuromojiAnalysisTests4.getTestName();
        org.junit.rules.TestRule testRule22 = kuromojiAnalysisTests4.ruleChain;
        org.junit.Assert.assertNotNull("hi!", (java.lang.Object) testRule22);
        org.junit.rules.TestRule testRule24 = null;
        org.junit.rules.RuleChain ruleChain25 = org.junit.rules.RuleChain.outerRule(testRule24);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain25;
        org.junit.rules.TestRule testRule27 = null;
        org.junit.rules.RuleChain ruleChain28 = org.junit.rules.RuleChain.outerRule(testRule27);
        org.junit.rules.RuleChain ruleChain29 = ruleChain25.around((org.junit.rules.TestRule) ruleChain28);
        org.junit.rules.RuleChain ruleChain30 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain25);
        org.junit.rules.RuleChain ruleChain31 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain25);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests32 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule33 = kuromojiAnalysisTests32.ruleChain;
        org.junit.rules.TestRule testRule34 = null;
        org.junit.rules.RuleChain ruleChain35 = org.junit.rules.RuleChain.outerRule(testRule34);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain35;
        org.junit.rules.TestRule testRule37 = null;
        org.junit.rules.RuleChain ruleChain38 = org.junit.rules.RuleChain.outerRule(testRule37);
        org.junit.rules.RuleChain ruleChain39 = ruleChain35.around((org.junit.rules.TestRule) ruleChain38);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain35;
        kuromojiAnalysisTests32.failureAndSuccessEvents = ruleChain35;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests42 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule43 = kuromojiAnalysisTests42.ruleChain;
        org.junit.rules.TestRule testRule44 = null;
        org.junit.rules.RuleChain ruleChain45 = org.junit.rules.RuleChain.outerRule(testRule44);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain45;
        org.junit.rules.TestRule testRule47 = null;
        org.junit.rules.RuleChain ruleChain48 = org.junit.rules.RuleChain.outerRule(testRule47);
        org.junit.rules.RuleChain ruleChain49 = ruleChain45.around((org.junit.rules.TestRule) ruleChain48);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain45;
        kuromojiAnalysisTests42.failureAndSuccessEvents = ruleChain45;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests52 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests52.tearDown();
        org.apache.lucene.index.IndexReader indexReader55 = null;
        org.apache.lucene.index.Terms terms56 = null;
        org.apache.lucene.index.Terms terms57 = null;
        kuromojiAnalysisTests52.assertTermsEquals("tests.failfast", indexReader55, terms56, terms57, false);
        org.junit.rules.RuleChain ruleChain60 = kuromojiAnalysisTests52.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement61 = null;
        org.junit.runner.Description description62 = null;
        org.junit.runners.model.Statement statement63 = ruleChain60.apply(statement61, description62);
        org.junit.rules.RuleChain ruleChain64 = ruleChain45.around((org.junit.rules.TestRule) ruleChain60);
        org.junit.rules.TestRule testRule67 = null;
        org.junit.rules.RuleChain ruleChain68 = org.junit.rules.RuleChain.outerRule(testRule67);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain68;
        org.junit.rules.TestRule testRule70 = null;
        org.junit.rules.RuleChain ruleChain71 = org.junit.rules.RuleChain.outerRule(testRule70);
        org.junit.rules.RuleChain ruleChain72 = ruleChain68.around((org.junit.rules.TestRule) ruleChain71);
        org.junit.Assert.assertNotSame("tests.maxfailures", (java.lang.Object) "tests.weekly", (java.lang.Object) ruleChain71);
        org.junit.rules.TestRule testRule74 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.junit.rules.RuleChain ruleChain75 = ruleChain71.around(testRule74);
        org.junit.rules.RuleChain ruleChain76 = ruleChain64.around((org.junit.rules.TestRule) ruleChain71);
        org.junit.rules.RuleChain ruleChain77 = ruleChain35.around((org.junit.rules.TestRule) ruleChain64);
        org.junit.rules.RuleChain ruleChain78 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain35);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests79 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests79.tearDown();
        org.apache.lucene.index.IndexReader indexReader82 = null;
        org.apache.lucene.index.Terms terms83 = null;
        org.apache.lucene.index.Terms terms84 = null;
        kuromojiAnalysisTests79.assertTermsEquals("tests.failfast", indexReader82, terms83, terms84, false);
        kuromojiAnalysisTests79.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests79.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule90 = kuromojiAnalysisTests79.ruleChain;
        org.junit.rules.RuleChain ruleChain91 = kuromojiAnalysisTests79.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain92 = ruleChain35.around((org.junit.rules.TestRule) ruleChain91);
        org.junit.rules.RuleChain ruleChain93 = ruleChain31.around((org.junit.rules.TestRule) ruleChain91);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("tests.monster", (java.lang.Object) testRule22, (java.lang.Object) ruleChain93);
    }

    @Test
    public void test4409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4409");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.weekly", (double) (byte) 0, (double) (-1L), (double) 10.0f);
    }

    @Test
    public void test4410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4410");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 100, 0.0d);
    }

    @Test
    public void test4411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4411");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("europarl.lines.txt.gz", (double) (byte) 100, (double) (short) 0, (double) (short) 1);
    }

    @Test
    public void test4412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4412");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Fields fields16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("random", indexReader15, fields16, fields17, false);
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.Fields fields22 = null;
        org.apache.lucene.index.Fields fields23 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("", indexReader21, fields22, fields23, false);
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("", postingsEnum27, postingsEnum28);
    }

    @Test
    public void test4413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4413");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        org.apache.lucene.index.Terms terms19 = null;
        kuromojiAnalysisTests1.assertTermsEquals("<unknown>", indexReader17, terms18, terms19, false);
        org.junit.rules.RuleChain ruleChain22 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        int[] intArray26 = new int[] {};
        int[] intArray27 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray26, intArray27);
        int[] intArray29 = new int[] {};
        org.junit.Assert.assertArrayEquals(intArray26, intArray29);
        int[] intArray31 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray29, intArray31);
        int[] intArray34 = new int[] {};
        int[] intArray35 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray34, intArray35);
        int[] intArray37 = new int[] {};
        org.junit.Assert.assertArrayEquals(intArray34, intArray37);
        org.junit.Assert.assertArrayEquals(intArray29, intArray34);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("hi!", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) intArray29);
    }

    @Test
    public void test4414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4414");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) "tests.awaitsfix");
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.setUp();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule20 = kuromojiAnalysisTests0.ruleChain;
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum24 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.failfast", indexReader22, (int) '4', postingsEnum24, postingsEnum25);
        org.apache.lucene.index.NumericDocValues numericDocValues29 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues30 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("<unknown>", (int) ' ', numericDocValues29, numericDocValues30);
    }

    @Test
    public void test4415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4415");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.junit.rules.RuleChain ruleChain2 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain3 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain4 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain3);
        org.junit.rules.RuleChain ruleChain5 = ruleChain2.around((org.junit.rules.TestRule) ruleChain4);
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) ruleChain5);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        java.lang.Object obj8 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests0, obj8);
    }

    @Test
    public void test4416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4416");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule11 = kuromojiAnalysisTests0.ruleChain;
        org.junit.rules.RuleChain ruleChain12 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum16 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum17 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("", indexReader14, (int) '#', postingsEnum16, postingsEnum17);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 10);
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("europarl.lines.txt.gz", indexReader23, (int) (short) 1, postingsEnum25, postingsEnum26);
        org.junit.rules.TestRule testRule28 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.ensureCleanedUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test4417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4417");
        org.apache.lucene.util.LuceneTestCase[] luceneTestCaseArray1 = new org.apache.lucene.util.LuceneTestCase[] {};
        java.util.Set<org.apache.lucene.util.LuceneTestCase> luceneTestCaseSet2 = org.apache.lucene.util.LuceneTestCase.asSet(luceneTestCaseArray1);
        java.io.Serializable[] serializableArray4 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet5 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray4);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray6 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet7 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray6);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray4, (java.lang.Object[]) throttlingArray6);
        org.junit.Assert.assertArrayEquals("tests.failfast", (java.lang.Object[]) luceneTestCaseArray1, (java.lang.Object[]) serializableArray4);
        java.lang.Class<?> wildcardClass10 = serializableArray4.getClass();
        java.lang.Object obj11 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) serializableArray4, obj11);
    }

    @Test
    public void test4418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4418");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (short) 100);
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests0);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests12.tearDown();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests12.assertTermsEquals("tests.failfast", indexReader15, terms16, terms17, false);
        kuromojiAnalysisTests12.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests12.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests12.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests12.ensureCheckIndexPassed();
        kuromojiAnalysisTests12.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain28 = kuromojiAnalysisTests12.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain28;
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) -1);
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        java.util.Locale locale36 = org.apache.lucene.util.LuceneTestCase.localeForName("europarl.lines.txt.gz");
        java.util.Locale locale38 = org.apache.lucene.util.LuceneTestCase.localeForName("tests.failfast");
        java.util.Locale locale40 = org.apache.lucene.util.LuceneTestCase.localeForName("enwiki.random.lines.txt");
        java.util.Locale locale42 = org.apache.lucene.util.LuceneTestCase.localeForName("europarl.lines.txt.gz");
        java.util.Locale[] localeArray43 = new java.util.Locale[] { locale36, locale38, locale40, locale42 };
        java.util.Set<java.util.Locale> localeSet44 = org.apache.lucene.util.LuceneTestCase.asSet(localeArray43);
        java.util.List<java.util.Locale> localeList45 = org.elasticsearch.test.ESTestCase.randomSubsetOf(4, localeArray43);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) localeArray43);
    }

    @Test
    public void test4419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4419");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain11 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        org.junit.rules.RuleChain ruleChain13 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests14 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests14.tearDown();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        org.apache.lucene.index.Terms terms19 = null;
        kuromojiAnalysisTests14.assertTermsEquals("tests.failfast", indexReader17, terms18, terms19, false);
        org.junit.rules.RuleChain ruleChain22 = kuromojiAnalysisTests14.failureAndSuccessEvents;
        kuromojiAnalysisTests14.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        kuromojiAnalysisTests14.assertDocsSkippingEquals("hi!", indexReader25, (int) '4', postingsEnum27, postingsEnum28, true);
        java.lang.String str31 = kuromojiAnalysisTests14.getTestName();
        org.junit.rules.TestRule testRule32 = kuromojiAnalysisTests14.ruleChain;
        org.junit.Assert.assertNotSame("tests.slow", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests14);
        kuromojiAnalysisTests14.assertPathHasBeenCleared("europarl.lines.txt.gz");
        org.apache.lucene.index.IndexReader indexReader37 = null;
        org.apache.lucene.index.Terms terms38 = null;
        org.apache.lucene.index.Terms terms39 = null;
        kuromojiAnalysisTests14.assertTermsEquals("tests.monster", indexReader37, terms38, terms39, false);
        org.junit.rules.RuleChain ruleChain42 = null;
        kuromojiAnalysisTests14.failureAndSuccessEvents = ruleChain42;
        org.apache.lucene.index.IndexReader indexReader45 = null;
        org.apache.lucene.index.Terms terms46 = null;
        org.apache.lucene.index.Terms terms47 = null;
        kuromojiAnalysisTests14.assertTermsEquals("tests.awaitsfix", indexReader45, terms46, terms47, false);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests50 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests50.tearDown();
        org.apache.lucene.index.IndexReader indexReader53 = null;
        org.apache.lucene.index.Terms terms54 = null;
        org.apache.lucene.index.Terms terms55 = null;
        kuromojiAnalysisTests50.assertTermsEquals("tests.failfast", indexReader53, terms54, terms55, false);
        kuromojiAnalysisTests50.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain59 = kuromojiAnalysisTests50.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests60 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests60.tearDown();
        org.apache.lucene.index.IndexReader indexReader63 = null;
        org.apache.lucene.index.Terms terms64 = null;
        org.apache.lucene.index.Terms terms65 = null;
        kuromojiAnalysisTests60.assertTermsEquals("tests.failfast", indexReader63, terms64, terms65, false);
        kuromojiAnalysisTests60.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader70 = null;
        org.apache.lucene.index.Terms terms71 = null;
        org.apache.lucene.index.Terms terms72 = null;
        kuromojiAnalysisTests60.assertTermsEquals("hi!", indexReader70, terms71, terms72, true);
        java.lang.String str75 = kuromojiAnalysisTests60.getTestName();
        org.apache.lucene.index.IndexReader indexReader77 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum79 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum80 = null;
        kuromojiAnalysisTests60.assertDocsSkippingEquals("", indexReader77, (int) (byte) 0, postingsEnum79, postingsEnum80, false);
        kuromojiAnalysisTests60.ensureCheckIndexPassed();
        org.junit.rules.RuleChain ruleChain84 = kuromojiAnalysisTests60.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader86 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum88 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum89 = null;
        kuromojiAnalysisTests60.assertPositionsSkippingEquals("random", indexReader86, (int) (short) 0, postingsEnum88, postingsEnum89);
        kuromojiAnalysisTests60.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests60.ensureCheckIndexPassed();
        org.junit.rules.TestRule testRule93 = kuromojiAnalysisTests60.ruleChain;
        org.junit.rules.RuleChain ruleChain94 = ruleChain59.around(testRule93);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests14, (java.lang.Object) testRule93);
    }

    @Test
    public void test4420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4420");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests3 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests3.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests3, (java.lang.Object) "");
        kuromojiAnalysisTests3.setUp();
        kuromojiAnalysisTests3.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain9 = kuromojiAnalysisTests3.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests10 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests10.tearDown();
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.Terms terms14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        kuromojiAnalysisTests10.assertTermsEquals("tests.failfast", indexReader13, terms14, terms15, false);
        kuromojiAnalysisTests10.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        org.apache.lucene.index.Terms terms22 = null;
        kuromojiAnalysisTests10.assertTermsEquals("hi!", indexReader20, terms21, terms22, true);
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        kuromojiAnalysisTests10.assertDocsSkippingEquals("hi!", indexReader26, (int) (byte) 1, postingsEnum28, postingsEnum29, false);
        org.junit.rules.RuleChain ruleChain32 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain33 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain32);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule35 = kuromojiAnalysisTests34.ruleChain;
        org.junit.rules.RuleChain ruleChain36 = ruleChain33.around(testRule35);
        kuromojiAnalysisTests10.failureAndSuccessEvents = ruleChain36;
        java.util.concurrent.ExecutorService executorService38 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray39 = new java.util.concurrent.ExecutorService[] { executorService38 };
        boolean boolean40 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray39);
        boolean boolean41 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray39);
        boolean boolean42 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray39);
        boolean boolean43 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray39);
        org.junit.Assert.assertNotSame((java.lang.Object) ruleChain36, (java.lang.Object) executorServiceArray39);
        org.junit.Assert.assertNotEquals("tests.nightly", (java.lang.Object) ruleChain9, (java.lang.Object) ruleChain36);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests46 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests46.setUp();
        kuromojiAnalysisTests46.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests49 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests49.tearDown();
        org.apache.lucene.index.IndexReader indexReader52 = null;
        org.apache.lucene.index.Terms terms53 = null;
        org.apache.lucene.index.Terms terms54 = null;
        kuromojiAnalysisTests49.assertTermsEquals("tests.failfast", indexReader52, terms53, terms54, false);
        kuromojiAnalysisTests49.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain59 = kuromojiAnalysisTests49.failureAndSuccessEvents;
        kuromojiAnalysisTests49.assertPathHasBeenCleared("tests.awaitsfix");
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests46, (java.lang.Object) "tests.awaitsfix");
        kuromojiAnalysisTests46.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule64 = kuromojiAnalysisTests46.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("<unknown>", (java.lang.Object) ruleChain9, (java.lang.Object) kuromojiAnalysisTests46);
    }

    @Test
    public void test4421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4421");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests1.assertTermsEquals("hi!", indexReader11, terms12, terms13, true);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.maxfailures");
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests20.tearDown();
        kuromojiAnalysisTests20.assertPathHasBeenCleared("hi!");
        org.junit.Assert.assertNotEquals("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) kuromojiAnalysisTests20);
        kuromojiAnalysisTests1.tearDown();
        org.junit.rules.TestRule testRule26 = kuromojiAnalysisTests1.ruleChain;
        org.junit.rules.RuleChain ruleChain27 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain28 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain27);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests29 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule30 = kuromojiAnalysisTests29.ruleChain;
        org.junit.rules.RuleChain ruleChain31 = ruleChain28.around(testRule30);
        org.junit.rules.RuleChain ruleChain32 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain31);
        org.junit.rules.TestRule testRule35 = null;
        org.junit.rules.RuleChain ruleChain36 = org.junit.rules.RuleChain.outerRule(testRule35);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain36;
        org.junit.rules.TestRule testRule38 = null;
        org.junit.rules.RuleChain ruleChain39 = org.junit.rules.RuleChain.outerRule(testRule38);
        org.junit.rules.RuleChain ruleChain40 = ruleChain36.around((org.junit.rules.TestRule) ruleChain39);
        org.junit.Assert.assertNotSame("tests.maxfailures", (java.lang.Object) "tests.weekly", (java.lang.Object) ruleChain39);
        org.junit.rules.TestRule testRule42 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.junit.rules.RuleChain ruleChain43 = ruleChain39.around(testRule42);
        org.junit.rules.RuleChain ruleChain44 = ruleChain31.around((org.junit.rules.TestRule) ruleChain43);
        double[] doubleArray45 = new double[] {};
        double[] doubleArray46 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray45, doubleArray46, (double) '#');
        double[] doubleArray49 = new double[] {};
        double[] doubleArray50 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray49, doubleArray50, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray45, doubleArray50, (double) 0.0f);
        org.junit.Assert.assertNotSame((java.lang.Object) ruleChain44, (java.lang.Object) 0.0f);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain44;
        org.apache.lucene.index.IndexReader indexReader58 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum60 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum61 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.weekly", indexReader58, (int) (short) 100, postingsEnum60, postingsEnum61, false);
        java.lang.Object obj64 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) "tests.weekly", obj64);
    }

    @Test
    public void test4422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4422");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain9 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain10 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain9);
        org.junit.rules.RuleChain ruleChain11 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain12 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain11);
        org.junit.rules.RuleChain ruleChain13 = ruleChain10.around((org.junit.rules.TestRule) ruleChain12);
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain10;
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.nightly", indexReader16, terms17, terms18, true);
        org.apache.lucene.index.PostingsEnum postingsEnum22 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum23 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("random", postingsEnum22, postingsEnum23);
    }

    @Test
    public void test4423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4423");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests0.assertTermsEquals("hi!", indexReader10, terms11, terms12, true);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.maxfailures");
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.badapples", postingsEnum20, postingsEnum21);
    }

    @Test
    public void test4424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4424");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        kuromojiAnalysisTests1.assertTermsEquals("hi!", indexReader11, terms12, terms13, true);
        java.lang.String str16 = kuromojiAnalysisTests1.getTestName();
        org.apache.lucene.index.IndexReader indexReader18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum21 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("", indexReader18, (int) (byte) 0, postingsEnum20, postingsEnum21, false);
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        org.junit.rules.RuleChain ruleChain25 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader27 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("random", indexReader27, (int) (short) 0, postingsEnum29, postingsEnum30);
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests1.ensureCheckIndexPassed();
        kuromojiAnalysisTests1.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.Terms terms37 = null;
        org.apache.lucene.index.Terms terms38 = null;
        kuromojiAnalysisTests1.assertTermsEquals("enwiki.random.lines.txt", indexReader36, terms37, terms38, true);
        org.junit.rules.TestRule testRule41 = kuromojiAnalysisTests1.ruleChain;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests42 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests42.tearDown();
        org.apache.lucene.index.IndexReader indexReader45 = null;
        org.apache.lucene.index.Terms terms46 = null;
        org.apache.lucene.index.Terms terms47 = null;
        kuromojiAnalysisTests42.assertTermsEquals("tests.failfast", indexReader45, terms46, terms47, false);
        kuromojiAnalysisTests42.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests42.setIndexWriterMaxDocs((int) (short) 100);
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests42);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests54 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests54.tearDown();
        org.apache.lucene.index.IndexReader indexReader57 = null;
        org.apache.lucene.index.Terms terms58 = null;
        org.apache.lucene.index.Terms terms59 = null;
        kuromojiAnalysisTests54.assertTermsEquals("tests.failfast", indexReader57, terms58, terms59, false);
        kuromojiAnalysisTests54.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests54.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests54.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests54.ensureCheckIndexPassed();
        kuromojiAnalysisTests54.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain70 = kuromojiAnalysisTests54.failureAndSuccessEvents;
        kuromojiAnalysisTests42.failureAndSuccessEvents = ruleChain70;
        org.junit.rules.TestRule testRule72 = kuromojiAnalysisTests42.ruleChain;
        org.apache.lucene.index.PostingsEnum postingsEnum74 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum75 = null;
        kuromojiAnalysisTests42.assertDocsEnumEquals("<unknown>", postingsEnum74, postingsEnum75, true);
        org.junit.rules.RuleChain ruleChain78 = kuromojiAnalysisTests42.failureAndSuccessEvents;
        org.junit.rules.TestRule testRule79 = kuromojiAnalysisTests42.ruleChain;
        org.junit.Assert.assertNotSame("", (java.lang.Object) testRule41, (java.lang.Object) kuromojiAnalysisTests42);
        kuromojiAnalysisTests42.resetCheckIndexStatus();
        java.lang.String str82 = kuromojiAnalysisTests42.getTestName();
        org.apache.lucene.index.PostingsEnum postingsEnum84 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum85 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests42.assertDocsAndPositionsEnumEquals("tests.monster", postingsEnum84, postingsEnum85);
    }

    @Test
    public void test4425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4425");
        org.junit.rules.RuleChain ruleChain1 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain2 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain1);
        org.junit.rules.RuleChain ruleChain3 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain4 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain3);
        org.junit.rules.RuleChain ruleChain5 = ruleChain2.around((org.junit.rules.TestRule) ruleChain4);
        org.junit.rules.RuleChain ruleChain6 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain7 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain6);
        org.junit.rules.RuleChain ruleChain8 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain9 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain8);
        org.junit.rules.RuleChain ruleChain10 = ruleChain7.around((org.junit.rules.TestRule) ruleChain9);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests13 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests13.tearDown();
        org.apache.lucene.index.IndexReader indexReader16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        kuromojiAnalysisTests13.assertTermsEquals("tests.failfast", indexReader16, terms17, terms18, false);
        kuromojiAnalysisTests13.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        org.apache.lucene.index.Terms terms25 = null;
        kuromojiAnalysisTests13.assertTermsEquals("hi!", indexReader23, terms24, terms25, true);
        kuromojiAnalysisTests13.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests13.assertPathHasBeenCleared("tests.maxfailures");
        kuromojiAnalysisTests13.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests32 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests32.tearDown();
        kuromojiAnalysisTests32.assertPathHasBeenCleared("hi!");
        org.junit.Assert.assertNotEquals("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests13, (java.lang.Object) kuromojiAnalysisTests32);
        org.junit.rules.TestRule testRule37 = null;
        org.junit.rules.RuleChain ruleChain38 = org.junit.rules.RuleChain.outerRule(testRule37);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain38;
        org.junit.rules.TestRule testRule40 = null;
        org.junit.rules.RuleChain ruleChain41 = org.junit.rules.RuleChain.outerRule(testRule40);
        org.junit.rules.RuleChain ruleChain42 = ruleChain38.around((org.junit.rules.TestRule) ruleChain41);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests13, (java.lang.Object) ruleChain38);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain38;
        java.lang.Object obj45 = null;
        org.junit.Assert.assertNotEquals("tests.nightly", (java.lang.Object) ruleChain38, obj45);
        org.junit.rules.RuleChain ruleChain47 = ruleChain10.around((org.junit.rules.TestRule) ruleChain38);
        org.junit.rules.RuleChain ruleChain48 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain49 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain48);
        org.junit.rules.RuleChain ruleChain50 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain51 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain50);
        org.junit.rules.RuleChain ruleChain52 = ruleChain49.around((org.junit.rules.TestRule) ruleChain51);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests55 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests55.tearDown();
        org.apache.lucene.index.IndexReader indexReader58 = null;
        org.apache.lucene.index.Terms terms59 = null;
        org.apache.lucene.index.Terms terms60 = null;
        kuromojiAnalysisTests55.assertTermsEquals("tests.failfast", indexReader58, terms59, terms60, false);
        kuromojiAnalysisTests55.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader65 = null;
        org.apache.lucene.index.Terms terms66 = null;
        org.apache.lucene.index.Terms terms67 = null;
        kuromojiAnalysisTests55.assertTermsEquals("hi!", indexReader65, terms66, terms67, true);
        kuromojiAnalysisTests55.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests55.assertPathHasBeenCleared("tests.maxfailures");
        kuromojiAnalysisTests55.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests74 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests74.tearDown();
        kuromojiAnalysisTests74.assertPathHasBeenCleared("hi!");
        org.junit.Assert.assertNotEquals("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests55, (java.lang.Object) kuromojiAnalysisTests74);
        org.junit.rules.TestRule testRule79 = null;
        org.junit.rules.RuleChain ruleChain80 = org.junit.rules.RuleChain.outerRule(testRule79);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain80;
        org.junit.rules.TestRule testRule82 = null;
        org.junit.rules.RuleChain ruleChain83 = org.junit.rules.RuleChain.outerRule(testRule82);
        org.junit.rules.RuleChain ruleChain84 = ruleChain80.around((org.junit.rules.TestRule) ruleChain83);
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests55, (java.lang.Object) ruleChain80);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain80;
        java.lang.Object obj87 = null;
        org.junit.Assert.assertNotEquals("tests.nightly", (java.lang.Object) ruleChain80, obj87);
        org.junit.rules.RuleChain ruleChain89 = ruleChain52.around((org.junit.rules.TestRule) ruleChain80);
        org.junit.rules.RuleChain ruleChain90 = ruleChain38.around((org.junit.rules.TestRule) ruleChain52);
        org.junit.rules.RuleChain ruleChain91 = ruleChain2.around((org.junit.rules.TestRule) ruleChain52);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests92 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.Assert.assertNotSame("tests.failfast", (java.lang.Object) ruleChain91, (java.lang.Object) kuromojiAnalysisTests92);
        kuromojiAnalysisTests92.resetCheckIndexStatus();
        kuromojiAnalysisTests92.setUp();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests92);
    }

    @Test
    public void test4426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4426");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests2 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests2.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        kuromojiAnalysisTests2.assertTermsEquals("tests.failfast", indexReader5, terms6, terms7, false);
        kuromojiAnalysisTests2.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests2.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests2.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests2.ensureCheckIndexPassed();
        kuromojiAnalysisTests2.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain18 = kuromojiAnalysisTests2.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests19 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests19.tearDown();
        org.apache.lucene.index.IndexReader indexReader22 = null;
        org.apache.lucene.index.Terms terms23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        kuromojiAnalysisTests19.assertTermsEquals("tests.failfast", indexReader22, terms23, terms24, false);
        kuromojiAnalysisTests19.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests19.ensureAllSearchContextsReleased();
        java.lang.String str30 = kuromojiAnalysisTests19.getTestName();
        org.junit.Assert.assertNotSame("hi!", (java.lang.Object) kuromojiAnalysisTests2, (java.lang.Object) str30);
        org.apache.lucene.index.IndexReader indexReader33 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum35 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum36 = null;
        kuromojiAnalysisTests2.assertPositionsSkippingEquals("tests.nightly", indexReader33, (int) (short) 10, postingsEnum35, postingsEnum36);
        org.junit.rules.TestRule testRule38 = kuromojiAnalysisTests2.ruleChain;
        org.apache.lucene.search.QueryCachingPolicy queryCachingPolicy39 = org.apache.lucene.util.LuceneTestCase.MAYBE_CACHE_POLICY;
        org.junit.rules.TestRule testRule40 = null;
        org.junit.rules.RuleChain ruleChain41 = org.junit.rules.RuleChain.outerRule(testRule40);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain41;
        org.junit.rules.TestRule testRule43 = null;
        org.junit.rules.RuleChain ruleChain44 = org.junit.rules.RuleChain.outerRule(testRule43);
        org.junit.rules.RuleChain ruleChain45 = ruleChain41.around((org.junit.rules.TestRule) ruleChain44);
        org.junit.Assert.assertNotSame((java.lang.Object) queryCachingPolicy39, (java.lang.Object) ruleChain45);
        org.junit.rules.RuleChain ruleChain47 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain48 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain47);
        org.junit.rules.RuleChain ruleChain49 = ruleChain45.around((org.junit.rules.TestRule) ruleChain47);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("enwiki.random.lines.txt", (java.lang.Object) testRule38, (java.lang.Object) ruleChain47);
    }

    @Test
    public void test4427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4427");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("hi!", (double) (short) 0, (double) 10, (double) 1);
    }

    @Test
    public void test4428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4428");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        org.junit.rules.RuleChain ruleChain9 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.overrideTestDefaultQueryCache();
        org.apache.lucene.search.QueryCachingPolicy queryCachingPolicy13 = org.apache.lucene.util.LuceneTestCase.MAYBE_CACHE_POLICY;
        org.junit.rules.TestRule testRule14 = null;
        org.junit.rules.RuleChain ruleChain15 = org.junit.rules.RuleChain.outerRule(testRule14);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain15;
        org.junit.rules.TestRule testRule17 = null;
        org.junit.rules.RuleChain ruleChain18 = org.junit.rules.RuleChain.outerRule(testRule17);
        org.junit.rules.RuleChain ruleChain19 = ruleChain15.around((org.junit.rules.TestRule) ruleChain18);
        org.junit.Assert.assertNotSame((java.lang.Object) queryCachingPolicy13, (java.lang.Object) ruleChain19);
        org.junit.rules.RuleChain ruleChain21 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain22 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain21);
        org.junit.rules.RuleChain ruleChain23 = ruleChain19.around((org.junit.rules.TestRule) ruleChain21);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain21;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests26 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests26.tearDown();
        org.apache.lucene.index.IndexReader indexReader29 = null;
        org.apache.lucene.index.Terms terms30 = null;
        org.apache.lucene.index.Terms terms31 = null;
        kuromojiAnalysisTests26.assertTermsEquals("tests.failfast", indexReader29, terms30, terms31, false);
        kuromojiAnalysisTests26.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests26.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule37 = kuromojiAnalysisTests26.ruleChain;
        org.junit.rules.RuleChain ruleChain38 = kuromojiAnalysisTests26.failureAndSuccessEvents;
        org.junit.Assert.assertNotEquals((java.lang.Object) "random", (java.lang.Object) ruleChain38);
        org.junit.rules.RuleChain ruleChain40 = ruleChain21.around((org.junit.rules.TestRule) ruleChain38);
        org.junit.Assert.assertNotNull((java.lang.Object) ruleChain21);
        org.junit.Assert.assertNotNull("tests.awaitsfix", (java.lang.Object) ruleChain21);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain21;
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain21;
        org.junit.rules.RuleChain ruleChain45 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain21);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests47 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests47.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests47, (java.lang.Object) "");
        java.lang.String str51 = kuromojiAnalysisTests47.getTestName();
        kuromojiAnalysisTests47.setIndexWriterMaxDocs((int) (short) 0);
        kuromojiAnalysisTests47.resetCheckIndexStatus();
        kuromojiAnalysisTests47.restoreIndexWriterMaxDocs();
        org.junit.rules.RuleChain ruleChain56 = kuromojiAnalysisTests47.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", (java.lang.Object) ruleChain45, (java.lang.Object) ruleChain56);
    }

    @Test
    public void test4429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4429");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.awaitsfix", 0.0d, (double) (-1L));
    }

    @Test
    public void test4430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4430");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Fields fields16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("random", indexReader15, fields16, fields17, false);
        org.junit.rules.TestRule testRule20 = kuromojiAnalysisTests0.ruleChain;
        long[] longArray22 = new long[] {};
        long[] longArray23 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray22, longArray23);
        long[] longArray27 = new long[] {};
        long[] longArray28 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray27, longArray28);
        long[] longArray31 = new long[] {};
        long[] longArray32 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray31, longArray32);
        org.junit.Assert.assertArrayEquals(longArray28, longArray32);
        long[] longArray36 = new long[] {};
        long[] longArray37 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray36, longArray37);
        long[] longArray40 = new long[] {};
        long[] longArray41 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray40, longArray41);
        org.junit.Assert.assertArrayEquals(longArray37, longArray41);
        org.junit.Assert.assertArrayEquals(longArray28, longArray37);
        long[] longArray46 = new long[] {};
        long[] longArray47 = new long[] {};
        org.junit.Assert.assertArrayEquals("", longArray46, longArray47);
        org.junit.Assert.assertArrayEquals("random", longArray37, longArray46);
        org.junit.Assert.assertArrayEquals(longArray22, longArray37);
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) longArray22);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) longArray22);
    }

    @Test
    public void test4431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4431");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((float) 3, 1.0f, (float) (byte) 1);
    }

    @Test
    public void test4432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4432");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        org.apache.lucene.index.Terms terms19 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader17, terms18, terms19, true);
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        java.lang.String str23 = kuromojiAnalysisTests0.getTestName();
        org.apache.lucene.index.NumericDocValues numericDocValues26 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues27 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("", 4, numericDocValues26, numericDocValues27);
    }

    @Test
    public void test4433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4433");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests0.assertTermsEquals("hi!", indexReader10, terms11, terms12, true);
        java.lang.String str15 = kuromojiAnalysisTests0.getTestName();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("", indexReader17, (int) (byte) 0, postingsEnum19, postingsEnum20, false);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.junit.rules.RuleChain ruleChain24 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum28 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("random", indexReader26, (int) (short) 0, postingsEnum28, postingsEnum29);
        org.junit.rules.TestRule testRule31 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.assertPathHasBeenCleared("enwiki.random.lines.txt");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests34 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests34.tearDown();
        org.apache.lucene.index.IndexReader indexReader37 = null;
        org.apache.lucene.index.Terms terms38 = null;
        org.apache.lucene.index.Terms terms39 = null;
        kuromojiAnalysisTests34.assertTermsEquals("tests.failfast", indexReader37, terms38, terms39, false);
        org.junit.rules.RuleChain ruleChain42 = kuromojiAnalysisTests34.failureAndSuccessEvents;
        org.junit.rules.TestRule testRule43 = kuromojiAnalysisTests34.ruleChain;
        org.junit.Assert.assertNotEquals((java.lang.Object) "enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests34);
        org.junit.rules.RuleChain ruleChain45 = kuromojiAnalysisTests34.failureAndSuccessEvents;
        kuromojiAnalysisTests34.ensureAllSearchContextsReleased();
        org.apache.lucene.index.IndexReader indexReader48 = null;
        org.apache.lucene.index.Terms terms49 = null;
        org.apache.lucene.index.Terms terms50 = null;
        kuromojiAnalysisTests34.assertTermsEquals("enwiki.random.lines.txt", indexReader48, terms49, terms50, true);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotNull((java.lang.Object) terms49);
    }

    @Test
    public void test4434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4434");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        kuromojiAnalysisTests1.tearDown();
        kuromojiAnalysisTests1.setIndexWriterMaxDocs(100);
        java.util.Locale locale17 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray18 = new java.util.Locale[] { locale17 };
        java.util.Locale locale20 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray21 = new java.util.Locale[] { locale20 };
        java.util.Locale locale23 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray24 = new java.util.Locale[] { locale23 };
        java.util.Locale locale26 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray27 = new java.util.Locale[] { locale26 };
        java.util.Locale locale29 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray30 = new java.util.Locale[] { locale29 };
        java.util.Locale locale32 = org.apache.lucene.util.LuceneTestCase.localeForName("");
        java.util.Locale[] localeArray33 = new java.util.Locale[] { locale32 };
        java.util.Locale[][] localeArray34 = new java.util.Locale[][] { localeArray18, localeArray21, localeArray24, localeArray27, localeArray30, localeArray33 };
        java.util.List<java.util.Locale[]> localeArrayList35 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (byte) 0, localeArray34);
        org.junit.Assert.assertNotEquals("tests.monster", (java.lang.Object) 100, (java.lang.Object) localeArray34);
        java.util.Set<java.lang.Cloneable[]> cloneableArraySet37 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Cloneable[][]) localeArray34);
        java.lang.Object[] objArray38 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) localeArray34, objArray38);
    }

    @Test
    public void test4435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4435");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests3 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests3.tearDown();
        org.apache.lucene.index.IndexReader indexReader6 = null;
        org.apache.lucene.index.Terms terms7 = null;
        org.apache.lucene.index.Terms terms8 = null;
        kuromojiAnalysisTests3.assertTermsEquals("tests.failfast", indexReader6, terms7, terms8, false);
        org.junit.rules.RuleChain ruleChain11 = kuromojiAnalysisTests3.failureAndSuccessEvents;
        kuromojiAnalysisTests3.ensureCleanedUp();
        kuromojiAnalysisTests3.tearDown();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Fields fields16 = null;
        org.apache.lucene.index.Fields fields17 = null;
        kuromojiAnalysisTests3.assertFieldsEquals("tests.nightly", indexReader15, fields16, fields17, false);
        java.io.Serializable[] serializableArray21 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet22 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray21);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray23 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet24 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray23);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray21, (java.lang.Object[]) throttlingArray23);
        java.io.Serializable[] serializableArray27 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet28 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray27);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray29 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet30 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray29);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray27, (java.lang.Object[]) throttlingArray29);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray21, (java.lang.Object[]) serializableArray27);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray34 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet35 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray34);
        java.io.Serializable[] serializableArray37 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet38 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray37);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray39 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet40 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray39);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray37, (java.lang.Object[]) throttlingArray39);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray34, (java.lang.Object[]) serializableArray37);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray44 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet45 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray44);
        java.io.Serializable[] serializableArray47 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet48 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray47);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray49 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet50 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray49);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray47, (java.lang.Object[]) throttlingArray49);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray44, (java.lang.Object[]) serializableArray47);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray37, (java.lang.Object[]) throttlingArray44);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray27, (java.lang.Object[]) throttlingArray44);
        org.junit.Assert.assertNotEquals((java.lang.Object) indexReader15, (java.lang.Object) serializableArray27);
        java.io.Serializable[] serializableArray58 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet59 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray58);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray60 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet61 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray60);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray58, (java.lang.Object[]) throttlingArray60);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray64 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet65 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray64);
        java.io.Serializable[] serializableArray67 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet68 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray67);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray69 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet70 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray69);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray67, (java.lang.Object[]) throttlingArray69);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray64, (java.lang.Object[]) serializableArray67);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray74 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet75 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray74);
        java.io.Serializable[] serializableArray77 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet78 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray77);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray79 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet80 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray79);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray77, (java.lang.Object[]) throttlingArray79);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray74, (java.lang.Object[]) serializableArray77);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray67, (java.lang.Object[]) throttlingArray74);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray58, (java.lang.Object[]) serializableArray67);
        org.junit.Assert.assertArrayEquals("tests.monster", (java.lang.Object[]) serializableArray27, (java.lang.Object[]) serializableArray58);
        org.elasticsearch.test.ESTestCase[] eSTestCaseArray87 = new org.elasticsearch.test.ESTestCase[] {};
        java.util.Set<org.elasticsearch.test.ESTestCase> eSTestCaseSet88 = org.apache.lucene.util.LuceneTestCase.asSet(eSTestCaseArray87);
        java.util.List<org.elasticsearch.test.ESTestCase> eSTestCaseList89 = org.elasticsearch.test.ESTestCase.randomSubsetOf(0, eSTestCaseArray87);
        org.junit.Assert.assertEquals("random", (java.lang.Object[]) serializableArray58, (java.lang.Object[]) eSTestCaseArray87);
        java.util.concurrent.ExecutorService[] executorServiceArray91 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean92 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray91);
        boolean boolean93 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray91);
        org.junit.Assert.assertEquals("tests.awaitsfix", (java.lang.Object[]) eSTestCaseArray87, (java.lang.Object[]) executorServiceArray91);
        java.lang.Object[] objArray95 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) eSTestCaseArray87, objArray95);
    }

    @Test
    public void test4436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4436");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests0.assertTermsEquals("hi!", indexReader10, terms11, terms12, true);
        java.lang.String str15 = kuromojiAnalysisTests0.getTestName();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests16 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests16.tearDown();
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.Terms terms20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        kuromojiAnalysisTests16.assertTermsEquals("tests.failfast", indexReader19, terms20, terms21, false);
        kuromojiAnalysisTests16.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests16.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule27 = kuromojiAnalysisTests16.ruleChain;
        org.junit.rules.RuleChain ruleChain28 = kuromojiAnalysisTests16.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain28;
        kuromojiAnalysisTests0.resetCheckIndexStatus();
        org.apache.lucene.index.IndexReader indexReader32 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum35 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.badapples", indexReader32, 2, postingsEnum34, postingsEnum35);
        org.junit.rules.TestRule testRule37 = kuromojiAnalysisTests0.ruleChain;
        kuromojiAnalysisTests0.setUp();
        short[] shortArray40 = new short[] {};
        short[] shortArray41 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray40, shortArray41);
        short[] shortArray45 = new short[] {};
        short[] shortArray46 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray45, shortArray46);
        short[] shortArray48 = new short[] {};
        short[] shortArray49 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray48, shortArray49);
        org.junit.Assert.assertArrayEquals("", shortArray46, shortArray48);
        short[] shortArray54 = new short[] {};
        short[] shortArray55 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray54, shortArray55);
        short[] shortArray58 = new short[] {};
        short[] shortArray59 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray58, shortArray59);
        short[] shortArray61 = new short[] {};
        short[] shortArray62 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray61, shortArray62);
        org.junit.Assert.assertArrayEquals("", shortArray59, shortArray61);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", shortArray54, shortArray59);
        short[] shortArray67 = new short[] {};
        short[] shortArray68 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray67, shortArray68);
        short[] shortArray70 = new short[] {};
        short[] shortArray71 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray70, shortArray71);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray67, shortArray71);
        org.junit.Assert.assertArrayEquals("tests.nightly", shortArray54, shortArray67);
        org.junit.Assert.assertArrayEquals("random", shortArray46, shortArray67);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", shortArray40, shortArray46);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) shortArray40);
    }

    @Test
    public void test4437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4437");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (short) 100);
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests0);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests12.tearDown();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests12.assertTermsEquals("tests.failfast", indexReader15, terms16, terms17, false);
        kuromojiAnalysisTests12.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests12.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests12.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests12.ensureCheckIndexPassed();
        kuromojiAnalysisTests12.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain28 = kuromojiAnalysisTests12.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain28;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests30 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests30.tearDown();
        org.apache.lucene.index.IndexReader indexReader33 = null;
        org.apache.lucene.index.Terms terms34 = null;
        org.apache.lucene.index.Terms terms35 = null;
        kuromojiAnalysisTests30.assertTermsEquals("tests.failfast", indexReader33, terms34, terms35, false);
        kuromojiAnalysisTests30.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.PostingsEnum postingsEnum40 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        kuromojiAnalysisTests30.assertDocsEnumEquals("europarl.lines.txt.gz", postingsEnum40, postingsEnum41, false);
        java.lang.String str44 = kuromojiAnalysisTests30.getTestName();
        org.junit.Assert.assertNotSame((java.lang.Object) ruleChain28, (java.lang.Object) kuromojiAnalysisTests30);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests46 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests46.tearDown();
        org.apache.lucene.index.IndexReader indexReader49 = null;
        org.apache.lucene.index.Terms terms50 = null;
        org.apache.lucene.index.Terms terms51 = null;
        kuromojiAnalysisTests46.assertTermsEquals("tests.failfast", indexReader49, terms50, terms51, false);
        kuromojiAnalysisTests46.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests46.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule57 = kuromojiAnalysisTests46.ruleChain;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) ruleChain28, (java.lang.Object) testRule57);
    }

    @Test
    public void test4438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4438");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.badapples", (-1L), (long) (short) -1);
    }

    @Test
    public void test4439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4439");
        java.lang.Object obj1 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotNull("tests.slow", obj1);
    }

    @Test
    public void test4440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4440");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("<unknown>", indexReader12, (-1), postingsEnum14, postingsEnum15);
        org.apache.lucene.index.PostingsEnum postingsEnum18 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.weekly", postingsEnum18, postingsEnum19, true);
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        org.apache.lucene.index.Terms terms25 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader23, terms24, terms25, false);
        org.apache.lucene.index.PostingsEnum postingsEnum29 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum30 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.badapples", postingsEnum29, postingsEnum30);
    }

    @Test
    public void test4441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4441");
        char[] charArray5 = new char[] {};
        char[] charArray6 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray5, charArray6);
        char[] charArray9 = new char[] {};
        char[] charArray10 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray9, charArray10);
        char[] charArray13 = new char[] {};
        char[] charArray14 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray13, charArray14);
        org.junit.Assert.assertArrayEquals(charArray10, charArray14);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray6, charArray10);
        char[] charArray19 = new char[] {};
        char[] charArray20 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray19, charArray20);
        char[] charArray23 = new char[] {};
        char[] charArray24 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray23, charArray24);
        org.junit.Assert.assertArrayEquals(charArray20, charArray24);
        char[] charArray29 = new char[] {};
        char[] charArray30 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray29, charArray30);
        char[] charArray33 = new char[] {};
        char[] charArray34 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray33, charArray34);
        char[] charArray37 = new char[] {};
        char[] charArray38 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray37, charArray38);
        org.junit.Assert.assertArrayEquals(charArray34, charArray38);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray30, charArray34);
        org.junit.Assert.assertArrayEquals(charArray20, charArray34);
        org.junit.Assert.assertArrayEquals("hi!", charArray10, charArray34);
        char[] charArray45 = new char[] {};
        char[] charArray46 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray45, charArray46);
        char[] charArray49 = new char[] {};
        char[] charArray50 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray49, charArray50);
        org.junit.Assert.assertArrayEquals(charArray46, charArray50);
        org.junit.Assert.assertArrayEquals(charArray34, charArray50);
        char[] charArray55 = new char[] {};
        char[] charArray56 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray55, charArray56);
        char[] charArray59 = new char[] {};
        char[] charArray60 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray59, charArray60);
        org.junit.Assert.assertArrayEquals(charArray56, charArray60);
        org.junit.Assert.assertArrayEquals("tests.nightly", charArray50, charArray56);
        char[] charArray64 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", charArray56, charArray64);
    }

    @Test
    public void test4442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4442");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.junit.rules.RuleChain ruleChain8 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader11 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum13 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("hi!", indexReader11, (int) '4', postingsEnum13, postingsEnum14, true);
        org.apache.lucene.index.NumericDocValues numericDocValues19 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues20 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.badapples", 10, numericDocValues19, numericDocValues20);
    }

    @Test
    public void test4443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4443");
        double[] doubleArray4 = new double[] { (short) 100, (short) 100 };
        double[] doubleArray7 = new double[] { (short) 100, (short) 100 };
        double[] doubleArray10 = new double[] { (short) 100, (short) 100 };
        double[] doubleArray13 = new double[] { (short) 100, (short) 100 };
        double[][] doubleArray14 = new double[][] { doubleArray4, doubleArray7, doubleArray10, doubleArray13 };
        double[] doubleArray17 = new double[] { (short) 100, (short) 100 };
        double[] doubleArray20 = new double[] { (short) 100, (short) 100 };
        double[] doubleArray23 = new double[] { (short) 100, (short) 100 };
        double[] doubleArray26 = new double[] { (short) 100, (short) 100 };
        double[][] doubleArray27 = new double[][] { doubleArray17, doubleArray20, doubleArray23, doubleArray26 };
        double[] doubleArray30 = new double[] { (short) 100, (short) 100 };
        double[] doubleArray33 = new double[] { (short) 100, (short) 100 };
        double[] doubleArray36 = new double[] { (short) 100, (short) 100 };
        double[] doubleArray39 = new double[] { (short) 100, (short) 100 };
        double[][] doubleArray40 = new double[][] { doubleArray30, doubleArray33, doubleArray36, doubleArray39 };
        double[] doubleArray43 = new double[] { (short) 100, (short) 100 };
        double[] doubleArray46 = new double[] { (short) 100, (short) 100 };
        double[] doubleArray49 = new double[] { (short) 100, (short) 100 };
        double[] doubleArray52 = new double[] { (short) 100, (short) 100 };
        double[][] doubleArray53 = new double[][] { doubleArray43, doubleArray46, doubleArray49, doubleArray52 };
        double[][][] doubleArray54 = new double[][][] { doubleArray14, doubleArray27, doubleArray40, doubleArray53 };
        java.util.Set<double[][]> doubleArraySet55 = org.apache.lucene.util.LuceneTestCase.asSet(doubleArray54);
        java.util.Set<java.io.Serializable[]> serializableArraySet56 = org.apache.lucene.util.LuceneTestCase.asSet((java.io.Serializable[][]) doubleArray54);
        java.util.List<java.lang.Cloneable[]> cloneableArrayList57 = org.elasticsearch.test.ESTestCase.randomSubsetOf(0, (java.lang.Cloneable[][]) doubleArray54);
        long[][][] longArray58 = new long[][][] {};
        java.util.Set<long[][]> longArraySet59 = org.apache.lucene.util.LuceneTestCase.asSet(longArray58);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", (java.lang.Object[]) doubleArray54, (java.lang.Object[]) longArray58);
    }

    @Test
    public void test4444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4444");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((-1L), 1L);
    }

    @Test
    public void test4445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4445");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", (-1L), 100L);
    }

    @Test
    public void test4446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4446");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.nightly", 1.0d, (double) 5);
    }

    @Test
    public void test4447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4447");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) 5, (long) 100);
    }

    @Test
    public void test4448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4448");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.badapples", (long) (byte) 1, (long) 3);
    }

    @Test
    public void test4449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4449");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (short) -1, 0.0d);
    }

    @Test
    public void test4450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4450");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum7 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum8 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.badapples", indexReader5, 10, postingsEnum7, postingsEnum8, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) (-1), (java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test4451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4451");
        char[] charArray4 = new char[] {};
        char[] charArray5 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray4, charArray5);
        char[] charArray8 = new char[] {};
        char[] charArray9 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray8, charArray9);
        org.junit.Assert.assertArrayEquals(charArray5, charArray9);
        char[] charArray14 = new char[] {};
        char[] charArray15 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray14, charArray15);
        char[] charArray18 = new char[] {};
        char[] charArray19 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray18, charArray19);
        char[] charArray22 = new char[] {};
        char[] charArray23 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray22, charArray23);
        org.junit.Assert.assertArrayEquals(charArray19, charArray23);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray15, charArray19);
        org.junit.Assert.assertArrayEquals(charArray5, charArray15);
        char[] charArray29 = new char[] {};
        char[] charArray30 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray29, charArray30);
        char[] charArray33 = new char[] {};
        char[] charArray34 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray33, charArray34);
        org.junit.Assert.assertArrayEquals(charArray30, charArray34);
        char[] charArray39 = new char[] {};
        char[] charArray40 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray39, charArray40);
        char[] charArray43 = new char[] {};
        char[] charArray44 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray43, charArray44);
        char[] charArray47 = new char[] {};
        char[] charArray48 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray47, charArray48);
        org.junit.Assert.assertArrayEquals(charArray44, charArray48);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray40, charArray44);
        org.junit.Assert.assertArrayEquals(charArray30, charArray40);
        org.junit.Assert.assertArrayEquals("hi!", charArray15, charArray30);
        char[] charArray55 = new char[] {};
        char[] charArray56 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray55, charArray56);
        char[] charArray59 = new char[] {};
        char[] charArray60 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray59, charArray60);
        org.junit.Assert.assertArrayEquals(charArray56, charArray60);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests64 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests64.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests64, (java.lang.Object) "");
        kuromojiAnalysisTests64.setUp();
        kuromojiAnalysisTests64.assertPathHasBeenCleared("hi!");
        kuromojiAnalysisTests64.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests64.tearDown();
        org.apache.lucene.index.IndexReader indexReader74 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum76 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum77 = null;
        kuromojiAnalysisTests64.assertPositionsSkippingEquals("random", indexReader74, (int) '#', postingsEnum76, postingsEnum77);
        kuromojiAnalysisTests64.tearDown();
        org.junit.Assert.assertNotEquals((java.lang.Object) charArray56, (java.lang.Object) kuromojiAnalysisTests64);
        org.junit.Assert.assertArrayEquals("tests.weekly", charArray15, charArray56);
        char[] charArray82 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("enwiki.random.lines.txt", charArray15, charArray82);
    }

    @Test
    public void test4452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4452");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.failfast", (double) (short) -1, (double) 100L, (double) 4);
    }

    @Test
    public void test4453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4453");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("<unknown>", (double) (byte) 1, (double) 5, 100.0d);
    }

    @Test
    public void test4454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4454");
        java.lang.Object obj1 = null;
        org.junit.rules.RuleChain ruleChain3 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain4 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain3);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests5 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule6 = kuromojiAnalysisTests5.ruleChain;
        org.junit.rules.RuleChain ruleChain7 = ruleChain4.around(testRule6);
        org.junit.rules.RuleChain ruleChain8 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain7);
        org.apache.lucene.search.QueryCachingPolicy queryCachingPolicy11 = org.apache.lucene.util.LuceneTestCase.MAYBE_CACHE_POLICY;
        org.junit.rules.TestRule testRule12 = null;
        org.junit.rules.RuleChain ruleChain13 = org.junit.rules.RuleChain.outerRule(testRule12);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain13;
        org.junit.rules.TestRule testRule15 = null;
        org.junit.rules.RuleChain ruleChain16 = org.junit.rules.RuleChain.outerRule(testRule15);
        org.junit.rules.RuleChain ruleChain17 = ruleChain13.around((org.junit.rules.TestRule) ruleChain16);
        org.junit.Assert.assertNotSame((java.lang.Object) queryCachingPolicy11, (java.lang.Object) ruleChain17);
        org.junit.rules.RuleChain ruleChain19 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain20 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain19);
        org.junit.rules.RuleChain ruleChain21 = ruleChain17.around((org.junit.rules.TestRule) ruleChain19);
        org.junit.Assert.assertNotSame("tests.slow", (java.lang.Object) "tests.badapples", (java.lang.Object) ruleChain17);
        org.junit.rules.RuleChain ruleChain23 = ruleChain8.around((org.junit.rules.TestRule) ruleChain17);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests25 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests25.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests25, (java.lang.Object) "");
        org.junit.rules.TestRule testRule30 = null;
        org.junit.rules.RuleChain ruleChain31 = org.junit.rules.RuleChain.outerRule(testRule30);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain31;
        org.junit.rules.TestRule testRule33 = null;
        org.junit.rules.RuleChain ruleChain34 = org.junit.rules.RuleChain.outerRule(testRule33);
        org.junit.rules.RuleChain ruleChain35 = ruleChain31.around((org.junit.rules.TestRule) ruleChain34);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain35;
        org.junit.Assert.assertNotNull("tests.failfast", (java.lang.Object) ruleChain35);
        kuromojiAnalysisTests25.failureAndSuccessEvents = ruleChain35;
        org.junit.Assert.assertNotEquals("tests.slow", (java.lang.Object) ruleChain17, (java.lang.Object) kuromojiAnalysisTests25);
        kuromojiAnalysisTests25.setUp();
        kuromojiAnalysisTests25.tearDown();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("<unknown>", obj1, (java.lang.Object) kuromojiAnalysisTests25);
    }

    @Test
    public void test4455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4455");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (double) 1.0f, (double) (short) -1);
    }

    @Test
    public void test4456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4456");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.assertPathHasBeenCleared("hi!");
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum7 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum8 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.monster", indexReader5, 10, postingsEnum7, postingsEnum8, true);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.monster", postingsEnum14, postingsEnum15);
    }

    @Test
    public void test4457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4457");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests0.assertTermsEquals("hi!", indexReader10, terms11, terms12, true);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests0);
        kuromojiAnalysisTests0.tearDown();
        org.junit.rules.RuleChain ruleChain19 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests20.tearDown();
        kuromojiAnalysisTests20.assertPathHasBeenCleared("hi!");
        org.apache.lucene.index.IndexReader indexReader25 = null;
        org.apache.lucene.index.Terms terms26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        kuromojiAnalysisTests20.assertTermsEquals("<unknown>", indexReader25, terms26, terms27, false);
        kuromojiAnalysisTests20.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests20.setIndexWriterMaxDocs((int) (short) 0);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests20);
    }

    @Test
    public void test4458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4458");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests0.ensureCleanedUp();
        java.lang.String str14 = kuromojiAnalysisTests0.getTestName();
        java.lang.String str15 = kuromojiAnalysisTests0.getTestName();
        org.junit.rules.RuleChain ruleChain16 = null;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain16;
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.apache.lucene.index.NumericDocValues numericDocValues22 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues23 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.weekly", 5, numericDocValues22, numericDocValues23);
    }

    @Test
    public void test4459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4459");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("random", (double) (byte) 0, (double) 2);
    }

    @Test
    public void test4460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4460");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) (-1.0f), 0.0d);
    }

    @Test
    public void test4461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4461");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests1, (java.lang.Object) "");
        java.lang.String str5 = kuromojiAnalysisTests1.getTestName();
        org.junit.rules.RuleChain ruleChain6 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain7 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain6);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests8 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule9 = kuromojiAnalysisTests8.ruleChain;
        org.junit.rules.RuleChain ruleChain10 = ruleChain7.around(testRule9);
        org.junit.rules.RuleChain ruleChain11 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain10);
        org.apache.lucene.search.QueryCachingPolicy queryCachingPolicy14 = org.apache.lucene.util.LuceneTestCase.MAYBE_CACHE_POLICY;
        org.junit.rules.TestRule testRule15 = null;
        org.junit.rules.RuleChain ruleChain16 = org.junit.rules.RuleChain.outerRule(testRule15);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain16;
        org.junit.rules.TestRule testRule18 = null;
        org.junit.rules.RuleChain ruleChain19 = org.junit.rules.RuleChain.outerRule(testRule18);
        org.junit.rules.RuleChain ruleChain20 = ruleChain16.around((org.junit.rules.TestRule) ruleChain19);
        org.junit.Assert.assertNotSame((java.lang.Object) queryCachingPolicy14, (java.lang.Object) ruleChain20);
        org.junit.rules.RuleChain ruleChain22 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain23 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain22);
        org.junit.rules.RuleChain ruleChain24 = ruleChain20.around((org.junit.rules.TestRule) ruleChain22);
        org.junit.Assert.assertNotSame("tests.slow", (java.lang.Object) "tests.badapples", (java.lang.Object) ruleChain20);
        org.junit.rules.RuleChain ruleChain26 = ruleChain11.around((org.junit.rules.TestRule) ruleChain20);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain11;
        kuromojiAnalysisTests1.ensureCleanedUp();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum33 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum34 = null;
        kuromojiAnalysisTests1.assertPositionsSkippingEquals("tests.slow", indexReader31, (int) 'a', postingsEnum33, postingsEnum34);
        java.lang.String str36 = kuromojiAnalysisTests1.getTestName();
        java.lang.String str37 = kuromojiAnalysisTests1.getTestName();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests39 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests39.tearDown();
        org.junit.Assert.assertNotSame("enwiki.random.lines.txt", (java.lang.Object) kuromojiAnalysisTests39, (java.lang.Object) "");
        java.lang.String str43 = kuromojiAnalysisTests39.getTestName();
        org.junit.rules.RuleChain ruleChain44 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain45 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain44);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests46 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule47 = kuromojiAnalysisTests46.ruleChain;
        org.junit.rules.RuleChain ruleChain48 = ruleChain45.around(testRule47);
        org.junit.rules.RuleChain ruleChain49 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain48);
        org.apache.lucene.search.QueryCachingPolicy queryCachingPolicy52 = org.apache.lucene.util.LuceneTestCase.MAYBE_CACHE_POLICY;
        org.junit.rules.TestRule testRule53 = null;
        org.junit.rules.RuleChain ruleChain54 = org.junit.rules.RuleChain.outerRule(testRule53);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain54;
        org.junit.rules.TestRule testRule56 = null;
        org.junit.rules.RuleChain ruleChain57 = org.junit.rules.RuleChain.outerRule(testRule56);
        org.junit.rules.RuleChain ruleChain58 = ruleChain54.around((org.junit.rules.TestRule) ruleChain57);
        org.junit.Assert.assertNotSame((java.lang.Object) queryCachingPolicy52, (java.lang.Object) ruleChain58);
        org.junit.rules.RuleChain ruleChain60 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain61 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain60);
        org.junit.rules.RuleChain ruleChain62 = ruleChain58.around((org.junit.rules.TestRule) ruleChain60);
        org.junit.Assert.assertNotSame("tests.slow", (java.lang.Object) "tests.badapples", (java.lang.Object) ruleChain58);
        org.junit.rules.RuleChain ruleChain64 = ruleChain49.around((org.junit.rules.TestRule) ruleChain58);
        kuromojiAnalysisTests39.failureAndSuccessEvents = ruleChain49;
        org.junit.rules.RuleChain ruleChain66 = kuromojiAnalysisTests39.failureAndSuccessEvents;
        org.junit.rules.RuleChain ruleChain67 = kuromojiAnalysisTests39.failureAndSuccessEvents;
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests39);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame((java.lang.Object) str37, (java.lang.Object) kuromojiAnalysisTests39);
    }

    @Test
    public void test4462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4462");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.monster", (double) 10.0f, 1.0d, (double) (byte) 0);
    }

    @Test
    public void test4463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4463");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("tests.maxfailures", (long) (-1), (-1L));
    }

    @Test
    public void test4464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4464");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) "tests.awaitsfix");
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.setUp();
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.Terms terms20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        kuromojiAnalysisTests0.assertTermsEquals("hi!", indexReader19, terms20, terms21, true);
        org.apache.lucene.index.PostingsEnum postingsEnum25 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum26 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("", postingsEnum25, postingsEnum26, false);
        org.apache.lucene.index.NumericDocValues numericDocValues31 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues32 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("tests.nightly", 5, numericDocValues31, numericDocValues32);
    }

    @Test
    public void test4465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4465");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs((int) (short) 100);
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum7 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum8 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("tests.badapples", indexReader5, 2, postingsEnum7, postingsEnum8);
        org.apache.lucene.index.NumericDocValues numericDocValues12 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues13 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocValuesEquals("random", 0, numericDocValues12, numericDocValues13);
    }

    @Test
    public void test4466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4466");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.badapples");
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests1);
        kuromojiAnalysisTests1.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests14 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests14.tearDown();
        org.apache.lucene.index.IndexReader indexReader17 = null;
        org.apache.lucene.index.Terms terms18 = null;
        org.apache.lucene.index.Terms terms19 = null;
        kuromojiAnalysisTests14.assertTermsEquals("tests.failfast", indexReader17, terms18, terms19, false);
        kuromojiAnalysisTests14.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests14.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests14.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests14.ensureCheckIndexPassed();
        kuromojiAnalysisTests14.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain30 = kuromojiAnalysisTests14.failureAndSuccessEvents;
        org.apache.lucene.store.MockDirectoryWrapper.Throttling throttling31 = org.apache.lucene.store.MockDirectoryWrapper.Throttling.NEVER;
        org.junit.Assert.assertNotSame((java.lang.Object) ruleChain30, (java.lang.Object) throttling31);
        kuromojiAnalysisTests1.failureAndSuccessEvents = ruleChain30;
        kuromojiAnalysisTests1.ensureAllSearchContextsReleased();
        org.apache.lucene.index.PostingsEnum postingsEnum36 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum37 = null;
        kuromojiAnalysisTests1.assertDocsEnumEquals("tests.maxfailures", postingsEnum36, postingsEnum37, false);
        java.lang.Object obj40 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals("europarl.lines.txt.gz", (java.lang.Object) postingsEnum37, obj40);
    }

    @Test
    public void test4467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4467");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests0.assertTermsEquals("hi!", indexReader10, terms11, terms12, true);
        java.lang.String str15 = kuromojiAnalysisTests0.getTestName();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests16 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests16.tearDown();
        org.apache.lucene.index.IndexReader indexReader19 = null;
        org.apache.lucene.index.Terms terms20 = null;
        org.apache.lucene.index.Terms terms21 = null;
        kuromojiAnalysisTests16.assertTermsEquals("tests.failfast", indexReader19, terms20, terms21, false);
        kuromojiAnalysisTests16.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests16.ensureAllSearchContextsReleased();
        org.junit.rules.TestRule testRule27 = kuromojiAnalysisTests16.ruleChain;
        org.junit.rules.RuleChain ruleChain28 = kuromojiAnalysisTests16.failureAndSuccessEvents;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain28;
        org.apache.lucene.index.PostingsEnum postingsEnum31 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum32 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("", postingsEnum31, postingsEnum32, false);
        org.apache.lucene.index.IndexReader indexReader36 = null;
        org.apache.lucene.index.Terms terms37 = null;
        org.apache.lucene.index.Terms terms38 = null;
        kuromojiAnalysisTests0.assertTermsEquals("", indexReader36, terms37, terms38, false);
        org.apache.lucene.index.IndexReader indexReader42 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum44 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        kuromojiAnalysisTests0.assertDocsSkippingEquals("tests.maxfailures", indexReader42, (int) '4', postingsEnum44, postingsEnum45, false);
        kuromojiAnalysisTests0.overrideTestDefaultQueryCache();
        kuromojiAnalysisTests0.setUp();
        org.apache.lucene.index.PostingsEnum postingsEnum51 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum52 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("<unknown>", postingsEnum51, postingsEnum52);
    }

    @Test
    public void test4468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4468");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.tearDown();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests9 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests9.tearDown();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.Terms terms13 = null;
        org.apache.lucene.index.Terms terms14 = null;
        kuromojiAnalysisTests9.assertTermsEquals("tests.failfast", indexReader12, terms13, terms14, false);
        kuromojiAnalysisTests9.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests9.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests9.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests9.ensureCheckIndexPassed();
        kuromojiAnalysisTests9.assertPathHasBeenCleared("tests.nightly");
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        org.apache.lucene.index.Terms terms28 = null;
        kuromojiAnalysisTests9.assertTermsEquals("tests.failfast", indexReader26, terms27, terms28, true);
        kuromojiAnalysisTests9.resetCheckIndexStatus();
        org.junit.Assert.assertNotEquals((java.lang.Object) kuromojiAnalysisTests0, (java.lang.Object) kuromojiAnalysisTests9);
        kuromojiAnalysisTests9.overrideTestDefaultQueryCache();
        java.lang.String str34 = kuromojiAnalysisTests9.getTestName();
        kuromojiAnalysisTests9.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests9.setUp();
        org.apache.lucene.index.IndexReader indexReader38 = null;
        org.apache.lucene.index.Fields fields39 = null;
        org.apache.lucene.index.Fields fields40 = null;
        kuromojiAnalysisTests9.assertFieldsEquals("", indexReader38, fields39, fields40, true);
        org.apache.lucene.index.PostingsEnum postingsEnum44 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum45 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests9.assertDocsAndPositionsEnumEquals("hi!", postingsEnum44, postingsEnum45);
    }

    @Test
    public void test4469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4469");
        char[] charArray2 = new char[] {};
        char[] charArray3 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray2, charArray3);
        char[] charArray6 = new char[] {};
        char[] charArray7 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray6, charArray7);
        org.junit.Assert.assertArrayEquals(charArray3, charArray7);
        char[] charArray12 = new char[] {};
        char[] charArray13 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray12, charArray13);
        char[] charArray16 = new char[] {};
        char[] charArray17 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray16, charArray17);
        char[] charArray20 = new char[] {};
        char[] charArray21 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray20, charArray21);
        org.junit.Assert.assertArrayEquals(charArray17, charArray21);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray13, charArray17);
        org.junit.Assert.assertArrayEquals(charArray3, charArray17);
        char[] charArray26 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray3, charArray26);
        org.junit.Assert.assertNotNull("<unknown>", (java.lang.Object) charArray26);
        char[] charArray29 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(charArray26, charArray29);
    }

    @Test
    public void test4470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4470");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.maxfailures", (double) 1.0f, (double) '#', (double) (short) -1);
    }

    @Test
    public void test4471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4471");
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures[][][] testRuleIgnoreAfterMaxFailuresArray1 = new org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures[][][] {};
        java.util.Set<org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures[][]> testRuleIgnoreAfterMaxFailuresArraySet2 = org.apache.lucene.util.LuceneTestCase.asSet(testRuleIgnoreAfterMaxFailuresArray1);
        java.io.Serializable[] serializableArray4 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet5 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray4);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray6 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet7 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray6);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray4, (java.lang.Object[]) throttlingArray6);
        java.io.Serializable[] serializableArray10 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet11 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray10);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray12 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet13 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray12);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray10, (java.lang.Object[]) throttlingArray12);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray4, (java.lang.Object[]) serializableArray10);
        java.util.concurrent.ExecutorService[] executorServiceArray16 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean17 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray16);
        boolean boolean18 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray16);
        boolean boolean19 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray16);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray10, (java.lang.Object[]) executorServiceArray16);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) testRuleIgnoreAfterMaxFailuresArray1, (java.lang.Object[]) executorServiceArray16);
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) executorServiceArray16);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests23 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests23.tearDown();
        org.apache.lucene.index.IndexReader indexReader26 = null;
        org.apache.lucene.index.Terms terms27 = null;
        org.apache.lucene.index.Terms terms28 = null;
        kuromojiAnalysisTests23.assertTermsEquals("tests.failfast", indexReader26, terms27, terms28, false);
        kuromojiAnalysisTests23.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader33 = null;
        org.apache.lucene.index.Terms terms34 = null;
        org.apache.lucene.index.Terms terms35 = null;
        kuromojiAnalysisTests23.assertTermsEquals("hi!", indexReader33, terms34, terms35, true);
        org.apache.lucene.index.IndexReader indexReader39 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum41 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum42 = null;
        kuromojiAnalysisTests23.assertDocsSkippingEquals("hi!", indexReader39, (int) (byte) 1, postingsEnum41, postingsEnum42, false);
        org.junit.rules.RuleChain ruleChain45 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain46 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain45);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests47 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule48 = kuromojiAnalysisTests47.ruleChain;
        org.junit.rules.RuleChain ruleChain49 = ruleChain46.around(testRule48);
        kuromojiAnalysisTests23.failureAndSuccessEvents = ruleChain49;
        java.util.concurrent.ExecutorService executorService51 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray52 = new java.util.concurrent.ExecutorService[] { executorService51 };
        boolean boolean53 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray52);
        boolean boolean54 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray52);
        boolean boolean55 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray52);
        boolean boolean56 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray52);
        org.junit.Assert.assertNotSame((java.lang.Object) ruleChain49, (java.lang.Object) executorServiceArray52);
        boolean boolean58 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray52);
        boolean boolean59 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray52);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray16, (java.lang.Object[]) executorServiceArray52);
    }

    @Test
    public void test4472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4472");
        long[] longArray8 = new long[] { 100, (byte) 10, 100, 100, (byte) 0, (short) 1 };
        long[] longArray15 = new long[] { 100, (byte) 10, 100, 100, (byte) 0, (short) 1 };
        long[] longArray22 = new long[] { 100, (byte) 10, 100, 100, (byte) 0, (short) 1 };
        long[] longArray29 = new long[] { 100, (byte) 10, 100, 100, (byte) 0, (short) 1 };
        long[] longArray36 = new long[] { 100, (byte) 10, 100, 100, (byte) 0, (short) 1 };
        long[] longArray43 = new long[] { 100, (byte) 10, 100, 100, (byte) 0, (short) 1 };
        long[][] longArray44 = new long[][] { longArray8, longArray15, longArray22, longArray29, longArray36, longArray43 };
        java.util.Set<long[]> longArraySet45 = org.apache.lucene.util.LuceneTestCase.asSet(longArray44);
        org.junit.Assert.assertNotNull((java.lang.Object) longArray44);
        java.util.List<long[]> longArrayList47 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (byte) 1, longArray44);
        java.io.Serializable[] serializableArray49 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet50 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray49);
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet52 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray51);
        java.io.Serializable[] serializableArray53 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet54 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray53);
        java.util.Set[] setArray56 = new java.util.Set[3];
        @SuppressWarnings("unchecked")
        java.util.Set<java.io.Serializable>[] serializableSetArray57 = (java.util.Set<java.io.Serializable>[]) setArray56;
        serializableSetArray57[0] = serializableSet50;
        serializableSetArray57[1] = serializableSet52;
        serializableSetArray57[2] = serializableSet54;
        java.util.Set<java.util.Set<java.io.Serializable>> serializableSetSet64 = org.apache.lucene.util.LuceneTestCase.asSet(serializableSetArray57);
        org.junit.Assert.assertNotNull((java.lang.Object) serializableSetArray57);
        java.util.List<java.lang.Iterable<java.io.Serializable>> serializableIterableList66 = org.elasticsearch.test.ESTestCase.randomSubsetOf(1, (java.lang.Iterable<java.io.Serializable>[]) serializableSetArray57);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) longArray44, (java.lang.Object[]) serializableSetArray57);
    }

    @Test
    public void test4473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4473");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        kuromojiAnalysisTests0.setUp();
        org.apache.lucene.index.PostingsEnum postingsEnum4 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum5 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("tests.monster", postingsEnum4, postingsEnum5);
    }

    @Test
    public void test4474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4474");
        char[] charArray0 = null;
        char[] charArray5 = new char[] {};
        char[] charArray6 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray5, charArray6);
        char[] charArray9 = new char[] {};
        char[] charArray10 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray9, charArray10);
        org.junit.Assert.assertArrayEquals(charArray6, charArray10);
        char[] charArray15 = new char[] {};
        char[] charArray16 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray15, charArray16);
        char[] charArray19 = new char[] {};
        char[] charArray20 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray19, charArray20);
        char[] charArray23 = new char[] {};
        char[] charArray24 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray23, charArray24);
        org.junit.Assert.assertArrayEquals(charArray20, charArray24);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray16, charArray20);
        org.junit.Assert.assertArrayEquals(charArray6, charArray16);
        char[] charArray30 = new char[] {};
        char[] charArray31 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray30, charArray31);
        org.junit.Assert.assertArrayEquals("tests.weekly", charArray16, charArray30);
        char[] charArray35 = new char[] {};
        char[] charArray36 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray35, charArray36);
        char[] charArray39 = new char[] {};
        char[] charArray40 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray39, charArray40);
        org.junit.Assert.assertArrayEquals(charArray36, charArray40);
        org.junit.Assert.assertArrayEquals("tests.nightly", charArray30, charArray40);
        char[] charArray45 = new char[] {};
        char[] charArray46 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray45, charArray46);
        char[] charArray49 = new char[] {};
        char[] charArray50 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray49, charArray50);
        org.junit.Assert.assertArrayEquals(charArray46, charArray50);
        char[] charArray55 = new char[] {};
        char[] charArray56 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray55, charArray56);
        char[] charArray59 = new char[] {};
        char[] charArray60 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray59, charArray60);
        char[] charArray63 = new char[] {};
        char[] charArray64 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray63, charArray64);
        org.junit.Assert.assertArrayEquals(charArray60, charArray64);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray56, charArray60);
        org.junit.Assert.assertArrayEquals(charArray46, charArray56);
        char[] charArray70 = new char[] {};
        char[] charArray71 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray70, charArray71);
        char[] charArray74 = new char[] {};
        char[] charArray75 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray74, charArray75);
        org.junit.Assert.assertArrayEquals(charArray71, charArray75);
        char[] charArray80 = new char[] {};
        char[] charArray81 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray80, charArray81);
        char[] charArray84 = new char[] {};
        char[] charArray85 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray84, charArray85);
        char[] charArray88 = new char[] {};
        char[] charArray89 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray88, charArray89);
        org.junit.Assert.assertArrayEquals(charArray85, charArray89);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray81, charArray85);
        org.junit.Assert.assertArrayEquals(charArray71, charArray81);
        org.junit.Assert.assertArrayEquals(charArray56, charArray71);
        org.junit.Assert.assertArrayEquals("tests.weekly", charArray30, charArray71);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(charArray0, charArray30);
    }

    @Test
    public void test4475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4475");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals(10.0f, (float) 'a', 1.0f);
    }

    @Test
    public void test4476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4476");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((long) (byte) -1, (long) (byte) -1);
    }

    @Test
    public void test4477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4477");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNotEquals((double) 10.0f, (double) 1L, (double) 10L);
    }

    @Test
    public void test4478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4478");
        float[] floatArray3 = new float[] { (byte) 0, 100 };
        float[] floatArray10 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray16 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray10, floatArray16, (float) (byte) 100);
        float[] floatArray25 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray31 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray25, floatArray31, (float) (byte) 100);
        float[] floatArray40 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray46 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray40, floatArray46, (float) (byte) 100);
        float[] floatArray55 = new float[] { (short) 10, (-1.0f), 'a', 1, 100.0f };
        float[] floatArray61 = new float[] { 10, (-1.0f), 0L, (-1.0f), 0 };
        org.junit.Assert.assertArrayEquals("hi!", floatArray55, floatArray61, (float) (byte) 100);
        org.junit.Assert.assertArrayEquals(floatArray40, floatArray55, (float) (short) 1);
        org.junit.Assert.assertArrayEquals(floatArray25, floatArray40, (float) (short) 100);
        org.junit.Assert.assertArrayEquals(floatArray10, floatArray40, (float) (short) 10);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals("random", floatArray3, floatArray40, (float) (-1));
    }

    @Test
    public void test4479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4479");
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray2 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet3 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray2);
        java.io.Serializable[] serializableArray5 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet6 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray5);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray7 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet8 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray7);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray5, (java.lang.Object[]) throttlingArray7);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray2, (java.lang.Object[]) serializableArray5);
        java.io.Serializable[] serializableArray12 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet13 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray12);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray14 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet15 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray14);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray12, (java.lang.Object[]) throttlingArray14);
        org.junit.Assert.assertEquals("tests.monster", (java.lang.Object[]) throttlingArray2, (java.lang.Object[]) serializableArray12);
        java.util.concurrent.ExecutorService[] executorServiceArray19 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean20 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray19);
        boolean boolean21 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray19);
        boolean boolean22 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray19);
        boolean boolean23 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray19);
        java.io.Serializable[] serializableArray25 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet26 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray25);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray27 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet28 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray27);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray25, (java.lang.Object[]) throttlingArray27);
        java.io.Serializable[] serializableArray31 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet32 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray31);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray33 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet34 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray33);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray31, (java.lang.Object[]) throttlingArray33);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray25, (java.lang.Object[]) serializableArray31);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray38 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet39 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray38);
        java.io.Serializable[] serializableArray41 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet42 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray41);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray43 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet44 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray43);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray41, (java.lang.Object[]) throttlingArray43);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray38, (java.lang.Object[]) serializableArray41);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray48 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet49 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray48);
        java.io.Serializable[] serializableArray51 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet52 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray51);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray53 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet54 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray53);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray51, (java.lang.Object[]) throttlingArray53);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray48, (java.lang.Object[]) serializableArray51);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray41, (java.lang.Object[]) throttlingArray48);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray31, (java.lang.Object[]) throttlingArray48);
        org.junit.Assert.assertArrayEquals("tests.weekly", (java.lang.Object[]) executorServiceArray19, (java.lang.Object[]) throttlingArray48);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray2, (java.lang.Object[]) executorServiceArray19);
        boolean boolean61 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray19);
        boolean boolean62 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray19);
        boolean boolean63 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray19);
        int[] intArray66 = new int[] {};
        int[] intArray67 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray66, intArray67);
        int[] intArray71 = new int[] {};
        int[] intArray72 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray71, intArray72);
        int[] intArray74 = new int[] {};
        org.junit.Assert.assertArrayEquals(intArray71, intArray74);
        int[] intArray76 = new int[] {};
        org.junit.Assert.assertArrayEquals("", intArray74, intArray76);
        org.junit.Assert.assertArrayEquals("", intArray67, intArray76);
        java.util.concurrent.ExecutorService executorService79 = null;
        java.util.concurrent.ExecutorService[] executorServiceArray80 = new java.util.concurrent.ExecutorService[] { executorService79 };
        boolean boolean81 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray80);
        boolean boolean82 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray80);
        org.junit.Assert.assertNotEquals((java.lang.Object) "", (java.lang.Object) executorServiceArray80);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray19, (java.lang.Object[]) executorServiceArray80);
    }

    @Test
    public void test4480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4480");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests[][] kuromojiAnalysisTestsArray1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests[][] {};
        java.util.List<org.elasticsearch.index.analysis.KuromojiAnalysisTests[]> kuromojiAnalysisTestsArrayList2 = org.elasticsearch.test.ESTestCase.randomSubsetOf(0, kuromojiAnalysisTestsArray1);
        java.util.Set<org.elasticsearch.index.analysis.KuromojiAnalysisTests[]> kuromojiAnalysisTestsArraySet3 = org.apache.lucene.util.LuceneTestCase.asSet(kuromojiAnalysisTestsArray1);
        java.util.Set<org.elasticsearch.test.ESTestCase[]> eSTestCaseArraySet4 = org.apache.lucene.util.LuceneTestCase.asSet((org.elasticsearch.test.ESTestCase[][]) kuromojiAnalysisTestsArray1);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures5 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures6 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures5);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures7 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures8 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures7);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures9 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures10 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures9);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures11 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures12 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures11);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures13 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures14 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures13);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures[] testRuleIgnoreAfterMaxFailuresArray15 = new org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures[] { testRuleIgnoreAfterMaxFailures6, testRuleIgnoreAfterMaxFailures7, testRuleIgnoreAfterMaxFailures10, testRuleIgnoreAfterMaxFailures12, testRuleIgnoreAfterMaxFailures13 };
        java.util.Set<org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures> testRuleIgnoreAfterMaxFailuresSet16 = org.apache.lucene.util.LuceneTestCase.asSet(testRuleIgnoreAfterMaxFailuresArray15);
        java.util.Set<org.junit.rules.TestRule> testRuleSet17 = org.apache.lucene.util.LuceneTestCase.asSet((org.junit.rules.TestRule[]) testRuleIgnoreAfterMaxFailuresArray15);
        java.util.Set<org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures> testRuleIgnoreAfterMaxFailuresSet18 = org.apache.lucene.util.LuceneTestCase.asSet(testRuleIgnoreAfterMaxFailuresArray15);
        java.util.Set<org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures> testRuleIgnoreAfterMaxFailuresSet19 = org.apache.lucene.util.LuceneTestCase.asSet(testRuleIgnoreAfterMaxFailuresArray15);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) kuromojiAnalysisTestsArray1, (java.lang.Object[]) testRuleIgnoreAfterMaxFailuresArray15);
    }

    @Test
    public void test4481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4481");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 4, (double) (short) 100);
    }

    @Test
    public void test4482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4482");
        double[] doubleArray1 = new double[] {};
        double[] doubleArray2 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray1, doubleArray2, (double) '#');
        double[] doubleArray5 = new double[] {};
        double[] doubleArray6 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray5, doubleArray6, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray1, doubleArray6, (double) 0.0f);
        double[] doubleArray13 = new double[] {};
        double[] doubleArray14 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray13, doubleArray14, (double) '#');
        double[] doubleArray17 = new double[] {};
        double[] doubleArray18 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray17, doubleArray18, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray13, doubleArray17, (double) 3);
        double[] doubleArray23 = new double[] {};
        double[] doubleArray24 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray23, doubleArray24, (double) '#');
        double[] doubleArray27 = new double[] {};
        double[] doubleArray28 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray27, doubleArray28, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray23, doubleArray27, (double) 3);
        org.junit.Assert.assertArrayEquals("tests.monster", doubleArray13, doubleArray23, (double) 1.0f);
        double[] doubleArray35 = new double[] {};
        double[] doubleArray36 = new double[] {};
        org.junit.Assert.assertArrayEquals(doubleArray35, doubleArray36, (double) '#');
        org.junit.Assert.assertArrayEquals(doubleArray13, doubleArray35, (double) 0);
        short[] shortArray41 = new short[] {};
        short[] shortArray42 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray41, shortArray42);
        short[] shortArray46 = new short[] {};
        short[] shortArray47 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray46, shortArray47);
        short[] shortArray49 = new short[] {};
        short[] shortArray50 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray49, shortArray50);
        org.junit.Assert.assertArrayEquals("", shortArray47, shortArray49);
        short[] shortArray55 = new short[] {};
        short[] shortArray56 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray55, shortArray56);
        short[] shortArray59 = new short[] {};
        short[] shortArray60 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray59, shortArray60);
        short[] shortArray62 = new short[] {};
        short[] shortArray63 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray62, shortArray63);
        org.junit.Assert.assertArrayEquals("", shortArray60, shortArray62);
        org.junit.Assert.assertArrayEquals("europarl.lines.txt.gz", shortArray55, shortArray60);
        short[] shortArray68 = new short[] {};
        short[] shortArray69 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray68, shortArray69);
        short[] shortArray71 = new short[] {};
        short[] shortArray72 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray71, shortArray72);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray68, shortArray72);
        org.junit.Assert.assertArrayEquals("tests.nightly", shortArray55, shortArray68);
        org.junit.Assert.assertArrayEquals("random", shortArray47, shortArray68);
        org.junit.Assert.assertArrayEquals(shortArray42, shortArray47);
        org.junit.Assert.assertNotSame("tests.slow", (java.lang.Object) doubleArray13, (java.lang.Object) shortArray47);
        org.junit.Assert.assertArrayEquals(doubleArray6, doubleArray13, (double) (short) 10);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.maxfailures", (java.lang.Object) doubleArray6);
    }

    @Test
    public void test4483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4483");
        java.util.concurrent.ExecutorService[][] executorServiceArray1 = new java.util.concurrent.ExecutorService[][] {};
        java.util.concurrent.ExecutorService[][] executorServiceArray2 = new java.util.concurrent.ExecutorService[][] {};
        java.util.concurrent.ExecutorService[][] executorServiceArray3 = new java.util.concurrent.ExecutorService[][] {};
        java.util.concurrent.ExecutorService[][] executorServiceArray4 = new java.util.concurrent.ExecutorService[][] {};
        java.util.concurrent.ExecutorService[][] executorServiceArray5 = new java.util.concurrent.ExecutorService[][] {};
        java.util.concurrent.ExecutorService[][][] executorServiceArray6 = new java.util.concurrent.ExecutorService[][][] { executorServiceArray1, executorServiceArray2, executorServiceArray3, executorServiceArray4, executorServiceArray5 };
        java.util.concurrent.ExecutorService[][] executorServiceArray7 = new java.util.concurrent.ExecutorService[][] {};
        java.util.concurrent.ExecutorService[][] executorServiceArray8 = new java.util.concurrent.ExecutorService[][] {};
        java.util.concurrent.ExecutorService[][] executorServiceArray9 = new java.util.concurrent.ExecutorService[][] {};
        java.util.concurrent.ExecutorService[][] executorServiceArray10 = new java.util.concurrent.ExecutorService[][] {};
        java.util.concurrent.ExecutorService[][] executorServiceArray11 = new java.util.concurrent.ExecutorService[][] {};
        java.util.concurrent.ExecutorService[][][] executorServiceArray12 = new java.util.concurrent.ExecutorService[][][] { executorServiceArray7, executorServiceArray8, executorServiceArray9, executorServiceArray10, executorServiceArray11 };
        java.util.concurrent.ExecutorService[][][][] executorServiceArray13 = new java.util.concurrent.ExecutorService[][][][] { executorServiceArray6, executorServiceArray12 };
        java.util.List<java.util.concurrent.ExecutorService[][][]> executorServiceArrayList14 = org.elasticsearch.test.ESTestCase.randomSubsetOf(1, executorServiceArray13);
        java.util.Set<java.util.concurrent.ExecutorService[][][]> executorServiceArraySet15 = org.apache.lucene.util.LuceneTestCase.asSet(executorServiceArray13);
        java.util.concurrent.ExecutorService[] executorServiceArray17 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean18 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray17);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray20 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet21 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray20);
        java.io.Serializable[] serializableArray23 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet24 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray23);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray25 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet26 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray25);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray23, (java.lang.Object[]) throttlingArray25);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray20, (java.lang.Object[]) serializableArray23);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray30 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet31 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray30);
        java.io.Serializable[] serializableArray33 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet34 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray33);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray35 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet36 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray35);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray33, (java.lang.Object[]) throttlingArray35);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray30, (java.lang.Object[]) serializableArray33);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray23, (java.lang.Object[]) throttlingArray30);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray41 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet42 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray41);
        java.io.Serializable[] serializableArray44 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet45 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray44);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray46 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet47 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray46);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray44, (java.lang.Object[]) throttlingArray46);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray41, (java.lang.Object[]) serializableArray44);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray30, (java.lang.Object[]) serializableArray44);
        org.junit.Assert.assertEquals((java.lang.Object[]) executorServiceArray17, (java.lang.Object[]) serializableArray44);
        boolean boolean52 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray17);
        java.io.Serializable[] serializableArray54 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet55 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray54);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray56 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet57 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray56);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray54, (java.lang.Object[]) throttlingArray56);
        java.io.Serializable[] serializableArray60 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet61 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray60);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray62 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet63 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray62);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray60, (java.lang.Object[]) throttlingArray62);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray54, (java.lang.Object[]) serializableArray60);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray67 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet68 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray67);
        java.io.Serializable[] serializableArray70 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet71 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray70);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray72 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet73 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray72);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray70, (java.lang.Object[]) throttlingArray72);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray67, (java.lang.Object[]) serializableArray70);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray77 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet78 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray77);
        java.io.Serializable[] serializableArray80 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet81 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray80);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray82 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet83 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray82);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray80, (java.lang.Object[]) throttlingArray82);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray77, (java.lang.Object[]) serializableArray80);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray70, (java.lang.Object[]) throttlingArray77);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray60, (java.lang.Object[]) throttlingArray77);
        org.junit.Assert.assertEquals("<unknown>", (java.lang.Object[]) executorServiceArray17, (java.lang.Object[]) throttlingArray77);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray13, (java.lang.Object[]) executorServiceArray17);
    }

    @Test
    public void test4484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4484");
        char[] charArray3 = new char[] {};
        char[] charArray4 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray3, charArray4);
        char[] charArray7 = new char[] {};
        char[] charArray8 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray7, charArray8);
        org.junit.Assert.assertArrayEquals(charArray4, charArray8);
        char[] charArray13 = new char[] {};
        char[] charArray14 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray13, charArray14);
        char[] charArray17 = new char[] {};
        char[] charArray18 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray17, charArray18);
        char[] charArray21 = new char[] {};
        char[] charArray22 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray21, charArray22);
        org.junit.Assert.assertArrayEquals(charArray18, charArray22);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray14, charArray18);
        org.junit.Assert.assertArrayEquals(charArray4, charArray18);
        char[] charArray27 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray4, charArray27);
        char[] charArray30 = new char[] {};
        char[] charArray31 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray30, charArray31);
        char[] charArray34 = new char[] {};
        char[] charArray35 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray34, charArray35);
        org.junit.Assert.assertArrayEquals(charArray31, charArray35);
        char[] charArray40 = new char[] {};
        char[] charArray41 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray40, charArray41);
        char[] charArray44 = new char[] {};
        char[] charArray45 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray44, charArray45);
        char[] charArray48 = new char[] {};
        char[] charArray49 = new char[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", charArray48, charArray49);
        org.junit.Assert.assertArrayEquals(charArray45, charArray49);
        org.junit.Assert.assertArrayEquals("<unknown>", charArray41, charArray45);
        org.junit.Assert.assertArrayEquals(charArray31, charArray45);
        char[] charArray54 = new char[] {};
        org.junit.Assert.assertArrayEquals(charArray31, charArray54);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", charArray27, charArray54);
        org.junit.rules.RuleChain ruleChain57 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain58 = org.junit.rules.RuleChain.emptyRuleChain();
        org.junit.rules.RuleChain ruleChain59 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain58);
        org.junit.rules.RuleChain ruleChain60 = ruleChain57.around((org.junit.rules.TestRule) ruleChain59);
        org.junit.rules.RuleChain ruleChain61 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain59);
        org.junit.rules.RuleChain ruleChain62 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain61);
        org.junit.rules.TestRule testRule63 = null;
        org.junit.rules.RuleChain ruleChain64 = ruleChain62.around(testRule63);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertSame("", (java.lang.Object) "tests.maxfailures", (java.lang.Object) testRule63);
    }

    @Test
    public void test4485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4485");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("", (double) 100L, 1.0d);
    }

    @Test
    public void test4486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4486");
        java.io.Serializable[] serializableArray3 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet4 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray3);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray5 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet6 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray5);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray3, (java.lang.Object[]) throttlingArray5);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray9 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet10 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray9);
        java.io.Serializable[] serializableArray12 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet13 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray12);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray14 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet15 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray14);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray12, (java.lang.Object[]) throttlingArray14);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray9, (java.lang.Object[]) serializableArray12);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray19 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet20 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray19);
        java.io.Serializable[] serializableArray22 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet23 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray22);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray24 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet25 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray24);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray22, (java.lang.Object[]) throttlingArray24);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray19, (java.lang.Object[]) serializableArray22);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray12, (java.lang.Object[]) throttlingArray19);
        org.junit.Assert.assertArrayEquals("", (java.lang.Object[]) serializableArray3, (java.lang.Object[]) serializableArray12);
        java.util.concurrent.ExecutorService[] executorServiceArray31 = new java.util.concurrent.ExecutorService[] {};
        boolean boolean32 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray31);
        boolean boolean33 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray31);
        boolean boolean34 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray31);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray36 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet37 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray36);
        java.io.Serializable[] serializableArray39 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet40 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray39);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray41 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet42 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray41);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray39, (java.lang.Object[]) throttlingArray41);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray36, (java.lang.Object[]) serializableArray39);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray46 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet47 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray46);
        java.io.Serializable[] serializableArray49 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet50 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray49);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray51 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet52 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray51);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray49, (java.lang.Object[]) throttlingArray51);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray46, (java.lang.Object[]) serializableArray49);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) serializableArray39, (java.lang.Object[]) throttlingArray46);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray57 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet58 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray57);
        java.io.Serializable[] serializableArray60 = new java.io.Serializable[] {};
        java.util.Set<java.io.Serializable> serializableSet61 = org.apache.lucene.util.LuceneTestCase.asSet(serializableArray60);
        org.apache.lucene.store.MockDirectoryWrapper.Throttling[] throttlingArray62 = new org.apache.lucene.store.MockDirectoryWrapper.Throttling[] {};
        java.util.Set<java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>> throttlingEnumSet63 = org.apache.lucene.util.LuceneTestCase.asSet((java.lang.Enum<org.apache.lucene.store.MockDirectoryWrapper.Throttling>[]) throttlingArray62);
        org.junit.Assert.assertEquals("hi!", (java.lang.Object[]) serializableArray60, (java.lang.Object[]) throttlingArray62);
        org.junit.Assert.assertEquals("tests.weekly", (java.lang.Object[]) throttlingArray57, (java.lang.Object[]) serializableArray60);
        org.junit.Assert.assertEquals((java.lang.Object[]) throttlingArray46, (java.lang.Object[]) serializableArray60);
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) executorServiceArray31, (java.lang.Object[]) serializableArray60);
        boolean boolean68 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray31);
        boolean boolean69 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray31);
        org.junit.Assert.assertNotNull("enwiki.random.lines.txt", (java.lang.Object) executorServiceArray31);
        org.junit.Assert.assertEquals((java.lang.Object[]) serializableArray12, (java.lang.Object[]) executorServiceArray31);
        boolean boolean72 = org.elasticsearch.test.ESTestCase.terminate(executorServiceArray31);
        org.junit.rules.TestRule testRule74 = null;
        org.junit.rules.RuleChain ruleChain75 = org.junit.rules.RuleChain.outerRule(testRule74);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain75;
        org.junit.rules.TestRule testRule77 = null;
        org.junit.rules.RuleChain ruleChain78 = org.junit.rules.RuleChain.outerRule(testRule77);
        org.junit.rules.RuleChain ruleChain79 = ruleChain75.around((org.junit.rules.TestRule) ruleChain78);
        org.junit.rules.TestRule testRule80 = null;
        org.junit.rules.RuleChain ruleChain81 = org.junit.rules.RuleChain.outerRule(testRule80);
        org.junit.rules.TestRule testRule82 = null;
        org.junit.rules.RuleChain ruleChain83 = org.junit.rules.RuleChain.outerRule(testRule82);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain83;
        org.junit.rules.TestRule testRule85 = null;
        org.junit.rules.RuleChain ruleChain86 = org.junit.rules.RuleChain.outerRule(testRule85);
        org.junit.rules.RuleChain ruleChain87 = ruleChain83.around((org.junit.rules.TestRule) ruleChain86);
        org.junit.rules.TestRule testRule88 = null;
        org.junit.rules.RuleChain ruleChain89 = org.junit.rules.RuleChain.outerRule(testRule88);
        org.junit.rules.RuleChain[] ruleChainArray90 = new org.junit.rules.RuleChain[] { ruleChain75, ruleChain81, ruleChain83, ruleChain89 };
        java.util.List<org.junit.rules.RuleChain> ruleChainList91 = org.elasticsearch.test.ESTestCase.randomSubsetOf((int) (short) 0, ruleChainArray90);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("enwiki.random.lines.txt", (java.lang.Object[]) executorServiceArray31, (java.lang.Object[]) ruleChainArray90);
    }

    @Test
    public void test4487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4487");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.setUp();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader5 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum7 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum8 = null;
        kuromojiAnalysisTests1.assertDocsSkippingEquals("tests.badapples", indexReader5, 10, postingsEnum7, postingsEnum8, false);
        kuromojiAnalysisTests1.resetCheckIndexStatus();
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull("tests.monster", (java.lang.Object) kuromojiAnalysisTests1);
    }

    @Test
    public void test4488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4488");
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures1 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures2 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures1);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures3 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures4 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures3);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures5 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures6 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures5);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures7 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures8 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures7);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures9 = null;
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures testRuleIgnoreAfterMaxFailures10 = org.apache.lucene.util.LuceneTestCase.replaceMaxFailureRule(testRuleIgnoreAfterMaxFailures9);
        org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures[] testRuleIgnoreAfterMaxFailuresArray11 = new org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures[] { testRuleIgnoreAfterMaxFailures2, testRuleIgnoreAfterMaxFailures3, testRuleIgnoreAfterMaxFailures5, testRuleIgnoreAfterMaxFailures7, testRuleIgnoreAfterMaxFailures9 };
        java.util.List<org.apache.lucene.util.TestRuleIgnoreAfterMaxFailures> testRuleIgnoreAfterMaxFailuresList12 = org.elasticsearch.test.ESTestCase.randomSubsetOf(3, testRuleIgnoreAfterMaxFailuresArray11);
        java.lang.Object[] objArray13 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals((java.lang.Object[]) testRuleIgnoreAfterMaxFailuresArray11, objArray13);
    }

    @Test
    public void test4489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4489");
        byte[] byteArray2 = new byte[] {};
        byte[] byteArray3 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray2, byteArray3);
        byte[] byteArray6 = new byte[] {};
        byte[] byteArray7 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray6, byteArray7);
        org.junit.Assert.assertArrayEquals(byteArray3, byteArray6);
        byte[] byteArray11 = new byte[] {};
        byte[] byteArray12 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray11, byteArray12);
        byte[] byteArray15 = new byte[] {};
        byte[] byteArray16 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray15, byteArray16);
        org.junit.Assert.assertArrayEquals(byteArray12, byteArray15);
        org.junit.Assert.assertArrayEquals(byteArray6, byteArray15);
        byte[] byteArray21 = new byte[] {};
        byte[] byteArray22 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray21, byteArray22);
        org.junit.Assert.assertArrayEquals(byteArray15, byteArray22);
        byte[] byteArray26 = new byte[] {};
        byte[] byteArray27 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray26, byteArray27);
        byte[] byteArray30 = new byte[] {};
        byte[] byteArray31 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray30, byteArray31);
        org.junit.Assert.assertArrayEquals(byteArray27, byteArray30);
        byte[] byteArray35 = new byte[] {};
        byte[] byteArray36 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray35, byteArray36);
        byte[] byteArray39 = new byte[] {};
        byte[] byteArray40 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray39, byteArray40);
        org.junit.Assert.assertArrayEquals(byteArray36, byteArray39);
        org.junit.Assert.assertArrayEquals(byteArray30, byteArray39);
        org.junit.Assert.assertArrayEquals(byteArray22, byteArray30);
        byte[] byteArray46 = new byte[] {};
        byte[] byteArray47 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray46, byteArray47);
        byte[] byteArray50 = new byte[] {};
        byte[] byteArray51 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray50, byteArray51);
        org.junit.Assert.assertArrayEquals(byteArray47, byteArray50);
        byte[] byteArray55 = new byte[] {};
        byte[] byteArray56 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray55, byteArray56);
        byte[] byteArray59 = new byte[] {};
        byte[] byteArray60 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray59, byteArray60);
        org.junit.Assert.assertArrayEquals(byteArray56, byteArray59);
        org.junit.Assert.assertArrayEquals(byteArray50, byteArray59);
        org.junit.Assert.assertArrayEquals(byteArray22, byteArray59);
        byte[] byteArray67 = new byte[] {};
        byte[] byteArray68 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray67, byteArray68);
        byte[] byteArray71 = new byte[] {};
        byte[] byteArray72 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray71, byteArray72);
        org.junit.Assert.assertArrayEquals(byteArray68, byteArray71);
        byte[] byteArray76 = new byte[] {};
        byte[] byteArray77 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray76, byteArray77);
        byte[] byteArray80 = new byte[] {};
        byte[] byteArray81 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray80, byteArray81);
        org.junit.Assert.assertArrayEquals(byteArray77, byteArray80);
        byte[] byteArray85 = new byte[] {};
        byte[] byteArray86 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray85, byteArray86);
        byte[] byteArray89 = new byte[] {};
        byte[] byteArray90 = new byte[] {};
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray89, byteArray90);
        org.junit.Assert.assertArrayEquals(byteArray86, byteArray89);
        org.junit.Assert.assertArrayEquals(byteArray80, byteArray89);
        org.junit.Assert.assertArrayEquals("tests.failfast", byteArray71, byteArray80);
        org.junit.Assert.assertArrayEquals("<unknown>", byteArray59, byteArray80);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) byteArray80);
    }

    @Test
    public void test4490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4490");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Terms terms11 = null;
        org.apache.lucene.index.Terms terms12 = null;
        kuromojiAnalysisTests0.assertTermsEquals("hi!", indexReader10, terms11, terms12, true);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.maxfailures");
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.setIndexWriterMaxDocs(100);
        kuromojiAnalysisTests0.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader24 = null;
        org.apache.lucene.index.Terms terms25 = null;
        org.apache.lucene.index.Terms terms26 = null;
        kuromojiAnalysisTests0.assertTermsEquals("random", indexReader24, terms25, terms26, false);
        java.lang.String str29 = kuromojiAnalysisTests0.getTestName();
        org.apache.lucene.index.IndexReader indexReader31 = null;
        org.apache.lucene.index.Fields fields32 = null;
        org.apache.lucene.index.Fields fields33 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("random", indexReader31, fields32, fields33, false);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertPathHasBeenCleared("");
    }

    @Test
    public void test4491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4491");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((long) (byte) 100, (long) '#');
    }

    @Test
    public void test4492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4492");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule1 = kuromojiAnalysisTests0.ruleChain;
        org.junit.rules.TestRule testRule2 = null;
        org.junit.rules.RuleChain ruleChain3 = org.junit.rules.RuleChain.outerRule(testRule2);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain3;
        org.junit.rules.TestRule testRule5 = null;
        org.junit.rules.RuleChain ruleChain6 = org.junit.rules.RuleChain.outerRule(testRule5);
        org.junit.rules.RuleChain ruleChain7 = ruleChain3.around((org.junit.rules.TestRule) ruleChain6);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain3;
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain3;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests10 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule11 = kuromojiAnalysisTests10.ruleChain;
        org.junit.rules.TestRule testRule12 = null;
        org.junit.rules.RuleChain ruleChain13 = org.junit.rules.RuleChain.outerRule(testRule12);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain13;
        org.junit.rules.TestRule testRule15 = null;
        org.junit.rules.RuleChain ruleChain16 = org.junit.rules.RuleChain.outerRule(testRule15);
        org.junit.rules.RuleChain ruleChain17 = ruleChain13.around((org.junit.rules.TestRule) ruleChain16);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain13;
        kuromojiAnalysisTests10.failureAndSuccessEvents = ruleChain13;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests20 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests20.tearDown();
        org.apache.lucene.index.IndexReader indexReader23 = null;
        org.apache.lucene.index.Terms terms24 = null;
        org.apache.lucene.index.Terms terms25 = null;
        kuromojiAnalysisTests20.assertTermsEquals("tests.failfast", indexReader23, terms24, terms25, false);
        org.junit.rules.RuleChain ruleChain28 = kuromojiAnalysisTests20.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement29 = null;
        org.junit.runner.Description description30 = null;
        org.junit.runners.model.Statement statement31 = ruleChain28.apply(statement29, description30);
        org.junit.rules.RuleChain ruleChain32 = ruleChain13.around((org.junit.rules.TestRule) ruleChain28);
        org.junit.rules.TestRule testRule35 = null;
        org.junit.rules.RuleChain ruleChain36 = org.junit.rules.RuleChain.outerRule(testRule35);
        org.apache.lucene.util.LuceneTestCase.classRules = ruleChain36;
        org.junit.rules.TestRule testRule38 = null;
        org.junit.rules.RuleChain ruleChain39 = org.junit.rules.RuleChain.outerRule(testRule38);
        org.junit.rules.RuleChain ruleChain40 = ruleChain36.around((org.junit.rules.TestRule) ruleChain39);
        org.junit.Assert.assertNotSame("tests.maxfailures", (java.lang.Object) "tests.weekly", (java.lang.Object) ruleChain39);
        org.junit.rules.TestRule testRule42 = org.apache.lucene.util.LuceneTestCase.classRules;
        org.junit.rules.RuleChain ruleChain43 = ruleChain39.around(testRule42);
        org.junit.rules.RuleChain ruleChain44 = ruleChain32.around((org.junit.rules.TestRule) ruleChain39);
        org.junit.rules.RuleChain ruleChain45 = ruleChain3.around((org.junit.rules.TestRule) ruleChain32);
        org.junit.rules.RuleChain ruleChain46 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain3);
        org.junit.rules.RuleChain ruleChain47 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain3);
        org.junit.rules.RuleChain ruleChain48 = org.junit.rules.RuleChain.outerRule((org.junit.rules.TestRule) ruleChain47);
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) ruleChain48);
    }

    @Test
    public void test4493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4493");
        short[] shortArray4 = new short[] {};
        short[] shortArray5 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray4, shortArray5);
        short[] shortArray7 = new short[] {};
        short[] shortArray8 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray7, shortArray8);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray4, shortArray8);
        short[] shortArray12 = new short[] {};
        short[] shortArray13 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray12, shortArray13);
        short[] shortArray15 = new short[] {};
        short[] shortArray16 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray15, shortArray16);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray12, shortArray16);
        org.junit.Assert.assertArrayEquals("tests.maxfailures", shortArray8, shortArray12);
        short[] shortArray20 = new short[] {};
        short[] shortArray21 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray20, shortArray21);
        org.junit.Assert.assertArrayEquals("hi!", shortArray8, shortArray20);
        short[] shortArray26 = new short[] {};
        short[] shortArray27 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray26, shortArray27);
        short[] shortArray29 = new short[] {};
        short[] shortArray30 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray29, shortArray30);
        org.junit.Assert.assertArrayEquals("", shortArray27, shortArray29);
        short[] shortArray34 = new short[] {};
        short[] shortArray35 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray34, shortArray35);
        short[] shortArray37 = new short[] {};
        short[] shortArray38 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray37, shortArray38);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray34, shortArray38);
        org.junit.Assert.assertArrayEquals(shortArray27, shortArray34);
        short[] shortArray43 = new short[] {};
        short[] shortArray44 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray43, shortArray44);
        short[] shortArray47 = new short[] {};
        short[] shortArray48 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray47, shortArray48);
        short[] shortArray50 = new short[] {};
        short[] shortArray51 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray50, shortArray51);
        org.junit.Assert.assertArrayEquals("", shortArray48, shortArray50);
        short[] shortArray55 = new short[] {};
        short[] shortArray56 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray55, shortArray56);
        short[] shortArray58 = new short[] {};
        short[] shortArray59 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray58, shortArray59);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray55, shortArray59);
        org.junit.Assert.assertArrayEquals(shortArray48, shortArray55);
        org.junit.Assert.assertArrayEquals(shortArray43, shortArray48);
        short[] shortArray66 = new short[] {};
        short[] shortArray67 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray66, shortArray67);
        short[] shortArray69 = new short[] {};
        short[] shortArray70 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray69, shortArray70);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray66, shortArray70);
        short[] shortArray74 = new short[] {};
        short[] shortArray75 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray74, shortArray75);
        short[] shortArray77 = new short[] {};
        short[] shortArray78 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray77, shortArray78);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray74, shortArray78);
        org.junit.Assert.assertArrayEquals("<unknown>", shortArray66, shortArray78);
        short[] shortArray82 = new short[] {};
        short[] shortArray83 = new short[] {};
        org.junit.Assert.assertArrayEquals(shortArray82, shortArray83);
        org.junit.Assert.assertArrayEquals(shortArray78, shortArray82);
        org.junit.Assert.assertArrayEquals("tests.badapples", shortArray48, shortArray82);
        org.junit.Assert.assertArrayEquals("tests.awaitsfix", shortArray34, shortArray48);
        org.junit.Assert.assertArrayEquals("tests.weekly", shortArray8, shortArray48);
        short[] shortArray89 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertArrayEquals(shortArray48, shortArray89);
    }

    @Test
    public void test4494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4494");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        org.junit.rules.RuleChain ruleChain8 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.apache.lucene.index.IndexReader indexReader10 = null;
        org.apache.lucene.index.Fields fields11 = null;
        org.apache.lucene.index.Fields fields12 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("", indexReader10, fields11, fields12, true);
        kuromojiAnalysisTests0.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.junit.rules.RuleChain ruleChain17 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests18 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests18.tearDown();
        org.apache.lucene.index.IndexReader indexReader21 = null;
        org.apache.lucene.index.Terms terms22 = null;
        org.apache.lucene.index.Terms terms23 = null;
        kuromojiAnalysisTests18.assertTermsEquals("tests.failfast", indexReader21, terms22, terms23, false);
        kuromojiAnalysisTests18.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests18.assertPathHasBeenCleared("tests.badapples");
        org.junit.Assert.assertNotNull((java.lang.Object) kuromojiAnalysisTests18);
        kuromojiAnalysisTests18.tearDown();
        kuromojiAnalysisTests18.ensureCheckIndexPassed();
        org.junit.rules.RuleChain ruleChain32 = kuromojiAnalysisTests18.failureAndSuccessEvents;
        org.junit.Assert.assertNotNull((java.lang.Object) ruleChain32);
        kuromojiAnalysisTests0.failureAndSuccessEvents = ruleChain32;
        java.lang.Object obj35 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((java.lang.Object) ruleChain32, obj35);
    }

    @Test
    public void test4495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4495");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests1 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests1.tearDown();
        org.apache.lucene.index.IndexReader indexReader4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        org.apache.lucene.index.Terms terms6 = null;
        kuromojiAnalysisTests1.assertTermsEquals("tests.failfast", indexReader4, terms5, terms6, false);
        kuromojiAnalysisTests1.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain11 = kuromojiAnalysisTests1.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests12 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests12.tearDown();
        org.apache.lucene.index.IndexReader indexReader15 = null;
        org.apache.lucene.index.Terms terms16 = null;
        org.apache.lucene.index.Terms terms17 = null;
        kuromojiAnalysisTests12.assertTermsEquals("tests.failfast", indexReader15, terms16, terms17, false);
        kuromojiAnalysisTests12.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests12.ensureAllSearchContextsReleased();
        kuromojiAnalysisTests12.setIndexWriterMaxDocs((int) (byte) 100);
        kuromojiAnalysisTests12.ensureCleanedUp();
        org.junit.Assert.assertNotEquals("tests.monster", (java.lang.Object) ruleChain11, (java.lang.Object) kuromojiAnalysisTests12);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests27 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests27.tearDown();
        org.apache.lucene.index.IndexReader indexReader30 = null;
        org.apache.lucene.index.Terms terms31 = null;
        org.apache.lucene.index.Terms terms32 = null;
        kuromojiAnalysisTests27.assertTermsEquals("tests.failfast", indexReader30, terms31, terms32, false);
        kuromojiAnalysisTests27.assertPathHasBeenCleared("tests.nightly");
        org.junit.rules.RuleChain ruleChain37 = kuromojiAnalysisTests27.failureAndSuccessEvents;
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests38 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests38.tearDown();
        org.apache.lucene.index.IndexReader indexReader41 = null;
        org.apache.lucene.index.Terms terms42 = null;
        org.apache.lucene.index.Terms terms43 = null;
        kuromojiAnalysisTests38.assertTermsEquals("tests.failfast", indexReader41, terms42, terms43, false);
        org.junit.rules.RuleChain ruleChain46 = kuromojiAnalysisTests38.failureAndSuccessEvents;
        org.junit.runners.model.Statement statement47 = null;
        org.junit.runner.Description description48 = null;
        org.junit.runners.model.Statement statement49 = ruleChain46.apply(statement47, description48);
        org.junit.runner.Description description50 = null;
        org.junit.runners.model.Statement statement51 = ruleChain37.apply(statement49, description50);
        org.junit.runner.Description description52 = null;
        org.junit.runners.model.Statement statement53 = ruleChain11.apply(statement49, description52);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests54 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests54.setUp();
        kuromojiAnalysisTests54.tearDown();
        org.apache.lucene.index.IndexReader indexReader58 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum60 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum61 = null;
        kuromojiAnalysisTests54.assertPositionsSkippingEquals("tests.maxfailures", indexReader58, 0, postingsEnum60, postingsEnum61);
        kuromojiAnalysisTests54.ensureCleanedUp();
        org.apache.lucene.index.IndexReader indexReader65 = null;
        org.apache.lucene.index.Terms terms66 = null;
        org.apache.lucene.index.Terms terms67 = null;
        kuromojiAnalysisTests54.assertTermsEquals("", indexReader65, terms66, terms67, false);
        kuromojiAnalysisTests54.overrideTestDefaultQueryCache();
        org.junit.Assert.assertNotSame((java.lang.Object) ruleChain11, (java.lang.Object) kuromojiAnalysisTests54);
        org.apache.lucene.index.NumericDocValues numericDocValues74 = null;
        org.apache.lucene.index.NumericDocValues numericDocValues75 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests54.assertDocValuesEquals("tests.maxfailures", 3, numericDocValues74, numericDocValues75);
    }

    @Test
    public void test4496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4496");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals("tests.weekly", (long) 'a', (long) (short) 10);
    }

    @Test
    public void test4497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4497");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.assertPathHasBeenCleared("tests.nightly");
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.Fields fields13 = null;
        org.apache.lucene.index.Fields fields14 = null;
        kuromojiAnalysisTests0.assertFieldsEquals("tests.weekly", indexReader12, fields13, fields14, true);
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.PostingsEnum postingsEnum19 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum20 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests0.assertDocsAndPositionsEnumEquals("europarl.lines.txt.gz", postingsEnum19, postingsEnum20);
    }

    @Test
    public void test4498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4498");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests0.tearDown();
        org.apache.lucene.index.IndexReader indexReader3 = null;
        org.apache.lucene.index.Terms terms4 = null;
        org.apache.lucene.index.Terms terms5 = null;
        kuromojiAnalysisTests0.assertTermsEquals("tests.failfast", indexReader3, terms4, terms5, false);
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        kuromojiAnalysisTests0.ensureCleanedUp();
        kuromojiAnalysisTests0.restoreIndexWriterMaxDocs();
        org.apache.lucene.index.IndexReader indexReader12 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum14 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum15 = null;
        kuromojiAnalysisTests0.assertPositionsSkippingEquals("<unknown>", indexReader12, (-1), postingsEnum14, postingsEnum15);
        kuromojiAnalysisTests0.ensureCheckIndexPassed();
        org.junit.rules.RuleChain ruleChain18 = kuromojiAnalysisTests0.failureAndSuccessEvents;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertNull((java.lang.Object) kuromojiAnalysisTests0);
    }

    @Test
    public void test4499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4499");
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        org.junit.Assert.assertEquals((double) 4, (double) 0L);
    }

    @Test
    public void test4500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest8.test4500");
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests0 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.apache.lucene.index.PostingsEnum postingsEnum2 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum3 = null;
        kuromojiAnalysisTests0.assertDocsEnumEquals("tests.failfast", postingsEnum2, postingsEnum3, true);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests6 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        org.junit.rules.TestRule testRule7 = kuromojiAnalysisTests6.ruleChain;
        kuromojiAnalysisTests6.ensureCleanedUp();
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests10 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests10.tearDown();
        org.apache.lucene.index.IndexReader indexReader13 = null;
        org.apache.lucene.index.Terms terms14 = null;
        org.apache.lucene.index.Terms terms15 = null;
        kuromojiAnalysisTests10.assertTermsEquals("tests.failfast", indexReader13, terms14, terms15, false);
        org.junit.rules.RuleChain ruleChain18 = kuromojiAnalysisTests10.failureAndSuccessEvents;
        org.junit.Assert.assertNotSame("hi!", (java.lang.Object) ruleChain18, (java.lang.Object) "tests.weekly");
        org.junit.Assert.assertNotSame((java.lang.Object) kuromojiAnalysisTests6, (java.lang.Object) ruleChain18);
        org.junit.Assert.assertNotSame((java.lang.Object) postingsEnum2, (java.lang.Object) kuromojiAnalysisTests6);
        kuromojiAnalysisTests6.setIndexWriterMaxDocs((int) (byte) -1);
        org.elasticsearch.index.analysis.KuromojiAnalysisTests kuromojiAnalysisTests25 = new org.elasticsearch.index.analysis.KuromojiAnalysisTests();
        kuromojiAnalysisTests25.tearDown();
        org.apache.lucene.index.IndexReader indexReader28 = null;
        org.apache.lucene.index.Terms terms29 = null;
        org.apache.lucene.index.Terms terms30 = null;
        kuromojiAnalysisTests25.assertTermsEquals("tests.failfast", indexReader28, terms29, terms30, false);
        kuromojiAnalysisTests25.overrideTestDefaultQueryCache();
        org.junit.rules.RuleChain ruleChain34 = kuromojiAnalysisTests25.failureAndSuccessEvents;
        kuromojiAnalysisTests6.failureAndSuccessEvents = ruleChain34;
        java.lang.String str36 = kuromojiAnalysisTests6.getTestName();
        org.apache.lucene.index.PostingsEnum postingsEnum38 = null;
        org.apache.lucene.index.PostingsEnum postingsEnum39 = null;
        // during test generation this statement threw an exception of type java.lang.AssertionError in error
        kuromojiAnalysisTests6.assertDocsAndPositionsEnumEquals("hi!", postingsEnum38, postingsEnum39);
    }
}

