/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 05 16:09:52 GMT 2021
 */

package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.SequenceInputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import java.net.UnknownServiceException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.UnsupportedCharsetException;
import java.util.Collection;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import java.util.function.BiConsumer;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.jsoup.Connection;
import org.jsoup.helper.HttpConnection;
import org.jsoup.nodes.Attribute;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.TextNode;
import org.jsoup.parser.Parser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HttpConnection$Response_ESTest extends HttpConnection$Response_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      boolean boolean0 = false;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(boolean0).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      assertNotNull(sequenceInputStream0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      
      String string0 = HttpConnection.Response.LOCATION;
      assertEquals("Location", string0);
      assertNotNull(string0);
      
      Connection.Method connection_Method0 = Connection.Method.PUT;
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      
      HttpConnection.Response httpConnection_Response2 = (HttpConnection.Response)httpConnection_Response1.method(connection_Method0);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response2.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response2.executed);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertSame(httpConnection_Response1, httpConnection_Response2);
      assertSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response2);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.PUT, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertEquals(0, httpConnection_Response2.statusCode());
      assertNull(httpConnection_Response2.charset());
      assertEquals(Connection.Method.PUT, httpConnection_Response2.method());
      
      int int0 = httpConnection_Response1.statusCode();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertSame(httpConnection_Response1, httpConnection_Response2);
      assertEquals(0, int0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.PUT, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      
      String string1 = null;
      String string2 = "iP";
      String string3 = "org.jsoup.select.Evaluator$IndexEquals";
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      httpConnection_Request0.timeoutMilliseconds = httpConnection_Request0.timeoutMilliseconds;
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      String string0 = "#comment";
      boolean boolean0 = httpConnection_Request0.hasHeader(string0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(boolean0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      
      int int0 = 47;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(47, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(47, httpConnection_Request2.timeout());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      boolean boolean1 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNotNull(httpConnection_Request3);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(47, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      String string1 = httpConnection_Request3.cookie(string0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNull(string1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(47, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      int int1 = 0;
      String string2 = "$dmy.j 1>;omlbddx";
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.header(string0, string0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(47, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string0, string2);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertFalse(string0.equals((Object)string2));
      assertNotNull(httpConnection_Request4);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(47, httpConnection_Request4.timeout());
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request2.timeout(int1);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertEquals(0, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertNotNull(httpConnection_Request5);
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals(0, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(0, httpConnection_Request2.timeout());
      
      String string3 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertFalse(int0 == int1);
      assertNull(string3);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(0, httpConnection_Request2.timeout());
      
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotNull(httpConnection_Response0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertFalse(int0 == int1);
      assertNotNull(httpURLConnection0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getUseCaches());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertTrue(httpURLConnection0.getDoInput());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertNull(httpURLConnection0.getContentType());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertFalse(httpURLConnection0.getDoOutput());
      assertNull(httpURLConnection0.getContentEncoding());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(0, httpConnection_Request2.timeout());
      
      String string4 = HttpConnection.Response.getRequestCookieString(httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertEquals("", string4);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(0, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      String string5 = httpConnection_Response0.body();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string5, string2);
      assertNotSame(string5, string0);
      assertNotSame(string5, string4);
      assertEquals("#comment", string5);
      assertTrue(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertNotNull(string5);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      
      httpConnection_Response0.setupFromConnection(httpURLConnection0, httpConnection_Response1);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(int0 == int1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getUseCaches());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertTrue(httpURLConnection0.getDoInput());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertNull(httpURLConnection0.getContentType());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertFalse(httpURLConnection0.getDoOutput());
      assertNull(httpURLConnection0.getContentEncoding());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(0, httpConnection_Request2.timeout());
      
      int int2 = 1;
      Random.setNextRandom(int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      String string6 = httpConnection_Response1.charset();
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNull(string6);
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      
      String string7 = httpConnection_Response1.statusMessage();
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNull(string7);
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      
      int int3 = httpConnection_Response0.statusCode();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertEquals((-1), int3);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(int3 == int2);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      
      Document document0 = httpConnection_Response0.parse();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertNotNull(document0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals("UTF-8", httpConnection_Response0.charset());
      assertEquals(1, document0.childNodeSize());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertEquals("#document", document0.nodeName());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", document0.location());
      assertEquals("#root", document0.tagName());
      assertEquals(0, document0.siblingIndex());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", document0.baseUri());
      assertFalse(document0.isBlock());
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      httpConnection_Request0.timeoutMilliseconds = httpConnection_Request0.timeoutMilliseconds;
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      String string0 = "#com+ent";
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      
      int int0 = 47;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(47, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(47, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      boolean boolean1 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNotNull(httpConnection_Request3);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(47, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request1.timeout());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(47, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      
      int int1 = 0;
      String string1 = "Request must not be null";
      String string2 = "BeforeHead";
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.cookie(string1, string2);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(httpConnection_Request4);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(47, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(47, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      
      EvoSuiteFile evoSuiteFile0 = null;
      String string3 = "$dmy.j 1>;omlbddx";
      boolean boolean2 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string3);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertFalse(boolean2);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request2.parser(httpConnection_Request2.parser);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertEquals(47, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(int0 == int1);
      assertNotNull(httpConnection_Request5);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(47, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(47, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(47, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      HttpConnection.Request httpConnection_Request6 = httpConnection_Request2.timeout(int1);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request6.ignoreContentType);
      assertTrue(httpConnection_Request6.followRedirects);
      assertEquals(0, httpConnection_Request6.timeoutMilliseconds);
      assertFalse(httpConnection_Request6.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertNotNull(httpConnection_Request6);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertFalse(httpConnection_Request6.ignoreContentType());
      assertEquals(0, httpConnection_Request6.timeout());
      assertTrue(httpConnection_Request6.followRedirects());
      assertFalse(httpConnection_Request6.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      String string4 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(int0 == int1);
      assertNull(string4);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      
      HttpConnection.Response httpConnection_Response1 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      
      Map<String, String> map0 = httpConnection_Response1.headers;
      assertNotNull(map0);
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      
      httpConnection_Request1.headers = map0;
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals(0, httpConnection_Request1.headers.size());
      assertTrue(httpConnection_Request1.headers.isEmpty());
      
      HttpConnection.Response httpConnection_Response2 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(0, httpConnection_Response2.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response2);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response2.contentType());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.charset());
      
      httpConnection_Response2.statusMessage = string0;
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("#com+ent", httpConnection_Response2.statusMessage());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.charset());
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(int0 == int1);
      assertNotNull(httpURLConnection0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.usingProxy());
      
      String string5 = httpConnection_Response2.body();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(0, httpConnection_Response2.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(string5, string2);
      assertNotSame(string5, string0);
      assertNotSame(string5, string1);
      assertNotSame(string5, string3);
      assertEquals("#com+ent", string5);
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertTrue(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertNotNull(string5);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("#com+ent", httpConnection_Response2.statusMessage());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.charset());
      
      String string6 = httpConnection_Response2.body();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(0, httpConnection_Response2.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(string6, string2);
      assertNotSame(string6, string0);
      assertNotSame(string6, string1);
      assertNotSame(string6, string5);
      assertNotSame(string6, string3);
      assertEquals("#com+ent", string6);
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string1));
      assertTrue(string6.equals((Object)string5));
      assertTrue(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string3));
      assertNotNull(string6);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("#com+ent", httpConnection_Response2.statusMessage());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.charset());
      
      HttpConnection.Response httpConnection_Response3 = new HttpConnection.Response();
      assertFalse(httpConnection_Response3.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response3.numRedirects);
      assertEquals(0, httpConnection_Response3.statusCode);
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response2));
      assertNotNull(httpConnection_Response3);
      assertNull(httpConnection_Response3.charset());
      assertNull(httpConnection_Response3.method());
      assertNull(httpConnection_Response3.contentType());
      assertNull(httpConnection_Response3.statusMessage());
      assertEquals(0, httpConnection_Response3.statusCode());
      
      httpConnection_Response2.setupFromConnection(httpURLConnection0, httpConnection_Response3);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Response2.executed);
      assertEquals((-1), httpConnection_Response2.statusCode);
      assertEquals(0, httpConnection_Response2.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response3.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response3.numRedirects);
      assertEquals(0, httpConnection_Response3.statusCode);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotSame(httpConnection_Response2, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response3, httpConnection_Response1);
      assertNotSame(httpConnection_Response3, httpConnection_Response0);
      assertNotSame(httpConnection_Response3, httpConnection_Response2);
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response2));
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertNull(httpConnection_Response2.contentType());
      assertEquals((-1), httpConnection_Response2.statusCode());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.charset());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.usingProxy());
      assertNull(httpConnection_Response3.charset());
      assertNull(httpConnection_Response3.method());
      assertNull(httpConnection_Response3.contentType());
      assertNull(httpConnection_Response3.statusMessage());
      assertEquals(0, httpConnection_Response3.statusCode());
      
      int int2 = 1;
      Random.setNextRandom(httpConnection_Request3.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request6);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(0, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      String string7 = HttpConnection.Response.getRequestCookieString(httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertNotSame(string7, string2);
      assertNotSame(string7, string1);
      assertNotSame(string7, string0);
      assertNotSame(string7, string5);
      assertNotSame(string7, string3);
      assertNotSame(string7, string6);
      assertEquals("Request must not be null=BeforeHead", string7);
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string5));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string6));
      assertNotNull(string7);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      // Undeclared exception!
      try { 
        httpConnection_Response3.parse();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before parsing response
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      String string0 = ":.(";
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      Parser parser0 = Parser.xmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      String string0 = ";Vu\"-;NXBGE";
      String string1 = "/ep}5";
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Collection<String> collection0 = null;
      LinkedList<String> linkedList1 = new LinkedList<String>();
      assertFalse(linkedList1.contains(string0));
      assertNotNull(linkedList1);
      assertEquals(0, linkedList1.size());
      
      List<String> list0 = hashMap0.put(string1, linkedList1);
      assertNotSame(string1, string0);
      assertFalse(linkedList1.contains(string0));
      assertFalse(string1.equals((Object)string0));
      assertNull(list0);
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertEquals(0, linkedList1.size());
      
      List<String> list1 = null;
      String string2 = null;
      String string3 = "o5UKA";
      boolean boolean0 = linkedList1.add(string3);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertTrue(linkedList1.contains(string3));
      assertFalse(linkedList1.contains(string0));
      assertTrue(boolean0);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals(1, linkedList1.size());
      
      List<String> list2 = hashMap0.put(string2, list1);
      assertNull(list2);
      assertFalse(hashMap0.isEmpty());
      assertEquals(2, hashMap0.size());
      
      List<String> list3 = hashMap0.replace(string0, list1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertNull(list3);
      assertFalse(hashMap0.isEmpty());
      assertEquals(2, hashMap0.size());
      
      List<String> list4 = hashMap0.put(httpConnection_Response0.contentType, linkedList1);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(linkedList1.contains(string3));
      assertFalse(linkedList1.contains(string0));
      assertNull(list4);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertFalse(hashMap0.isEmpty());
      assertEquals(2, hashMap0.size());
      assertEquals(1, linkedList1.size());
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertFalse(hashMap0.isEmpty());
      assertEquals(2, hashMap0.size());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      String string0 = ";Vu\"-;NXBGE";
      String string1 = "/ep}5";
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Collection<String> collection0 = null;
      LinkedList<String> linkedList1 = new LinkedList<String>();
      assertFalse(linkedList1.contains(string0));
      assertNotNull(linkedList1);
      assertEquals(0, linkedList1.size());
      
      List<String> list0 = null;
      String string2 = null;
      List<String> list1 = hashMap0.put(string2, list0);
      assertNull(list1);
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      
      List<String> list2 = hashMap0.replace(string0, list0);
      assertNotSame(string0, string1);
      assertFalse(string0.equals((Object)string1));
      assertNull(list2);
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      
      List<String> list3 = hashMap0.put(string0, linkedList1);
      assertNotSame(string0, string1);
      assertFalse(linkedList1.contains(string0));
      assertFalse(string0.equals((Object)string1));
      assertNull(list3);
      assertEquals(2, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(0, linkedList1.size());
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals(2, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      String string0 = "y";
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      assertNotNull(bufferedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      int int0 = 0;
      pipedInputStream0.mark(int0);
      assertEquals(0, pipedInputStream0.available());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNotNull(httpConnection_KeyVal0);
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      
      int int1 = 80;
      HttpConnection.Response httpConnection_Response0 = null;
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      
      int int2 = httpConnection_Response1.statusCode();
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, int2);
      assertTrue(int2 == int0);
      assertFalse(int2 == int1);
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      HashMap<String, List<String>> hashMap1 = new HashMap<String, List<String>>(hashMap0);
      assertTrue(hashMap1.equals((Object)hashMap0));
      assertNotNull(hashMap1);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap1.isEmpty());
      assertEquals(0, hashMap1.size());
      
      httpConnection_Response1.processResponseHeaders(hashMap1);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertNotSame(hashMap0, hashMap1);
      assertNotSame(hashMap1, hashMap0);
      assertTrue(hashMap0.equals((Object)hashMap1));
      assertTrue(hashMap1.equals((Object)hashMap0));
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap1.isEmpty());
      assertEquals(0, hashMap1.size());
      
      int int3 = httpConnection_Response1.statusCode();
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, int3);
      assertTrue(int3 == int2);
      assertFalse(int3 == int1);
      assertTrue(int3 == int0);
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      
      // Undeclared exception!
      try { 
        httpConnection_Response1.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      String string0 = "y";
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      assertNotNull(bufferedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      pipedInputStream0.close();
      assertEquals(0, pipedInputStream0.available());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNotNull(httpConnection_KeyVal0);
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      
      int int0 = 0;
      pipedInputStream0.mark(int0);
      assertEquals(0, pipedInputStream0.available());
      
      HttpConnection.KeyVal httpConnection_KeyVal1 = new HttpConnection.KeyVal();
      assertFalse(httpConnection_KeyVal1.equals((Object)httpConnection_KeyVal0));
      assertNotNull(httpConnection_KeyVal1);
      assertNull(httpConnection_KeyVal1.key());
      assertNull(httpConnection_KeyVal1.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal1);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_KeyVal1.equals((Object)httpConnection_KeyVal0));
      assertNotNull(httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertNull(httpConnection_KeyVal1.key());
      assertNull(httpConnection_KeyVal1.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.ignoreContentType(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(httpConnection_KeyVal1.equals((Object)httpConnection_KeyVal0));
      assertNotNull(httpConnection_Request2);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_KeyVal1.key());
      assertNull(httpConnection_KeyVal1.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(3000, httpConnection_Request2.timeout());
      
      httpConnection_KeyVal0.stream = (InputStream) pipedInputStream0;
      assertEquals(0, pipedInputStream0.available());
      assertNull(httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      
      String string1 = "";
      HttpConnection.KeyVal httpConnection_KeyVal2 = HttpConnection.KeyVal.create(string0, string1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal1);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal1));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal0));
      assertNotNull(httpConnection_KeyVal2);
      assertFalse(httpConnection_KeyVal2.hasInputStream());
      assertEquals("y", httpConnection_KeyVal2.key());
      assertEquals("", httpConnection_KeyVal2.value());
      
      String string2 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_KeyVal1, httpConnection_KeyVal2);
      assertNotSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(httpConnection_KeyVal1.equals((Object)httpConnection_KeyVal2));
      assertFalse(httpConnection_KeyVal1.equals((Object)httpConnection_KeyVal0));
      assertNull(string2);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_KeyVal1.key());
      assertNull(httpConnection_KeyVal1.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(3000, httpConnection_Request2.timeout());
      
      int int1 = 80;
      httpConnection_Request1.timeoutMilliseconds = int1;
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(80, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_KeyVal1.key());
      assertNull(httpConnection_KeyVal1.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(80, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.createConnection(httpConnection_Request1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
          assertTrue(httpConnection_Request0.followRedirects);
          assertFalse(httpConnection_Request0.ignoreContentType);
          assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
          assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
          assertFalse(httpConnection_Request0.ignoreHttpErrors);
          assertNotNull(httpConnection_Request0);
          assertFalse(httpConnection_Request0.ignoreContentType());
          assertEquals(Connection.Method.GET, httpConnection_Request0.method());
          assertTrue(httpConnection_Request0.followRedirects());
          assertEquals(1048576, httpConnection_Request0.maxBodySize());
          assertFalse(httpConnection_Request0.ignoreHttpErrors());
          assertEquals(3000, httpConnection_Request0.timeout());
          
          boolean boolean0 = true;
          URL uRL0 = MockURL.getHttpExample();
          assertNotNull(uRL0);
          assertEquals((-1), uRL0.getPort());
          assertNull(uRL0.getQuery());
          assertEquals("http", uRL0.getProtocol());
          assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
          assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
          assertNull(uRL0.getUserInfo());
          assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
          assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
          assertNull(uRL0.getRef());
          assertEquals((-1), uRL0.getDefaultPort());
          
          HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.url(uRL0);
          assertTrue(httpConnection_Request0.followRedirects);
          assertFalse(httpConnection_Request0.ignoreContentType);
          assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
          assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
          assertFalse(httpConnection_Request0.ignoreHttpErrors);
          assertFalse(httpConnection_Request1.ignoreContentType);
          assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
          assertFalse(httpConnection_Request1.ignoreHttpErrors);
          assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
          assertTrue(httpConnection_Request1.followRedirects);
          assertSame(httpConnection_Request0, httpConnection_Request1);
          assertSame(httpConnection_Request1, httpConnection_Request0);
          assertNotNull(httpConnection_Request1);
          assertFalse(httpConnection_Request0.ignoreContentType());
          assertEquals(Connection.Method.GET, httpConnection_Request0.method());
          assertTrue(httpConnection_Request0.followRedirects());
          assertEquals(1048576, httpConnection_Request0.maxBodySize());
          assertFalse(httpConnection_Request0.ignoreHttpErrors());
          assertEquals(3000, httpConnection_Request0.timeout());
          assertEquals((-1), uRL0.getPort());
          assertNull(uRL0.getQuery());
          assertEquals("http", uRL0.getProtocol());
          assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
          assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
          assertNull(uRL0.getUserInfo());
          assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
          assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
          assertNull(uRL0.getRef());
          assertEquals((-1), uRL0.getDefaultPort());
          assertEquals(Connection.Method.GET, httpConnection_Request1.method());
          assertEquals(3000, httpConnection_Request1.timeout());
          assertEquals(1048576, httpConnection_Request1.maxBodySize());
          assertFalse(httpConnection_Request1.ignoreContentType());
          assertTrue(httpConnection_Request1.followRedirects());
          assertFalse(httpConnection_Request1.ignoreHttpErrors());
          
          HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.parser(httpConnection_Request0.parser);
          assertTrue(httpConnection_Request0.followRedirects);
          assertFalse(httpConnection_Request0.ignoreContentType);
          assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
          assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
          assertFalse(httpConnection_Request0.ignoreHttpErrors);
          assertFalse(httpConnection_Request2.ignoreContentType);
          assertTrue(httpConnection_Request2.followRedirects);
          assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
          assertFalse(httpConnection_Request2.ignoreHttpErrors);
          assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
          assertSame(httpConnection_Request0, httpConnection_Request2);
          assertSame(httpConnection_Request0, httpConnection_Request1);
          assertSame(httpConnection_Request2, httpConnection_Request1);
          assertSame(httpConnection_Request2, httpConnection_Request0);
          assertNotNull(httpConnection_Request2);
          assertFalse(httpConnection_Request0.ignoreContentType());
          assertEquals(Connection.Method.GET, httpConnection_Request0.method());
          assertTrue(httpConnection_Request0.followRedirects());
          assertEquals(1048576, httpConnection_Request0.maxBodySize());
          assertFalse(httpConnection_Request0.ignoreHttpErrors());
          assertEquals(3000, httpConnection_Request0.timeout());
          assertEquals(Connection.Method.GET, httpConnection_Request2.method());
          assertEquals(1048576, httpConnection_Request2.maxBodySize());
          assertFalse(httpConnection_Request2.ignoreContentType());
          assertTrue(httpConnection_Request2.followRedirects());
          assertFalse(httpConnection_Request2.ignoreHttpErrors());
          assertEquals(3000, httpConnection_Request2.timeout());
          
          HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request0.ignoreHttpErrors(boolean0);
          assertTrue(httpConnection_Request0.followRedirects);
          assertFalse(httpConnection_Request0.ignoreContentType);
          assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
          assertTrue(httpConnection_Request0.ignoreHttpErrors);
          assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
          assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
          assertFalse(httpConnection_Request3.ignoreContentType);
          assertTrue(httpConnection_Request3.followRedirects);
          assertTrue(httpConnection_Request3.ignoreHttpErrors);
          assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
          assertSame(httpConnection_Request0, httpConnection_Request3);
          assertSame(httpConnection_Request0, httpConnection_Request2);
          assertSame(httpConnection_Request0, httpConnection_Request1);
          assertSame(httpConnection_Request3, httpConnection_Request2);
          assertSame(httpConnection_Request3, httpConnection_Request0);
          assertSame(httpConnection_Request3, httpConnection_Request1);
          assertNotNull(httpConnection_Request3);
          assertTrue(httpConnection_Request0.ignoreHttpErrors());
          assertFalse(httpConnection_Request0.ignoreContentType());
          assertEquals(Connection.Method.GET, httpConnection_Request0.method());
          assertTrue(httpConnection_Request0.followRedirects());
          assertEquals(1048576, httpConnection_Request0.maxBodySize());
          assertEquals(3000, httpConnection_Request0.timeout());
          assertFalse(httpConnection_Request3.ignoreContentType());
          assertEquals(3000, httpConnection_Request3.timeout());
          assertEquals(Connection.Method.GET, httpConnection_Request3.method());
          assertTrue(httpConnection_Request3.ignoreHttpErrors());
          assertTrue(httpConnection_Request3.followRedirects());
          assertEquals(1048576, httpConnection_Request3.maxBodySize());
          
          HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request3);
          assertTrue(httpConnection_Request0.followRedirects);
          assertFalse(httpConnection_Request0.ignoreContentType);
          assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
          assertTrue(httpConnection_Request0.ignoreHttpErrors);
          assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
          assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
          assertFalse(httpConnection_Request3.ignoreContentType);
          assertTrue(httpConnection_Request3.followRedirects);
          assertTrue(httpConnection_Request3.ignoreHttpErrors);
          assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
          assertSame(httpConnection_Request0, httpConnection_Request3);
          assertSame(httpConnection_Request0, httpConnection_Request2);
          assertSame(httpConnection_Request0, httpConnection_Request1);
          assertSame(httpConnection_Request3, httpConnection_Request2);
          assertSame(httpConnection_Request3, httpConnection_Request0);
          assertSame(httpConnection_Request3, httpConnection_Request1);
          assertNotNull(httpURLConnection0);
          assertTrue(httpConnection_Request0.ignoreHttpErrors());
          assertFalse(httpConnection_Request0.ignoreContentType());
          assertEquals(Connection.Method.GET, httpConnection_Request0.method());
          assertTrue(httpConnection_Request0.followRedirects());
          assertEquals(1048576, httpConnection_Request0.maxBodySize());
          assertEquals(3000, httpConnection_Request0.timeout());
          assertFalse(httpConnection_Request3.ignoreContentType());
          assertEquals(3000, httpConnection_Request3.timeout());
          assertEquals(Connection.Method.GET, httpConnection_Request3.method());
          assertTrue(httpConnection_Request3.ignoreHttpErrors());
          assertTrue(httpConnection_Request3.followRedirects());
          assertEquals(1048576, httpConnection_Request3.maxBodySize());
          assertNull(httpURLConnection0.getContentType());
          assertEquals(0L, httpURLConnection0.getIfModifiedSince());
          assertFalse(httpURLConnection0.usingProxy());
          assertFalse(httpURLConnection0.getAllowUserInteraction());
          assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
          assertTrue(httpURLConnection0.getUseCaches());
          assertFalse(httpURLConnection0.getInstanceFollowRedirects());
          assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
          assertEquals("GET", httpURLConnection0.getRequestMethod());
          assertFalse(httpURLConnection0.getDoOutput());
          assertNull(httpURLConnection0.getContentEncoding());
          assertEquals(3000, httpURLConnection0.getConnectTimeout());
          assertTrue(httpURLConnection0.getDoInput());
          assertTrue(httpURLConnection0.getDefaultUseCaches());
          assertTrue(httpURLConnection0.getFollowRedirects());
          assertEquals((-1), httpURLConnection0.getContentLength());
          assertEquals(3000, httpURLConnection0.getReadTimeout());
          
          int int0 = 38;
          boolean boolean1 = true;
          httpConnection_Request0.followRedirects = boolean1;
          assertTrue(httpConnection_Request0.ignoreHttpErrors());
          assertFalse(httpConnection_Request0.ignoreContentType());
          assertEquals(Connection.Method.GET, httpConnection_Request0.method());
          assertTrue(httpConnection_Request0.followRedirects());
          assertEquals(1048576, httpConnection_Request0.maxBodySize());
          assertEquals(3000, httpConnection_Request0.timeout());
          
          HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.maxBodySize(int0);
          assertTrue(httpConnection_Request0.followRedirects);
          assertFalse(httpConnection_Request0.ignoreContentType);
          assertEquals(38, httpConnection_Request0.maxBodySizeBytes);
          assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
          assertTrue(httpConnection_Request0.ignoreHttpErrors);
          assertTrue(httpConnection_Request4.ignoreHttpErrors);
          assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
          assertFalse(httpConnection_Request4.ignoreContentType);
          assertTrue(httpConnection_Request4.followRedirects);
          assertEquals(38, httpConnection_Request4.maxBodySizeBytes);
          assertSame(httpConnection_Request0, httpConnection_Request3);
          assertSame(httpConnection_Request0, httpConnection_Request4);
          assertSame(httpConnection_Request0, httpConnection_Request2);
          assertSame(httpConnection_Request0, httpConnection_Request1);
          assertSame(httpConnection_Request4, httpConnection_Request2);
          assertSame(httpConnection_Request4, httpConnection_Request3);
          assertSame(httpConnection_Request4, httpConnection_Request0);
          assertSame(httpConnection_Request4, httpConnection_Request1);
          assertNotNull(httpConnection_Request4);
          assertTrue(httpConnection_Request0.ignoreHttpErrors());
          assertFalse(httpConnection_Request0.ignoreContentType());
          assertEquals(Connection.Method.GET, httpConnection_Request0.method());
          assertTrue(httpConnection_Request0.followRedirects());
          assertEquals(3000, httpConnection_Request0.timeout());
          assertEquals(38, httpConnection_Request0.maxBodySize());
          assertFalse(httpConnection_Request4.ignoreContentType());
          assertTrue(httpConnection_Request4.followRedirects());
          assertEquals(Connection.Method.GET, httpConnection_Request4.method());
          assertTrue(httpConnection_Request4.ignoreHttpErrors());
          assertEquals(38, httpConnection_Request4.maxBodySize());
          assertEquals(3000, httpConnection_Request4.timeout());
          
          HttpURLConnection httpURLConnection1 = HttpConnection.Response.createConnection(httpConnection_Request4);
          assertTrue(httpConnection_Request0.followRedirects);
          assertFalse(httpConnection_Request0.ignoreContentType);
          assertEquals(38, httpConnection_Request0.maxBodySizeBytes);
          assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
          assertTrue(httpConnection_Request0.ignoreHttpErrors);
          assertTrue(httpConnection_Request4.ignoreHttpErrors);
          assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
          assertFalse(httpConnection_Request4.ignoreContentType);
          assertTrue(httpConnection_Request4.followRedirects);
          assertEquals(38, httpConnection_Request4.maxBodySizeBytes);
          assertSame(httpConnection_Request0, httpConnection_Request3);
          assertSame(httpConnection_Request0, httpConnection_Request4);
          assertSame(httpConnection_Request0, httpConnection_Request2);
          assertSame(httpConnection_Request0, httpConnection_Request1);
          assertSame(httpConnection_Request4, httpConnection_Request2);
          assertSame(httpConnection_Request4, httpConnection_Request3);
          assertSame(httpConnection_Request4, httpConnection_Request0);
          assertSame(httpConnection_Request4, httpConnection_Request1);
          assertNotSame(httpURLConnection1, httpURLConnection0);
          assertFalse(httpURLConnection1.equals((Object)httpURLConnection0));
          assertNotNull(httpURLConnection1);
          assertTrue(httpConnection_Request0.ignoreHttpErrors());
          assertFalse(httpConnection_Request0.ignoreContentType());
          assertEquals(Connection.Method.GET, httpConnection_Request0.method());
          assertTrue(httpConnection_Request0.followRedirects());
          assertEquals(3000, httpConnection_Request0.timeout());
          assertEquals(38, httpConnection_Request0.maxBodySize());
          assertFalse(httpConnection_Request4.ignoreContentType());
          assertTrue(httpConnection_Request4.followRedirects());
          assertEquals(Connection.Method.GET, httpConnection_Request4.method());
          assertTrue(httpConnection_Request4.ignoreHttpErrors());
          assertEquals(38, httpConnection_Request4.maxBodySize());
          assertEquals(3000, httpConnection_Request4.timeout());
          assertFalse(httpURLConnection1.getAllowUserInteraction());
          assertNull(httpURLConnection1.getContentEncoding());
          assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection1.toString());
          assertEquals((-1), httpURLConnection1.getContentLength());
          assertNull(httpURLConnection1.getContentType());
          assertFalse(httpURLConnection1.getInstanceFollowRedirects());
          assertFalse(httpURLConnection1.usingProxy());
          assertEquals(0L, httpURLConnection1.getIfModifiedSince());
          assertFalse(httpURLConnection1.getDefaultAllowUserInteraction());
          assertTrue(httpURLConnection1.getUseCaches());
          assertEquals(3000, httpURLConnection1.getConnectTimeout());
          assertTrue(httpURLConnection1.getDefaultUseCaches());
          assertTrue(httpURLConnection1.getFollowRedirects());
          assertEquals("GET", httpURLConnection1.getRequestMethod());
          assertFalse(httpURLConnection1.getDoOutput());
          assertEquals(3000, httpURLConnection1.getReadTimeout());
          assertTrue(httpURLConnection1.getDoInput());
          
          String string0 = null;
          String string1 = HttpConnection.Response.setOutputContentType(httpConnection_Request1);
          assertTrue(httpConnection_Request0.followRedirects);
          assertFalse(httpConnection_Request0.ignoreContentType);
          assertEquals(38, httpConnection_Request0.maxBodySizeBytes);
          assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
          assertTrue(httpConnection_Request0.ignoreHttpErrors);
          assertFalse(httpConnection_Request1.ignoreContentType);
          assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
          assertTrue(httpConnection_Request1.ignoreHttpErrors);
          assertEquals(38, httpConnection_Request1.maxBodySizeBytes);
          assertTrue(httpConnection_Request1.followRedirects);
          assertSame(httpConnection_Request0, httpConnection_Request3);
          assertSame(httpConnection_Request0, httpConnection_Request4);
          assertSame(httpConnection_Request0, httpConnection_Request2);
          assertSame(httpConnection_Request0, httpConnection_Request1);
          assertSame(httpConnection_Request1, httpConnection_Request3);
          assertSame(httpConnection_Request1, httpConnection_Request4);
          assertSame(httpConnection_Request1, httpConnection_Request0);
          assertSame(httpConnection_Request1, httpConnection_Request2);
          assertNull(string1);
          assertTrue(httpConnection_Request0.ignoreHttpErrors());
          assertFalse(httpConnection_Request0.ignoreContentType());
          assertEquals(Connection.Method.GET, httpConnection_Request0.method());
          assertTrue(httpConnection_Request0.followRedirects());
          assertEquals(3000, httpConnection_Request0.timeout());
          assertEquals(38, httpConnection_Request0.maxBodySize());
          assertEquals((-1), uRL0.getPort());
          assertNull(uRL0.getQuery());
          assertEquals("http", uRL0.getProtocol());
          assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
          assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
          assertNull(uRL0.getUserInfo());
          assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
          assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
          assertNull(uRL0.getRef());
          assertEquals((-1), uRL0.getDefaultPort());
          assertEquals(Connection.Method.GET, httpConnection_Request1.method());
          assertEquals(3000, httpConnection_Request1.timeout());
          assertEquals(38, httpConnection_Request1.maxBodySize());
          assertTrue(httpConnection_Request1.ignoreHttpErrors());
          assertFalse(httpConnection_Request1.ignoreContentType());
          assertTrue(httpConnection_Request1.followRedirects());
          
          String string2 = HttpConnection.Response.getRequestCookieString(httpConnection_Request0);
          assertTrue(httpConnection_Request0.followRedirects);
          assertFalse(httpConnection_Request0.ignoreContentType);
          assertEquals(38, httpConnection_Request0.maxBodySizeBytes);
          assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
          assertTrue(httpConnection_Request0.ignoreHttpErrors);
          assertSame(httpConnection_Request0, httpConnection_Request3);
          assertSame(httpConnection_Request0, httpConnection_Request4);
          assertSame(httpConnection_Request0, httpConnection_Request2);
          assertSame(httpConnection_Request0, httpConnection_Request1);
          assertEquals("", string2);
          assertNotNull(string2);
          assertTrue(httpConnection_Request0.ignoreHttpErrors());
          assertFalse(httpConnection_Request0.ignoreContentType());
          assertEquals(Connection.Method.GET, httpConnection_Request0.method());
          assertTrue(httpConnection_Request0.followRedirects());
          assertEquals(3000, httpConnection_Request0.timeout());
          assertEquals(38, httpConnection_Request0.maxBodySize());
          
          HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
          assertTrue(httpConnection_Request0.followRedirects);
          assertFalse(httpConnection_Request0.ignoreContentType);
          assertEquals(38, httpConnection_Request0.maxBodySizeBytes);
          assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
          assertTrue(httpConnection_Request0.ignoreHttpErrors);
          assertSame(httpConnection_Request0, httpConnection_Request3);
          assertSame(httpConnection_Request0, httpConnection_Request4);
          assertSame(httpConnection_Request0, httpConnection_Request2);
          assertSame(httpConnection_Request0, httpConnection_Request1);
          assertTrue(httpConnection_Request0.ignoreHttpErrors());
          assertFalse(httpConnection_Request0.ignoreContentType());
          assertEquals(Connection.Method.GET, httpConnection_Request0.method());
          assertTrue(httpConnection_Request0.followRedirects());
          assertEquals(3000, httpConnection_Request0.timeout());
          assertEquals(38, httpConnection_Request0.maxBodySize());
          
          EvoSuiteFile evoSuiteFile0 = null;
          boolean boolean2 = true;
          ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
          assertNotNull(byteArrayOutputStream0);
          assertEquals("", byteArrayOutputStream0.toString());
          assertEquals(0, byteArrayOutputStream0.size());
          
          byteArrayOutputStream0.reset();
          assertEquals("", byteArrayOutputStream0.toString());
          assertEquals(0, byteArrayOutputStream0.size());
          
          HttpConnection.Response.writePost(httpConnection_Request4, byteArrayOutputStream0, string2);
          assertTrue(httpConnection_Request0.followRedirects);
          assertFalse(httpConnection_Request0.ignoreContentType);
          assertEquals(38, httpConnection_Request0.maxBodySizeBytes);
          assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
          assertTrue(httpConnection_Request0.ignoreHttpErrors);
          assertTrue(httpConnection_Request4.ignoreHttpErrors);
          assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
          assertFalse(httpConnection_Request4.ignoreContentType);
          assertTrue(httpConnection_Request4.followRedirects);
          assertEquals(38, httpConnection_Request4.maxBodySizeBytes);
          assertSame(httpConnection_Request0, httpConnection_Request3);
          assertSame(httpConnection_Request0, httpConnection_Request4);
          assertSame(httpConnection_Request0, httpConnection_Request2);
          assertSame(httpConnection_Request0, httpConnection_Request1);
          assertSame(httpConnection_Request4, httpConnection_Request2);
          assertSame(httpConnection_Request4, httpConnection_Request3);
          assertSame(httpConnection_Request4, httpConnection_Request0);
          assertSame(httpConnection_Request4, httpConnection_Request1);
          assertTrue(httpConnection_Request0.ignoreHttpErrors());
          assertFalse(httpConnection_Request0.ignoreContentType());
          assertEquals(Connection.Method.GET, httpConnection_Request0.method());
          assertTrue(httpConnection_Request0.followRedirects());
          assertEquals(3000, httpConnection_Request0.timeout());
          assertEquals(38, httpConnection_Request0.maxBodySize());
          assertEquals("----", byteArrayOutputStream0.toString());
          assertEquals(4, byteArrayOutputStream0.size());
          assertFalse(httpConnection_Request4.ignoreContentType());
          assertTrue(httpConnection_Request4.followRedirects());
          assertEquals(Connection.Method.GET, httpConnection_Request4.method());
          assertTrue(httpConnection_Request4.ignoreHttpErrors());
          assertEquals(38, httpConnection_Request4.maxBodySize());
          assertEquals(3000, httpConnection_Request4.timeout());
          
          boolean boolean3 = FileSystemHandling.setPermissions(evoSuiteFile0, boolean2, httpConnection_Request1.ignoreHttpErrors, httpConnection_Request0.ignoreContentType);
          assertTrue(httpConnection_Request0.followRedirects);
          assertFalse(httpConnection_Request0.ignoreContentType);
          assertEquals(38, httpConnection_Request0.maxBodySizeBytes);
          assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
          assertTrue(httpConnection_Request0.ignoreHttpErrors);
          assertFalse(httpConnection_Request1.ignoreContentType);
          assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
          assertTrue(httpConnection_Request1.ignoreHttpErrors);
          assertEquals(38, httpConnection_Request1.maxBodySizeBytes);
          assertTrue(httpConnection_Request1.followRedirects);
          assertSame(httpConnection_Request0, httpConnection_Request3);
          assertSame(httpConnection_Request0, httpConnection_Request4);
          assertSame(httpConnection_Request0, httpConnection_Request2);
          assertSame(httpConnection_Request0, httpConnection_Request1);
          assertSame(httpConnection_Request1, httpConnection_Request3);
          assertSame(httpConnection_Request1, httpConnection_Request4);
          assertSame(httpConnection_Request1, httpConnection_Request0);
          assertSame(httpConnection_Request1, httpConnection_Request2);
          assertFalse(boolean3);
          assertFalse(boolean3 == boolean0);
          assertFalse(boolean3 == boolean1);
          assertFalse(boolean3 == boolean2);
          assertTrue(httpConnection_Request0.ignoreHttpErrors());
          assertFalse(httpConnection_Request0.ignoreContentType());
          assertEquals(Connection.Method.GET, httpConnection_Request0.method());
          assertTrue(httpConnection_Request0.followRedirects());
          assertEquals(3000, httpConnection_Request0.timeout());
          assertEquals(38, httpConnection_Request0.maxBodySize());
          assertEquals((-1), uRL0.getPort());
          assertNull(uRL0.getQuery());
          assertEquals("http", uRL0.getProtocol());
          assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
          assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
          assertNull(uRL0.getUserInfo());
          assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
          assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
          assertNull(uRL0.getRef());
          assertEquals((-1), uRL0.getDefaultPort());
          assertEquals(Connection.Method.GET, httpConnection_Request1.method());
          assertEquals(3000, httpConnection_Request1.timeout());
          assertEquals(38, httpConnection_Request1.maxBodySize());
          assertTrue(httpConnection_Request1.ignoreHttpErrors());
          assertFalse(httpConnection_Request1.ignoreContentType());
          assertTrue(httpConnection_Request1.followRedirects());
          
          HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
          assertNotNull(hashMap0);
          assertEquals(0, hashMap0.size());
          assertTrue(hashMap0.isEmpty());
          
          try { 
            HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
            fail("Expecting exception: IOException");
          
          } catch(IOException e) {
             //
             // Could not find: www.someFakeButWellFormedURL.org
             //
             verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(11000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      
      boolean boolean0 = true;
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.url(uRL0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.parser(httpConnection_Request0.parser);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request0.ignoreHttpErrors(boolean0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNotNull(httpConnection_Request3);
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request3);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNotNull(httpURLConnection0);
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertFalse(httpURLConnection0.usingProxy());
      assertEquals(3000, httpURLConnection0.getConnectTimeout());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals(3000, httpURLConnection0.getReadTimeout());
      assertNull(httpURLConnection0.getContentEncoding());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      
      int int0 = 38;
      boolean boolean1 = true;
      httpConnection_Request0.followRedirects = boolean1;
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.maxBodySize(int0);
      assertEquals(38, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(38, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertNotNull(httpConnection_Request4);
      assertEquals(38, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(38, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      
      HttpURLConnection httpURLConnection1 = HttpConnection.Response.createConnection(httpConnection_Request4);
      assertEquals(38, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(38, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertNotSame(httpURLConnection1, httpURLConnection0);
      assertFalse(httpURLConnection1.equals((Object)httpURLConnection0));
      assertNotNull(httpURLConnection1);
      assertEquals(38, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(38, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpURLConnection1.getAllowUserInteraction());
      assertNull(httpURLConnection1.getContentEncoding());
      assertTrue(httpURLConnection1.getUseCaches());
      assertEquals((-1), httpURLConnection1.getContentLength());
      assertFalse(httpURLConnection1.usingProxy());
      assertFalse(httpURLConnection1.getInstanceFollowRedirects());
      assertNull(httpURLConnection1.getContentType());
      assertFalse(httpURLConnection1.getDefaultAllowUserInteraction());
      assertEquals(0L, httpURLConnection1.getIfModifiedSince());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection1.toString());
      assertEquals(3000, httpURLConnection1.getConnectTimeout());
      assertTrue(httpURLConnection1.getDefaultUseCaches());
      assertEquals("GET", httpURLConnection1.getRequestMethod());
      assertFalse(httpURLConnection1.getDoOutput());
      assertEquals(3000, httpURLConnection1.getReadTimeout());
      assertTrue(httpURLConnection1.getFollowRedirects());
      assertTrue(httpURLConnection1.getDoInput());
      
      String string0 = null;
      String string1 = HttpConnection.Response.setOutputContentType(httpConnection_Request1);
      assertEquals(38, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(38, httpConnection_Request1.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertNull(string1);
      assertEquals(38, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(38, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      String string2 = HttpConnection.Response.getRequestCookieString(httpConnection_Request0);
      assertEquals(38, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertEquals("", string2);
      assertNotNull(string2);
      assertEquals(38, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertEquals(38, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertEquals(38, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean2 = true;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      assertNotNull(byteArrayOutputStream0);
      assertEquals("", byteArrayOutputStream0.toString());
      assertEquals(0, byteArrayOutputStream0.size());
      
      HttpConnection.Response.writePost(httpConnection_Request4, byteArrayOutputStream0, string2);
      assertEquals(38, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(38, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertEquals(38, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("----", byteArrayOutputStream0.toString());
      assertEquals(4, byteArrayOutputStream0.size());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(38, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      
      boolean boolean3 = false;
      boolean boolean4 = FileSystemHandling.setPermissions(evoSuiteFile0, boolean2, httpConnection_Request1.ignoreHttpErrors, boolean3);
      assertEquals(38, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(38, httpConnection_Request1.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertFalse(boolean4);
      assertFalse(boolean2 == boolean3);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4 == boolean2);
      assertFalse(boolean4 == boolean1);
      assertFalse(boolean4 == boolean0);
      assertEquals(38, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(38, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      int int0 = (-4);
      httpConnection_Request0.timeoutMilliseconds = int0;
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals((-4), httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      String string0 = "#comment";
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals((-4), httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals((-4), httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals((-4), httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals((-4), httpConnection_Request1.timeout());
      
      int int1 = 47;
      HttpConnection.Request httpConnection_Request2 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request1));
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request0));
      assertNotNull(httpConnection_Request2);
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request0.header(string0, string0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals((-4), httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals((-4), httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertFalse(httpConnection_Request0.equals((Object)httpConnection_Request2));
      assertFalse(httpConnection_Request3.equals((Object)httpConnection_Request2));
      assertNotNull(httpConnection_Request3);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals((-4), httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals((-4), httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request3.parser(httpConnection_Request3.parser);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals((-4), httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals((-4), httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals((-4), httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertNotSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertFalse(httpConnection_Request0.equals((Object)httpConnection_Request2));
      assertFalse(httpConnection_Request3.equals((Object)httpConnection_Request2));
      assertFalse(httpConnection_Request4.equals((Object)httpConnection_Request2));
      assertNotNull(httpConnection_Request4);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals((-4), httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals((-4), httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals((-4), httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      
      String string1 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotSame(httpConnection_Request2, httpConnection_Request4);
      assertNotSame(httpConnection_Request2, httpConnection_Request1);
      assertNotSame(httpConnection_Request2, httpConnection_Request0);
      assertNotSame(httpConnection_Request2, httpConnection_Request3);
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request4));
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request1));
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request0));
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request3));
      assertNull(string1);
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      int int0 = (-1638768762);
      Random.setNextRandom(int0);
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      
      Parser parser0 = Parser.xmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.ignoreContentType(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      String string0 = "~c7{%RQ0/\"G.";
      String string1 = "D6{0aIUK3";
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte) (-77);
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-122);
      byteArray0[1] = byte1;
      byte byte2 = (byte)74;
      byteArray0[2] = byte2;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, byteArray0[1], byte0);
      assertArrayEquals(new byte[] {(byte) (-77), (byte) (-122), (byte)74}, byteArray0);
      assertFalse(byte0 == byte2);
      assertFalse(byte0 == byte1);
      assertNotNull(byteArrayInputStream0);
      assertEquals(3, byteArray0.length);
      assertEquals((-77), byteArrayInputStream0.available());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string1, (InputStream) byteArrayInputStream0);
      assertArrayEquals(new byte[] {(byte) (-77), (byte) (-122), (byte)74}, byteArray0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(byte0 == byte2);
      assertFalse(byte0 == byte1);
      assertNotNull(httpConnection_KeyVal0);
      assertEquals(3, byteArray0.length);
      assertEquals("D6{0aIUK3", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("~c7{%RQ0/\"G.", httpConnection_KeyVal0.key());
      assertEquals((-77), byteArrayInputStream0.available());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request1.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertArrayEquals(new byte[] {(byte) (-77), (byte) (-122), (byte)74}, byteArray0);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(byte0 == byte2);
      assertFalse(byte0 == byte1);
      assertNotNull(httpConnection_Request3);
      assertEquals(3, byteArray0.length);
      assertEquals("D6{0aIUK3", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("~c7{%RQ0/\"G.", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals((-77), byteArrayInputStream0.available());
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      String string2 = null;
      try { 
        HttpConnection.Response.writePost(httpConnection_Request2, pipedOutputStream0, string2);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      int int0 = (-1638768762);
      Random.setNextRandom(int0);
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      String string0 = "~c7{%RQ0/\"G.";
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte) (-77);
      byteArray0[0] = byte0;
      byteArray0[1] = byte0;
      byte byte1 = (byte)74;
      byteArray0[2] = byte1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, byteArray0[1], byte0);
      assertArrayEquals(new byte[] {(byte) (-77), (byte) (-77), (byte)74}, byteArray0);
      assertFalse(byte0 == byte1);
      assertNotNull(byteArrayInputStream0);
      assertEquals(3, byteArray0.length);
      assertEquals((-77), byteArrayInputStream0.available());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string0, (InputStream) byteArrayInputStream0);
      assertArrayEquals(new byte[] {(byte) (-77), (byte) (-77), (byte)74}, byteArray0);
      assertFalse(byte0 == byte1);
      assertNotNull(httpConnection_KeyVal0);
      assertEquals(3, byteArray0.length);
      assertEquals((-77), byteArrayInputStream0.available());
      assertEquals("~c7{%RQ0/\"G.", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("~c7{%RQ0/\"G.", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertArrayEquals(new byte[] {(byte) (-77), (byte) (-77), (byte)74}, byteArray0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(byte0 == byte1);
      assertNotNull(httpConnection_Request2);
      assertEquals(3, byteArray0.length);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals((-77), byteArrayInputStream0.available());
      assertEquals("~c7{%RQ0/\"G.", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("~c7{%RQ0/\"G.", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      String string1 = null;
      try { 
        HttpConnection.Response.writePost(httpConnection_Request0, pipedOutputStream0, string1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      int int0 = (-1638768762);
      Random.setNextRandom(int0);
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      Parser parser0 = Parser.xmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.ignoreContentType(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      String string0 = "~c7{%RQ0/\"G.";
      String string1 = "D6{0aIUK3";
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte) (-77);
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-122);
      byteArray0[2] = byteArray0[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, byteArray0[1], byte0);
      assertArrayEquals(new byte[] {(byte) (-77), (byte)0, (byte)0}, byteArray0);
      assertFalse(byte0 == byte1);
      assertNotNull(byteArrayInputStream0);
      assertEquals(3, byteArray0.length);
      assertEquals((-77), byteArrayInputStream0.available());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string1, (InputStream) byteArrayInputStream0);
      assertArrayEquals(new byte[] {(byte) (-77), (byte)0, (byte)0}, byteArray0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(byte0 == byte1);
      assertNotNull(httpConnection_KeyVal0);
      assertEquals(3, byteArray0.length);
      assertEquals((-77), byteArrayInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("~c7{%RQ0/\"G.", httpConnection_KeyVal0.key());
      assertEquals("D6{0aIUK3", httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request1.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertArrayEquals(new byte[] {(byte) (-77), (byte)0, (byte)0}, byteArray0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(byte0 == byte1);
      assertNotNull(httpConnection_Request3);
      assertEquals(3, byteArray0.length);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals((-77), byteArrayInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("~c7{%RQ0/\"G.", httpConnection_KeyVal0.key());
      assertEquals("D6{0aIUK3", httpConnection_KeyVal0.value());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      try { 
        HttpConnection.Response.writePost(httpConnection_Request2, pipedOutputStream0, string0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      Parser parser0 = Parser.xmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      
      httpConnection_Request1.data = httpConnection_Request0.data;
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      boolean boolean0 = false;
      String string0 = "0biy(5d|d=_t";
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(string0);
      assertNotNull(mockFileOutputStream0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string0);
      assertNotNull(httpConnection_KeyVal0);
      assertEquals("0biy(5d|d=_t", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("0biy(5d|d=_t", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertNotNull(httpConnection_Request3);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("0biy(5d|d=_t", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("0biy(5d|d=_t", httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      
      String string1 = ";)1WBj";
      Connection.Method connection_Method0 = Connection.Method.PUT;
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.method(connection_Method0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertNotNull(httpConnection_Request4);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(1048576, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      
      HttpConnection.Response.writePost(httpConnection_Request2, mockFileOutputStream0, string1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.PUT, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.PUT, httpConnection_Request2.method());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.serialiseRequestUrl(httpConnection_Request1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      String string0 = "+iwV";
      boolean boolean0 = false;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(boolean0).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      assertNotNull(sequenceInputStream0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string0, (InputStream) sequenceInputStream0);
      assertNotNull(httpConnection_KeyVal0);
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      int int0 = sequenceInputStream0.read();
      assertEquals((-1), int0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      
      URL uRL1 = MockURL.URL(uRL0, httpConnection_KeyVal0.value);
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertFalse(uRL1.equals((Object)uRL0));
      assertNotNull(uRL1);
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL1.getQuery());
      assertEquals("http", uRL1.getProtocol());
      assertEquals((-1), uRL1.getPort());
      assertNull(uRL1.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toString());
      assertNull(uRL1.getRef());
      assertEquals((-1), uRL1.getDefaultPort());
      
      String string1 = "Attributes incorrectly present on end tag";
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request1.parser(httpConnection_Request0.parser);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string0, string1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertFalse(string0.equals((Object)string1));
      assertNotNull(httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.url(uRL1);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(string0, string1);
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(uRL1.equals((Object)uRL0));
      assertNotNull(httpConnection_Request4);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL1.getQuery());
      assertEquals("http", uRL1.getProtocol());
      assertEquals((-1), uRL1.getPort());
      assertNull(uRL1.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toString());
      assertNull(uRL1.getRef());
      assertEquals((-1), uRL1.getDefaultPort());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(3000, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertNotSame(string0, string1);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertFalse(string0.equals((Object)string1));
      assertNotNull(httpConnection_Request5);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(3000, httpConnection_Request5.timeout());
      
      Connection.Method connection_Method0 = Connection.Method.PUT;
      Map.Entry<String, String> map_Entry0 = httpConnection_Request1.scanHeaders(httpConnection_KeyVal0.value);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertNotSame(string0, string1);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertFalse(string0.equals((Object)string1));
      assertNull(map_Entry0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      
      httpConnection_Request5.method = connection_Method0;
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request5.method.hasBody());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request5.method());
      
      String string2 = HttpConnection.Response.setOutputContentType(httpConnection_Request5);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(3000, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertEquals("--------------------------------", string2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request5.method());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/+iwV");
      boolean boolean1 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertTrue(boolean1);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(boolean1 == boolean0);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      
      int int1 = httpConnection_Response1.statusCode();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals(0, int1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(int1 == int0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      
      String string3 = null;
      String string4 = "iP";
      String string5 = "org.jsoup.select.Evaluator$IndexEquals";
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request5);
        fail("Expecting exception: UnknownServiceException");
      
      } catch(UnknownServiceException e) {
         //
         // protocol doesn't support output
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      httpConnection_Request0.timeoutMilliseconds = httpConnection_Request0.timeoutMilliseconds;
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      
      String string0 = "#comment";
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      int int0 = 47;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(47, httpConnection_Request1.timeout());
      
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      boolean boolean1 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.url(uRL0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(47, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      String string1 = httpConnection_Request2.cookie(string0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNull(string1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(47, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      int int1 = 0;
      String string2 = "$dmy.j 1>;omlbddx";
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request0.header(string0, string0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertFalse(string0.equals((Object)string2));
      assertNotNull(httpConnection_Request3);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(47, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      
      boolean boolean2 = true;
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request1.followRedirects(boolean2);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(int0 == int1);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertNotNull(httpConnection_Request4);
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(47, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(47, httpConnection_Request1.timeout());
      
      String string3 = HttpConnection.Response.setOutputContentType(httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(int0 == int1);
      assertNull(string3);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(47, httpConnection_Request1.timeout());
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Only http & https protocols supported
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      List<String> list0 = null;
      List<String> list1 = hashMap0.put(httpConnection_Response0.LOCATION, list0);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertNull(list1);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.processResponseHeaders(hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      boolean boolean0 = true;
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.url(uRL0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.parser(httpConnection_Request0.parser);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNotNull(httpConnection_KeyVal0);
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertNotNull(httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.ignoreHttpErrors(boolean0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertNotNull(httpConnection_Request4);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request4);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertNotNull(httpURLConnection0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getUseCaches());
      assertEquals(3000, httpURLConnection0.getReadTimeout());
      assertNull(httpURLConnection0.getContentEncoding());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertFalse(httpURLConnection0.usingProxy());
      assertEquals(3000, httpURLConnection0.getConnectTimeout());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      
      int int0 = 38;
      boolean boolean1 = true;
      httpConnection_Request0.followRedirects = boolean1;
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request0.maxBodySize(int0);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(38, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(38, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertNotNull(httpConnection_Request5);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(38, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(38, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.ignoreHttpErrors());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(3000, httpConnection_Request5.timeout());
      
      HttpURLConnection httpURLConnection1 = HttpConnection.Response.createConnection(httpConnection_Request5);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(38, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(38, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertNotSame(httpURLConnection1, httpURLConnection0);
      assertFalse(httpURLConnection1.equals((Object)httpURLConnection0));
      assertNotNull(httpURLConnection1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(38, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(38, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.ignoreHttpErrors());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(3000, httpConnection_Request5.timeout());
      assertTrue(httpURLConnection1.getFollowRedirects());
      assertFalse(httpURLConnection1.getInstanceFollowRedirects());
      assertFalse(httpURLConnection1.usingProxy());
      assertNull(httpURLConnection1.getContentType());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection1.toString());
      assertTrue(httpURLConnection1.getDoInput());
      assertEquals(0L, httpURLConnection1.getIfModifiedSince());
      assertEquals("GET", httpURLConnection1.getRequestMethod());
      assertEquals((-1), httpURLConnection1.getContentLength());
      assertNull(httpURLConnection1.getContentEncoding());
      assertTrue(httpURLConnection1.getDefaultUseCaches());
      assertFalse(httpURLConnection1.getDoOutput());
      assertEquals(3000, httpURLConnection1.getReadTimeout());
      assertFalse(httpURLConnection1.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection1.getUseCaches());
      assertFalse(httpURLConnection1.getAllowUserInteraction());
      assertEquals(3000, httpURLConnection1.getConnectTimeout());
      
      String string0 = null;
      String string1 = HttpConnection.Response.setOutputContentType(httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(38, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(38, httpConnection_Request1.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertNull(string1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(38, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(38, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      
      String string2 = HttpConnection.Response.getRequestCookieString(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(38, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertEquals("", string2);
      assertNotNull(string2);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(38, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URLEncoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      boolean boolean0 = true;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreHttpErrors(boolean0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      String string0 = "+iwV";
      boolean boolean0 = false;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(boolean0).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      assertNotNull(sequenceInputStream0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string0, (InputStream) sequenceInputStream0);
      assertNotNull(httpConnection_KeyVal0);
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      
      URL uRL1 = MockURL.URL(uRL0, httpConnection_KeyVal0.value);
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertFalse(uRL1.equals((Object)uRL0));
      assertNotNull(uRL1);
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL1.getProtocol());
      assertNull(uRL1.getRef());
      assertEquals((-1), uRL1.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toString());
      assertNull(uRL1.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertNull(uRL1.getUserInfo());
      assertEquals((-1), uRL1.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toExternalForm());
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request0.url(uRL1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(uRL1.equals((Object)uRL0));
      assertNotNull(httpConnection_Request3);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL1.getProtocol());
      assertNull(uRL1.getRef());
      assertEquals((-1), uRL1.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toString());
      assertNull(uRL1.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertNull(uRL1.getUserInfo());
      assertEquals((-1), uRL1.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toExternalForm());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertNotNull(httpConnection_Request4);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.followRedirects());
      
      String string1 = HttpConnection.Response.LOCATION;
      assertNotSame(string1, string0);
      assertEquals("Location", string1);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      
      Attribute attribute0 = new Attribute(httpConnection_KeyVal0.key, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(attribute0);
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwv", attribute0.getKey());
      assertEquals("Location", attribute0.getValue());
      
      String string2 = HttpConnection.Response.setOutputContentType(httpConnection_Request4);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertEquals("--------------------------------", string2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.followRedirects());
      
      String string3 = "T6j<";
      String string4 = "Entities";
      HttpConnection.KeyVal httpConnection_KeyVal1 = HttpConnection.KeyVal.create(string3, string4);
      assertNotSame(string4, string1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string0);
      assertNotSame(string4, string3);
      assertNotSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertNotSame(string3, string4);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(httpConnection_KeyVal1.equals((Object)httpConnection_KeyVal0));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(httpConnection_KeyVal1);
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("Entities", httpConnection_KeyVal1.value());
      assertEquals("T6j<", httpConnection_KeyVal1.key());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      
      Connection.Method connection_Method0 = Connection.Method.POST;
      HttpConnection.Response httpConnection_Response2 = (HttpConnection.Response)httpConnection_Response1.method(connection_Method0);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response2.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertFalse(httpConnection_Response2.executed);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertSame(httpConnection_Response2, httpConnection_Response1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response2);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.POST, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.POST, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.charset());
      
      int int0 = httpConnection_Response1.statusCode();
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertSame(httpConnection_Response1, httpConnection_Response2);
      assertEquals(0, int0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.POST, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      
      String string5 = null;
      String string6 = "org.jsoup.select.Evaluator$IndexEquals";
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response2);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // HTTP error fetching URL
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      int int0 = 0;
      httpConnection_Request0.timeoutMilliseconds = int0;
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      
      String string0 = "#comment";
      boolean boolean0 = httpConnection_Request0.hasHeader(string0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(boolean0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, httpConnection_Request1.timeout());
      
      int int1 = 47;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int1);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(int1 == int0);
      assertNotNull(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(47, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(47, httpConnection_Request2.timeout());
      
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request2.url(uRL0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertFalse(int1 == int0);
      assertNotNull(httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(47, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(47, httpConnection_Request2.timeout());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(47, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(47, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertNotNull(httpConnection_Request4);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(47, httpConnection_Request1.timeout());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(47, httpConnection_Request4.timeout());
      
      int int2 = 0;
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request0.header(string0, string0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(47, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertNotNull(httpConnection_Request5);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(47, httpConnection_Request5.timeout());
      
      HttpConnection.Request httpConnection_Request6 = httpConnection_Request2.timeout(int2);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertTrue(httpConnection_Request6.followRedirects);
      assertFalse(httpConnection_Request6.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request6.timeoutMilliseconds);
      assertFalse(httpConnection_Request6.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int2 == int1);
      assertNotNull(httpConnection_Request6);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(0, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request6.followRedirects());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertFalse(httpConnection_Request6.ignoreContentType());
      assertEquals(0, httpConnection_Request6.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertFalse(httpConnection_Request6.ignoreHttpErrors());
      
      String string1 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertNull(string1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(0, httpConnection_Request2.timeout());
      
      HttpConnection.Request httpConnection_Request7 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request7.maxBodySizeBytes);
      assertFalse(httpConnection_Request7.ignoreContentType);
      assertTrue(httpConnection_Request7.followRedirects);
      assertFalse(httpConnection_Request7.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request7.timeoutMilliseconds);
      assertFalse(httpConnection_Request7.equals((Object)httpConnection_Request0));
      assertFalse(httpConnection_Request7.equals((Object)httpConnection_Request2));
      assertFalse(httpConnection_Request7.equals((Object)httpConnection_Request1));
      assertFalse(httpConnection_Request7.equals((Object)httpConnection_Request5));
      assertFalse(httpConnection_Request7.equals((Object)httpConnection_Request3));
      assertFalse(httpConnection_Request7.equals((Object)httpConnection_Request6));
      assertFalse(httpConnection_Request7.equals((Object)httpConnection_Request4));
      assertNotNull(httpConnection_Request7);
      assertTrue(httpConnection_Request7.followRedirects());
      assertFalse(httpConnection_Request7.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request7.maxBodySize());
      assertFalse(httpConnection_Request7.ignoreContentType());
      assertEquals(3000, httpConnection_Request7.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request7.method());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Only http & https protocols supported
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      
      // Undeclared exception!
      try { 
        httpConnection_Response1.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      boolean boolean0 = false;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.followRedirects(boolean0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.followRedirects());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      Connection.Request connection_Request0 = httpConnection_Response0.req;
      assertNull(connection_Request0);
      
      String string0 = "Y6\\";
      HttpConnection.Response httpConnection_Response1 = (HttpConnection.Response)httpConnection_Response0.removeHeader(string0);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.serialiseRequestUrl(connection_Request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute(httpConnection_Response1.req);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      String string0 = "";
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Collection<String> collection0 = null;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, collection0);
      assertFalse(list0.contains(string0));
      assertNotNull(list0);
      assertEquals(0, linkedList0.size());
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      
      List<String> list1 = hashMap0.put(httpConnection_Response0.charset, list0);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(list0.contains(string0));
      assertNull(list1);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(0, linkedList0.size());
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      
      List<String> list2 = null;
      String string1 = null;
      List<String> list3 = hashMap0.put(string1, list2);
      assertSame(list3, list0);
      assertFalse(list3.contains(string0));
      assertNotNull(list3);
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertTrue(list3.isEmpty());
      assertEquals(0, list3.size());
      
      List<String> list4 = hashMap0.replace(string0, list2);
      assertNull(list4);
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      String string0 = "";
      String string1 = "/ep}5";
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Collection<String> collection0 = null;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, collection0);
      assertFalse(list0.contains(string1));
      assertNotNull(list0);
      assertEquals(0, linkedList0.size());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      
      List<String> list1 = hashMap0.put(string1, list0);
      assertNotSame(string1, string0);
      assertFalse(list0.contains(string1));
      assertFalse(string1.equals((Object)string0));
      assertNull(list1);
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(0, linkedList0.size());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      
      List<String> list2 = null;
      String string2 = null;
      List<String> list3 = hashMap0.put(string2, list2);
      assertNull(list3);
      assertEquals(2, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      
      List<String> list4 = hashMap0.replace(string0, list2);
      assertNotSame(string0, string1);
      assertFalse(string0.equals((Object)string1));
      assertNull(list4);
      assertEquals(2, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(2, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      
      int int0 = httpConnection_Response0.statusCode();
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, int0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      String string0 = "y";
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      assertNotNull(bufferedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string0, (InputStream) bufferedInputStream0);
      assertNotNull(httpConnection_KeyVal0);
      assertEquals(0, pipedInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("y", httpConnection_KeyVal0.key());
      assertEquals("y", httpConnection_KeyVal0.value());
      
      int int0 = 0;
      pipedInputStream0.mark(int0);
      assertEquals(0, pipedInputStream0.available());
      
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.inputStream((InputStream) bufferedInputStream0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertNotNull(httpConnection_KeyVal1);
      assertEquals(0, pipedInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("y", httpConnection_KeyVal0.key());
      assertEquals("y", httpConnection_KeyVal0.value());
      assertEquals("y", httpConnection_KeyVal1.value());
      assertEquals("y", httpConnection_KeyVal1.key());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal1);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, pipedInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("y", httpConnection_KeyVal0.key());
      assertEquals("y", httpConnection_KeyVal0.value());
      assertEquals("y", httpConnection_KeyVal1.value());
      assertEquals("y", httpConnection_KeyVal1.key());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.ignoreContentType(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, pipedInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("y", httpConnection_KeyVal0.key());
      assertEquals("y", httpConnection_KeyVal0.value());
      assertEquals("y", httpConnection_KeyVal1.value());
      assertEquals("y", httpConnection_KeyVal1.key());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      
      httpConnection_KeyVal0.stream = (InputStream) pipedInputStream0;
      assertEquals(0, pipedInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("y", httpConnection_KeyVal0.key());
      assertEquals("y", httpConnection_KeyVal0.value());
      
      String string1 = "";
      HttpConnection.KeyVal httpConnection_KeyVal2 = HttpConnection.KeyVal.create(string0, string1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal0);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal0));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal1));
      assertNotNull(httpConnection_KeyVal2);
      assertFalse(httpConnection_KeyVal2.hasInputStream());
      assertEquals("", httpConnection_KeyVal2.value());
      assertEquals("y", httpConnection_KeyVal2.key());
      
      String string2 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(httpConnection_KeyVal0, httpConnection_KeyVal2);
      assertNotSame(httpConnection_KeyVal1, httpConnection_KeyVal2);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertEquals("--------------------------------", string2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(httpConnection_KeyVal0.equals((Object)httpConnection_KeyVal2));
      assertFalse(httpConnection_KeyVal1.equals((Object)httpConnection_KeyVal2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, pipedInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("y", httpConnection_KeyVal0.key());
      assertEquals("y", httpConnection_KeyVal0.value());
      assertEquals("y", httpConnection_KeyVal1.value());
      assertEquals("y", httpConnection_KeyVal1.key());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      
      int int1 = 80;
      httpConnection_Request1.timeoutMilliseconds = int1;
      assertEquals(80, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, pipedInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("y", httpConnection_KeyVal0.key());
      assertEquals("y", httpConnection_KeyVal0.value());
      assertEquals("y", httpConnection_KeyVal1.value());
      assertEquals("y", httpConnection_KeyVal1.key());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(80, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.createConnection(httpConnection_Request1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test33()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      
      int int0 = httpConnection_Response1.statusCode();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals(0, int0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      
      String string0 = "^18";
      String string1 = "";
      Attributes attributes0 = new Attributes();
      assertNotNull(attributes0);
      
      Map<String, String> map0 = attributes0.dataset();
      assertNotNull(map0);
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      
      httpConnection_Response0.cookies = map0;
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertTrue(httpConnection_Response0.cookies.isEmpty());
      assertEquals(0, httpConnection_Response0.cookies.size());
      
      try { 
        MockURI.URI(string1, httpConnection_Response0.statusMessage, httpConnection_Response0.LOCATION);
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected scheme name at index 0: :#Location
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 11000)
  public void test34()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test35()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.createConnection(httpConnection_Response1.req);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test36()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      
      Connection.Method connection_Method0 = Connection.Method.PATCH;
      httpConnection_Response0.method = connection_Method0;
      assertEquals(Connection.Method.PATCH, httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertTrue(httpConnection_Response0.method.hasBody());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test37()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      
      Connection.Request connection_Request0 = httpConnection_Response0.req;
      assertNull(connection_Request0);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute(connection_Request0, httpConnection_Response0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test38()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      OutputStream outputStream0 = null;
      String string0 = "{FV_CS`";
      // Undeclared exception!
      try { 
        HttpConnection.Response.writePost(httpConnection_Request0, outputStream0, string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 11000)
  public void test39()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertNotNull(hashMap0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      httpConnection_Request0.cookies = (Map<String, String>) hashMap0;
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals(0, httpConnection_Request0.cookies.size());
      assertTrue(httpConnection_Request0.cookies.isEmpty());
      
      String string0 = "j-";
      String string1 = hashMap0.put(string0, string0);
      assertNull(string1);
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      
      String string2 = "Sql\\";
      boolean boolean0 = true;
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(string2, boolean0);
      assertFalse(string2.equals((Object)string0));
      assertNotNull(mockFileOutputStream0);
      
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte) (-101);
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-11);
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-20);
      byteArray0[2] = byte2;
      mockFileOutputStream0.write(byteArray0);
      assertArrayEquals(new byte[] {(byte) (-101), (byte) (-11), (byte) (-20)}, byteArray0);
      assertNotSame(string2, string0);
      assertFalse(string2.equals((Object)string0));
      assertEquals(3, byteArray0.length);
      
      HttpConnection.Response.writePost(httpConnection_Request0, mockFileOutputStream0, string2);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotSame(string2, string0);
      assertFalse(string2.equals((Object)string0));
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      String string3 = HttpConnection.Response.getRequestCookieString(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertEquals("j-=j-", string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertNotNull(string3);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
  }

  @Test(timeout = 11000)
  public void test40()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      
      String string0 = ":cD@{";
      HttpConnection.Response httpConnection_Response1 = (HttpConnection.Response)httpConnection_Response0.removeCookie(string0);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.parse();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before parsing response
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test41()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      
      String string0 = "text/";
      // Undeclared exception!
      try { 
        HttpConnection.Response.getRequestCookieString(httpConnection_Response0.req);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test42()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      
      int int0 = 53;
      httpConnection_Response0.statusCode = int0;
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(53, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(53, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(53, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      
      String string0 = "T#d";
      httpConnection_Response0.byteData = httpConnection_Response1.byteData;
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(53, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      
      httpConnection_Response1.req = httpConnection_Response0.req;
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(53, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      
      String string1 = "text/";
      String string2 = "21";
      HttpConnection.Response httpConnection_Response2 = (HttpConnection.Response)httpConnection_Response0.header(string1, string2);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(53, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(53, httpConnection_Response2.statusCode);
      assertEquals(0, httpConnection_Response2.numRedirects);
      assertFalse(httpConnection_Response2.executed);
      assertSame(httpConnection_Response0, httpConnection_Response2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertNotNull(httpConnection_Response2);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(53, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response2.charset());
      assertNull(httpConnection_Response2.method());
      assertEquals(53, httpConnection_Response2.statusCode());
      assertNull(httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.statusMessage());
      
      boolean boolean0 = httpConnection_Response1.hasHeader(string1);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(53, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertSame(httpConnection_Response0, httpConnection_Response2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertFalse(boolean0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(53, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      
      HttpConnection.Response httpConnection_Response3 = (HttpConnection.Response)httpConnection_Response1.removeCookie(string0);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(53, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response3.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response3.statusCode);
      assertEquals(1, httpConnection_Response3.numRedirects);
      assertNotSame(httpConnection_Response0, httpConnection_Response3);
      assertSame(httpConnection_Response0, httpConnection_Response2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertSame(httpConnection_Response1, httpConnection_Response3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(httpConnection_Response3, httpConnection_Response2);
      assertSame(httpConnection_Response3, httpConnection_Response1);
      assertNotSame(httpConnection_Response3, httpConnection_Response0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response3);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(53, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response3.charset());
      assertEquals(0, httpConnection_Response3.statusCode());
      assertNull(httpConnection_Response3.contentType());
      assertNull(httpConnection_Response3.statusMessage());
      assertNull(httpConnection_Response3.method());
      
      httpConnection_Response1.req = httpConnection_Response0.req;
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(53, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      
      // Undeclared exception!
      try { 
        httpConnection_Response1.parse();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before parsing response
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test43()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      
      String string0 = httpConnection_Response0.charset();
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(string0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.createConnection(httpConnection_Response0.req);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test44()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      
      String string0 = "AW >V7xc:]'~";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.removeHeader(string0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      
      httpConnection_Response1.charset = httpConnection_Response0.statusMessage;
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test45()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      
      HttpURLConnection httpURLConnection0 = null;
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertNotNull(hashMap0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      httpConnection_Response1.cookies = (Map<String, String>) hashMap0;
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, httpConnection_Response1.cookies.size());
      assertTrue(httpConnection_Response1.cookies.isEmpty());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.setupFromConnection(httpURLConnection0, httpConnection_Response1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test46()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = null;
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      
      String string0 = httpConnection_Response1.statusMessage();
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(string0);
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
  }

  @Test(timeout = 11000)
  public void test47()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      int int0 = 0;
      httpConnection_Request0.timeoutMilliseconds = int0;
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      
      String string0 = "#comment";
      boolean boolean0 = httpConnection_Request0.hasHeader(string0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(boolean0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      
      int int1 = 47;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int1);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(int1 == int0);
      assertNotNull(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(47, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(47, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(47, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertNotNull(httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(47, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(47, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      int int2 = 0;
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.header(string0, string0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertNotNull(httpConnection_Request4);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(47, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(47, httpConnection_Request4.timeout());
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request2.timeout(int2);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(0, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertNotNull(httpConnection_Request5);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(0, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals(0, httpConnection_Request5.timeout());
      
      String string1 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertNull(string1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(0, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Only http & https protocols supported
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test48()  throws Throwable  {
      Connection.Request connection_Request0 = null;
      // Undeclared exception!
      try { 
        HttpConnection.Response.setOutputContentType(connection_Request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test49()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      
      String string0 = httpConnection_Response0.contentType();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(string0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
  }

  @Test(timeout = 11000)
  public void test50()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      
      boolean boolean0 = true;
      Parser parser0 = null;
      Connection.Method connection_Method0 = Connection.Method.PUT;
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.url(uRL0);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.method(connection_Method0);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertEquals(Connection.Method.PUT, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request0.parser(parser0);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNotNull(httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.ignoreHttpErrors(boolean0);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertNotNull(httpConnection_Request4);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request4.method());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.followRedirects());
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request4);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertNotNull(httpURLConnection0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request4.method());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertEquals(3000, httpURLConnection0.getReadTimeout());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals("PUT", httpURLConnection0.getRequestMethod());
      assertEquals(3000, httpURLConnection0.getConnectTimeout());
      assertTrue(httpURLConnection0.getDoOutput());
      
      int int0 = 38;
      boolean boolean1 = true;
      httpConnection_Request0.followRedirects = boolean1;
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request0.maxBodySize(int0);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(38, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(3000, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(38, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertNotNull(httpConnection_Request5);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(38, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(Connection.Method.PUT, httpConnection_Request5.method());
      assertEquals(38, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.ignoreHttpErrors());
      
      HttpURLConnection httpURLConnection1 = HttpConnection.Response.createConnection(httpConnection_Request5);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(38, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(3000, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(38, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertNotSame(httpURLConnection1, httpURLConnection0);
      assertFalse(httpURLConnection1.equals((Object)httpURLConnection0));
      assertNotNull(httpURLConnection1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(38, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(Connection.Method.PUT, httpConnection_Request5.method());
      assertEquals(38, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(0L, httpURLConnection1.getIfModifiedSince());
      assertTrue(httpURLConnection1.getDoOutput());
      assertNull(httpURLConnection1.getContentType());
      assertTrue(httpURLConnection1.getFollowRedirects());
      assertEquals("PUT", httpURLConnection1.getRequestMethod());
      assertFalse(httpURLConnection1.getInstanceFollowRedirects());
      assertFalse(httpURLConnection1.usingProxy());
      assertEquals(3000, httpURLConnection1.getConnectTimeout());
      assertFalse(httpURLConnection1.getAllowUserInteraction());
      assertEquals((-1), httpURLConnection1.getContentLength());
      assertTrue(httpURLConnection1.getUseCaches());
      assertEquals(3000, httpURLConnection1.getReadTimeout());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection1.toString());
      assertTrue(httpURLConnection1.getDoInput());
      assertFalse(httpURLConnection1.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection1.getDefaultUseCaches());
      assertNull(httpURLConnection1.getContentEncoding());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test51()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      
      String string0 = "";
      httpConnection_Response0.charset = string0;
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals("", httpConnection_Response0.charset());
      
      int int0 = 64;
      httpConnection_Response0.numRedirects = int0;
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals("", httpConnection_Response0.charset());
      
      String string1 = httpConnection_Response0.statusMessage();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(64, httpConnection_Response0.numRedirects);
      assertNull(string1);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals("", httpConnection_Response0.charset());
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      String string2 = "Ut2ivnOk34jp<~O]XM";
      boolean boolean0 = httpConnection_Request0.hasHeaderWithValue(string2, string2);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotSame(string2, string0);
      assertFalse(boolean0);
      assertFalse(string2.equals((Object)string0));
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test52()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      
      int int0 = 1631;
      httpConnection_Request0.timeoutMilliseconds = int0;
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1631, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      
      HttpConnection.Request httpConnection_Request1 = null;
      String string0 = "http";
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(string0);
      assertNotNull(mockFileOutputStream0);
      
      String string1 = null;
      HttpConnection.Response.writePost(httpConnection_Request0, mockFileOutputStream0, string1);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1631, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1631, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test53()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      String string0 = "<1\\aZHu@kB!";
      String string1 = "Q||)h,u)'uO52";
      MockFile mockFile0 = new MockFile(string1, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(mockFile0);
      
      File file0 = MockFile.createTempFile(string0, string0, (File) mockFile0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotSame(mockFile0, file0);
      assertNotSame(file0, mockFile0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(file0.equals((Object)mockFile0));
      assertNotNull(file0);
      assertEquals(0L, mockFile0.length());
      assertEquals(1392409281320L, mockFile0.lastModified());
      assertEquals(0L, mockFile0.getTotalSpace());
      assertEquals("<1\\aZHu@kB!", mockFile0.getName());
      assertTrue(mockFile0.exists());
      assertTrue(mockFile0.canRead());
      assertEquals("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/jsoup/fee4762322f85a1109edd75ccb67f38cf5008c80/evosuite_6/Q||)h,u)'uO52/<1\\aZHu@kB!", mockFile0.toString());
      assertEquals(0L, mockFile0.getUsableSpace());
      assertFalse(mockFile0.isFile());
      assertFalse(mockFile0.isHidden());
      assertTrue(mockFile0.canExecute());
      assertTrue(mockFile0.isDirectory());
      assertEquals("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/jsoup/fee4762322f85a1109edd75ccb67f38cf5008c80/evosuite_6/Q||)h,u)'uO52", mockFile0.getParent());
      assertTrue(mockFile0.isAbsolute());
      assertTrue(mockFile0.canWrite());
      assertEquals(0L, mockFile0.getFreeSpace());
      assertTrue(file0.isAbsolute());
      assertTrue(file0.canRead());
      assertTrue(file0.isFile());
      assertEquals(0L, file0.getFreeSpace());
      assertFalse(file0.isHidden());
      assertTrue(file0.canWrite());
      assertEquals(0L, file0.getUsableSpace());
      assertEquals("<1\\aZHu@kB!0<1\\aZHu@kB!", file0.getName());
      assertFalse(file0.isDirectory());
      assertEquals(0L, file0.length());
      assertTrue(file0.exists());
      assertEquals("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/jsoup/fee4762322f85a1109edd75ccb67f38cf5008c80/evosuite_6/Q||)h,u)'uO52/<1\\aZHu@kB!", file0.getParent());
      assertEquals(1392409281320L, file0.lastModified());
      assertEquals("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/jsoup/fee4762322f85a1109edd75ccb67f38cf5008c80/evosuite_6/Q||)h,u)'uO52/<1\\aZHu@kB!/<1\\aZHu@kB!0<1\\aZHu@kB!", file0.toString());
      assertTrue(file0.canExecute());
      assertEquals(0L, file0.getTotalSpace());
      
      Collection<Connection.KeyVal> collection0 = httpConnection_Request0.data;
      assertNotNull(collection0);
      
      httpConnection_Request0.data = collection0;
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(mockFile0.equals((Object)file0));
      assertFalse(file0.equals((Object)mockFile0));
      assertNotNull(mockFileOutputStream0);
      
      Connection.Method connection_Method0 = Connection.Method.GET;
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      httpConnection_Request0.method = connection_Method0;
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.method.hasBody());
      
      try { 
        HttpConnection.Response.writePost(httpConnection_Request0, mockFileOutputStream0, string0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 11000)
  public void test54()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNotNull(httpConnection_KeyVal0);
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      int int0 = 0;
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request2.maxBodySize(int0);
      assertEquals(0, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request3.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNotNull(httpConnection_Request3);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(0, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertEquals(0, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request3.maxBodySize());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      
      HttpConnection.Request httpConnection_Request4 = new HttpConnection.Request();
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertFalse(httpConnection_Request4.equals((Object)httpConnection_Request2));
      assertFalse(httpConnection_Request4.equals((Object)httpConnection_Request3));
      assertFalse(httpConnection_Request4.equals((Object)httpConnection_Request0));
      assertFalse(httpConnection_Request4.equals((Object)httpConnection_Request1));
      assertNotNull(httpConnection_Request4);
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      
      int int1 = 32;
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request1.timeout(int1);
      assertEquals(0, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(32, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(32, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(32, httpConnection_Request5.timeoutMilliseconds);
      assertNotSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertNotSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertNotSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertFalse(httpConnection_Request0.equals((Object)httpConnection_Request4));
      assertFalse(httpConnection_Request1.equals((Object)httpConnection_Request4));
      assertFalse(int1 == int0);
      assertFalse(httpConnection_Request5.equals((Object)httpConnection_Request4));
      assertNotNull(httpConnection_Request5);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.maxBodySize());
      assertEquals(32, httpConnection_Request0.timeout());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(32, httpConnection_Request1.timeout());
      assertEquals(0, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(32, httpConnection_Request5.timeout());
      assertEquals(0, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      
      String string0 = ";";
      String string1 = HttpConnection.Response.setOutputContentType(httpConnection_Request0);
      assertEquals(0, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(32, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertFalse(httpConnection_Request0.equals((Object)httpConnection_Request4));
      assertNull(string1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.maxBodySize());
      assertEquals(32, httpConnection_Request0.timeout());
      
      String string2 = null;
      HttpConnection.Request httpConnection_Request6 = (HttpConnection.Request)httpConnection_Request4.ignoreHttpErrors(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(32, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertFalse(httpConnection_Request6.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request6.timeoutMilliseconds);
      assertFalse(httpConnection_Request6.ignoreContentType);
      assertTrue(httpConnection_Request6.followRedirects);
      assertNotSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertNotSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(httpConnection_Request4, httpConnection_Request2);
      assertNotSame(httpConnection_Request4, httpConnection_Request3);
      assertNotSame(httpConnection_Request4, httpConnection_Request0);
      assertNotSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request6);
      assertNotSame(httpConnection_Request4, httpConnection_Request5);
      assertNotSame(httpConnection_Request6, httpConnection_Request2);
      assertNotSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertNotSame(httpConnection_Request6, httpConnection_Request5);
      assertNotSame(httpConnection_Request6, httpConnection_Request1);
      assertNotSame(httpConnection_Request6, httpConnection_Request0);
      assertFalse(httpConnection_Request0.equals((Object)httpConnection_Request4));
      assertFalse(httpConnection_Request4.equals((Object)httpConnection_Request2));
      assertFalse(httpConnection_Request4.equals((Object)httpConnection_Request3));
      assertFalse(httpConnection_Request4.equals((Object)httpConnection_Request0));
      assertFalse(httpConnection_Request4.equals((Object)httpConnection_Request1));
      assertFalse(httpConnection_Request4.equals((Object)httpConnection_Request5));
      assertFalse(httpConnection_Request6.equals((Object)httpConnection_Request2));
      assertFalse(httpConnection_Request6.equals((Object)httpConnection_Request3));
      assertFalse(httpConnection_Request6.equals((Object)httpConnection_Request5));
      assertFalse(httpConnection_Request6.equals((Object)httpConnection_Request1));
      assertFalse(httpConnection_Request6.equals((Object)httpConnection_Request0));
      assertNotNull(httpConnection_Request6);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.maxBodySize());
      assertEquals(32, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request6.timeout());
      assertFalse(httpConnection_Request6.ignoreHttpErrors());
      assertTrue(httpConnection_Request6.followRedirects());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertFalse(httpConnection_Request6.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test55()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      String string0 = "+iwV";
      boolean boolean0 = false;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(boolean0).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      assertNotNull(sequenceInputStream0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string0, (InputStream) sequenceInputStream0);
      assertNotNull(httpConnection_KeyVal0);
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      
      URL uRL1 = MockURL.URL(uRL0, httpConnection_KeyVal0.value);
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertFalse(uRL1.equals((Object)uRL0));
      assertNotNull(uRL1);
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertEquals("http", uRL1.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toString());
      assertNull(uRL1.getUserInfo());
      assertNull(uRL1.getQuery());
      assertEquals((-1), uRL1.getPort());
      assertEquals((-1), uRL1.getDefaultPort());
      assertNull(uRL1.getRef());
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request0.url(uRL1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(uRL1.equals((Object)uRL0));
      assertNotNull(httpConnection_Request3);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertEquals("http", uRL1.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toString());
      assertNull(uRL1.getUserInfo());
      assertNull(uRL1.getQuery());
      assertEquals((-1), uRL1.getPort());
      assertEquals((-1), uRL1.getDefaultPort());
      assertNull(uRL1.getRef());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertNotNull(httpConnection_Request4);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      
      String string1 = httpConnection_Request4.getHeaderCaseInsensitive(string0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertNull(string1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      
      Connection.Method connection_Method0 = Connection.Method.PUT;
      Map.Entry<String, String> map_Entry0 = httpConnection_Request1.scanHeaders(httpConnection_KeyVal0.value);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertNull(map_Entry0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      httpConnection_Request4.method = connection_Method0;
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals(Connection.Method.PUT, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.PUT, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.method.hasBody());
      
      String string2 = HttpConnection.Response.setOutputContentType(httpConnection_Request4);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertNotSame(string2, string0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertEquals("--------------------------------", string2);
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals(Connection.Method.PUT, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.PUT, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreContentType());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      
      int int0 = httpConnection_Response1.statusCode();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals(0, int0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      
      String string3 = null;
      String string4 = "iP";
      String string5 = "org.jsoup.select.Evaluator$IndexEquals";
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request4);
        fail("Expecting exception: UnknownServiceException");
      
      } catch(UnknownServiceException e) {
         //
         // protocol doesn't support output
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test56()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      int int0 = 0;
      httpConnection_Request0.timeoutMilliseconds = int0;
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      String string0 = "#comment";
      boolean boolean0 = httpConnection_Request0.hasHeader(string0);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(boolean0);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      
      int int1 = 47;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int1);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(int1 == int0);
      assertNotNull(httpConnection_Request2);
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(47, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNotNull(httpConnection_Request3);
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(47, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(47, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      
      int int2 = 0;
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.header(string0, string0);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(47, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertNotNull(httpConnection_Request4);
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request4.timeout());
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request2.timeout(int2);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(0, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertFalse(int2 == int1);
      assertNotNull(httpConnection_Request5);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(0, httpConnection_Request5.timeout());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      
      String string1 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertFalse(int1 == int2);
      assertFalse(int1 == int0);
      assertNull(string1);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // HTTP error fetching URL
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test57()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      int int0 = 0;
      httpConnection_Request0.timeoutMilliseconds = int0;
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      
      String string0 = "#comment";
      boolean boolean0 = httpConnection_Request0.hasHeader(string0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(boolean0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertNotNull(httpConnection_Request3);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      
      int int1 = 0;
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.header(string0, string0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertNotNull(httpConnection_Request4);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request4.timeout());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request2.timeout(int1);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertNotNull(httpConnection_Request5);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(0, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      
      String string1 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertNull(string1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertNotNull(httpURLConnection0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertNull(httpURLConnection0.getContentType());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getUseCaches());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertFalse(httpURLConnection0.getDoOutput());
      assertNull(httpURLConnection0.getContentEncoding());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      
      int int2 = 1;
      Random.setNextRandom(int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
  }

  @Test(timeout = 11000)
  public void test58()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      String string0 = ";Vu\"-;NXBGE";
      String string1 = "I(@J8|$We.NpD\\O)r";
      List<String> list0 = null;
      List<String> list1 = hashMap0.put(string1, list0);
      assertNotSame(string1, string0);
      assertFalse(string1.equals((Object)string0));
      assertNull(list1);
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.processResponseHeaders(hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 11000)
  public void test59()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      int int0 = 0;
      httpConnection_Request0.timeoutMilliseconds = int0;
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      String string0 = "#comment";
      boolean boolean0 = httpConnection_Request0.hasHeader(string0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(boolean0);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, httpConnection_Request1.timeout());
      
      int int1 = 47;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(int1 == int0);
      assertNotNull(httpConnection_Request2);
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(47, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(47, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertNotNull(httpConnection_Request3);
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(47, httpConnection_Request1.timeout());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(47, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      
      int int2 = 6;
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.header(string0, string0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertNotNull(httpConnection_Request4);
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(47, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.followRedirects());
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request2.timeout(int2);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(6, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(6, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(6, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(6, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertNotNull(httpConnection_Request5);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(6, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(6, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(6, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(6, httpConnection_Request5.timeout());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      
      String string1 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(6, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(6, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(6, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertNull(string1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(6, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(6, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(6, httpConnection_Request2.timeout());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request2);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(6, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(6, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(6, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertNotNull(httpURLConnection0);
      assertTrue(httpURLConnection0.getDoInput());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals(6, httpURLConnection0.getConnectTimeout());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection0.getUseCaches());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertEquals(6, httpURLConnection0.getReadTimeout());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(6, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(6, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(6, httpConnection_Request2.timeout());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      
      try { 
        httpConnection_Response0.setupFromConnection(httpURLConnection0, httpConnection_Response1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test60()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      
      String string0 = "+iwV";
      boolean boolean0 = false;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(boolean0).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      assertNotNull(sequenceInputStream0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string0, (InputStream) sequenceInputStream0);
      assertNotNull(httpConnection_KeyVal0);
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      
      URL uRL1 = MockURL.URL(uRL0, httpConnection_KeyVal0.value);
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertFalse(uRL1.equals((Object)uRL0));
      assertNotNull(uRL1);
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL1.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals((-1), uRL1.getDefaultPort());
      assertNull(uRL1.getRef());
      assertEquals((-1), uRL1.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toExternalForm());
      assertNull(uRL1.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertNull(uRL1.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toString());
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request0.url(uRL1);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(uRL1.equals((Object)uRL0));
      assertNotNull(httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL1.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals((-1), uRL1.getDefaultPort());
      assertNull(uRL1.getRef());
      assertEquals((-1), uRL1.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toExternalForm());
      assertNull(uRL1.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertNull(uRL1.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toString());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertNotNull(httpConnection_Request4);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(3000, httpConnection_Request4.timeout());
      
      String string1 = HttpConnection.Response.LOCATION;
      assertNotSame(string1, string0);
      assertEquals("Location", string1);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      
      Connection.Method connection_Method0 = Connection.Method.PUT;
      Attribute attribute0 = new Attribute(httpConnection_KeyVal0.key, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(attribute0);
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals("+iwv", attribute0.getKey());
      assertEquals("Location", attribute0.getValue());
      
      String string2 = HttpConnection.Response.setOutputContentType(httpConnection_Request4);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertEquals("--------------------------------", string2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(3000, httpConnection_Request4.timeout());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      
      Connection.Method connection_Method1 = Connection.Method.POST;
      HttpConnection.Response httpConnection_Response2 = (HttpConnection.Response)httpConnection_Response1.method(connection_Method1);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response2.executed);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertEquals(0, httpConnection_Response2.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(connection_Method1, connection_Method0);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertSame(httpConnection_Response2, httpConnection_Response1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(connection_Method1.equals((Object)connection_Method0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response2);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(Connection.Method.POST, httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response2.charset());
      assertEquals(Connection.Method.POST, httpConnection_Response2.method());
      assertEquals(0, httpConnection_Response2.statusCode());
      assertNull(httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      
      int int0 = httpConnection_Response1.statusCode();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals(0, int0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(Connection.Method.POST, httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      
      String string3 = null;
      String string4 = "iP";
      String string5 = "org.jsoup.select.Evaluator$IndexEquals";
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request4);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // HTTP error fetching URL
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test61()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      String string0 = "+iwV";
      boolean boolean0 = false;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(boolean0).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      assertNotNull(sequenceInputStream0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string0, (InputStream) sequenceInputStream0);
      assertNotNull(httpConnection_KeyVal0);
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      
      URL uRL1 = MockURL.URL(uRL0, httpConnection_KeyVal0.value);
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertFalse(uRL1.equals((Object)uRL0));
      assertNotNull(uRL1);
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL1.getProtocol());
      assertNull(uRL1.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals((-1), uRL1.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toString());
      assertNull(uRL1.getUserInfo());
      assertEquals((-1), uRL1.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toExternalForm());
      assertNull(uRL1.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request0.url(uRL1);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(uRL1.equals((Object)uRL0));
      assertNotNull(httpConnection_Request3);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL1.getProtocol());
      assertNull(uRL1.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals((-1), uRL1.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toString());
      assertNull(uRL1.getUserInfo());
      assertEquals((-1), uRL1.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toExternalForm());
      assertNull(uRL1.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertNotNull(httpConnection_Request4);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      
      String string1 = HttpConnection.Response.LOCATION;
      assertNotSame(string1, string0);
      assertEquals("Location", string1);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      
      Connection.Method connection_Method0 = Connection.Method.PUT;
      Attribute attribute0 = new Attribute(httpConnection_KeyVal0.key, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(attribute0);
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals("+iwv", attribute0.getKey());
      assertEquals("Location", attribute0.getValue());
      
      httpConnection_Request4.method = connection_Method0;
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.PUT, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.PUT, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.method.hasBody());
      
      String string2 = HttpConnection.Response.setOutputContentType(httpConnection_Request4);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertEquals("--------------------------------", string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.PUT, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.PUT, httpConnection_Request4.method());
      
      String string3 = "T6j<";
      String string4 = "Entities";
      HttpConnection.KeyVal httpConnection_KeyVal1 = HttpConnection.KeyVal.create(string3, string4);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string4);
      assertNotSame(string4, string1);
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertNotSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(httpConnection_KeyVal1.equals((Object)httpConnection_KeyVal0));
      assertNotNull(httpConnection_KeyVal1);
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("T6j<", httpConnection_KeyVal1.key());
      assertEquals("Entities", httpConnection_KeyVal1.value());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      
      Connection.Method connection_Method1 = Connection.Method.POST;
      HttpConnection.Response httpConnection_Response2 = (HttpConnection.Response)httpConnection_Response1.method(connection_Method1);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertFalse(httpConnection_Response2.executed);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(connection_Method1, connection_Method0);
      assertSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(connection_Method1.equals((Object)connection_Method0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response2);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(Connection.Method.POST, httpConnection_Response1.method());
      assertEquals(Connection.Method.POST, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.statusMessage());
      assertEquals(0, httpConnection_Response2.statusCode());
      assertNull(httpConnection_Response2.charset());
      
      int int0 = httpConnection_Response1.statusCode();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals(0, int0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(Connection.Method.POST, httpConnection_Response1.method());
      
      String string5 = null;
      String string6 = "iP";
      String string7 = "org.jsoup.select.Evaluator$IndexEquals";
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response2);
        fail("Expecting exception: UnknownServiceException");
      
      } catch(UnknownServiceException e) {
         //
         // protocol doesn't support output
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test62()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      int int0 = 0;
      httpConnection_Request0.timeoutMilliseconds = int0;
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      String string0 = "#comment";
      boolean boolean0 = httpConnection_Request0.hasHeader(string0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(boolean0);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      
      int int1 = 47;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(int1 == int0);
      assertNotNull(httpConnection_Request2);
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(47, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertNotNull(httpConnection_Request3);
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(47, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(47, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      
      int int2 = 0;
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.header(string0, string0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertNotNull(httpConnection_Request4);
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(47, httpConnection_Request4.timeout());
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request2.timeout(int2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertEquals(0, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertFalse(int2 == int1);
      assertNotNull(httpConnection_Request5);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(0, httpConnection_Request5.timeout());
      
      String string1 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertNull(string1);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      httpConnection_Request2.maxBodySizeBytes = httpConnection_Request5.maxBodySizeBytes;
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(0, httpConnection_Request5.timeout());
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(0, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // HTTP error fetching URL
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test63()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      
      Parser parser0 = null;
      Connection.Method connection_Method0 = Connection.Method.PATCH;
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.url(uRL0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.method(connection_Method0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals(Connection.Method.PATCH, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.PATCH, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      
      HttpConnection.Request httpConnection_Request3 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.equals((Object)httpConnection_Request2));
      assertFalse(httpConnection_Request3.equals((Object)httpConnection_Request1));
      assertFalse(httpConnection_Request3.equals((Object)httpConnection_Request0));
      assertNotNull(httpConnection_Request3);
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.ignoreHttpErrors(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertNotSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertNotSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertFalse(httpConnection_Request0.equals((Object)httpConnection_Request3));
      assertFalse(httpConnection_Request4.equals((Object)httpConnection_Request3));
      assertNotNull(httpConnection_Request4);
      assertEquals(Connection.Method.PATCH, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.PATCH, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      
      try { 
        HttpConnection.Response.createConnection(httpConnection_Request4);
        fail("Expecting exception: ProtocolException");
      
      } catch(ProtocolException e) {
         //
         // Invalid HTTP method: PATCH
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test64()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      
      int int0 = 168;
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      
      String string0 = "KK";
      httpConnection_Response0.contentType = string0;
      assertEquals("KK", httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      
      Document document0 = Parser.parseBodyFragment(httpConnection_Response0.LOCATION, httpConnection_Response0.LOCATION);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(document0);
      assertEquals("KK", httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(1, document0.childNodeSize());
      assertFalse(document0.isBlock());
      assertEquals("Location", document0.baseUri());
      assertEquals("#document", document0.nodeName());
      assertEquals("Location", document0.location());
      assertEquals(0, document0.siblingIndex());
      assertEquals("#root", document0.tagName());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      
      String string1 = httpConnection_Response0.contentType();
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertSame(string1, string0);
      assertEquals("KK", string1);
      assertNotNull(string1);
      assertEquals("KK", httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
  }

  @Test(timeout = 11000)
  public void test65()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      httpConnection_Request0.timeoutMilliseconds = httpConnection_Request0.timeoutMilliseconds;
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      String string0 = "#comment";
      boolean boolean0 = httpConnection_Request0.hasHeader(string0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(boolean0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      
      int int0 = 47;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(47, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      boolean boolean1 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertNotNull(httpConnection_Request3);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(47, httpConnection_Request1.timeout());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(47, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      int int1 = 0;
      EvoSuiteFile evoSuiteFile0 = null;
      String string1 = "$dmy.j 1>;omlbddx";
      boolean boolean2 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string1);
      assertNotSame(string1, string0);
      assertFalse(boolean2);
      assertFalse(string1.equals((Object)string0));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.header(string0, string0);
      assertEquals(47, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(string0, string1);
      assertFalse(string0.equals((Object)string1));
      assertNotNull(httpConnection_Request4);
      assertEquals(47, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request2.timeout(int1);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertNotNull(httpConnection_Request5);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(0, httpConnection_Request5.timeout());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      String string2 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertFalse(int0 == int1);
      assertNull(string2);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotNull(httpConnection_Response0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertFalse(int0 == int1);
      assertNotNull(httpURLConnection0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertFalse(httpURLConnection0.usingProxy());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      String string3 = HttpConnection.Response.getRequestCookieString(httpConnection_Request3);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertEquals("", string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(string3);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(0, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      String string4 = httpConnection_Response0.body();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertEquals("#comment", string4);
      assertFalse(string4.equals((Object)string3));
      assertTrue(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertNotNull(string4);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      
      httpConnection_Response0.setupFromConnection(httpURLConnection0, httpConnection_Response1);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertFalse(httpURLConnection0.usingProxy());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      int int2 = 1;
      Random.setNextRandom(int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
  }

  @Test(timeout = 11000)
  public void test66()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      
      String string0 = "+iwV";
      boolean boolean0 = false;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(boolean0).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      assertNotNull(sequenceInputStream0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string0, (InputStream) sequenceInputStream0);
      assertNotNull(httpConnection_KeyVal0);
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      
      URL uRL1 = MockURL.URL(uRL0, httpConnection_KeyVal0.value);
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertFalse(uRL1.equals((Object)uRL0));
      assertNotNull(uRL1);
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertNull(uRL1.getRef());
      assertEquals((-1), uRL1.getDefaultPort());
      assertNull(uRL1.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toExternalForm());
      assertEquals((-1), uRL1.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertNull(uRL1.getUserInfo());
      assertEquals("http", uRL1.getProtocol());
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request0.url(uRL1);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(uRL1.equals((Object)uRL0));
      assertNotNull(httpConnection_Request3);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertNull(uRL1.getRef());
      assertEquals((-1), uRL1.getDefaultPort());
      assertNull(uRL1.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toExternalForm());
      assertEquals((-1), uRL1.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertNull(uRL1.getUserInfo());
      assertEquals("http", uRL1.getProtocol());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertNotNull(httpConnection_Request4);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      
      sequenceInputStream0.mark(httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      String string1 = httpConnection_Request4.getHeaderCaseInsensitive(string0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertNull(string1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      
      Map.Entry<String, String> map_Entry0 = httpConnection_Request1.scanHeaders(httpConnection_KeyVal0.value);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNull(map_Entry0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      String string2 = HttpConnection.Response.setOutputContentType(httpConnection_Request4);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string0, string2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertNotSame(string2, string0);
      assertEquals("--------------------------------", string2);
      assertFalse(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // HTTP error fetching URL
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test67()  throws Throwable  {
      int int0 = (-1638768762);
      Random.setNextRandom(int0);
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      Parser parser0 = Parser.xmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.ignoreContentType(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      
      httpConnection_Request0.parser = parser0;
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request0.parser.isTrackErrors());
      
      String string0 = "59v9&gzyr}o`";
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string0);
      assertNotNull(httpConnection_KeyVal0);
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("59v9&gzyr}o`", httpConnection_KeyVal0.key());
      assertEquals("59v9&gzyr}o`", httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request1.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNotNull(httpConnection_Request3);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("59v9&gzyr}o`", httpConnection_KeyVal0.key());
      assertEquals("59v9&gzyr}o`", httpConnection_KeyVal0.value());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      String string1 = null;
      try { 
        HttpConnection.Response.writePost(httpConnection_Request2, pipedOutputStream0, string1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 11000)
  public void test68()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      httpConnection_Request0.timeoutMilliseconds = httpConnection_Request0.timeoutMilliseconds;
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      
      String string0 = "#comment";
      boolean boolean0 = httpConnection_Request0.hasHeader(string0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(boolean0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      
      int int0 = 47;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(47, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      boolean boolean1 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNotNull(httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(47, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request3.timeout());
      
      String string1 = httpConnection_Request3.cookie(string0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNull(string1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(47, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request3.timeout());
      
      int int1 = 0;
      EvoSuiteFile evoSuiteFile0 = null;
      String string2 = "$dmy.j 1>;omlbddx";
      boolean boolean2 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string2);
      assertNotSame(string2, string0);
      assertFalse(boolean2);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(string2.equals((Object)string0));
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.header(string0, string0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(47, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertNotSame(string0, string2);
      assertFalse(string0.equals((Object)string2));
      assertNotNull(httpConnection_Request4);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(47, httpConnection_Request0.timeout());
      assertEquals(47, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request2.timeout(int1);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertEquals(0, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertNotNull(httpConnection_Request5);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(0, httpConnection_Request5.timeout());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(0, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      String string3 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertFalse(int0 == int1);
      assertNull(string3);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(0, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request2);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertFalse(int0 == int1);
      assertNotNull(httpURLConnection0);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getDoInput());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertNull(httpURLConnection0.getContentType());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(0, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      String string4 = HttpConnection.Response.getRequestCookieString(httpConnection_Request3);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertEquals("", string4);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request3.timeout());
      
      String string5 = httpConnection_Response0.body();
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(string5, string0);
      assertNotSame(string5, string4);
      assertNotSame(string5, string2);
      assertEquals("#comment", string5);
      assertTrue(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertNotNull(string5);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      
      httpConnection_Response0.setupFromConnection(httpURLConnection0, httpConnection_Response1);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertNull(httpConnection_Response0.contentType());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getDoInput());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertNull(httpURLConnection0.getContentType());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(0, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      
      int int2 = 1;
      Random.setNextRandom(int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      String string6 = httpConnection_Response1.charset();
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNull(string6);
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      
      String string7 = httpConnection_Response0.body();
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(string7, string2);
      assertNotSame(string7, string0);
      assertNotSame(string7, string5);
      assertNotSame(string7, string4);
      assertEquals("#comment", string7);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(string7.equals((Object)string2));
      assertTrue(string7.equals((Object)string0));
      assertTrue(string7.equals((Object)string5));
      assertFalse(string7.equals((Object)string4));
      assertNotNull(string7);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertNull(httpConnection_Response0.contentType());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      
      byte[] byteArray0 = httpConnection_Response0.bodyAsBytes();
      assertArrayEquals(new byte[] {(byte)35, (byte)99, (byte)111, (byte)109, (byte)109, (byte)101, (byte)110, (byte)116}, byteArray0);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertNotNull(byteArray0);
      assertEquals(8, byteArray0.length);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertNull(httpConnection_Response0.contentType());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
  }

  @Test(timeout = 11000)
  public void test69()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      
      Parser parser0 = Parser.xmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      httpConnection_Request1.data = httpConnection_Request0.data;
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      int int0 = 0;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(0, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      
      boolean boolean0 = false;
      String string0 = "0biy(5d|d=_t";
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(string0);
      assertNotNull(mockFileOutputStream0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNotNull(httpConnection_KeyVal0);
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertNotNull(httpConnection_Request3);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(0, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(0, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      
      String string1 = ";)1WBj";
      Connection.Method connection_Method0 = Connection.Method.PUT;
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.method(connection_Method0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(0, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertNotNull(httpConnection_Request4);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(0, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.PUT, httpConnection_Request4.method());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.writePost(httpConnection_Request2, mockFileOutputStream0, string1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 11000)
  public void test70()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      httpConnection_Request0.timeoutMilliseconds = httpConnection_Request0.timeoutMilliseconds;
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      String string0 = "#comment";
      boolean boolean0 = httpConnection_Request0.hasHeader(string0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(boolean0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      
      int int0 = 47;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(47, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(47, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(47, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      boolean boolean1 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertNotNull(httpConnection_Request3);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(47, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(47, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request3.timeout());
      
      int int1 = 0;
      String string1 = "Request must not be null";
      String string2 = "BeforeHead";
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.cookie(string1, string2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(47, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotNull(httpConnection_Request4);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(47, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(47, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.followRedirects());
      
      EvoSuiteFile evoSuiteFile0 = null;
      String string3 = "$dmy.j 1>;omlbddx";
      boolean boolean2 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string3);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertFalse(boolean2);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request2.parser(httpConnection_Request2.parser);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(47, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(int0 == int1);
      assertNotNull(httpConnection_Request5);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(47, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals(47, httpConnection_Request5.timeout());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(47, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(47, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      HttpConnection.Request httpConnection_Request6 = httpConnection_Request2.timeout(int1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request6.ignoreContentType);
      assertTrue(httpConnection_Request6.followRedirects);
      assertFalse(httpConnection_Request6.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request6.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertNotNull(httpConnection_Request6);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertEquals(0, httpConnection_Request6.timeout());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertFalse(httpConnection_Request6.ignoreContentType());
      assertTrue(httpConnection_Request6.followRedirects());
      assertFalse(httpConnection_Request6.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(0, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      String string4 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(int0 == int1);
      assertNull(string4);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(0, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotNull(httpConnection_Response0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(int0 == int1);
      assertNotNull(httpURLConnection0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(0, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      String string5 = httpConnection_Response0.body();
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(string5, string0);
      assertNotSame(string5, string3);
      assertNotSame(string5, string1);
      assertNotSame(string5, string2);
      assertEquals("#comment", string5);
      assertFalse(string5.equals((Object)string3));
      assertTrue(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertNotNull(string5);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      
      String string6 = httpConnection_Response0.body();
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(string6, string2);
      assertNotSame(string6, string1);
      assertNotSame(string6, string3);
      assertNotSame(string6, string0);
      assertNotSame(string6, string5);
      assertEquals("#comment", string6);
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string1));
      assertTrue(string6.equals((Object)string5));
      assertTrue(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string3));
      assertNotNull(string6);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      
      httpConnection_Response0.setupFromConnection(httpURLConnection0, httpConnection_Response1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertNull(httpConnection_Response0.contentType());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(0, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      
      int int2 = 1;
      Random.setNextRandom(int2);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      String string7 = HttpConnection.Response.getRequestCookieString(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(string7, string0);
      assertNotSame(string7, string2);
      assertNotSame(string7, string3);
      assertNotSame(string7, string1);
      assertNotSame(string7, string5);
      assertNotSame(string7, string6);
      assertEquals("Request must not be null=BeforeHead", string7);
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string5));
      assertFalse(string7.equals((Object)string6));
      assertNotNull(string7);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      // Undeclared exception!
      try { 
        httpConnection_Response1.parse();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before parsing response
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test71()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      httpConnection_Request0.timeoutMilliseconds = httpConnection_Request0.timeoutMilliseconds;
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      
      String string0 = "#comment";
      boolean boolean0 = httpConnection_Request0.hasHeader(string0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(boolean0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      int int0 = 47;
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      boolean boolean1 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      
      int int1 = 0;
      EvoSuiteFile evoSuiteFile0 = null;
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request0.timeout(int1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertFalse(int1 == int0);
      assertNotNull(httpConnection_Request3);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(0, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      
      String string1 = HttpConnection.Response.setOutputContentType(httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertNull(string1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotNull(httpConnection_Response0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertNotNull(httpURLConnection0);
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      
      String string2 = httpConnection_Response0.body();
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string2, string0);
      assertEquals("#comment", string2);
      assertTrue(string2.equals((Object)string0));
      assertNotNull(string2);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      
      String string3 = httpConnection_Response0.body();
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertEquals("#comment", string3);
      assertTrue(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string0));
      assertNotNull(string3);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      
      httpConnection_Response0.setupFromConnection(httpURLConnection0, httpConnection_Response1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      
      int int2 = 1;
      Random.setNextRandom(int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      
      String string4 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertNull(string4);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(0, httpConnection_Request2.timeout());
      
      String string5 = httpConnection_Response0.charset();
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertNull(string5);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
  }

  @Test(timeout = 11000)
  public void test72()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      httpConnection_Request0.timeoutMilliseconds = httpConnection_Request0.timeoutMilliseconds;
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      
      String string0 = "#comment";
      boolean boolean0 = httpConnection_Request0.hasHeader(string0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(boolean0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      int int0 = 47;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(47, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(47, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      boolean boolean1 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertNotNull(httpConnection_Request3);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(47, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(47, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      
      String string1 = httpConnection_Request3.cookie(string0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertNull(string1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(47, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(47, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      
      int int1 = 0;
      EvoSuiteFile evoSuiteFile0 = null;
      String string2 = "$dmy.j 1>;omlbddx";
      boolean boolean2 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string2);
      assertNotSame(string2, string0);
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(string2.equals((Object)string0));
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.header(string0, string0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request4.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertNotSame(string0, string2);
      assertFalse(string0.equals((Object)string2));
      assertNotNull(httpConnection_Request4);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(47, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request2.timeout(int1);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(0, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertNotNull(httpConnection_Request5);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertEquals(0, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(0, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      
      String string3 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertFalse(int0 == int1);
      assertNull(string3);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(0, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotNull(httpConnection_Response0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertFalse(int0 == int1);
      assertNotNull(httpURLConnection0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertFalse(httpURLConnection0.usingProxy());
      assertNull(httpURLConnection0.getContentType());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getDoInput());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(0, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      
      String string4 = HttpConnection.Response.getRequestCookieString(httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertEquals("", string4);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(0, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      
      String string5 = httpConnection_Response0.body();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(string5, string2);
      assertNotSame(string5, string0);
      assertNotSame(string5, string4);
      assertEquals("#comment", string5);
      assertFalse(string5.equals((Object)string2));
      assertTrue(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertNotNull(string5);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      
      httpConnection_Response0.setupFromConnection(httpURLConnection0, httpConnection_Response1);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertFalse(httpURLConnection0.usingProxy());
      assertNull(httpURLConnection0.getContentType());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getDoInput());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(0, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      
      int int2 = 1;
      Random.setNextRandom(int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      String string6 = httpConnection_Response1.charset();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNull(string6);
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      
      Document document0 = httpConnection_Response0.parse();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertNotNull(document0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("UTF-8", httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(1, document0.childNodeSize());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", document0.baseUri());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", document0.location());
      assertEquals("#document", document0.nodeName());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertEquals(0, document0.siblingIndex());
      assertFalse(document0.isBlock());
      assertEquals("#root", document0.tagName());
  }

  @Test(timeout = 11000)
  public void test73()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      httpConnection_Request0.timeoutMilliseconds = httpConnection_Request0.timeoutMilliseconds;
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      String string0 = "#comment";
      boolean boolean0 = httpConnection_Request0.hasHeader(string0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(boolean0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      
      int int0 = 47;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int0);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(47, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(47, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      boolean boolean1 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertNotNull(httpConnection_Request3);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(47, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      String string1 = httpConnection_Request3.cookie(string0);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertNull(string1);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(47, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      int int1 = 0;
      EvoSuiteFile evoSuiteFile0 = null;
      String string2 = "$dmy.j 1>;omlbddx";
      boolean boolean2 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string2);
      assertNotSame(string2, string0);
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(string2.equals((Object)string0));
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.header(string0, string0);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(47, httpConnection_Request4.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertNotSame(string0, string2);
      assertFalse(string0.equals((Object)string2));
      assertNotNull(httpConnection_Request4);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(47, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request2.timeout(int1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertNotNull(httpConnection_Request5);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(0, httpConnection_Request5.timeout());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(0, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      String string3 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertFalse(int0 == int1);
      assertNull(string3);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(0, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotNull(httpConnection_Response0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertFalse(int0 == int1);
      assertNotNull(httpURLConnection0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertNull(httpURLConnection0.getContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(0, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      String string4 = HttpConnection.Response.getRequestCookieString(httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertEquals("", string4);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      String string5 = httpConnection_Response0.body();
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string5, string0);
      assertNotSame(string5, string4);
      assertNotSame(string5, string2);
      assertEquals("#comment", string5);
      assertTrue(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertNotNull(string5);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      
      httpConnection_Response0.setupFromConnection(httpURLConnection0, httpConnection_Response1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertNull(httpURLConnection0.getContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(0, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      
      int int2 = 1;
      Random.setNextRandom(int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      String string6 = httpConnection_Response1.charset();
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNull(string6);
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      
      HttpConnection.Response httpConnection_Response2 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request5, httpConnection_Response0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(int1 == int0);
      assertFalse(int1 == int2);
      assertNotNull(httpConnection_Response2);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(0, httpConnection_Request5.timeout());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(0, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.contentType());
      assertEquals(200, httpConnection_Response2.statusCode());
      
      byte[] byteArray0 = httpConnection_Response0.bodyAsBytes();
      assertArrayEquals(new byte[] {(byte)35, (byte)99, (byte)111, (byte)109, (byte)109, (byte)101, (byte)110, (byte)116}, byteArray0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response2));
      assertNotNull(byteArray0);
      assertEquals(8, byteArray0.length);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
  }

  @Test(timeout = 11000)
  public void test74()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      httpConnection_Request0.timeoutMilliseconds = httpConnection_Request0.timeoutMilliseconds;
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      String string0 = "#comment";
      boolean boolean0 = httpConnection_Request0.hasHeader(string0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(boolean0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      
      int int0 = 47;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int0);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(47, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(47, httpConnection_Request2.timeout());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      boolean boolean1 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNotNull(httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(47, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(47, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      
      int int1 = 0;
      String string1 = "Request must not be null";
      String string2 = "BeforeHead";
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.cookie(string1, string2);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(httpConnection_Request4);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      
      EvoSuiteFile evoSuiteFile0 = null;
      String string3 = "$dmy.j 1>;omlbddx";
      boolean boolean2 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string3);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertFalse(boolean2);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request2.parser(httpConnection_Request2.parser);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(int0 == int1);
      assertNotNull(httpConnection_Request5);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(47, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(47, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(47, httpConnection_Request2.timeout());
      
      httpConnection_Request2.parser = parser0;
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request2.parser.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(47, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(47, httpConnection_Request2.timeout());
      
      HttpConnection.Request httpConnection_Request6 = httpConnection_Request2.timeout(int1);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request6.ignoreHttpErrors);
      assertFalse(httpConnection_Request6.ignoreContentType);
      assertTrue(httpConnection_Request6.followRedirects);
      assertEquals(0, httpConnection_Request6.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertNotNull(httpConnection_Request6);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request6.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertFalse(httpConnection_Request6.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertTrue(httpConnection_Request6.followRedirects());
      assertEquals(0, httpConnection_Request6.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(0, httpConnection_Request2.timeout());
      
      String string4 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(int0 == int1);
      assertNull(string4);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(0, httpConnection_Request2.timeout());
      
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotNull(httpConnection_Response0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(int0 == int1);
      assertNotNull(httpURLConnection0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertTrue(httpURLConnection0.getUseCaches());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertFalse(httpURLConnection0.getDoOutput());
      assertNull(httpURLConnection0.getContentEncoding());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      
      String string5 = httpConnection_Response0.body();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string5, string3);
      assertNotSame(string5, string1);
      assertNotSame(string5, string0);
      assertNotSame(string5, string2);
      assertEquals("#comment", string5);
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertTrue(string5.equals((Object)string0));
      assertNotNull(string5);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      
      String string6 = httpConnection_Response0.body();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string6, string5);
      assertNotSame(string6, string0);
      assertNotSame(string6, string1);
      assertNotSame(string6, string2);
      assertNotSame(string6, string3);
      assertEquals("#comment", string6);
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string3));
      assertTrue(string6.equals((Object)string5));
      assertTrue(string6.equals((Object)string0));
      assertNotNull(string6);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      
      httpConnection_Response0.setupFromConnection(httpURLConnection0, httpConnection_Response1);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertTrue(httpURLConnection0.getUseCaches());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertFalse(httpURLConnection0.getDoOutput());
      assertNull(httpURLConnection0.getContentEncoding());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      
      int int2 = 1;
      Random.setNextRandom(int2);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      String string7 = HttpConnection.Response.getRequestCookieString(httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotSame(string7, string2);
      assertNotSame(string7, string3);
      assertNotSame(string7, string6);
      assertNotSame(string7, string1);
      assertNotSame(string7, string0);
      assertNotSame(string7, string5);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertEquals("Request must not be null=BeforeHead", string7);
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string5));
      assertNotNull(string7);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Response0.req);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      
      // Undeclared exception!
      try { 
        httpConnection_Response1.parse();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before parsing response
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test75()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      
      Parser parser0 = Parser.xmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      
      httpConnection_Request1.data = httpConnection_Request0.data;
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      
      int int0 = 0;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int0);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      
      boolean boolean0 = false;
      String string0 = "0biy(5d|d=_t";
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(string0);
      assertNotNull(mockFileOutputStream0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string0);
      assertNotNull(httpConnection_KeyVal0);
      assertEquals("0biy(5d|d=_t", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("0biy(5d|d=_t", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertNotNull(httpConnection_Request3);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("0biy(5d|d=_t", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("0biy(5d|d=_t", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(0, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      
      String string1 = ";)1WBj";
      Connection.Method connection_Method0 = Connection.Method.PUT;
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.method(connection_Method0);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertNotNull(httpConnection_Request4);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(0, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      
      HttpConnection.Response.writePost(httpConnection_Request2, mockFileOutputStream0, string1);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.PUT, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.PUT, httpConnection_Request2.method());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test76()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      Parser parser0 = Parser.xmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      int int0 = (-4);
      httpConnection_Request0.timeoutMilliseconds = int0;
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals((-4), httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      String string0 = "#comment";
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals((-4), httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals((-4), httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals((-4), httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals((-4), httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      
      int int1 = 47;
      HttpConnection.Request httpConnection_Request2 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request1));
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request0));
      assertNotNull(httpConnection_Request2);
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals((-4), httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals((-4), httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals((-4), httpConnection_Request3.timeoutMilliseconds);
      assertNotSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertNotSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertNotSame(httpConnection_Request3, httpConnection_Request2);
      assertFalse(httpConnection_Request0.equals((Object)httpConnection_Request2));
      assertFalse(httpConnection_Request1.equals((Object)httpConnection_Request2));
      assertFalse(httpConnection_Request3.equals((Object)httpConnection_Request2));
      assertNotNull(httpConnection_Request3);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals((-4), httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals((-4), httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals((-4), httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request2.timeout(httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertNotSame(httpConnection_Request2, httpConnection_Request1);
      assertNotSame(httpConnection_Request2, httpConnection_Request0);
      assertNotSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertNotSame(httpConnection_Request4, httpConnection_Request1);
      assertNotSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertNotSame(httpConnection_Request4, httpConnection_Request0);
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request1));
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request0));
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request3));
      assertFalse(httpConnection_Request4.equals((Object)httpConnection_Request1));
      assertFalse(httpConnection_Request4.equals((Object)httpConnection_Request3));
      assertFalse(httpConnection_Request4.equals((Object)httpConnection_Request0));
      assertNotNull(httpConnection_Request4);
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(3000, httpConnection_Request4.timeout());
      
      String string1 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertNotSame(httpConnection_Request2, httpConnection_Request1);
      assertNotSame(httpConnection_Request2, httpConnection_Request0);
      assertNotSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request1));
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request0));
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request3));
      assertNull(string1);
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // timeout can not be negative
         //
         verifyException("java.net.URLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test77()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      httpConnection_Request0.timeoutMilliseconds = httpConnection_Request0.timeoutMilliseconds;
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      String string0 = "#comment";
      boolean boolean0 = httpConnection_Request0.hasHeader(string0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(boolean0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      
      int int0 = 47;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(47, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(47, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      boolean boolean1 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNotNull(httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(47, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals(47, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      String string1 = httpConnection_Request3.cookie(string0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNull(string1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(47, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals(47, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      int int1 = 0;
      String string2 = "$dmy.j 1>;omlbddx";
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.header(string0, string0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(47, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string0, string2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertFalse(string0.equals((Object)string2));
      assertNotNull(httpConnection_Request4);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(47, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request2.timeout(int1);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertEquals(0, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertNotNull(httpConnection_Request5);
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals(0, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      String string3 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(int0 == int1);
      assertNull(string3);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotNull(httpConnection_Response0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(int0 == int1);
      assertNotNull(httpURLConnection0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertTrue(httpURLConnection0.getDoInput());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.usingProxy());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      String string4 = HttpConnection.Response.getRequestCookieString(httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string4, string2);
      assertNotSame(string4, string0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertEquals("", string4);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertNotNull(string4);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals(0, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      String string5 = httpConnection_Response0.body();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string5, string4);
      assertNotSame(string5, string2);
      assertNotSame(string5, string0);
      assertEquals("#comment", string5);
      assertFalse(string5.equals((Object)string4));
      assertTrue(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertNotNull(string5);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      
      httpConnection_Response0.setupFromConnection(httpURLConnection0, httpConnection_Response0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertNull(httpConnection_Response0.contentType());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertTrue(httpURLConnection0.getDoInput());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.usingProxy());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      int int2 = 1;
      Random.setNextRandom(int2);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      
      String string6 = httpConnection_Response0.statusMessage();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string6, string2);
      assertNotSame(string6, string0);
      assertNotSame(string6, string5);
      assertNotSame(string6, string4);
      assertEquals("OK", string6);
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string4));
      assertNotNull(string6);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals((-1), httpConnection_Response0.statusCode());
      
      int int3 = httpConnection_Response0.statusCode();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertEquals((-1), int3);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals((-1), httpConnection_Response0.statusCode());
  }

  @Test(timeout = 11000)
  public void test78()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      String string0 = ";Vu\"-;NXBGE";
      String string1 = "/ep}5";
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Collection<String> collection0 = null;
      LinkedList<String> linkedList1 = new LinkedList<String>();
      assertFalse(linkedList1.contains(string0));
      assertNotNull(linkedList1);
      assertEquals(0, linkedList1.size());
      
      List<String> list0 = hashMap0.put(string1, linkedList1);
      assertNotSame(string1, string0);
      assertFalse(linkedList1.contains(string0));
      assertFalse(string1.equals((Object)string0));
      assertNull(list0);
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertEquals(0, linkedList1.size());
      
      List<String> list1 = null;
      String string2 = null;
      String string3 = "o5UKA";
      boolean boolean0 = linkedList1.add(string3);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertTrue(linkedList1.contains(string3));
      assertFalse(linkedList1.contains(string0));
      assertTrue(boolean0);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals(1, linkedList1.size());
      
      List<String> list2 = hashMap0.put(string2, list1);
      assertNull(list2);
      assertFalse(hashMap0.isEmpty());
      assertEquals(2, hashMap0.size());
      
      List<String> list3 = hashMap0.replace(string0, list1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertNull(list3);
      assertFalse(hashMap0.isEmpty());
      assertEquals(2, hashMap0.size());
      
      String string4 = "$H:R~Q6?22:F&";
      List<String> list4 = hashMap0.put(string4, linkedList1);
      assertNotSame(string4, string3);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertTrue(linkedList1.contains(string3));
      assertFalse(linkedList1.contains(string4));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertNull(list4);
      assertFalse(hashMap0.isEmpty());
      assertEquals(3, hashMap0.size());
      assertEquals(1, linkedList1.size());
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertFalse(hashMap0.isEmpty());
      assertEquals(3, hashMap0.size());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test79()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      httpConnection_Request0.timeoutMilliseconds = httpConnection_Request0.timeoutMilliseconds;
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      
      String string0 = "#comment";
      boolean boolean0 = httpConnection_Request0.hasHeader(string0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(boolean0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      
      int int0 = 47;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(47, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(47, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(47, httpConnection_Request2.timeout());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      boolean boolean1 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNotNull(httpConnection_Request3);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(47, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(47, httpConnection_Request1.timeout());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(47, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      
      String string1 = httpConnection_Request3.cookie(string0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNull(string1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(47, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(47, httpConnection_Request1.timeout());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(47, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      
      Connection.Method connection_Method0 = Connection.Method.PATCH;
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request3.method(connection_Method0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(47, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertNotNull(httpConnection_Request4);
      assertEquals(Connection.Method.PATCH, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(47, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.PATCH, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(47, httpConnection_Request1.timeout());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.PATCH, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(47, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(Connection.Method.PATCH, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(47, httpConnection_Request4.timeout());
      
      int int1 = 0;
      String string2 = "$dmy.j 1>;omlbddx";
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request0.header(string0, string0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertNotSame(string0, string2);
      assertFalse(string0.equals((Object)string2));
      assertNotNull(httpConnection_Request5);
      assertEquals(Connection.Method.PATCH, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(47, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals(47, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(Connection.Method.PATCH, httpConnection_Request5.method());
      
      HttpConnection.Request httpConnection_Request6 = httpConnection_Request2.timeout(int1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertTrue(httpConnection_Request6.followRedirects);
      assertFalse(httpConnection_Request6.ignoreHttpErrors);
      assertFalse(httpConnection_Request6.ignoreContentType);
      assertEquals(0, httpConnection_Request6.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertNotNull(httpConnection_Request6);
      assertEquals(Connection.Method.PATCH, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.PATCH, httpConnection_Request6.method());
      assertTrue(httpConnection_Request6.followRedirects());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertEquals(0, httpConnection_Request6.timeout());
      assertFalse(httpConnection_Request6.ignoreContentType());
      assertFalse(httpConnection_Request6.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.PATCH, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.PATCH, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(0, httpConnection_Request2.timeout());
      
      String string3 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(int0 == int1);
      assertNull(string3);
      assertEquals(Connection.Method.PATCH, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.PATCH, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.PATCH, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(0, httpConnection_Request2.timeout());
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
        fail("Expecting exception: ProtocolException");
      
      } catch(ProtocolException e) {
         //
         // Invalid HTTP method: PATCH
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test80()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = null;
      String string0 = "ip;cOzJZGT*$lBP";
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertFalse(boolean0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean1 = FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      String string1 = httpConnection_Response0.statusMessage();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertNull(string1);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      
      String string2 = httpConnection_Response0.contentType();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertNull(string2);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>(httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(hashMap0);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      String string3 = "doctypepublicidentifier_doublequoted";
      LinkedList<String> linkedList0 = new LinkedList<String>();
      assertFalse(linkedList0.contains(string3));
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      boolean boolean2 = hashMap0.replace(httpConnection_Response0.charset, (List<String>) linkedList0, (List<String>) linkedList0);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertFalse(linkedList0.contains(string3));
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, linkedList0.size());
      
      boolean boolean3 = linkedList0.add(httpConnection_Response0.charset);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertFalse(linkedList0.contains(string3));
      assertTrue(boolean3);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(1, linkedList0.size());
      
      List<String> list0 = hashMap0.put(string3, linkedList0);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertNotSame(string3, string0);
      assertFalse(linkedList0.contains(string3));
      assertFalse(string3.equals((Object)string0));
      assertNull(list0);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, linkedList0.size());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.processResponseHeaders(hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Header value must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test81()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      
      Parser parser0 = Parser.xmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      httpConnection_Request1.data = httpConnection_Request0.data;
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      
      boolean boolean0 = false;
      String string0 = "0biy(5d|d=_t";
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(string0);
      assertNotNull(mockFileOutputStream0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string0);
      assertNotNull(httpConnection_KeyVal0);
      assertEquals("0biy(5d|d=_t", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("0biy(5d|d=_t", httpConnection_KeyVal0.value());
      
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      httpConnection_KeyVal0.stream = (InputStream) pipedInputStream0;
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("0biy(5d|d=_t", httpConnection_KeyVal0.key());
      assertEquals("0biy(5d|d=_t", httpConnection_KeyVal0.value());
      assertEquals(0, pipedInputStream0.available());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNotNull(httpConnection_Request3);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("0biy(5d|d=_t", httpConnection_KeyVal0.key());
      assertEquals("0biy(5d|d=_t", httpConnection_KeyVal0.value());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      
      String string1 = ";)1WBj";
      Connection.Method connection_Method0 = Connection.Method.PUT;
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.method(connection_Method0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertNotNull(httpConnection_Request4);
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(Connection.Method.PUT, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      
      try { 
        HttpConnection.Response.writePost(httpConnection_Request2, mockFileOutputStream0, string1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 11000)
  public void test82()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      httpConnection_Request0.timeoutMilliseconds = httpConnection_Request0.timeoutMilliseconds;
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      String string0 = "#comment";
      boolean boolean0 = httpConnection_Request0.hasHeader(string0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(boolean0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(httpConnection_Request0.parser);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      
      int int0 = 47;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(47, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(47, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(47, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      boolean boolean1 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertNotNull(httpConnection_Request3);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(47, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(47, httpConnection_Request1.timeout());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(47, httpConnection_Request3.timeout());
      
      String string1 = httpConnection_Request3.cookie(string0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertNull(string1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(47, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(47, httpConnection_Request1.timeout());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(47, httpConnection_Request3.timeout());
      
      int int1 = 0;
      String string2 = "$dmy.j 1>;omlbddx";
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.header(string0, string0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request4.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertFalse(string0.equals((Object)string2));
      assertNotNull(httpConnection_Request4);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(47, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(47, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request2.timeout(int1);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(0, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertNotNull(httpConnection_Request5);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(0, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(0, httpConnection_Request5.timeout());
      assertTrue(httpConnection_Request5.followRedirects());
      
      String string3 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertFalse(int0 == int1);
      assertNull(string3);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(0, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertFalse(int0 == int1);
      assertNotNull(httpURLConnection0);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertFalse(httpURLConnection0.usingProxy());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getDoInput());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertFalse(httpURLConnection0.getDoOutput());
      assertTrue(httpURLConnection0.getUseCaches());
      assertNull(httpURLConnection0.getContentEncoding());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(0, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      String string4 = HttpConnection.Response.getRequestCookieString(httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertEquals("", string4);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertNotNull(string4);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(0, httpConnection_Request3.timeout());
      
      httpConnection_Response0.numRedirects = httpConnection_Request4.timeoutMilliseconds;
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(0, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      
      String string5 = httpConnection_Response0.body();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string5, string2);
      assertNotSame(string5, string0);
      assertNotSame(string5, string4);
      assertEquals("#comment", string5);
      assertFalse(string5.equals((Object)string2));
      assertTrue(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertNotNull(string5);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      
      httpConnection_Response0.setupFromConnection(httpURLConnection0, httpConnection_Response1);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertFalse(httpURLConnection0.usingProxy());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getDoInput());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertFalse(httpURLConnection0.getDoOutput());
      assertTrue(httpURLConnection0.getUseCaches());
      assertNull(httpURLConnection0.getContentEncoding());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(0, httpConnection_Request1.timeout());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      int int2 = 1;
      Random.setNextRandom(int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      String string6 = httpConnection_Response1.charset();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNull(string6);
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      
      String string7 = httpConnection_Response1.statusMessage();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNull(string7);
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      
      int int3 = httpConnection_Response0.statusCode();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertEquals((-1), int3);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      assertFalse(int3 == int1);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      
      Document document0 = httpConnection_Response0.parse();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertNotNull(document0);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals("UTF-8", httpConnection_Response0.charset());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertFalse(document0.isBlock());
      assertEquals("#document", document0.nodeName());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", document0.location());
      assertEquals(0, document0.siblingIndex());
      assertEquals("#root", document0.tagName());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
      
      String string8 = httpConnection_Response0.charset();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(string8, string5);
      assertNotSame(string8, string2);
      assertNotSame(string8, string4);
      assertNotSame(string8, string0);
      assertEquals("UTF-8", string8);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(string8.equals((Object)string5));
      assertFalse(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string0));
      assertNotNull(string8);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals("UTF-8", httpConnection_Response0.charset());
      
      int int4 = httpConnection_Response0.statusCode();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertEquals((-1), int4);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(int4 == int0);
      assertTrue(int4 == int3);
      assertFalse(int4 == int2);
      assertFalse(int4 == int1);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals("UTF-8", httpConnection_Response0.charset());
  }

  @Test(timeout = 11000)
  public void test83()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      httpConnection_Request0.timeoutMilliseconds = httpConnection_Request0.timeoutMilliseconds;
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      String string0 = "#comment";
      boolean boolean0 = httpConnection_Request0.hasHeader(string0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(boolean0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      
      int int0 = 47;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(47, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      boolean boolean1 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertNotNull(httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(47, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      String string1 = httpConnection_Request3.cookie(string0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertNull(string1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(47, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      int int1 = 0;
      String string2 = "$dmy.j 1>;omlbddx";
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request2.timeout(int1);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(0, httpConnection_Request4.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertNotNull(httpConnection_Request4);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(0, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      
      String string3 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(int0 == int1);
      assertNull(string3);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(int0 == int1);
      assertNotNull(httpURLConnection0);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getDoInput());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertFalse(httpURLConnection0.usingProxy());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertNull(httpURLConnection0.getContentType());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      String string4 = HttpConnection.Response.getRequestCookieString(httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertEquals("", string4);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertNotNull(string4);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals(0, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      String string5 = httpConnection_Response0.body();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string5, string2);
      assertNotSame(string5, string0);
      assertNotSame(string5, string4);
      assertEquals("#comment", string5);
      assertFalse(string5.equals((Object)string2));
      assertTrue(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertNotNull(string5);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(200, httpConnection_Response0.statusCode());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals(0, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      httpConnection_Response0.setupFromConnection(httpURLConnection0, httpConnection_Response1);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(int0 == int1);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertFalse(parser0.isTrackErrors());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getDoInput());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertFalse(httpURLConnection0.usingProxy());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertNull(httpURLConnection0.getContentType());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      int int2 = 1;
      Random.setNextRandom(int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      String string6 = httpConnection_Response1.charset();
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNull(string6);
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      
      String string7 = httpConnection_Response1.statusMessage();
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNull(string7);
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      
      int int3 = httpConnection_Response0.statusCode();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertEquals((-1), int3);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(int3 == int2);
      assertFalse(int3 == int1);
      assertFalse(int3 == int0);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      
      Document document0 = httpConnection_Response0.parse();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertNotNull(document0);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals("UTF-8", httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals(0, document0.siblingIndex());
      assertEquals("#root", document0.tagName());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", document0.location());
      assertEquals("#document", document0.nodeName());
      assertEquals(1, document0.childNodeSize());
      assertFalse(document0.isBlock());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", document0.baseUri());
      
      Document document1 = httpConnection_Response0.parse();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(document1, document0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(document1.equals((Object)document0));
      assertNotNull(document1);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals("UTF-8", httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", document1.location());
      assertEquals("#document", document1.nodeName());
      assertFalse(document1.isBlock());
      assertEquals("#root", document1.tagName());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", document1.baseUri());
      assertEquals(0, document1.siblingIndex());
      assertEquals(Document.QuirksMode.noQuirks, document1.quirksMode());
      assertEquals(1, document1.childNodeSize());
  }

  @Test(timeout = 11000)
  public void test84()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      httpConnection_Request0.timeoutMilliseconds = httpConnection_Request0.timeoutMilliseconds;
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      String string0 = "hr";
      boolean boolean0 = httpConnection_Request0.hasHeader(string0);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(boolean0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      int int0 = 47;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(47, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(47, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      boolean boolean1 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNotNull(httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(47, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(47, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      
      String string1 = httpConnection_Request3.cookie(string0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNull(string1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(47, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(47, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      
      int int1 = 19;
      String string2 = "$dmy.j 1>;omlbddx";
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.header(string0, string0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(47, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string0, string2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertFalse(string0.equals((Object)string2));
      assertNotNull(httpConnection_Request4);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(47, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(47, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request2.timeout(int1);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(19, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(19, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(19, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(19, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertNotNull(httpConnection_Request5);
      assertEquals(19, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(19, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(19, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(19, httpConnection_Request2.timeout());
      
      String string3 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(19, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(19, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(19, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertFalse(int0 == int1);
      assertNull(string3);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(19, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(19, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(19, httpConnection_Request2.timeout());
      
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(19, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertNotNull(httpConnection_Response0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(19, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(19, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(19, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(19, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertFalse(int0 == int1);
      assertNotNull(httpURLConnection0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(19, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertNull(httpURLConnection0.getContentEncoding());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals(19, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals(19, httpURLConnection0.getConnectTimeout());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(19, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(19, httpConnection_Request2.timeout());
      
      String string4 = HttpConnection.Response.getRequestCookieString(httpConnection_Request3);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(19, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(19, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(19, httpConnection_Request3.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertEquals("", string4);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertNotNull(string4);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(19, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(19, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(19, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      
      String string5 = httpConnection_Response0.body();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(19, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertNotSame(string5, string0);
      assertNotSame(string5, string2);
      assertNotSame(string5, string4);
      assertEquals("hr", string5);
      assertFalse(string5.equals((Object)string2));
      assertTrue(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertNotNull(string5);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(19, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      
      httpConnection_Response0.setupFromConnection(httpURLConnection0, httpConnection_Response1);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(19, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(19, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(19, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(19, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertNull(httpURLConnection0.getContentEncoding());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals(19, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals(19, httpURLConnection0.getConnectTimeout());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(19, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(19, httpConnection_Request2.timeout());
      
      int int2 = 1;
      Random.setNextRandom(int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      
      String string6 = null;
      HttpConnection.FORM_URL_ENCODED = string6;
      String string7 = httpConnection_Response1.charset();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNull(string7);
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      
      String string8 = httpConnection_Response1.statusMessage();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNull(string8);
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      
      int int3 = httpConnection_Response0.statusCode();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(19, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertEquals((-1), int3);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(int3 == int0);
      assertFalse(int3 == int2);
      assertFalse(int3 == int1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(19, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals((-1), httpConnection_Response0.statusCode());
      
      Document document0 = httpConnection_Response0.parse();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(19, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response0.executed);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertNotNull(document0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(19, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals("UTF-8", httpConnection_Response0.charset());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals("#root", document0.tagName());
      assertEquals("#document", document0.nodeName());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", document0.location());
      assertEquals(0, document0.siblingIndex());
      assertFalse(document0.isBlock());
      assertEquals(1, document0.childNodeSize());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", document0.baseUri());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.setOutputContentType(httpConnection_Request0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Header value must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test85()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      
      HttpConnection.MULTIPART_FORM_DATA = httpConnection_Response0.LOCATION;
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      
      boolean boolean0 = true;
      httpConnection_Response0.executed = boolean0;
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.bodyAsBytes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test86()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      
      String string0 = "+iwV";
      boolean boolean0 = false;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(boolean0).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      assertNotNull(sequenceInputStream0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string0, (InputStream) sequenceInputStream0);
      assertNotNull(httpConnection_KeyVal0);
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      
      int int0 = sequenceInputStream0.read();
      assertEquals((-1), int0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      
      URL uRL1 = MockURL.URL(uRL0, httpConnection_KeyVal0.value);
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertFalse(uRL1.equals((Object)uRL0));
      assertNotNull(uRL1);
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toString());
      assertEquals("http", uRL1.getProtocol());
      assertEquals((-1), uRL1.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toExternalForm());
      assertNull(uRL1.getQuery());
      assertNull(uRL1.getUserInfo());
      assertNull(uRL1.getRef());
      assertEquals((-1), uRL1.getDefaultPort());
      
      String string1 = "Attributes incorrectly present on end tag";
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request1.parser(httpConnection_Request0.parser);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string0, string1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertFalse(string0.equals((Object)string1));
      assertNotNull(httpConnection_Request3);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.url(uRL1);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(string0, string1);
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(uRL1.equals((Object)uRL0));
      assertNotNull(httpConnection_Request4);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toString());
      assertEquals("http", uRL1.getProtocol());
      assertEquals((-1), uRL1.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toExternalForm());
      assertNull(uRL1.getQuery());
      assertNull(uRL1.getUserInfo());
      assertNull(uRL1.getRef());
      assertEquals((-1), uRL1.getDefaultPort());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(3000, httpConnection_Request4.timeout());
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request5.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(string0, string1);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertFalse(string0.equals((Object)string1));
      assertNotNull(httpConnection_Request5);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      
      Connection.Method connection_Method0 = Connection.Method.PUT;
      Map.Entry<String, String> map_Entry0 = httpConnection_Request1.scanHeaders(httpConnection_KeyVal0.value);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(string0, string1);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertFalse(string0.equals((Object)string1));
      assertNull(map_Entry0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      
      httpConnection_Request5.method = connection_Method0;
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request5.method.hasBody());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.PUT, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      
      String string2 = HttpConnection.Response.setOutputContentType(httpConnection_Request5);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request5.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertEquals("--------------------------------", string2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.PUT, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/+iwV");
      boolean boolean1 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertTrue(boolean1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean1 == boolean0);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      
      MockFile mockFile0 = new MockFile(httpConnection_Response1.LOCATION);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(mockFile0);
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, boolean0);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertFalse(boolean0 == boolean1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(mockFileOutputStream0);
      
      String string3 = "Entities";
      HttpConnection.Response.writePost(httpConnection_Request1, mockFileOutputStream0, string3);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(boolean0 == boolean1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.PUT, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.PUT, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(mockFile0.isFile());
      assertTrue(mockFile0.canExecute());
      assertTrue(mockFile0.canRead());
      assertEquals(130L, mockFile0.length());
      assertTrue(mockFile0.exists());
      assertEquals(1392409281320L, mockFile0.lastModified());
      assertEquals(0L, mockFile0.getTotalSpace());
      assertFalse(mockFile0.isAbsolute());
      assertEquals(0L, mockFile0.getFreeSpace());
      assertEquals("Location", mockFile0.toString());
      assertFalse(mockFile0.isDirectory());
      assertTrue(mockFile0.canWrite());
      assertEquals(0L, mockFile0.getUsableSpace());
      assertEquals("Location", mockFile0.getName());
      assertNull(mockFile0.getParent());
      assertFalse(mockFile0.isHidden());
      
      int int1 = httpConnection_Response1.statusCode();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals(0, int1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(int1 == int0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      
      String string4 = null;
      String string5 = "iP";
      String string6 = "org.jsoup.select.Evaluator$IndexEquals";
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request5);
        fail("Expecting exception: UnknownServiceException");
      
      } catch(UnknownServiceException e) {
         //
         // protocol doesn't support output
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test87()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      String string0 = "+iwV";
      boolean boolean0 = false;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(boolean0).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      assertNotNull(sequenceInputStream0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string0, (InputStream) sequenceInputStream0);
      assertNotNull(httpConnection_KeyVal0);
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      
      URL uRL1 = MockURL.URL(uRL0, httpConnection_KeyVal0.value);
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertFalse(uRL1.equals((Object)uRL0));
      assertNotNull(uRL1);
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL1.getQuery());
      assertEquals((-1), uRL1.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toExternalForm());
      assertEquals("http", uRL1.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertNull(uRL1.getUserInfo());
      assertEquals((-1), uRL1.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertNull(uRL1.getRef());
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request0.url(uRL1);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(uRL0, uRL1);
      assertNotSame(uRL1, uRL0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertFalse(uRL0.equals((Object)uRL1));
      assertFalse(uRL1.equals((Object)uRL0));
      assertNotNull(httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL1.getQuery());
      assertEquals((-1), uRL1.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/+iwV", uRL1.toExternalForm());
      assertEquals("http", uRL1.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getHost());
      assertNull(uRL1.getUserInfo());
      assertEquals((-1), uRL1.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL1.getAuthority());
      assertNull(uRL1.getRef());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertNotNull(httpConnection_Request4);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      
      String string1 = HttpConnection.Response.LOCATION;
      assertNotSame(string1, string0);
      assertEquals("Location", string1);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      
      Attribute attribute0 = new Attribute(httpConnection_KeyVal0.key, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(attribute0);
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("Location", attribute0.getValue());
      assertEquals("+iwv", attribute0.getKey());
      
      String string2 = HttpConnection.Response.setOutputContentType(httpConnection_Request4);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertEquals("--------------------------------", string2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotNull(string2);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      
      String string3 = "T6j<";
      String string4 = "Entities";
      HttpConnection.KeyVal httpConnection_KeyVal1 = HttpConnection.KeyVal.create(string3, string4);
      assertNotSame(string4, string1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      assertNotSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string4);
      assertNotSame(string3, string1);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(httpConnection_KeyVal1.equals((Object)httpConnection_KeyVal0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string1));
      assertNotNull(httpConnection_KeyVal1);
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("Entities", httpConnection_KeyVal1.value());
      assertEquals("T6j<", httpConnection_KeyVal1.key());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      
      int int0 = (-1);
      httpConnection_Request2.timeoutMilliseconds = int0;
      assertEquals((-1), httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("+iwV", httpConnection_KeyVal0.value());
      assertEquals("+iwV", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals((-1), httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals((-1), httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      Connection.Method connection_Method0 = Connection.Method.POST;
      HttpConnection.Response httpConnection_Response2 = (HttpConnection.Response)httpConnection_Response1.method(connection_Method0);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertFalse(httpConnection_Response2.executed);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertSame(httpConnection_Response2, httpConnection_Response1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response2);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.POST, httpConnection_Response1.method());
      assertNull(httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.statusMessage());
      assertEquals(0, httpConnection_Response2.statusCode());
      assertNull(httpConnection_Response2.charset());
      assertEquals(Connection.Method.POST, httpConnection_Response2.method());
      
      int int1 = httpConnection_Response1.statusCode();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals(0, int1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(int1 == int0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.POST, httpConnection_Response1.method());
      
      String string5 = null;
      String string6 = "org.jsoup.select.Evaluator$IndexEquals";
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // timeout can not be negative
         //
         verifyException("java.net.URLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test88()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      httpConnection_Request0.timeoutMilliseconds = httpConnection_Request0.timeoutMilliseconds;
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      String string0 = "#comment";
      boolean boolean0 = httpConnection_Request0.hasHeader(string0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(boolean0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      
      int int0 = 47;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int0);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(47, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(47, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(47, httpConnection_Request2.timeout());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample");
      boolean boolean1 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNotNull(httpConnection_Request3);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(47, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(47, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      
      String string1 = httpConnection_Request3.cookie(string0);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(47, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(47, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNull(string1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(47, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(47, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(47, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      
      int int1 = 0;
      String string2 = "$dmy.j 1>;omlbddx";
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request0.header(string0, string0);
      assertEquals(47, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(47, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string0, string2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertFalse(string0.equals((Object)string2));
      assertNotNull(httpConnection_Request4);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(47, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(47, httpConnection_Request4.timeout());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request2.timeout(int1);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertNotNull(httpConnection_Request5);
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(0, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(0, httpConnection_Request2.timeout());
      
      String string3 = HttpConnection.Response.setOutputContentType(httpConnection_Request2);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(int0 == int1);
      assertNull(string3);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(0, httpConnection_Request2.timeout());
      
      HttpConnection.Response httpConnection_Response0 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request2);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(int0 == int1);
      assertNotNull(httpURLConnection0);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertFalse(httpURLConnection0.usingProxy());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample", httpURLConnection0.toString());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals(0, httpURLConnection0.getConnectTimeout());
      assertEquals(0, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(0, httpConnection_Request2.timeout());
      
      String string4 = HttpConnection.Response.getRequestCookieString(httpConnection_Request3);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string4, string2);
      assertNotSame(string4, string0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertEquals("", string4);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertNotNull(string4);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals(0, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      
      String string5 = "BogusDoctype";
      httpConnection_Response0.charset = string5;
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals("BogusDoctype", httpConnection_Response0.charset());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // BogusDoctype
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }
}
