/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 05 16:04:12 GMT 2021
 */

package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PushbackInputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import java.net.URLStreamHandler;
import java.net.UnknownServiceException;
import java.nio.ByteBuffer;
import java.nio.channels.FileChannel;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.function.BiFunction;
import javax.net.ssl.HostnameVerifier;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.jsoup.Connection;
import org.jsoup.helper.HttpConnection;
import org.jsoup.nodes.Document;
import org.jsoup.parser.Parser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HttpConnection$Response_ESTest extends HttpConnection$Response_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      boolean boolean0 = false;
      String string0 = "x3G@j*phYtHZo,u";
      String string1 = "wJ*'V6^(ED7";
      String string2 = ".ai=(bv,X9c ";
      Map<String, String> map0 = null;
      boolean boolean1 = false;
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      int int0 = 34;
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(httpConnection_Request0.parser);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNotNull(httpConnection_KeyVal0);
      
      String string0 = "Vey";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertEquals("Vey", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal1.key());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("Vey", httpConnection_KeyVal1.value());
      assertNotNull(httpConnection_KeyVal1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.data((Connection.KeyVal) httpConnection_KeyVal1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals("Vey", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal1.key());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("Vey", httpConnection_KeyVal1.value());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNotNull(httpConnection_Request2);
      
      String string1 = HttpConnection.Response.setupMultipartModeIfNeeded(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals("Vey", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal1.key());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("Vey", httpConnection_KeyVal1.value());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNull(string1);
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      Map<String, List<String>> map0 = null;
      String string0 = "";
      int int0 = 5261;
      HttpConnection.Response.MAX_REDIRECTS = int0;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      assertFalse(linkedList0.contains(string0));
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      String string1 = "map";
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = true;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreContentType(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_Request1);
      
      String string2 = "ac";
      InputStream inputStream0 = null;
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(inputStream0);
      assertNotNull(pushbackInputStream0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string2, string0, (InputStream) pushbackInputStream0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertEquals("", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("ac", httpConnection_KeyVal0.key());
      assertNotNull(httpConnection_KeyVal0);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("ac", httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNotNull(httpConnection_Request2);
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      int int1 = 1048576;
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(pipedOutputStream0, int1);
      assertFalse(int1 == int0);
      assertNotNull(bufferedOutputStream0);
      
      String string3 = "=";
      try { 
        HttpConnection.Response.writePost(httpConnection_Request2, bufferedOutputStream0, string3);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertNotNull(linkedHashSet0);
      
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedHashSet0, locale_FilteringMode0);
      assertEquals(0, linkedList0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      assertNotNull(list0);
      
      String string0 = "CrxoyYnT1N";
      List<String> list1 = hashMap0.putIfAbsent(string0, list0);
      assertFalse(linkedHashSet0.contains(string0));
      assertFalse(list0.contains(string0));
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertEquals(0, linkedList0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      assertNull(list1);
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      String string1 = httpConnection_Response0.contentType;
      assertNull(string1);
      
      int int0 = httpConnection_Response0.statusCode();
      assertEquals(0, int0);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      MockFileOutputStream mockFileOutputStream0 = null;
      try {
        mockFileOutputStream0 = new MockFileOutputStream(httpConnection_Response0.statusMessage);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertNotNull(httpConnection_Response1);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.parse();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before parsing response
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = false;
      String string0 = "http:/";
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(httpConnection_Request0.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.followRedirects(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request2);
      
      int int0 = (-2507);
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpURLConnection httpURLConnection0 = null;
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request0.followRedirects(httpConnection_Request2.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertFalse(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertFalse(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertNotNull(httpConnection_Request3);
      
      Connection.Method connection_Method0 = Connection.Method.POST;
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      HttpConnection.Response.initUnSecureSSL();
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      HttpConnection.Response.sslSocketFactory = httpConnection_Response0.sslSocketFactory;
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte) (-102);
      byteArray0[1] = byte0;
      byte byte1 = (byte)20;
      byte byte2 = (byte)1;
      byteArray0[2] = byte2;
      byteArray0[3] = byteArray0[2];
      byte byte3 = (byte) (-84);
      boolean boolean0 = true;
      httpConnection_Response0.executed = boolean0;
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      
      httpConnection_Response0.numRedirects = (int) byte3;
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      
      byteArray0[0] = byte2;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      linkedList0.clear();
      assertEquals(0, linkedList0.size());
      
      List<String> list0 = hashMap0.put(httpConnection_Response0.contentType, linkedList0);
      assertEquals(0, linkedList0.size());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals((-84), httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(list0);
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals((-84), httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Response.initUnSecureSSL();
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CharsetDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "agsN`\"%lT";
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNotNull(httpConnection_KeyVal0);
      
      String string1 = "`76P";
      String string2 = "?";
      HttpConnection.KeyVal httpConnection_KeyVal1 = HttpConnection.KeyVal.create(string1, string2);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(httpConnection_KeyVal1.equals((Object)httpConnection_KeyVal0));
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertNotSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertEquals("`76P", httpConnection_KeyVal1.key());
      assertEquals("?", httpConnection_KeyVal1.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertNotNull(httpConnection_KeyVal1);
      
      HttpConnection.KeyVal httpConnection_KeyVal2 = httpConnection_KeyVal0.key(string0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(httpConnection_KeyVal0.equals((Object)httpConnection_KeyVal1));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal1));
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal2);
      assertNotSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal2, httpConnection_KeyVal0);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal1);
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("agsN`\"%lT", httpConnection_KeyVal0.key());
      assertEquals("agsN`\"%lT", httpConnection_KeyVal2.key());
      assertFalse(httpConnection_KeyVal2.hasInputStream());
      assertNull(httpConnection_KeyVal2.value());
      assertNotNull(httpConnection_KeyVal2);
      
      boolean boolean1 = false;
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      String string3 = null;
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreContentType(httpConnection_Request0.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request1);
      
      URL uRL0 = MockURL.getFileExample();
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertNotNull(uRL0);
      
      boolean boolean0 = true;
      httpConnection_Request1.validateSSLCertificates = boolean0;
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      
      httpConnection_Request0.url = uRL0;
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals("file", httpConnection_Request0.url.getProtocol());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertEquals("some", httpConnection_Request0.url.getHost());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals("some", httpConnection_Request0.url.getAuthority());
      
      String string0 = HttpConnection.Response.getRequestCookieString(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("", string0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(string0);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Only http & https protocols supported
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = false;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreContentType(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNotNull(uRL0);
      
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "org.jsoup.helper.HttpConnection";
      boolean boolean1 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      int int0 = 4576;
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?");
      String string1 = "\\E!5>`LQZ*TVqt@";
      boolean boolean2 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertNotSame(string1, string0);
      assertTrue(boolean2);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.maxBodySize(int0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(4576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(4576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(4576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(4576, httpConnection_Request2.maxBodySizeBytes);
      assertNotNull(httpConnection_Request2);
      
      httpConnection_Request0.url = uRL0;
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(4576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      
      String string2 = HttpConnection.Response.getRequestCookieString(httpConnection_Request1);
      assertFalse(boolean0 == boolean2);
      assertTrue(boolean0 == boolean1);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertEquals("", string2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(4576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(4576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(4576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(string2);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(4576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(4576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(4576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(4576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(4576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(4576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(4576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(4576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(httpConnection_Request3);
      
      String string3 = "^D";
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request3.cookie(string3, string2);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(boolean0 == boolean2);
      assertTrue(boolean0 == boolean1);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(4576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.isValidateSSLCertificates());
      assertEquals(4576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(4576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(4576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(4576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(4576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(4576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(4576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(4576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(4576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(httpConnection_Request4);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(4576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpURLConnection0.getConnectTimeout());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertNull(httpURLConnection0.getContentType());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertNull(httpURLConnection0.getContentEncoding());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection0.toString());
      assertEquals(3000, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(4576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(4576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(4576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(4576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(4576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(httpURLConnection0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      
      HttpConnection.Response httpConnection_Response1 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response0);
      assertFalse(boolean0 == boolean2);
      assertTrue(boolean0 == boolean1);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(4576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(4576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(4576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertNotNull(httpConnection_Response1);
      
      String string4 = httpConnection_Response1.contentType();
      assertFalse(boolean0 == boolean2);
      assertTrue(boolean0 == boolean1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(4576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(4576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(4576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertNull(string4);
      
      HttpConnection.Response httpConnection_Response2 = new HttpConnection.Response(httpConnection_Response1);
      assertFalse(boolean0 == boolean2);
      assertTrue(boolean0 == boolean1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(4576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(4576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.charset());
      assertNull(httpConnection_Response2.method());
      assertEquals(0, httpConnection_Response2.statusCode());
      assertNull(httpConnection_Response2.statusMessage());
      assertEquals(4576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(2, httpConnection_Response2.numRedirects);
      assertEquals(0, httpConnection_Response2.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response2.executed);
      assertNotNull(httpConnection_Response2);
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      httpConnection_Response2.processResponseHeaders(hashMap0);
      assertFalse(boolean0 == boolean2);
      assertTrue(boolean0 == boolean1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(4576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(4576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.charset());
      assertNull(httpConnection_Response2.method());
      assertEquals(0, httpConnection_Response2.statusCode());
      assertNull(httpConnection_Response2.statusMessage());
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals(4576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(2, httpConnection_Response2.numRedirects);
      assertEquals(0, httpConnection_Response2.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response2.executed);
      
      HttpURLConnection httpURLConnection1 = HttpConnection.Response.createConnection(httpConnection_Request1);
      assertFalse(boolean0 == boolean2);
      assertTrue(boolean0 == boolean1);
      assertFalse(httpURLConnection1.equals((Object)httpURLConnection0));
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertNotSame(httpURLConnection1, httpURLConnection0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(4576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(4576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0L, httpURLConnection1.getIfModifiedSince());
      assertEquals(3000, httpURLConnection1.getConnectTimeout());
      assertTrue(httpURLConnection1.getFollowRedirects());
      assertTrue(httpURLConnection1.getDefaultUseCaches());
      assertTrue(httpURLConnection1.getDoInput());
      assertEquals("GET", httpURLConnection1.getRequestMethod());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection1.toString());
      assertFalse(httpURLConnection1.getDoOutput());
      assertEquals((-1), httpURLConnection1.getContentLength());
      assertEquals(3000, httpURLConnection1.getReadTimeout());
      assertFalse(httpURLConnection1.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection1.getUseCaches());
      assertNull(httpURLConnection1.getContentEncoding());
      assertFalse(httpURLConnection1.getAllowUserInteraction());
      assertNull(httpURLConnection1.getContentType());
      assertFalse(httpURLConnection1.usingProxy());
      assertFalse(httpURLConnection1.getInstanceFollowRedirects());
      assertEquals(4576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpURLConnection1);
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = false;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(httpConnection_Request0.parser);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNotNull(uRL0);
      
      int int0 = 4559;
      httpConnection_Request0.url = uRL0;
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      assertNull(httpConnection_Request0.url.getQuery());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      
      String string0 = HttpConnection.Response.getRequestCookieString(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("", string0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(string0);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.ignoreHttpErrors(httpConnection_Request0.validateSSLCertificates);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 0;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.parser(httpConnection_Request0.parser);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNotNull(httpConnection_Request2);
      
      String string0 = "D'";
      String string1 = "div";
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte) (-27);
      byte byte1 = (byte) (-56);
      byteArray0[1] = byte1;
      int int1 = 46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, httpConnection_Request1.maxBodySizeBytes, int1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertArrayEquals(new byte[] {(byte)0, (byte) (-56)}, byteArray0);
      assertEquals(2, byteArray0.length);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals((-1048574), byteArrayInputStream0.available());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(byteArrayInputStream0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string1, (InputStream) byteArrayInputStream0);
      assertFalse(int0 == int1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(int1 == int0);
      assertArrayEquals(new byte[] {(byte)0, (byte) (-56)}, byteArray0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertEquals(2, byteArray0.length);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals((-1048574), byteArrayInputStream0.available());
      assertEquals("D'", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("div", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_KeyVal0);
      
      HttpConnection.KeyVal httpConnection_KeyVal1 = HttpConnection.KeyVal.create(string0, httpConnection_KeyVal0.value);
      assertFalse(int0 == int1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(int1 == int0);
      assertFalse(httpConnection_KeyVal1.equals((Object)httpConnection_KeyVal0));
      assertArrayEquals(new byte[] {(byte)0, (byte) (-56)}, byteArray0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertEquals(2, byteArray0.length);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals((-1048574), byteArrayInputStream0.available());
      assertEquals("D'", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("div", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("D'", httpConnection_KeyVal1.key());
      assertEquals("div", httpConnection_KeyVal1.value());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_KeyVal1);
      
      byteArrayInputStream0.mark(httpConnection_Request0.maxBodySizeBytes);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertArrayEquals(new byte[] {(byte)0, (byte) (-56)}, byteArray0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(2, byteArray0.length);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals((-1048574), byteArrayInputStream0.available());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(int0 == int1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(int1 == int0);
      assertFalse(httpConnection_KeyVal0.equals((Object)httpConnection_KeyVal1));
      assertArrayEquals(new byte[] {(byte)0, (byte) (-56)}, byteArray0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertEquals(2, byteArray0.length);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals((-1048574), byteArrayInputStream0.available());
      assertEquals("D'", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("div", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(0, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertNotNull(httpConnection_Request3);
      
      String string2 = HttpConnection.Response.setupMultipartModeIfNeeded(httpConnection_Request3);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(int0 == int1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(int1 == int0);
      assertFalse(httpConnection_KeyVal0.equals((Object)httpConnection_KeyVal1));
      assertArrayEquals(new byte[] {(byte)0, (byte) (-56)}, byteArray0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertEquals("--------------------------------", string2);
      assertEquals(2, byteArray0.length);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals((-1048574), byteArrayInputStream0.available());
      assertEquals("D'", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("div", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(0, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertNotNull(string2);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      
      String string3 = httpConnection_Response0.charset();
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNull(string3);
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = null;
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertNotNull(httpConnection_Response1);
      
      int int0 = (-945);
      HttpConnection.HTTP_TEMP_REDIR = int0;
      // Undeclared exception!
      try { 
        HttpConnection.Response.setupMultipartModeIfNeeded(httpConnection_Response1.req);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = true;
      httpConnection_Request0.ignoreContentType = boolean0;
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      String string0 = "l3G@j*phYtHZd?u";
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string0);
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNotNull(httpConnection_KeyVal0);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(httpConnection_Request0.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request3.ignoreHttpErrors(httpConnection_Request2.validateSSLCertificates);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateSSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertNotNull(httpConnection_Request4);
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request2.timeout(httpConnection_Request3.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(1048576, httpConnection_Request5.timeout());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.followRedirects());
      assertTrue(httpConnection_Request5.isValidateSSLCertificates());
      assertTrue(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.ignoreContentType);
      assertEquals(1048576, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.ignoreHttpErrors);
      assertNotNull(httpConnection_Request5);
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(httpConnection_KeyVal0.key);
      assertNotNull(mockFileOutputStream0);
      
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals(0L, fileChannel0.position());
      assertEquals(0L, fileChannel0.size());
      assertTrue(fileChannel0.isOpen());
      assertNotNull(fileChannel0);
      
      HttpConnection.Request httpConnection_Request6 = httpConnection_Request1.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request6.followRedirects());
      assertTrue(httpConnection_Request6.ignoreContentType());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertTrue(httpConnection_Request6.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request6.timeout());
      assertTrue(httpConnection_Request6.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request6.ignoreContentType);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertTrue(httpConnection_Request6.ignoreHttpErrors);
      assertTrue(httpConnection_Request6.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request6.timeoutMilliseconds);
      assertTrue(httpConnection_Request6.followRedirects);
      assertNotNull(httpConnection_Request6);
      
      HttpConnection.Response.writePost(httpConnection_Request4, mockFileOutputStream0, string0);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request6);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request6);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateSSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      String string1 = "wJ*'V6^(ED7";
      HttpConnection.Response httpConnection_Response1 = (HttpConnection.Response)httpConnection_Response0.cookie(httpConnection_KeyVal0.key, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(string0, string1);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(string1, string0);
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response1);
      
      String string2 = httpConnection_Response0.contentType();
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(string2);
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      String string3 = ".ai;(bv,Gbc ";
      List<String> list0 = null;
      String string4 = httpConnection_Response1.contentType();
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(string4);
      
      String string5 = null;
      try { 
        HttpConnection.Response.writePost(httpConnection_Request0, mockFileOutputStream0, string5);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      int int0 = (-1941178012);
      int int1 = 613;
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(int1);
      assertFalse(int1 == int0);
      assertEquals("java.nio.DirectByteBuffer[pos=0 lim=613 cap=613]", byteBuffer0.toString());
      assertTrue(byteBuffer0.isDirect());
      assertFalse(byteBuffer0.hasArray());
      assertEquals(613, byteBuffer0.limit());
      assertEquals(613, byteBuffer0.remaining());
      assertEquals(613, byteBuffer0.capacity());
      assertTrue(byteBuffer0.hasRemaining());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals(0, byteBuffer0.position());
      assertNotNull(byteBuffer0);
      
      Connection.Method connection_Method0 = Connection.Method.GET;
      httpConnection_Response0.method = connection_Method0;
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      
      httpConnection_Response0.byteData = byteBuffer0;
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals("java.nio.DirectByteBuffer[pos=0 lim=613 cap=613]", byteBuffer0.toString());
      assertTrue(byteBuffer0.isDirect());
      assertFalse(byteBuffer0.hasArray());
      assertEquals(613, byteBuffer0.limit());
      assertEquals(613, byteBuffer0.remaining());
      assertEquals(613, byteBuffer0.capacity());
      assertTrue(byteBuffer0.hasRemaining());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals(0, byteBuffer0.position());
      assertEquals(0, httpConnection_Response0.byteData.position());
      assertFalse(httpConnection_Response0.byteData.isReadOnly());
      assertEquals(613, httpConnection_Response0.byteData.limit());
      assertEquals(613, httpConnection_Response0.byteData.remaining());
      assertTrue(httpConnection_Response0.byteData.isDirect());
      assertEquals(613, httpConnection_Response0.byteData.capacity());
      assertFalse(httpConnection_Response0.byteData.hasArray());
      assertTrue(httpConnection_Response0.byteData.hasRemaining());
      assertEquals("java.nio.DirectByteBuffer[pos=0 lim=613 cap=613]", httpConnection_Response0.byteData.toString());
      
      HttpConnection.Response.MAX_REDIRECTS = int0;
      HttpConnection.Response httpConnection_Response1 = null;
      try {
        httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Too many redirects occurred trying to load URL null
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      String string0 = "pZ|U\"pgxT#UBfE\\8*";
      httpConnection_Response0.statusMessage = string0;
      assertEquals("pZ|U\"pgxT#UBfE\\8*", httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      
      String string1 = httpConnection_Response0.statusMessage();
      assertSame(string1, string0);
      assertEquals("pZ|U\"pgxT#UBfE\\8*", string1);
      assertEquals("pZ|U\"pgxT#UBfE\\8*", httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(string1);
      
      int int0 = httpConnection_Response0.statusCode();
      assertEquals(0, int0);
      assertEquals("pZ|U\"pgxT#UBfE\\8*", httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      int int1 = httpConnection_Response0.statusCode();
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      assertEquals("pZ|U\"pgxT#UBfE\\8*", httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      LinkedList<String> linkedList0 = new LinkedList<String>();
      assertFalse(linkedList0.contains(string1));
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      boolean boolean0 = linkedList0.add(httpConnection_Response0.statusMessage);
      assertTrue(linkedList0.contains(string1));
      assertTrue(boolean0);
      assertEquals("pZ|U\"pgxT#UBfE\\8*", httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(1, linkedList0.size());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      List<String> list0 = hashMap0.put(string0, linkedList0);
      assertTrue(linkedList0.contains(string1));
      assertSame(string0, string1);
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertEquals(1, linkedList0.size());
      assertNull(list0);
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertEquals("pZ|U\"pgxT#UBfE\\8*", httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNotNull(uRL0);
      
      httpConnection_Request0.url = uRL0;
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertNull(httpConnection_Request0.url.getQuery());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      
      String string0 = HttpConnection.Response.getRequestCookieString(httpConnection_Request0);
      assertEquals("", string0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(string0);
      
      String string1 = "Aj|xU0NT6H ";
      String string2 = "R";
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertEquals(0, pipedInputStream0.available());
      assertNotNull(pipedInputStream0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string1, string2, (InputStream) pipedInputStream0);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertEquals(0, pipedInputStream0.available());
      assertEquals("R", httpConnection_KeyVal0.value());
      assertEquals("Aj|xU0NT6H ", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertNotNull(httpConnection_KeyVal0);
      
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.key(httpConnection_KeyVal0.key);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertEquals(0, pipedInputStream0.available());
      assertEquals("R", httpConnection_KeyVal0.value());
      assertEquals("Aj|xU0NT6H ", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("R", httpConnection_KeyVal1.value());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertEquals("Aj|xU0NT6H ", httpConnection_KeyVal1.key());
      assertNotNull(httpConnection_KeyVal1);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal1);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("R", httpConnection_KeyVal0.value());
      assertEquals("Aj|xU0NT6H ", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("R", httpConnection_KeyVal1.value());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertEquals("Aj|xU0NT6H ", httpConnection_KeyVal1.key());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_Request1);
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      assertFalse(boolean0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // HTTP error fetching URL
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNotNull(uRL0);
      
      httpConnection_Request0.url = uRL0;
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertNull(httpConnection_Request0.url.getRef());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      
      String string0 = HttpConnection.Response.getRequestCookieString(httpConnection_Request0);
      assertEquals("", string0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(string0);
      
      Connection.Method connection_Method0 = Connection.Method.POST;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.method(connection_Method0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      
      String string1 = "Aj|xU0NT6H ";
      String string2 = "R";
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertEquals(0, pipedInputStream0.available());
      assertNotNull(pipedInputStream0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string1, string2, (InputStream) pipedInputStream0);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertEquals(0, pipedInputStream0.available());
      assertEquals("R", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("Aj|xU0NT6H ", httpConnection_KeyVal0.key());
      assertNotNull(httpConnection_KeyVal0);
      
      String string3 = "Request must not be null";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.key(string3);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(string2, string3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertEquals(0, pipedInputStream0.available());
      assertEquals("R", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("Request must not be null", httpConnection_KeyVal0.key());
      assertEquals("R", httpConnection_KeyVal1.value());
      assertEquals("Request must not be null", httpConnection_KeyVal1.key());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertNotNull(httpConnection_KeyVal1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal1);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(string2, string3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("R", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("Request must not be null", httpConnection_KeyVal0.key());
      assertEquals("R", httpConnection_KeyVal1.value());
      assertEquals("Request must not be null", httpConnection_KeyVal1.key());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertNotNull(httpConnection_Request2);
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      assertFalse(boolean0);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response0);
        fail("Expecting exception: UnknownServiceException");
      
      } catch(UnknownServiceException e) {
         //
         // protocol doesn't support output
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      
      Parser parser0 = Parser.xmlParser();
      assertFalse(parser0.isTrackErrors());
      assertNotNull(parser0);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_Request1);
      
      boolean boolean0 = true;
      URL uRL0 = MockURL.getFileExample();
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertNotNull(uRL0);
      
      httpConnection_Request0.url = uRL0;
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", httpConnection_Request0.url.getHost());
      assertEquals("some", httpConnection_Request0.url.getAuthority());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals("file", httpConnection_Request0.url.getProtocol());
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.ignoreContentType(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNotNull(httpConnection_Request2);
      
      String string0 = HttpConnection.Response.setupMultipartModeIfNeeded(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNull(string0);
      
      HttpConnection.Response httpConnection_Response0 = null;
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Only http & https protocols supported
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreContentType(httpConnection_Request0.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_Request1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNotNull(uRL0);
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?");
      String string0 = "VNm+KnEr>";
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertTrue(boolean0);
      
      httpConnection_Request0.url = uRL0;
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertNull(httpConnection_Request0.url.getRef());
      
      String string1 = HttpConnection.Response.getRequestCookieString(httpConnection_Request1);
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(string1, string0);
      assertEquals("", string1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(string1);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      
      HttpConnection.Response httpConnection_Response1 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertNotNull(httpConnection_Response1);
      
      HttpConnection.Response httpConnection_Response2 = new HttpConnection.Response(httpConnection_Response1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response2.charset());
      assertNull(httpConnection_Response2.method());
      assertNull(httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.statusMessage());
      assertEquals(0, httpConnection_Response2.statusCode());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response2.statusCode);
      assertEquals(2, httpConnection_Response2.numRedirects);
      assertFalse(httpConnection_Response2.executed);
      assertNotNull(httpConnection_Response2);
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      httpConnection_Response2.processResponseHeaders(hashMap0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response2.charset());
      assertNull(httpConnection_Response2.method());
      assertNull(httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.statusMessage());
      assertEquals(0, httpConnection_Response2.statusCode());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response2.statusCode);
      assertEquals(2, httpConnection_Response2.numRedirects);
      assertFalse(httpConnection_Response2.executed);
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = false;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreContentType(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      
      URL uRL0 = MockURL.getFileExample();
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNotNull(uRL0);
      
      httpConnection_Request0.url = uRL0;
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", httpConnection_Request0.url.getHost());
      assertEquals("some", httpConnection_Request0.url.getAuthority());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals("file", httpConnection_Request0.url.getProtocol());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      
      String string0 = HttpConnection.Response.getRequestCookieString(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("", string0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(string0);
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean1 = FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request1);
      assertTrue(boolean0 == boolean1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.createConnection(httpConnection_Request1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = false;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreContentType(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_Request1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNotNull(uRL0);
      
      int int0 = 4559;
      String string0 = "Too many redirects occurred trying to load URL %s";
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.cookie(string0, string0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request0.maxBodySize(int0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(4559, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(4559, httpConnection_Request3.maxBodySizeBytes);
      assertNotNull(httpConnection_Request3);
      
      httpConnection_Request0.url = uRL0;
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertNull(httpConnection_Request0.url.getRef());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      
      String string1 = HttpConnection.Response.getRequestCookieString(httpConnection_Request1);
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertNotSame(string1, string0);
      assertEquals("Too many redirects occurred trying to load URL %s=Too many redirects occurred trying to load URL %s", string1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(4559, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(4559, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(string1);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request1.ignoreHttpErrors(httpConnection_Request0.validateSSLCertificates);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(4559, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request4.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(4559, httpConnection_Request4.maxBodySize());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(4559, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(4559, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertNotNull(httpConnection_Request4);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(4559, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request4.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(4559, httpConnection_Request4.maxBodySize());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertNull(httpURLConnection0.getContentType());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection0.toString());
      assertFalse(httpURLConnection0.usingProxy());
      assertNull(httpURLConnection0.getContentEncoding());
      assertTrue(httpURLConnection0.getUseCaches());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals(3000, httpURLConnection0.getReadTimeout());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals(3000, httpURLConnection0.getConnectTimeout());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(4559, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(4559, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertNotNull(httpURLConnection0);
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request1.parser(httpConnection_Request0.parser);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(4559, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.followRedirects());
      assertTrue(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(4559, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(4559, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(4559, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request5.timeoutMilliseconds);
      assertNotNull(httpConnection_Request5);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request5);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      int int0 = httpConnection_Response0.statusCode();
      assertEquals(0, int0);
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      
      int int0 = 0;
      httpConnection_Response0.numRedirects = int0;
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      
      Connection.Method connection_Method0 = Connection.Method.GET;
      HttpConnection.Response httpConnection_Response1 = (HttpConnection.Response)httpConnection_Response0.method(connection_Method0);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response1);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.parse();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before parsing response
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertNotNull(httpConnection_Response1);
      
      String string0 = httpConnection_Response1.charset();
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertNull(string0);
      
      String string1 = httpConnection_Response0.statusMessage();
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNull(string1);
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 343;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(343, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(343, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(343, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(343, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNotNull(httpConnection_KeyVal0);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(343, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(343, httpConnection_Request1.timeout());
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(343, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(343, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(343, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(343, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request2);
      
      String string0 = HttpConnection.Response.getRequestCookieString(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals("", string0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(343, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(343, httpConnection_Request1.timeout());
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(343, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(343, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(343, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(343, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(string0);
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.parse();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before parsing response
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertNotNull(httpConnection_Response1);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.getRequestCookieString(httpConnection_Response1.req);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      HttpConnection.Response.initUnSecureSSL();
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Response.initUnSecureSSL();
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      
      Parser parser0 = httpConnection_Request0.parser.setTrackErrors(httpConnection_Request0.maxBodySizeBytes);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(parser0.isTrackErrors());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(parser0);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_Request1);
      
      boolean boolean0 = false;
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.ignoreHttpErrors(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertNotNull(httpConnection_Request2);
      
      httpConnection_Response0.req = (Connection.Request) httpConnection_Request2;
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(3000, httpConnection_Response0.req.timeout());
      assertEquals(1048576, httpConnection_Response0.req.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Response0.req.method());
      assertFalse(httpConnection_Response0.req.ignoreHttpErrors());
      assertTrue(httpConnection_Response0.req.followRedirects());
      assertFalse(httpConnection_Response0.req.ignoreContentType());
      assertTrue(httpConnection_Response0.req.isValidateSSLCertificates());
      
      boolean boolean1 = false;
      httpConnection_Response0.executed = boolean1;
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.createConnection(httpConnection_Response0.req);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      
      String string0 = httpConnection_Response0.charset();
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNull(string0);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.createConnection(httpConnection_Response0.req);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      
      int int0 = 84;
      httpConnection_Response0.numRedirects = int0;
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      
      String string0 = "text/";
      String string1 = "K*l";
      boolean boolean0 = httpConnection_Response0.hasHeader(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      assertFalse(boolean0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(84, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      
      String string2 = httpConnection_Response0.header(string0);
      assertFalse(string0.equals((Object)string1));
      assertNotSame(string0, string1);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(84, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNull(string2);
      
      HttpConnection.Response httpConnection_Response1 = null;
      try {
        httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Too many redirects occurred trying to load URL null
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test33()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = true;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreHttpErrors(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertNotNull(httpConnection_Request1);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test34()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = true;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.followRedirects(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test35()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      
      String string0 = "{4D,@v^DC[RA8\\[";
      boolean boolean0 = httpConnection_Response0.hasHeader(string0);
      assertFalse(boolean0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response1);
      
      Connection.Request connection_Request0 = httpConnection_Response1.req;
      assertNull(connection_Request0);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute(connection_Request0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test36()  throws Throwable  {
      Connection.Request connection_Request0 = null;
      // Undeclared exception!
      try { 
        HttpConnection.Response.setupMultipartModeIfNeeded(connection_Request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test37()  throws Throwable  {
      Connection.Request connection_Request0 = null;
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute(connection_Request0, httpConnection_Response0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test38()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      String string0 = httpConnection_Response0.charset();
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNull(string0);
      
      HttpConnection.HTTP_TEMP_REDIR = httpConnection_Response0.MAX_REDIRECTS;
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      String string1 = "~";
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertFalse(linkedHashSet0.contains(string1));
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertNotNull(linkedHashSet0);
      
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedHashSet0, locale_FilteringMode0);
      assertFalse(linkedHashSet0.contains(string1));
      assertFalse(list0.contains(string1));
      assertEquals(0, linkedList0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      assertNotNull(list0);
      
      String string2 = "";
      List<String> list1 = hashMap0.putIfAbsent(string2, list0);
      assertFalse(string2.equals((Object)string1));
      assertFalse(linkedHashSet0.contains(string1));
      assertFalse(list0.contains(string1));
      assertNotSame(string2, string1);
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(0, linkedList0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      assertNull(list1);
      
      List<String> list2 = hashMap0.put(string1, list0);
      assertFalse(string1.equals((Object)string2));
      assertFalse(linkedHashSet0.contains(string1));
      assertFalse(list0.contains(string1));
      assertNotSame(string1, string2);
      assertEquals(2, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(0, linkedList0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      assertNull(list2);
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(2, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.setupMultipartModeIfNeeded(httpConnection_Response0.req);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test39()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 1401;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1401, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1401, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1401, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1401, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.parser(httpConnection_Request0.parser);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1401, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1401, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(1401, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1401, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1401, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1401, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNotNull(httpConnection_KeyVal0);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1401, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1401, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(1401, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1401, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1401, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1401, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1401, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(1401, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertNotNull(httpConnection_Request3);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.serialiseRequestUrl(httpConnection_Request3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test40()  throws Throwable  {
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      String string0 = "pZ|U\"pgxT#UBfE\\8*";
      httpConnection_Response0.statusMessage = string0;
      assertEquals("pZ|U\"pgxT#UBfE\\8*", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      
      String string1 = httpConnection_Response0.statusMessage();
      assertSame(string1, string0);
      assertEquals("pZ|U\"pgxT#UBfE\\8*", string1);
      assertEquals("pZ|U\"pgxT#UBfE\\8*", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(string1);
      
      int int0 = httpConnection_Response0.statusCode();
      assertEquals(0, int0);
      assertEquals("pZ|U\"pgxT#UBfE\\8*", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      int int1 = httpConnection_Response0.statusCode();
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      assertEquals("pZ|U\"pgxT#UBfE\\8*", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      LinkedList<String> linkedList0 = new LinkedList<String>();
      assertFalse(linkedList0.contains(string0));
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      boolean boolean0 = linkedList0.add(httpConnection_Response0.statusMessage);
      assertTrue(linkedList0.contains(string0));
      assertSame(string0, string1);
      assertSame(httpConnection_Response0.statusMessage, string0);
      assertSame(httpConnection_Response0.statusMessage, string1);
      assertTrue(boolean0);
      assertEquals("pZ|U\"pgxT#UBfE\\8*", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(1, linkedList0.size());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      List<String> list0 = hashMap0.put(string0, linkedList0);
      assertTrue(linkedList0.contains(string0));
      assertSame(string0, string1);
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertEquals(1, linkedList0.size());
      assertNull(list0);
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertEquals("pZ|U\"pgxT#UBfE\\8*", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.serialiseRequestUrl(httpConnection_Response0.req);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test41()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 48;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.maxBodySize(int0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(48, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(48, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(48, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(48, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test42()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test43()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      int int0 = 2652;
      httpConnection_Response0.statusCode = int0;
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(2652, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(2652, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(2652, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response1);
      
      // Undeclared exception!
      try { 
        httpConnection_Response1.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test44()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      
      Connection.Method connection_Method0 = Connection.Method.POST;
      boolean boolean0 = true;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreHttpErrors(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.method(connection_Method0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.POST, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertNotNull(httpConnection_Request2);
      
      LinkedHashSet<Connection.KeyVal> linkedHashSet0 = new LinkedHashSet<Connection.KeyVal>();
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      assertNotNull(linkedHashSet0);
      
      httpConnection_Request0.data = (Collection<Connection.KeyVal>) linkedHashSet0;
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      
      String string0 = HttpConnection.Response.setupMultipartModeIfNeeded(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNull(string0);
      
      HttpConnection.Request httpConnection_Request3 = new HttpConnection.Request();
      assertFalse(httpConnection_Request3.equals((Object)httpConnection_Request2));
      assertFalse(httpConnection_Request3.equals((Object)httpConnection_Request1));
      assertFalse(httpConnection_Request3.equals((Object)httpConnection_Request0));
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(httpConnection_Request3);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test45()  throws Throwable  {
      HttpConnection.Response.initUnSecureSSL();
      Connection.Request connection_Request0 = null;
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      OutputStream outputStream0 = null;
      String string0 = "V7qCt_M@E7i7Z?`";
      // Undeclared exception!
      try { 
        HttpConnection.Response.writePost(httpConnection_Response0.req, outputStream0, string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test46()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = false;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreHttpErrors(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      String string0 = "col";
      try { 
        HttpConnection.Response.writePost(httpConnection_Request1, pipedOutputStream0, string0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 11000)
  public void test47()  throws Throwable  {
      HttpConnection.Response.initUnSecureSSL();
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = true;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreContentType(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request1);
      
      String string0 = "5GNu)G_+/AT7`bsQ`";
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL(string0, string0, httpConnection_Request0.timeoutMilliseconds, string0, uRLStreamHandler0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals("5GNu)G_+/AT7`bsQ`", uRL0.getHost());
      assertEquals("5GNu)G_+/AT7`bsQ`:3000", uRL0.getAuthority());
      assertEquals("5GNu)G_+/AT7`bsQ`", uRL0.getFile());
      assertNull(uRL0.getUserInfo());
      assertEquals(3000, uRL0.getPort());
      assertNull(uRL0.toString());
      assertEquals("5GNu)G_+/AT7`bsQ`", uRL0.getPath());
      assertNull(uRL0.toExternalForm());
      assertEquals("5gnu)g_+/at7`bsq`", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals(0, uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(uRL0);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.url(uRL0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals("5GNu)G_+/AT7`bsQ`", uRL0.getHost());
      assertEquals("5GNu)G_+/AT7`bsQ`:3000", uRL0.getAuthority());
      assertEquals("5GNu)G_+/AT7`bsQ`", uRL0.getFile());
      assertNull(uRL0.getUserInfo());
      assertEquals(3000, uRL0.getPort());
      assertNull(uRL0.toString());
      assertEquals("5GNu)G_+/AT7`bsQ`", uRL0.getPath());
      assertNull(uRL0.toExternalForm());
      assertEquals("5gnu)g_+/at7`bsq`", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals(0, uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertNotNull(httpConnection_Request2);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Only http & https protocols supported
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test48()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      String string0 = httpConnection_Response0.contentType();
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(string0);
  }

  @Test(timeout = 11000)
  public void test49()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 0;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.parser(httpConnection_Request0.parser);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNotNull(httpConnection_Request2);
      
      String string0 = "D'";
      String string1 = "div";
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte) (-27);
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-56);
      byteArray0[1] = byte1;
      int int1 = 46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, httpConnection_Request1.maxBodySizeBytes, int1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertArrayEquals(new byte[] {(byte) (-27), (byte) (-56)}, byteArray0);
      assertEquals(2, byteArray0.length);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals((-1048574), byteArrayInputStream0.available());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(byteArrayInputStream0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string1, (InputStream) byteArrayInputStream0);
      assertFalse(int0 == int1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(int1 == int0);
      assertArrayEquals(new byte[] {(byte) (-27), (byte) (-56)}, byteArray0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertEquals(2, byteArray0.length);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals((-1048574), byteArrayInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("div", httpConnection_KeyVal0.value());
      assertEquals("D'", httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_KeyVal0);
      
      String string2 = "RuY>F";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.inputStream((InputStream) byteArrayInputStream0);
      assertFalse(int0 == int1);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(int1 == int0);
      assertArrayEquals(new byte[] {(byte) (-27), (byte) (-56)}, byteArray0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertEquals(2, byteArray0.length);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals((-1048574), byteArrayInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("div", httpConnection_KeyVal0.value());
      assertEquals("D'", httpConnection_KeyVal0.key());
      assertEquals("D'", httpConnection_KeyVal1.key());
      assertEquals("div", httpConnection_KeyVal1.value());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_KeyVal1);
      
      HttpConnection.KeyVal httpConnection_KeyVal2 = HttpConnection.KeyVal.create(string0, string2);
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal0));
      assertFalse(httpConnection_KeyVal2.equals((Object)httpConnection_KeyVal1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal0);
      assertNotSame(httpConnection_KeyVal2, httpConnection_KeyVal1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertEquals("D'", httpConnection_KeyVal2.key());
      assertEquals("RuY>F", httpConnection_KeyVal2.value());
      assertFalse(httpConnection_KeyVal2.hasInputStream());
      assertNotNull(httpConnection_KeyVal2);
      
      byteArrayInputStream0.mark(httpConnection_Request0.maxBodySizeBytes);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertArrayEquals(new byte[] {(byte) (-27), (byte) (-56)}, byteArray0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(2, byteArray0.length);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals((-1048574), byteArrayInputStream0.available());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(int0 == int1);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(int1 == int0);
      assertFalse(httpConnection_KeyVal0.equals((Object)httpConnection_KeyVal2));
      assertArrayEquals(new byte[] {(byte) (-27), (byte) (-56)}, byteArray0);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(httpConnection_KeyVal0, httpConnection_KeyVal2);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertEquals(2, byteArray0.length);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(0, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals((-1048574), byteArrayInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("div", httpConnection_KeyVal0.value());
      assertEquals("D'", httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNotNull(httpConnection_Request3);
      
      String string3 = HttpConnection.Response.setupMultipartModeIfNeeded(httpConnection_Request3);
      assertFalse(int0 == int1);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(int1 == int0);
      assertFalse(httpConnection_KeyVal0.equals((Object)httpConnection_KeyVal2));
      assertArrayEquals(new byte[] {(byte) (-27), (byte) (-56)}, byteArray0);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(httpConnection_KeyVal0, httpConnection_KeyVal2);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertEquals("--------------------------------", string3);
      assertEquals(2, byteArray0.length);
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(0, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals((-1048574), byteArrayInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("div", httpConnection_KeyVal0.value());
      assertEquals("D'", httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNotNull(string3);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      String string4 = httpConnection_Response0.charset();
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNull(string4);
  }

  @Test(timeout = 11000)
  public void test50()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertNotNull(httpConnection_Request0);
      
      int int0 = 2232;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(2232, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(2232, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(2232, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(2232, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertNotNull(httpConnection_KeyVal0);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.followRedirects(httpConnection_Request0.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(2232, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(2232, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(2232, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(2232, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(2232, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(2232, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request1.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(2232, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(2232, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(2232, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(2232, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(2232, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(2232, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertNotNull(httpConnection_Request3);
      
      Connection.Method connection_Method0 = Connection.Method.POST;
      httpConnection_Request1.method = connection_Method0;
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(2232, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(2232, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request3.parser(httpConnection_Request1.parser);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(2232, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(2232, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(2232, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.POST, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.isValidateSSLCertificates());
      assertEquals(2232, httpConnection_Request4.timeout());
      assertEquals(2232, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(2232, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(2232, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateSSLCertificates);
      assertEquals(2232, httpConnection_Request4.timeoutMilliseconds);
      assertNotNull(httpConnection_Request4);
      
      boolean boolean0 = false;
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request4.followRedirects(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertFalse(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(2232, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(2232, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(2232, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.POST, httpConnection_Request3.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.isValidateSSLCertificates());
      assertEquals(2232, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.isValidateSSLCertificates());
      assertEquals(2232, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals(2232, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(2232, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(2232, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.validateSSLCertificates);
      assertEquals(2232, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.validateSSLCertificates);
      assertEquals(2232, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.followRedirects);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertNotNull(httpConnection_Request5);
      
      String string0 = HttpConnection.Response.setupMultipartModeIfNeeded(httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertFalse(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(2232, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(2232, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(2232, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.POST, httpConnection_Request3.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.isValidateSSLCertificates());
      assertEquals(2232, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.isValidateSSLCertificates());
      assertEquals(2232, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals(2232, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(2232, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(2232, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.validateSSLCertificates);
      assertEquals(2232, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.validateSSLCertificates);
      assertEquals(2232, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.followRedirects);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertNull(string0);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test51()  throws Throwable  {
      Connection.Request connection_Request0 = null;
      OutputStream outputStream0 = null;
      String string0 = "";
      // Undeclared exception!
      try { 
        HttpConnection.Response.writePost(connection_Request0, outputStream0, string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test52()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = true;
      httpConnection_Request0.ignoreContentType = boolean0;
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      String string0 = "l3G@j*phYtHZd?u";
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string0);
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNotNull(httpConnection_KeyVal0);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(httpConnection_Request0.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.parser(httpConnection_Request0.parser);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request2.ignoreHttpErrors(httpConnection_Request1.validateSSLCertificates);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertNotNull(httpConnection_Request3);
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(httpConnection_KeyVal0.key);
      assertNotNull(mockFileOutputStream0);
      
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertTrue(fileChannel0.isOpen());
      assertEquals(0L, fileChannel0.position());
      assertEquals(0L, fileChannel0.size());
      assertNotNull(fileChannel0);
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(1048576, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.validateSSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(1048576, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.ignoreContentType);
      assertNotNull(httpConnection_Request4);
      
      HttpConnection.Response.writePost(httpConnection_Request3, mockFileOutputStream0, string0);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      
      String string1 = "wJ*'V6^(ED7";
      HttpConnection.Response httpConnection_Response1 = (HttpConnection.Response)httpConnection_Response0.cookie(httpConnection_KeyVal0.key, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string0, string1);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertNotNull(httpConnection_Response1);
      
      String string2 = httpConnection_Response0.contentType();
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNull(string2);
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      String string3 = ".ai;(bv,Gbc ";
      List<String> list0 = null;
      List<String> list1 = hashMap0.put(string3, list0);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertNull(list1);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.processResponseHeaders(hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 11000)
  public void test53()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = true;
      httpConnection_Request0.ignoreContentType = boolean0;
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.ignoreContentType());
      
      String string0 = "l3G@j*phYtHZd?u";
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string0);
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNotNull(httpConnection_KeyVal0);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(httpConnection_Request0.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.followRedirects);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request3.ignoreHttpErrors(httpConnection_Request2.validateSSLCertificates);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.isValidateSSLCertificates());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request4.timeout());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateSSLCertificates);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request4.timeoutMilliseconds);
      assertNotNull(httpConnection_Request4);
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(httpConnection_KeyVal0.key);
      assertNotNull(mockFileOutputStream0);
      
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals(0L, fileChannel0.position());
      assertEquals(0L, fileChannel0.size());
      assertTrue(fileChannel0.isOpen());
      assertNotNull(fileChannel0);
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request1.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request5.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals(1048576, httpConnection_Request5.timeout());
      assertTrue(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.ignoreHttpErrors);
      assertNotNull(httpConnection_Request5);
      
      HttpConnection.Response.writePost(httpConnection_Request4, mockFileOutputStream0, string0);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.isValidateSSLCertificates());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request4.timeout());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateSSLCertificates);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request4.timeoutMilliseconds);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      String string1 = "wJ*'V6^(ED7";
      HttpConnection.Response httpConnection_Response1 = (HttpConnection.Response)httpConnection_Response0.cookie(httpConnection_KeyVal0.key, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string0, string1);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertNotNull(httpConnection_Response1);
      
      String string2 = httpConnection_Response0.contentType();
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(string2);
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      String string3 = ".ai;(bv,Gbc ";
      List<String> list0 = null;
      List<String> list1 = hashMap0.put(string3, list0);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertNull(list1);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.processResponseHeaders(hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 11000)
  public void test54()  throws Throwable  {
      HttpConnection.Response.initUnSecureSSL();
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      
      HttpConnection.Response.initUnSecureSSL();
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      LinkedList linkedList1 = (LinkedList)linkedList0.clone();
      assertEquals(0, linkedList0.size());
      assertEquals(0, linkedList1.size());
      assertNotNull(linkedList1);
      
      HashMap<String, String> hashMap1 = new HashMap<String, String>();
      assertEquals(0, hashMap1.size());
      assertTrue(hashMap1.isEmpty());
      assertNotNull(hashMap1);
      
      Set<String> set0 = hashMap1.keySet();
      assertEquals(0, hashMap1.size());
      assertTrue(hashMap1.isEmpty());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertNotNull(set0);
      
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      assertEquals(0, linkedList0.size());
      assertEquals(0, hashMap1.size());
      assertTrue(hashMap1.isEmpty());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      assertNotNull(list0);
      
      List<String> list1 = hashMap0.put(httpConnection_Response0.charset, list0);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(0, linkedList0.size());
      assertEquals(0, hashMap1.size());
      assertTrue(hashMap1.isEmpty());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNull(list1);
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      
      HttpConnection.Response.initUnSecureSSL();
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test55()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = true;
      String string0 = "http:/";
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(httpConnection_Request0.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.followRedirects(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertNotNull(httpConnection_Response1);
      
      int int0 = (-2507);
      httpConnection_Response1.statusCode = int0;
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.method());
      assertEquals((-2507), httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      
      HttpURLConnection httpURLConnection0 = null;
      HttpConnection.Response httpConnection_Response2 = new HttpConnection.Response();
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertNull(httpConnection_Response2.statusMessage());
      assertEquals(0, httpConnection_Response2.statusCode());
      assertNull(httpConnection_Response2.charset());
      assertNull(httpConnection_Response2.method());
      assertNull(httpConnection_Response2.contentType());
      assertEquals(0, httpConnection_Response2.numRedirects);
      assertEquals(0, httpConnection_Response2.statusCode);
      assertFalse(httpConnection_Response2.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response2);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.setupFromConnection(httpURLConnection0, httpConnection_Response2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test56()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = true;
      httpConnection_Request0.ignoreContentType = boolean0;
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      String string0 = "l3G@j*phYtHZd?u";
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string0);
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertNotNull(httpConnection_KeyVal0);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(httpConnection_Request0.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request3.ignoreHttpErrors(httpConnection_Request2.validateSSLCertificates);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.timeout());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.isValidateSSLCertificates());
      assertTrue(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(1048576, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateSSLCertificates);
      assertNotNull(httpConnection_Request4);
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(httpConnection_KeyVal0.key);
      assertNotNull(mockFileOutputStream0);
      
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)25;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-43);
      byteArray0[1] = byte1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      assertArrayEquals(new byte[] {(byte)25, (byte) (-43)}, byteArray0);
      assertEquals(2, byteArray0.length);
      assertEquals(2, byteArrayInputStream0.available());
      assertNotNull(byteArrayInputStream0);
      
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.inputStream((InputStream) byteArrayInputStream0);
      assertArrayEquals(new byte[] {(byte)25, (byte) (-43)}, byteArray0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertEquals(2, byteArray0.length);
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal1.key());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal1.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertEquals(2, byteArrayInputStream0.available());
      assertNotNull(httpConnection_KeyVal1);
      
      httpConnection_Request2.ignoreContentType = httpConnection_Request1.validateSSLCertificates;
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request4.data((Connection.KeyVal) httpConnection_KeyVal1);
      assertArrayEquals(new byte[] {(byte)25, (byte) (-43)}, byteArray0);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertEquals(2, byteArray0.length);
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal1.key());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal1.value());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request5.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals(1048576, httpConnection_Request5.timeout());
      assertTrue(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.timeout());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.isValidateSSLCertificates());
      assertTrue(httpConnection_Request4.ignoreContentType());
      assertEquals(2, byteArrayInputStream0.available());
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(1048576, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateSSLCertificates);
      assertNotNull(httpConnection_Request5);
      
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertEquals(0L, fileChannel0.size());
      assertTrue(fileChannel0.isOpen());
      assertEquals(0L, fileChannel0.position());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertNotNull(fileChannel0);
      
      HttpConnection.Request httpConnection_Request6 = httpConnection_Request1.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request6.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertEquals(1048576, httpConnection_Request6.timeout());
      assertTrue(httpConnection_Request6.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertTrue(httpConnection_Request6.isValidateSSLCertificates());
      assertTrue(httpConnection_Request6.ignoreContentType());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request6.timeoutMilliseconds);
      assertTrue(httpConnection_Request6.ignoreContentType);
      assertTrue(httpConnection_Request6.followRedirects);
      assertTrue(httpConnection_Request6.ignoreHttpErrors);
      assertTrue(httpConnection_Request6.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request6);
      
      HttpConnection.Response.writePost(httpConnection_Request4, mockFileOutputStream0, string0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request6);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request6);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.timeout());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.isValidateSSLCertificates());
      assertTrue(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(1048576, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateSSLCertificates);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      String string1 = "wJ*'V6^(ED7";
      HttpConnection.Response httpConnection_Response1 = (HttpConnection.Response)httpConnection_Response0.cookie(httpConnection_KeyVal0.key, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string0, string1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Response1, httpConnection_Response0);
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertNotNull(httpConnection_Response1);
      
      String string2 = httpConnection_Response0.contentType();
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(string2);
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      String string3 = ".ai;(bv,Gbc ";
      List<String> list0 = null;
      List<String> list1 = hashMap0.put(string3, list0);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertNull(list1);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.processResponseHeaders(hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 11000)
  public void test57()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "agsN`\"%lT";
      boolean boolean0 = FileSystemHandling.appendStringToFile(evoSuiteFile0, string0);
      assertFalse(boolean0);
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      
      Parser parser0 = Parser.xmlParser();
      assertFalse(parser0.isTrackErrors());
      assertNotNull(parser0);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      
      int int0 = 32;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals(32, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(32, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(32, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(32, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(32, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(32, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.value());
      assertNotNull(httpConnection_KeyVal0);
      
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.key(string0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("agsN`\"%lT", httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertNull(httpConnection_KeyVal1.value());
      assertEquals("agsN`\"%lT", httpConnection_KeyVal1.key());
      assertNotNull(httpConnection_KeyVal1);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertEquals(32, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(32, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(32, httpConnection_Request2.timeout());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("agsN`\"%lT", httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertNull(httpConnection_KeyVal1.value());
      assertEquals("agsN`\"%lT", httpConnection_KeyVal1.key());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(32, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(32, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(32, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(32, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(32, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(httpConnection_Request3);
      
      boolean boolean1 = false;
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request3.ignoreContentType(boolean1);
      assertTrue(boolean1 == boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertEquals(32, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(32, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(32, httpConnection_Request2.timeout());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("agsN`\"%lT", httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertNull(httpConnection_KeyVal1.value());
      assertEquals("agsN`\"%lT", httpConnection_KeyVal1.key());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(32, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(32, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(32, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(32, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(32, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(32, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.validateSSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(32, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertNotNull(httpConnection_Request4);
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      String string1 = null;
      // Undeclared exception!
      try { 
        HttpConnection.Response.writePost(httpConnection_Request4, pipedOutputStream0, string1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.net.URLEncoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test58()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "agsN`\"%lT";
      boolean boolean0 = FileSystemHandling.appendStringToFile(evoSuiteFile0, string0);
      assertFalse(boolean0);
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      
      Parser parser0 = Parser.xmlParser();
      assertFalse(parser0.isTrackErrors());
      assertNotNull(parser0);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_Request1);
      
      int int0 = 32;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(32, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(32, httpConnection_Request1.timeout());
      assertEquals(32, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(32, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(32, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(32, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNotNull(httpConnection_KeyVal0);
      
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.key(string0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertNull(httpConnection_KeyVal0.value());
      assertEquals("agsN`\"%lT", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal1.value());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertEquals("agsN`\"%lT", httpConnection_KeyVal1.key());
      assertNotNull(httpConnection_KeyVal1);
      
      boolean boolean1 = false;
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request2.ignoreContentType(boolean1);
      assertTrue(boolean1 == boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(32, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(32, httpConnection_Request1.timeout());
      assertEquals(32, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(32, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(32, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(32, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(32, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(32, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertNotNull(httpConnection_Request3);
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      String string1 = null;
      HttpConnection.Response.writePost(httpConnection_Request3, pipedOutputStream0, string1);
      assertTrue(boolean1 == boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(32, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(parser0.isTrackErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(32, httpConnection_Request1.timeout());
      assertEquals(32, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(32, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(32, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(32, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(32, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(32, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
  }

  @Test(timeout = 11000)
  public void test59()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = false;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreContentType(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      
      URL uRL0 = MockURL.getFileExample();
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNotNull(uRL0);
      
      httpConnection_Request0.url = uRL0;
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertEquals("file", httpConnection_Request0.url.getProtocol());
      assertEquals("some", httpConnection_Request0.url.getAuthority());
      assertEquals("some", httpConnection_Request0.url.getHost());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertNull(httpConnection_Request0.url.getRef());
      
      String string0 = HttpConnection.Response.getRequestCookieString(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("", string0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(string0);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.createConnection(httpConnection_Request1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test60()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      
      String string0 = "nSX=p";
      String string1 = "set-ookime";
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertEquals("set-ookime", httpConnection_KeyVal0.value());
      assertEquals("nSX=p", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNotNull(httpConnection_KeyVal0);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("set-ookime", httpConnection_KeyVal0.value());
      assertEquals("nSX=p", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_Request1);
      
      int int0 = 2983;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(2983, httpConnection_Request0.timeout());
      assertEquals("set-ookime", httpConnection_KeyVal0.value());
      assertEquals("nSX=p", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(2983, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(2983, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(2983, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(2983, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(2983, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertNotNull(httpConnection_Request2);
      
      String string2 = "Ull3i9z4mkS)";
      httpConnection_KeyVal0.value = string2;
      assertEquals("Ull3i9z4mkS)", httpConnection_KeyVal0.value());
      assertEquals("nSX=p", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      
      boolean boolean0 = false;
      httpConnection_Request2.validateSSLCertificates = boolean0;
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(2983, httpConnection_Request0.timeout());
      assertEquals("Ull3i9z4mkS)", httpConnection_KeyVal0.value());
      assertEquals("nSX=p", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(2983, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request2.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(2983, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      
      boolean boolean1 = true;
      httpConnection_Request1.setValidateSSLCertificates(boolean1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(boolean1 == boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(2983, httpConnection_Request0.timeout());
      assertEquals("Ull3i9z4mkS)", httpConnection_KeyVal0.value());
      assertEquals("nSX=p", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(2983, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(2983, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(2983, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(2983, httpConnection_Request0.timeout());
      assertEquals("Ull3i9z4mkS)", httpConnection_KeyVal0.value());
      assertEquals("nSX=p", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(2983, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(2983, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(2983, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(2983, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(2983, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(2983, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(2983, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request3.ignoreContentType(httpConnection_Request0.followRedirects);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(2983, httpConnection_Request0.timeout());
      assertEquals("Ull3i9z4mkS)", httpConnection_KeyVal0.value());
      assertEquals("nSX=p", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(2983, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(2983, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertEquals(2983, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(2983, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.ignoreContentType());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(2983, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(2983, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(2983, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(2983, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertTrue(httpConnection_Request4.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(2983, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.ignoreContentType);
      assertNotNull(httpConnection_Request4);
      
      String string3 = HttpConnection.Response.getRequestCookieString(httpConnection_Request4);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertEquals("", string3);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(2983, httpConnection_Request0.timeout());
      assertEquals("Ull3i9z4mkS)", httpConnection_KeyVal0.value());
      assertEquals("nSX=p", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(2983, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(2983, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertEquals(2983, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(2983, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.ignoreContentType());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(2983, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(2983, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(2983, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(2983, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertTrue(httpConnection_Request4.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(2983, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.ignoreContentType);
      assertNotNull(string3);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      
      HttpConnection.Response.xmlContentTypeRxp = httpConnection_Response0.xmlContentTypeRxp;
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals("application/\\w+\\+xml.*", HttpConnection.Response.xmlContentTypeRxp.toString());
      assertEquals(0, HttpConnection.Response.xmlContentTypeRxp.flags());
      assertEquals("application/\\w+\\+xml.*", HttpConnection.Response.xmlContentTypeRxp.pattern());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertNotNull(httpConnection_Response1);
      
      String string4 = HttpConnection.Response.setupMultipartModeIfNeeded(httpConnection_Request2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(2983, httpConnection_Request0.timeout());
      assertEquals("Ull3i9z4mkS)", httpConnection_KeyVal0.value());
      assertEquals("nSX=p", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(2983, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(2983, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(2983, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(2983, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(2983, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertNull(string4);
      
      int int1 = httpConnection_Response0.statusCode();
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(int1 == int0);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertEquals(0, int1);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      int int2 = httpConnection_Response1.statusCode();
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(int2 == int0);
      assertTrue(int2 == int1);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals(0, int2);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      
      String string5 = HttpConnection.Response.getRequestCookieString(httpConnection_Request2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertTrue(string5.equals((Object)string3));
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertNotSame(string5, string1);
      assertNotSame(string5, string3);
      assertNotSame(string5, string2);
      assertNotSame(string5, string0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals("", string5);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(2983, httpConnection_Request0.timeout());
      assertEquals("Ull3i9z4mkS)", httpConnection_KeyVal0.value());
      assertEquals("nSX=p", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(2983, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(2983, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(2983, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(2983, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(2983, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertNotNull(string5);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute(httpConnection_Response1.req, httpConnection_Response0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test61()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = false;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreContentType(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      
      URL uRL0 = MockURL.getFileExample();
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNotNull(uRL0);
      
      httpConnection_Request0.url = uRL0;
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals("some", httpConnection_Request0.url.getHost());
      assertEquals("file", httpConnection_Request0.url.getProtocol());
      assertEquals("some", httpConnection_Request0.url.getAuthority());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertNull(httpConnection_Request0.url.getRef());
      
      String string0 = HttpConnection.Response.getRequestCookieString(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("", string0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(string0);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Only http & https protocols supported
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test62()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "agsN`\"%lT";
      EvoSuiteFile evoSuiteFile1 = null;
      boolean boolean0 = FileSystemHandling.appendStringToFile(evoSuiteFile1, string0);
      assertFalse(boolean0);
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      
      Parser parser0 = Parser.xmlParser();
      assertFalse(parser0.isTrackErrors());
      assertNotNull(parser0);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      
      int int0 = 32;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.parser(httpConnection_Request0.parser);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNotNull(httpConnection_KeyVal0);
      
      HttpConnection.KeyVal httpConnection_KeyVal1 = HttpConnection.KeyVal.create(string0, string0, httpConnection_KeyVal0.stream);
      assertFalse(httpConnection_KeyVal1.equals((Object)httpConnection_KeyVal0));
      assertNotSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("agsN`\"%lT", httpConnection_KeyVal1.value());
      assertEquals("agsN`\"%lT", httpConnection_KeyVal1.key());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertNotNull(httpConnection_KeyVal1);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal1);
      assertFalse(httpConnection_KeyVal0.equals((Object)httpConnection_KeyVal1));
      assertFalse(httpConnection_KeyVal1.equals((Object)httpConnection_KeyVal0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertNotSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("agsN`\"%lT", httpConnection_KeyVal1.value());
      assertEquals("agsN`\"%lT", httpConnection_KeyVal1.key());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(httpConnection_Request3);
      
      boolean boolean1 = false;
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request3.ignoreContentType(boolean1);
      assertFalse(httpConnection_KeyVal0.equals((Object)httpConnection_KeyVal1));
      assertFalse(httpConnection_KeyVal1.equals((Object)httpConnection_KeyVal0));
      assertTrue(boolean1 == boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertNotSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("agsN`\"%lT", httpConnection_KeyVal1.value());
      assertEquals("agsN`\"%lT", httpConnection_KeyVal1.key());
      assertFalse(httpConnection_KeyVal1.hasInputStream());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.isValidateSSLCertificates());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertNotNull(httpConnection_Request4);
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      String string1 = null;
      try { 
        HttpConnection.Response.writePost(httpConnection_Request4, pipedOutputStream0, string1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 11000)
  public void test63()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = true;
      httpConnection_Request0.ignoreContentType = boolean0;
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      
      String string0 = "l3G@j*phYtHZd?u";
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string0);
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertNotNull(httpConnection_KeyVal0);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_Request1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(httpConnection_Request0.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request2);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertNotNull(httpConnection_Request3);
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request3.ignoreHttpErrors(httpConnection_Request2.validateSSLCertificates);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request4.timeout());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.isValidateSSLCertificates());
      assertTrue(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(1048576, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateSSLCertificates);
      assertNotNull(httpConnection_Request4);
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request2.timeout(httpConnection_Request3.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request5.timeout());
      assertTrue(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request5.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.ignoreContentType);
      assertEquals(1048576, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.ignoreHttpErrors);
      assertNotNull(httpConnection_Request5);
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(httpConnection_KeyVal0.key);
      assertNotNull(mockFileOutputStream0);
      
      FileChannel fileChannel0 = mockFileOutputStream0.getChannel();
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertEquals(0L, fileChannel0.position());
      assertEquals(0L, fileChannel0.size());
      assertTrue(fileChannel0.isOpen());
      assertNotNull(fileChannel0);
      
      HttpConnection.Request httpConnection_Request6 = httpConnection_Request1.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertTrue(httpConnection_Request6.ignoreContentType());
      assertTrue(httpConnection_Request6.isValidateSSLCertificates());
      assertTrue(httpConnection_Request6.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request6.timeout());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertTrue(httpConnection_Request6.followRedirects());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request6.followRedirects);
      assertTrue(httpConnection_Request6.ignoreContentType);
      assertTrue(httpConnection_Request6.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertTrue(httpConnection_Request6.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request6.timeoutMilliseconds);
      assertNotNull(httpConnection_Request6);
      
      HttpConnection.Response.writePost(httpConnection_Request4, mockFileOutputStream0, string0);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request6);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request6);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request4.timeout());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.isValidateSSLCertificates());
      assertTrue(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(1048576, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateSSLCertificates);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      
      String string1 = "wJ*'V6^(ED7";
      HttpConnection.Response httpConnection_Response1 = (HttpConnection.Response)httpConnection_Response0.cookie(httpConnection_KeyVal0.key, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(string0, string1);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(string1, string0);
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response1);
      
      String string2 = httpConnection_Response0.contentType();
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNull(string2);
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      String string3 = ".ai;(bv,Gbc ";
      List<String> list0 = null;
      List<String> list1 = hashMap0.put(string3, list0);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertNull(list1);
      
      String string4 = httpConnection_Response1.contentType();
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("l3G@j*phYtHZd?u", httpConnection_KeyVal0.value());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNull(string4);
      
      String string5 = null;
      try { 
        HttpConnection.Response.writePost(httpConnection_Request0, mockFileOutputStream0, string5);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 11000)
  public void test64()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = false;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreContentType(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNotNull(uRL0);
      
      httpConnection_Request0.url = uRL0;
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertNull(httpConnection_Request0.url.getRef());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      
      String string0 = HttpConnection.Response.getRequestCookieString(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("", string0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(string0);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // HTTP error fetching URL
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test65()  throws Throwable  {
      boolean boolean0 = false;
      URL uRL0 = MockURL.getHttpExample();
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNotNull(uRL0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      
      String string0 = "";
      HttpConnection.CONTENT_TYPE = string0;
      httpConnection_Response0.contentType = HttpConnection.CONTENT_TYPE;
      assertEquals("", httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      assertNotNull(hashMap0);
      
      String string1 = httpConnection_Response0.contentType();
      assertSame(string1, string0);
      assertEquals("", string1);
      assertEquals("", httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(string1);
  }

  @Test(timeout = 11000)
  public void test66()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = true;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreContentType(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_Request1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNotNull(uRL0);
      
      httpConnection_Request0.url = uRL0;
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertNull(httpConnection_Request0.url.getRef());
      assertNull(httpConnection_Request0.url.getQuery());
      
      String string0 = HttpConnection.Response.getRequestCookieString(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("", string0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(string0);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // HTTP error fetching URL
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test67()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = false;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreContentType(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_Request1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertNotNull(uRL0);
      
      int int0 = 4559;
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.maxBodySize(int0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(4559, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(4559, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertNotNull(httpConnection_Request2);
      
      httpConnection_Request0.url = uRL0;
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      
      String string0 = HttpConnection.Response.getRequestCookieString(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("", string0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(4559, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4559, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(string0);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.ignoreHttpErrors(httpConnection_Request0.validateSSLCertificates);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(4559, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(4559, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4559, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(4559, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertNotNull(httpConnection_Request3);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(4559, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(4559, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertEquals(3000, httpURLConnection0.getConnectTimeout());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.usingProxy());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals(3000, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection0.toString());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4559, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(4559, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertNotNull(httpURLConnection0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test68()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreContentType(httpConnection_Request0.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      
      URL uRL0 = MockURL.getFileExample();
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNotNull(uRL0);
      
      String string0 = "5'_4TL-:bu5O";
      String string1 = httpConnection_Request1.header(string0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNull(string1);
      
      httpConnection_Request0.url = uRL0;
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertEquals("some", httpConnection_Request0.url.getAuthority());
      assertEquals("some", httpConnection_Request0.url.getHost());
      assertEquals("file", httpConnection_Request0.url.getProtocol());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertNull(httpConnection_Request0.url.getRef());
      
      String string2 = HttpConnection.Response.getRequestCookieString(httpConnection_Request1);
      assertFalse(string2.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(string2, string0);
      assertEquals("", string2);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(string2);
      
      String string3 = "org.jsoup.select.Evaluator$AttributeWithValue";
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.ignoreHttpErrors(httpConnection_Request0.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertNotNull(httpConnection_Request2);
      
      int int0 = 781;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(int0);
      assertEquals("", byteArrayOutputStream0.toString());
      assertEquals(0, byteArrayOutputStream0.size());
      assertNotNull(byteArrayOutputStream0);
      
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      assertEquals("", byteArrayOutputStream0.toString());
      assertEquals(0, byteArrayOutputStream0.size());
      assertNotNull(dataOutputStream0);
      
      HttpConnection.Response.writePost(httpConnection_Request2, dataOutputStream0, string2);
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertNotSame(string2, string3);
      assertNotSame(string2, string0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals("----", byteArrayOutputStream0.toString());
      assertEquals(4, byteArrayOutputStream0.size());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      
      String string4 = ";!&Qreah10\"KdV0_f";
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL1 = MockURL.URL(string3, string0, httpConnection_Request1.timeoutMilliseconds, string4, uRLStreamHandler0);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(uRL1.equals((Object)uRL0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string4);
      assertNotSame(string3, string2);
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertNotSame(uRL1, uRL0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertNull(uRL1.getRef());
      assertNull(uRL1.getQuery());
      assertEquals(0, uRL1.getDefaultPort());
      assertEquals("[5'_4TL-:bu5O]:3000", uRL1.getAuthority());
      assertEquals(3000, uRL1.getPort());
      assertEquals(";!&Qreah10\"KdV0_f", uRL1.getPath());
      assertEquals("org.jsoup.select.evaluator$attributewithvalue", uRL1.getProtocol());
      assertNull(uRL1.toString());
      assertNull(uRL1.getUserInfo());
      assertEquals(";!&Qreah10\"KdV0_f", uRL1.getFile());
      assertEquals("[5'_4TL-:bu5O]", uRL1.getHost());
      assertNull(uRL1.toExternalForm());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(uRL1);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.url(uRL1);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(uRL1.equals((Object)uRL0));
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string4);
      assertNotSame(string3, string2);
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertNotSame(uRL1, uRL0);
      assertEquals(3000, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertNull(uRL1.getRef());
      assertNull(uRL1.getQuery());
      assertEquals(0, uRL1.getDefaultPort());
      assertEquals("[5'_4TL-:bu5O]:3000", uRL1.getAuthority());
      assertEquals(3000, uRL1.getPort());
      assertEquals(";!&Qreah10\"KdV0_f", uRL1.getPath());
      assertEquals("org.jsoup.select.evaluator$attributewithvalue", uRL1.getProtocol());
      assertNull(uRL1.toString());
      assertNull(uRL1.getUserInfo());
      assertEquals(";!&Qreah10\"KdV0_f", uRL1.getFile());
      assertEquals("[5'_4TL-:bu5O]", uRL1.getHost());
      assertNull(uRL1.toExternalForm());
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request3);
      
      try { 
        HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: org.jsoup.select.evaluator$attributewithvalue://[5'_4TL-:bu5O]:3000;!&Qreah10\"KdV0_f?
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 11000)
  public void test69()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = false;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreContentType(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNotNull(uRL0);
      
      int int0 = 4559;
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.maxBodySize(int0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(4559, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(4559, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request2);
      
      httpConnection_Request0.url = uRL0;
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertNull(httpConnection_Request0.url.getQuery());
      
      String string0 = HttpConnection.Response.getRequestCookieString(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("", string0);
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(4559, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(4559, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(string0);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.ignoreHttpErrors(httpConnection_Request0.validateSSLCertificates);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(4559, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(4559, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(4559, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(4559, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(httpConnection_Request3);
      
      Connection.Method connection_Method0 = Connection.Method.GET;
      httpConnection_Request3.method = connection_Method0;
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(4559, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(4559, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request3.timeout());
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(4559, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(4559, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertNull(httpURLConnection0.getContentEncoding());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertTrue(httpURLConnection0.getUseCaches());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals(3000, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertFalse(httpURLConnection0.usingProxy());
      assertEquals(3000, httpURLConnection0.getConnectTimeout());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection0.toString());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(4559, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(4559, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(httpURLConnection0);
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      HttpURLConnection httpURLConnection1 = HttpConnection.Response.createConnection(httpConnection_Request1);
      assertFalse(httpURLConnection1.equals((Object)httpURLConnection0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(httpURLConnection1, httpURLConnection0);
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(4559, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpURLConnection1.getDefaultUseCaches());
      assertEquals(3000, httpURLConnection1.getConnectTimeout());
      assertFalse(httpURLConnection1.getDoOutput());
      assertFalse(httpURLConnection1.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection1.getUseCaches());
      assertNull(httpURLConnection1.getContentType());
      assertEquals(0L, httpURLConnection1.getIfModifiedSince());
      assertTrue(httpURLConnection1.getDoInput());
      assertNull(httpURLConnection1.getContentEncoding());
      assertFalse(httpURLConnection1.getInstanceFollowRedirects());
      assertEquals((-1), httpURLConnection1.getContentLength());
      assertFalse(httpURLConnection1.usingProxy());
      assertFalse(httpURLConnection1.getAllowUserInteraction());
      assertEquals("GET", httpURLConnection1.getRequestMethod());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection1.toString());
      assertTrue(httpURLConnection1.getFollowRedirects());
      assertEquals(3000, httpURLConnection1.getReadTimeout());
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(4559, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpURLConnection1);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test70()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      
      boolean boolean0 = false;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreContentType(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNotNull(uRL0);
      
      int int0 = 4559;
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.maxBodySize(int0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(4559, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(4559, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertNotNull(httpConnection_Request2);
      
      httpConnection_Request0.url = uRL0;
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertNull(httpConnection_Request0.url.getQuery());
      
      String string0 = HttpConnection.Response.getRequestCookieString(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertEquals("", string0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(4559, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(4559, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(string0);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.ignoreHttpErrors(httpConnection_Request0.validateSSLCertificates);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(4559, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(4559, httpConnection_Request3.maxBodySize());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(4559, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(4559, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(httpConnection_Request3);
      
      String string1 = "^<";
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request3.cookie(string1, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertNotSame(string0, string1);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(4559, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(4559, httpConnection_Request3.maxBodySize());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.isValidateSSLCertificates());
      assertEquals(4559, httpConnection_Request4.maxBodySize());
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(4559, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(4559, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(4559, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertNotNull(httpConnection_Request4);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(4559, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(4559, httpConnection_Request3.maxBodySize());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertTrue(httpURLConnection0.getDoInput());
      assertFalse(httpURLConnection0.usingProxy());
      assertNull(httpURLConnection0.getContentEncoding());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertNull(httpURLConnection0.getContentType());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertTrue(httpURLConnection0.getUseCaches());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals(3000, httpURLConnection0.getConnectTimeout());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection0.toString());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals(3000, httpURLConnection0.getReadTimeout());
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(4559, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(4559, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(httpURLConnection0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test71()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      HttpConnection.HTTP_TEMP_REDIR = httpConnection_Response0.MAX_REDIRECTS;
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertNotNull(hashMap0);
      
      String string0 = "=";
      LinkedList<String> linkedList0 = new LinkedList<String>();
      assertFalse(linkedList0.contains(string0));
      assertEquals(0, linkedList0.size());
      assertNotNull(linkedList0);
      
      boolean boolean0 = linkedList0.add(httpConnection_Response0.statusMessage);
      assertFalse(linkedList0.contains(string0));
      assertTrue(boolean0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(1, linkedList0.size());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      
      List<String> list0 = hashMap0.put(string0, linkedList0);
      assertFalse(linkedList0.contains(string0));
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertEquals(1, linkedList0.size());
      assertNull(list0);
      
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      assertEquals(0, linkedList1.size());
      assertNotNull(linkedList1);
      
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      assertFalse(linkedHashSet0.contains(string0));
      assertEquals(0, linkedHashSet0.size());
      assertTrue(linkedHashSet0.isEmpty());
      assertNotNull(linkedHashSet0);
      
      String string1 = "CrxoyZY=nT1N";
      // Undeclared exception!
      try { 
        httpConnection_Response0.processResponseHeaders(hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Header value must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test72()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = null;
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response1);
      
      int int0 = (-945);
      boolean boolean0 = true;
      httpConnection_Response1.executed = boolean0;
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      
      // Undeclared exception!
      try { 
        httpConnection_Response1.bodyAsBytes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test73()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(httpConnection_Request0.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_Request1);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNotNull(uRL0);
      
      int int0 = 4559;
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.maxBodySize(int0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(4559, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(4559, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request2);
      
      httpConnection_Request0.url = uRL0;
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertNull(httpConnection_Request0.url.getQuery());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      
      String string0 = HttpConnection.Response.getRequestCookieString(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("", string0);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(4559, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(4559, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(string0);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      
      Connection.Method connection_Method0 = Connection.Method.POST;
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.method(connection_Method0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(4559, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request1.method());
      assertTrue(httpConnection_Request3.isValidateSSLCertificates());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.POST, httpConnection_Request3.method());
      assertEquals(4559, httpConnection_Request3.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(4559, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(4559, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateSSLCertificates);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertNotNull(httpConnection_Request3);
      
      httpConnection_Request1.validateSSLCertificates = httpConnection_Request2.validateSSLCertificates;
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(4559, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertEquals(4559, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request2.method());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request1.ignoreHttpErrors(httpConnection_Request0.validateSSLCertificates);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(4559, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request1.method());
      assertTrue(httpConnection_Request4.isValidateSSLCertificates());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(4559, httpConnection_Request4.maxBodySize());
      assertEquals(1048576, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(4559, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.validateSSLCertificates);
      assertEquals(4559, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertNotNull(httpConnection_Request4);
      
      String string1 = "^<";
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request4.cookie(string1, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertNotSame(string0, string1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(4559, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request1.method());
      assertTrue(httpConnection_Request4.isValidateSSLCertificates());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(4559, httpConnection_Request4.maxBodySize());
      assertEquals(1048576, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request5.timeout());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request5.method());
      assertEquals(4559, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.isValidateSSLCertificates());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(4559, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.validateSSLCertificates);
      assertEquals(4559, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(4559, httpConnection_Request5.maxBodySizeBytes);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(1048576, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateSSLCertificates);
      assertNotNull(httpConnection_Request5);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(4559, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(4559, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request1.method());
      assertTrue(httpConnection_Request4.isValidateSSLCertificates());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(4559, httpConnection_Request4.maxBodySize());
      assertEquals(1048576, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals(1048576, httpURLConnection0.getReadTimeout());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertEquals(1048576, httpURLConnection0.getConnectTimeout());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection0.getUseCaches());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals("POST", httpURLConnection0.getRequestMethod());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getDoOutput());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection0.toString());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4559, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(4559, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.validateSSLCertificates);
      assertEquals(4559, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertNotNull(httpURLConnection0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response0);
        fail("Expecting exception: UnknownServiceException");
      
      } catch(UnknownServiceException e) {
         //
         // protocol doesn't support output
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test74()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertNotNull(httpConnection_Request0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNotNull(uRL0);
      
      httpConnection_Request0.url = uRL0;
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertNull(httpConnection_Request0.url.getRef());
      assertNull(httpConnection_Request0.url.getQuery());
      
      String string0 = HttpConnection.Response.getRequestCookieString(httpConnection_Request0);
      assertEquals("", string0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertNotNull(string0);
      
      Connection.Method connection_Method0 = Connection.Method.POST;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.method(connection_Method0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      
      EvoSuiteFile evoSuiteFile0 = null;
      EvoSuiteFile evoSuiteFile1 = null;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      assertFalse(boolean0);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
        fail("Expecting exception: UnknownServiceException");
      
      } catch(UnknownServiceException e) {
         //
         // protocol doesn't support output
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test75()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNotNull(uRL0);
      
      httpConnection_Request0.url = uRL0;
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      
      String string0 = HttpConnection.Response.getRequestCookieString(httpConnection_Request0);
      assertEquals("", string0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(string0);
      
      Connection.Method connection_Method0 = Connection.Method.POST;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.method(connection_Method0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.isValidateSSLCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.POST, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateSSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      
      String string1 = "Aj|xU0NT6H ";
      String string2 = "R";
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertEquals(0, pipedInputStream0.available());
      assertNotNull(pipedInputStream0);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string1, string2, (InputStream) pipedInputStream0);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertEquals(0, pipedInputStream0.available());
      assertEquals("R", httpConnection_KeyVal0.value());
      assertEquals("Aj|xU0NT6H ", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertNotNull(httpConnection_KeyVal0);
      
      String string3 = "Request must not be null";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.key(string3);
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertEquals(0, pipedInputStream0.available());
      assertEquals("R", httpConnection_KeyVal0.value());
      assertEquals("Request must not be null", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("Request must not be null", httpConnection_KeyVal1.key());
      assertEquals("R", httpConnection_KeyVal1.value());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertNotNull(httpConnection_KeyVal1);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal1);
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("R", httpConnection_KeyVal0.value());
      assertEquals("Request must not be null", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("Request must not be null", httpConnection_KeyVal1.key());
      assertEquals("R", httpConnection_KeyVal1.value());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.POST, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.isValidateSSLCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNotNull(httpConnection_Request2);
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      assertFalse(boolean0);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.isValidateSSLCertificates());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateSSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response0);
        fail("Expecting exception: UnknownServiceException");
      
      } catch(UnknownServiceException e) {
         //
         // protocol doesn't support output
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test76()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      
      int int0 = (-1941178012);
      int int1 = 613;
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(int1);
      assertFalse(int1 == int0);
      assertFalse(byteBuffer0.hasArray());
      assertEquals(0, byteBuffer0.position());
      assertTrue(byteBuffer0.isDirect());
      assertEquals(613, byteBuffer0.capacity());
      assertEquals(613, byteBuffer0.limit());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals(613, byteBuffer0.remaining());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals("java.nio.DirectByteBuffer[pos=0 lim=613 cap=613]", byteBuffer0.toString());
      assertNotNull(byteBuffer0);
      
      Connection.Method connection_Method0 = Connection.Method.GET;
      httpConnection_Response0.method = connection_Method0;
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      
      httpConnection_Response0.byteData = byteBuffer0;
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertFalse(byteBuffer0.hasArray());
      assertEquals(0, byteBuffer0.position());
      assertTrue(byteBuffer0.isDirect());
      assertEquals(613, byteBuffer0.capacity());
      assertEquals(613, byteBuffer0.limit());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals(613, byteBuffer0.remaining());
      assertTrue(byteBuffer0.hasRemaining());
      assertEquals("java.nio.DirectByteBuffer[pos=0 lim=613 cap=613]", byteBuffer0.toString());
      assertEquals("java.nio.DirectByteBuffer[pos=0 lim=613 cap=613]", httpConnection_Response0.byteData.toString());
      assertEquals(0, httpConnection_Response0.byteData.position());
      assertFalse(httpConnection_Response0.byteData.isReadOnly());
      assertTrue(httpConnection_Response0.byteData.hasRemaining());
      assertEquals(613, httpConnection_Response0.byteData.remaining());
      assertEquals(613, httpConnection_Response0.byteData.capacity());
      assertFalse(httpConnection_Response0.byteData.hasArray());
      assertEquals(613, httpConnection_Response0.byteData.limit());
      assertTrue(httpConnection_Response0.byteData.isDirect());
      
      String string0 = "; boundary=";
      httpConnection_Response0.charset = string0;
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals("; boundary=", httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      
      String string1 = httpConnection_Response0.charset();
      assertSame(string1, string0);
      assertEquals("; boundary=", string1);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals("; boundary=", httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(string1);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals("; boundary=", httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertNotNull(httpConnection_Response1);
      
      String string2 = httpConnection_Response1.charset();
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals("; boundary=", httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertNull(string2);
      
      // Undeclared exception!
      try { 
        httpConnection_Response1.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }
}
