/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 02 16:40:39 GMT 2021
 */

package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import java.net.URLStreamHandler;
import java.net.UnknownServiceException;
import java.nio.ByteBuffer;
import java.nio.charset.UnsupportedCharsetException;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.function.BiFunction;
import java.util.function.Consumer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.jsoup.Connection;
import org.jsoup.helper.HttpConnection;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.FormElement;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HttpConnection$Response_ESTest extends HttpConnection$Response_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(httpConnection_Request0.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      
      boolean boolean0 = true;
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.followRedirects(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      
      String string0 = "value";
      boolean boolean1 = false;
      int int0 = 303;
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.cookie(string0, string0);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertNotNull(httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL(string0, string0, int0, string0, uRLStreamHandler0);
      assertNotNull(uRL0);
      assertEquals("value", uRL0.getFile());
      assertEquals("value", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals(0, uRL0.getDefaultPort());
      assertEquals("value:303", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals(303, uRL0.getPort());
      assertEquals("value", uRL0.getPath());
      assertNull(uRL0.toExternalForm());
      assertNull(uRL0.toString());
      assertEquals("value", uRL0.getProtocol());
      
      httpConnection_Request0.url = uRL0;
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals("value", uRL0.getFile());
      assertEquals("value", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals(0, uRL0.getDefaultPort());
      assertEquals("value:303", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals(303, uRL0.getPort());
      assertEquals("value", uRL0.getPath());
      assertNull(uRL0.toExternalForm());
      assertNull(uRL0.toString());
      assertEquals("value", uRL0.getProtocol());
      assertNull(httpConnection_Request0.url.toExternalForm());
      assertEquals("value", httpConnection_Request0.url.getPath());
      assertEquals("value:303", httpConnection_Request0.url.getAuthority());
      assertEquals("value", httpConnection_Request0.url.getProtocol());
      assertEquals("value", httpConnection_Request0.url.getFile());
      assertNull(httpConnection_Request0.url.toString());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals(0, httpConnection_Request0.url.getDefaultPort());
      assertEquals("value", httpConnection_Request0.url.getHost());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals(303, httpConnection_Request0.url.getPort());
      assertNull(httpConnection_Request0.url.getQuery());
      
      String string1 = HttpConnection.Response.getRequestCookieString(httpConnection_Request0);
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string1, string0);
      assertEquals("value=value", string1);
      assertNotNull(string1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Only http & https protocols supported
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      
      String string0 = "(l9DsiZ!r.|@zbB7?0";
      String string1 = httpConnection_Request0.cookie(string0);
      assertNull(string1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      
      String string2 = "ScriptDataEscapeStart";
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      
      httpConnection_Request0.url = uRL0;
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertNull(httpConnection_Request0.url.getQuery());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // HTTP error fetching URL
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      
      String string0 = "(l9jsiZ/r2|@zbB7?0";
      String string1 = "x=";
      String string2 = httpConnection_Request0.cookie(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      assertNull(string2);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      
      String string3 = "UTF-8";
      int int0 = 439;
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertTrue(boolean0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(439, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(439, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      
      httpConnection_Request0.url = uRL0;
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(httpConnection_Request0.url.getQuery());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.ignoreContentType(httpConnection_Request1.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(439, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(439, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(439, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(439, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(439, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(439, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(439, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(439, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      
      String string4 = "z2 /ed}neC";
      HttpConnection.Response httpConnection_Response1 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotNull(httpConnection_Response1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Response1.req);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotNull(httpURLConnection0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpURLConnection0.getContentType());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection0.toString());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals(439, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getDoOutput());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals(439, httpURLConnection0.getConnectTimeout());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      String string5 = httpConnection_Response1.charset();
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNull(string5);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      String string6 = httpConnection_Response1.contentType();
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNull(string6);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      Document document0 = httpConnection_Response1.parse();
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotNull(document0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals("UTF-8", httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(1, document0.childNodeSize());
      assertEquals("#document", document0.nodeName());
      assertFalse(document0.isBlock());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample?", document0.baseUri());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample?", document0.location());
      assertEquals("#root", document0.tagName());
      assertEquals(0, document0.siblingIndex());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request0.followRedirects(httpConnection_Response0.executed);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotNull(httpConnection_Request3);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(439, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(439, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Response httpConnection_Response2 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request3);
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotNull(httpConnection_Response2);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(439, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertNull(httpConnection_Response2.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.charset());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(439, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(0, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      String string7 = httpConnection_Response1.body();
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(string7.equals((Object)string4));
      assertTrue(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string1));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(string7, string4);
      assertNotSame(string7, string3);
      assertNotSame(string7, string0);
      assertNotSame(string7, string1);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertEquals("UTF-8", string7);
      assertNotNull(string7);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals("UTF-8", httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      String string8 = httpConnection_Response0.charset();
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNull(string8);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      String string9 = httpConnection_Response1.statusMessage();
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(string9.equals((Object)string0));
      assertFalse(string9.equals((Object)string1));
      assertFalse(string9.equals((Object)string7));
      assertFalse(string9.equals((Object)string3));
      assertFalse(string9.equals((Object)string4));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(string9, string0);
      assertNotSame(string9, string1);
      assertNotSame(string9, string7);
      assertNotSame(string9, string3);
      assertNotSame(string9, string4);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertEquals("OK", string9);
      assertNotNull(string9);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals("UTF-8", httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      byte[] byteArray0 = httpConnection_Response1.bodyAsBytes();
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotNull(byteArray0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals("UTF-8", httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(5, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)85, (byte)84, (byte)70, (byte)45, (byte)56}, byteArray0);
      
      String string10 = httpConnection_Response1.charset();
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(string10.equals((Object)string9));
      assertFalse(string10.equals((Object)string4));
      assertFalse(string10.equals((Object)string1));
      assertFalse(string10.equals((Object)string0));
      assertTrue(string10.equals((Object)string7));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(string10, string9);
      assertNotSame(string10, string4);
      assertNotSame(string10, string1);
      assertNotSame(string10, string0);
      assertNotSame(string10, string7);
      assertSame(string10, string3);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertEquals("UTF-8", string10);
      assertNotNull(string10);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals("UTF-8", httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      
      String string0 = "x=";
      String string1 = "UTF-8";
      int int0 = 439;
      String string2 = "`|f=Uoo4(Hw";
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertTrue(boolean0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      
      httpConnection_Request0.url = uRL0;
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertNull(httpConnection_Request0.url.getRef());
      assertNull(httpConnection_Request0.url.getQuery());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Response httpConnection_Response1 = (HttpConnection.Response)httpConnection_Response0.cookie(string2, string0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request0);
      assertNotNull(httpURLConnection0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals(3000, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals(3000, httpURLConnection0.getConnectTimeout());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertNull(httpURLConnection0.getContentType());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection0.toString());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      
      httpConnection_Response0.setupFromConnection(httpURLConnection0, httpConnection_Response0);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals(3000, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals(3000, httpURLConnection0.getConnectTimeout());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertNull(httpURLConnection0.getContentType());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection0.toString());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Response httpConnection_Response2 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response0);
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotNull(httpConnection_Response2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.charset());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      
      HttpURLConnection httpURLConnection1 = HttpConnection.Response.createConnection(httpConnection_Response2.req);
      assertFalse(httpURLConnection1.equals((Object)httpURLConnection0));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertNotSame(httpURLConnection1, httpURLConnection0);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotNull(httpURLConnection1);
      assertFalse(httpURLConnection1.usingProxy());
      assertFalse(httpURLConnection1.getInstanceFollowRedirects());
      assertTrue(httpURLConnection1.getFollowRedirects());
      assertTrue(httpURLConnection1.getDoInput());
      assertNull(httpURLConnection1.getContentType());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection1.toString());
      assertNull(httpURLConnection1.getContentEncoding());
      assertEquals((-1), httpURLConnection1.getContentLength());
      assertEquals(0L, httpURLConnection1.getIfModifiedSince());
      assertTrue(httpURLConnection1.getDefaultUseCaches());
      assertFalse(httpURLConnection1.getDoOutput());
      assertEquals("GET", httpURLConnection1.getRequestMethod());
      assertFalse(httpURLConnection1.getDefaultAllowUserInteraction());
      assertEquals(3000, httpURLConnection1.getReadTimeout());
      assertTrue(httpURLConnection1.getUseCaches());
      assertFalse(httpURLConnection1.getAllowUserInteraction());
      assertEquals(3000, httpURLConnection1.getConnectTimeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.charset());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      
      HttpConnection.Response httpConnection_Response3 = (HttpConnection.Response)httpConnection_Response0.removeHeader(httpConnection_Response2.statusMessage);
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertSame(httpConnection_Response3, httpConnection_Response1);
      assertSame(httpConnection_Response3, httpConnection_Response0);
      assertNotSame(httpConnection_Response3, httpConnection_Response2);
      assertSame(httpConnection_Response0, httpConnection_Response3);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotNull(httpConnection_Response3);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_Response3.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response3.method());
      assertNull(httpConnection_Response3.contentType());
      assertEquals("OK", httpConnection_Response3.statusMessage());
      assertEquals((-1), httpConnection_Response3.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.charset());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals((-1), httpConnection_Response3.statusCode);
      assertFalse(httpConnection_Response3.executed);
      assertEquals(0, httpConnection_Response3.numRedirects);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      
      String string3 = httpConnection_Response2.contentType();
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertSame(httpConnection_Response0, httpConnection_Response3);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNull(string3);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.charset());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      
      String string4 = httpConnection_Response0.statusMessage();
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response2));
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertSame(httpConnection_Response0, httpConnection_Response3);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertEquals("OK", string4);
      assertNotNull(string4);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      boolean boolean0 = false;
      httpConnection_Response0.executed = boolean0;
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      EvoSuiteFile evoSuiteFile0 = null;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      String string0 = "&#x";
      boolean boolean1 = linkedList0.add(string0);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(1, linkedList0.size());
      assertTrue(linkedList0.contains(string0));
      
      String string1 = "'73p";
      List<String> list0 = hashMap0.put(string1, linkedList0);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      assertNull(list0);
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertEquals(1, linkedList0.size());
      assertFalse(linkedList0.contains(string1));
      assertTrue(linkedList0.contains(string0));
      
      List<String> list1 = hashMap0.put(httpConnection_Response1.contentType, linkedList0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNull(list1);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertFalse(hashMap0.isEmpty());
      assertEquals(2, hashMap0.size());
      assertEquals(1, linkedList0.size());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(linkedList0.contains(string1));
      assertTrue(linkedList0.contains(string0));
      
      httpConnection_Response1.processResponseHeaders(hashMap0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertFalse(hashMap0.isEmpty());
      assertEquals(2, hashMap0.size());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      
      boolean boolean2 = FileSystemHandling.appendLineToFile(evoSuiteFile0, httpConnection_Response1.statusMessage);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertFalse(boolean2);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      
      // Undeclared exception!
      try { 
        httpConnection_Response1.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      LinkedList<Connection.KeyVal> linkedList0 = new LinkedList<Connection.KeyVal>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNotNull(httpConnection_KeyVal0);
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      
      String string0 = "tr";
      String string1 = "$gZwVn2z/U";
      httpConnection_KeyVal0.value = string1;
      assertEquals("$gZwVn2z/U", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      
      boolean boolean0 = linkedList0.add((Connection.KeyVal) httpConnection_KeyVal0);
      assertTrue(boolean0);
      assertEquals(1, linkedList0.size());
      assertEquals("$gZwVn2z/U", httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.key(string0);
      assertFalse(string0.equals((Object)string1));
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string0, string1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertNotNull(httpConnection_KeyVal1);
      assertEquals("tr", httpConnection_KeyVal0.key());
      assertEquals("$gZwVn2z/U", httpConnection_KeyVal0.value());
      assertEquals("tr", httpConnection_KeyVal1.key());
      assertEquals("$gZwVn2z/U", httpConnection_KeyVal1.value());
      
      boolean boolean1 = linkedList0.add((Connection.KeyVal) httpConnection_KeyVal0);
      assertTrue(boolean1 == boolean0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertTrue(boolean1);
      assertEquals(2, linkedList0.size());
      assertEquals("tr", httpConnection_KeyVal0.key());
      assertEquals("$gZwVn2z/U", httpConnection_KeyVal0.value());
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      pipedOutputStream0.close();
      try { 
        HttpConnection.Response.writePost(linkedList0, pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      String string0 = "http";
      String string1 = "https";
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(httpConnection_Request0.parser);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.ignoreContentType(httpConnection_Request0.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      
      httpConnection_Request1.url = uRL0;
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("some", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getHost());
      assertEquals((-1), httpConnection_Request1.url.getDefaultPort());
      assertEquals("file", httpConnection_Request1.url.getProtocol());
      assertEquals("some", httpConnection_Request1.url.getAuthority());
      assertNull(httpConnection_Request1.url.getRef());
      assertEquals("some", httpConnection_Request1.url.getHost());
      assertNull(httpConnection_Request1.url.getQuery());
      assertEquals((-1), httpConnection_Request1.url.getPort());
      assertNull(httpConnection_Request1.url.getUserInfo());
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request2);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Only http & https protocols supported
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      
      String string0 = "http";
      String string1 = "https";
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotNull(httpConnection_KeyVal0);
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.followRedirects(httpConnection_Request1.followRedirects);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request1.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertNotNull(httpConnection_Request3);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      
      URL uRL0 = MockURL.URL(httpConnection_KeyVal0.key, httpConnection_KeyVal0.value, httpConnection_Request0.maxBodySizeBytes, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotNull(uRL0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("http", uRL0.getPath());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("https:1048576", uRL0.getAuthority());
      assertEquals("http://https:1048576http", uRL0.toExternalForm());
      assertEquals("http://https:1048576http", uRL0.toString());
      assertEquals("https", uRL0.getHost());
      assertEquals("http", uRL0.getFile());
      assertEquals(1048576, uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      
      httpConnection_Request1.url = uRL0;
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("http", uRL0.getPath());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("https:1048576", uRL0.getAuthority());
      assertEquals("http://https:1048576http", uRL0.toExternalForm());
      assertEquals("http://https:1048576http", uRL0.toString());
      assertEquals("https", uRL0.getHost());
      assertEquals("http", uRL0.getFile());
      assertEquals(1048576, uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", httpConnection_Request1.url.getPath());
      assertEquals("http://https:1048576http", httpConnection_Request1.url.toExternalForm());
      assertEquals("http://https:1048576http", httpConnection_Request1.url.toString());
      assertNull(httpConnection_Request1.url.getUserInfo());
      assertEquals(1048576, httpConnection_Request1.url.getPort());
      assertEquals("https:1048576", httpConnection_Request1.url.getAuthority());
      assertEquals("https", httpConnection_Request1.url.getHost());
      assertNull(httpConnection_Request1.url.getQuery());
      assertEquals("http", httpConnection_Request1.url.getProtocol());
      assertNull(httpConnection_Request1.url.getRef());
      assertEquals((-1), httpConnection_Request1.url.getDefaultPort());
      assertEquals("http", httpConnection_Request1.url.getFile());
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // For input string: \"1048576http\"
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      
      String string0 = "http";
      String string1 = "https";
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal(string1, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(httpConnection_KeyVal0);
      assertEquals("https", httpConnection_KeyVal0.key());
      assertEquals("http", httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(httpConnection_Request0.parser);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      
      URL uRL0 = MockURL.URL(httpConnection_KeyVal0.key, httpConnection_KeyVal0.value, httpConnection_Request0.maxBodySizeBytes, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotNull(uRL0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("https", httpConnection_KeyVal0.key());
      assertEquals("http", httpConnection_KeyVal0.value());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals(1048576, uRL0.getPort());
      assertEquals("https://http:1048576http", uRL0.toExternalForm());
      assertEquals("https://http:1048576http", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals("http", uRL0.getHost());
      assertEquals("http", uRL0.getPath());
      assertEquals("http:1048576", uRL0.getAuthority());
      assertEquals("https", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getFile());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      
      httpConnection_Request1.url = uRL0;
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("https", httpConnection_KeyVal0.key());
      assertEquals("http", httpConnection_KeyVal0.value());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals(1048576, uRL0.getPort());
      assertEquals("https://http:1048576http", uRL0.toExternalForm());
      assertEquals("https://http:1048576http", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals("http", uRL0.getHost());
      assertEquals("http", uRL0.getPath());
      assertEquals("http:1048576", uRL0.getAuthority());
      assertEquals("https", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getFile());
      assertEquals((-1), httpConnection_Request1.url.getDefaultPort());
      assertEquals("http", httpConnection_Request1.url.getHost());
      assertEquals("http:1048576", httpConnection_Request1.url.getAuthority());
      assertEquals("https", httpConnection_Request1.url.getProtocol());
      assertNull(httpConnection_Request1.url.getRef());
      assertEquals("https://http:1048576http", httpConnection_Request1.url.toExternalForm());
      assertEquals("http", httpConnection_Request1.url.getPath());
      assertNull(httpConnection_Request1.url.getQuery());
      assertEquals("https://http:1048576http", httpConnection_Request1.url.toString());
      assertEquals("http", httpConnection_Request1.url.getFile());
      assertEquals(1048576, httpConnection_Request1.url.getPort());
      assertNull(httpConnection_Request1.url.getUserInfo());
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // HTTP error fetching URL
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      String string0 = "filOFe";
      String string1 = "TRip\\B1](";
      LinkedList<String> linkedList0 = new LinkedList<String>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      assertFalse(linkedList0.contains(string1));
      
      String string2 = linkedList0.pollLast();
      assertNull(string2);
      assertEquals(0, linkedList0.size());
      assertFalse(linkedList0.contains(string1));
      
      List<String> list0 = hashMap0.put(string1, linkedList0);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      assertNull(list0);
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertEquals(0, linkedList0.size());
      assertFalse(linkedList0.contains(string1));
      
      String string3 = "body";
      LinkedList<String> linkedList1 = new LinkedList<String>();
      assertTrue(linkedList1.equals((Object)linkedList0));
      assertNotNull(linkedList1);
      assertEquals(0, linkedList1.size());
      assertFalse(linkedList1.contains(string3));
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      String string4 = httpConnection_Response0.charset();
      assertNull(string4);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      int int0 = httpConnection_Response0.statusCode();
      assertEquals(0, int0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.getRequestCookieString(httpConnection_Response0.req);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      String string0 = "";
      String string1 = "o}690ziEJ\"A";
      File file0 = null;
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Response httpConnection_Response1 = (HttpConnection.Response)httpConnection_Response0.cookie(string1, string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      httpConnection_Response1.numRedirects = HttpConnection.Response.MAX_REDIRECTS;
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      
      httpConnection_Response0.byteData = httpConnection_Response1.byteData;
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      
      HttpConnection.Response httpConnection_Response2 = null;
      try {
        httpConnection_Response2 = new HttpConnection.Response(httpConnection_Response0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Too many redirects occurred trying to load URL null
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      boolean boolean0 = true;
      httpConnection_Response0.executed = boolean0;
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CharsetDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      String string0 = "http";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.cookie(string0, string0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      
      String string1 = "https";
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotNull(httpConnection_KeyVal0);
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request2.ignoreContentType(httpConnection_Request0.ignoreContentType);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertNotNull(httpConnection_Request3);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      
      Connection.Method connection_Method0 = Connection.Method.POST;
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request2.method(connection_Method0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertNotNull(httpConnection_Request4);
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.POST, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.POST, httpConnection_Request4.method());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      
      URL uRL0 = MockURL.URL(httpConnection_KeyVal0.key, httpConnection_KeyVal0.value, httpConnection_Request0.maxBodySizeBytes, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotNull(uRL0);
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertNull(uRL0.getQuery());
      assertEquals("http", uRL0.getPath());
      assertEquals("http://https:1048576http", uRL0.toExternalForm());
      assertEquals("https", uRL0.getHost());
      assertEquals("http", uRL0.getFile());
      assertEquals(1048576, uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://https:1048576http", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("https:1048576", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      httpConnection_Request2.url = uRL0;
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.POST, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertNull(uRL0.getQuery());
      assertEquals("http", uRL0.getPath());
      assertEquals("http://https:1048576http", uRL0.toExternalForm());
      assertEquals("https", uRL0.getHost());
      assertEquals("http", uRL0.getFile());
      assertEquals(1048576, uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://https:1048576http", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("https:1048576", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertNull(httpConnection_Request2.url.getQuery());
      assertEquals("http", httpConnection_Request2.url.getPath());
      assertEquals("http://https:1048576http", httpConnection_Request2.url.toString());
      assertEquals((-1), httpConnection_Request2.url.getDefaultPort());
      assertNull(httpConnection_Request2.url.getRef());
      assertEquals("https:1048576", httpConnection_Request2.url.getAuthority());
      assertEquals("http", httpConnection_Request2.url.getFile());
      assertEquals(1048576, httpConnection_Request2.url.getPort());
      assertEquals("http", httpConnection_Request2.url.getProtocol());
      assertNull(httpConnection_Request2.url.getUserInfo());
      assertEquals("http://https:1048576http", httpConnection_Request2.url.toExternalForm());
      assertEquals("https", httpConnection_Request2.url.getHost());
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request3);
        fail("Expecting exception: UnknownServiceException");
      
      } catch(UnknownServiceException e) {
         //
         // protocol doesn't support output
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute(httpConnection_Response0.req);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      boolean boolean0 = false;
      HttpConnection.Response httpConnection_Response0 = null;
      String string0 = "";
      int int0 = 0;
      String string1 = "";
      LinkedHashSet<Connection.KeyVal> linkedHashSet0 = new LinkedHashSet<Connection.KeyVal>();
      assertNotNull(linkedHashSet0);
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      HttpConnection.Response.writePost(linkedHashSet0, pipedOutputStream0);
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      String string2 = HttpConnection.Response.getRequestCookieString(httpConnection_Request0);
      assertTrue(string2.equals((Object)string1));
      assertTrue(string2.equals((Object)string0));
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertEquals("", string2);
      assertNotNull(string2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      boolean boolean1 = true;
      String string3 = HttpConnection.Response.getRequestCookieString(httpConnection_Request0);
      assertTrue(string3.equals((Object)string2));
      assertTrue(string3.equals((Object)string1));
      assertTrue(string3.equals((Object)string0));
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertEquals("", string3);
      assertNotNull(string3);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      boolean boolean2 = false;
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      assertTrue(linkedList1.equals((Object)linkedList0));
      assertNotNull(linkedList1);
      assertEquals(0, linkedList1.size());
      
      Locale locale0 = Locale.ITALIAN;
      assertNotNull(locale0);
      assertEquals("", locale0.getVariant());
      assertEquals("", locale0.getCountry());
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("it", locale0.toString());
      assertEquals("", locale0.getISO3Country());
      assertEquals("it", locale0.getLanguage());
      
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      assertNotNull(set0);
      assertEquals("", locale0.getVariant());
      assertEquals("", locale0.getCountry());
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("it", locale0.toString());
      assertEquals("", locale0.getISO3Country());
      assertEquals("it", locale0.getLanguage());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertFalse(set0.contains(string1));
      
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList1, (Collection<String>) set0);
      assertTrue(linkedList1.equals((Object)linkedList0));
      assertNotSame(linkedList1, linkedList0);
      assertNotNull(list0);
      assertEquals("", locale0.getVariant());
      assertEquals("", locale0.getCountry());
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("it", locale0.toString());
      assertEquals("", locale0.getISO3Country());
      assertEquals("it", locale0.getLanguage());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      assertEquals(0, linkedList1.size());
      assertFalse(set0.contains(string1));
      assertFalse(list0.contains(string1));
      
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list0);
      assertTrue(list1.equals((Object)list0));
      assertTrue(linkedList0.equals((Object)linkedList1));
      assertTrue(linkedList1.equals((Object)linkedList0));
      assertNotSame(list0, list1);
      assertNotSame(list1, list0);
      assertNotSame(linkedList0, linkedList1);
      assertNotSame(linkedList1, linkedList0);
      assertNotNull(list1);
      assertEquals("", locale0.getVariant());
      assertEquals("", locale0.getCountry());
      assertEquals("ita", locale0.getISO3Language());
      assertEquals("it", locale0.toString());
      assertEquals("", locale0.getISO3Country());
      assertEquals("it", locale0.getLanguage());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      assertTrue(list1.isEmpty());
      assertEquals(0, list1.size());
      assertEquals(0, linkedList0.size());
      assertEquals(0, linkedList1.size());
      assertFalse(set0.contains(string1));
      assertFalse(list0.contains(string1));
      assertFalse(list1.contains(string1));
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      
      HttpURLConnection httpURLConnection0 = null;
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute(httpConnection_Response0.req, httpConnection_Response0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      LinkedList<Connection.KeyVal> linkedList0 = new LinkedList<Connection.KeyVal>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      String string0 = "";
      MockFile mockFile0 = new MockFile(string0);
      assertNotNull(mockFile0);
      
      String string1 = "|xB";
      MockFile mockFile1 = new MockFile(mockFile0, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(mockFile1.equals((Object)mockFile0));
      assertNotNull(mockFile1);
      
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(mockFile0.equals((Object)mockFile1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(mockFile1.equals((Object)mockFile0));
      assertNotNull(mockPrintStream0);
      
      mockPrintStream0.flush();
      assertFalse(string0.equals((Object)string1));
      assertFalse(mockFile0.equals((Object)mockFile1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(mockFile1.equals((Object)mockFile0));
      assertNotSame(string0, string1);
      assertNotSame(mockFile0, mockFile1);
      assertNotSame(string1, string0);
      assertNotSame(mockFile1, mockFile0);
      assertFalse(mockFile0.isFile());
      assertTrue(mockFile0.canExecute());
      assertTrue(mockFile0.canRead());
      assertEquals("", mockFile0.getName());
      assertFalse(mockFile0.isHidden());
      assertTrue(mockFile0.isDirectory());
      assertEquals(0L, mockFile0.getTotalSpace());
      assertEquals(0L, mockFile0.getUsableSpace());
      assertNull(mockFile0.getParent());
      assertEquals(1392409281320L, mockFile0.lastModified());
      assertTrue(mockFile0.exists());
      assertEquals(0L, mockFile0.getFreeSpace());
      assertTrue(mockFile0.canWrite());
      assertFalse(mockFile0.isAbsolute());
      assertEquals(0L, mockFile0.length());
      assertEquals("", mockFile0.toString());
      assertTrue(mockFile1.exists());
      assertEquals(0L, mockFile1.getFreeSpace());
      assertEquals(0L, mockFile1.length());
      assertEquals(0L, mockFile1.getTotalSpace());
      assertFalse(mockFile1.isDirectory());
      assertEquals(1392409281320L, mockFile1.lastModified());
      assertFalse(mockFile1.isHidden());
      assertEquals(0L, mockFile1.getUsableSpace());
      assertTrue(mockFile1.canRead());
      assertTrue(mockFile1.isFile());
      assertTrue(mockFile1.canWrite());
      assertTrue(mockFile1.isAbsolute());
      assertEquals("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/jsoup/3f7d2c71dbbbb289c684f339874eed8ac2747fa0/evosuite_5", mockFile1.getParent());
      assertEquals("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/jsoup/3f7d2c71dbbbb289c684f339874eed8ac2747fa0/evosuite_5/|xB", mockFile1.toString());
      assertTrue(mockFile1.canExecute());
      assertEquals("|xB", mockFile1.getName());
      
      HttpConnection.Response.writePost(linkedList0, mockPrintStream0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(mockFile0.equals((Object)mockFile1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(mockFile1.equals((Object)mockFile0));
      assertNotSame(string0, string1);
      assertNotSame(mockFile0, mockFile1);
      assertNotSame(string1, string0);
      assertNotSame(mockFile1, mockFile0);
      assertEquals(0, linkedList0.size());
      assertFalse(mockFile0.isFile());
      assertTrue(mockFile0.canExecute());
      assertTrue(mockFile0.canRead());
      assertEquals("", mockFile0.getName());
      assertFalse(mockFile0.isHidden());
      assertTrue(mockFile0.isDirectory());
      assertEquals(0L, mockFile0.getTotalSpace());
      assertEquals(0L, mockFile0.getUsableSpace());
      assertNull(mockFile0.getParent());
      assertEquals(1392409281320L, mockFile0.lastModified());
      assertTrue(mockFile0.exists());
      assertEquals(0L, mockFile0.getFreeSpace());
      assertTrue(mockFile0.canWrite());
      assertFalse(mockFile0.isAbsolute());
      assertEquals(0L, mockFile0.length());
      assertEquals("", mockFile0.toString());
      assertTrue(mockFile1.exists());
      assertEquals(0L, mockFile1.getFreeSpace());
      assertEquals(0L, mockFile1.length());
      assertEquals(0L, mockFile1.getTotalSpace());
      assertFalse(mockFile1.isDirectory());
      assertEquals(1392409281320L, mockFile1.lastModified());
      assertFalse(mockFile1.isHidden());
      assertEquals(0L, mockFile1.getUsableSpace());
      assertTrue(mockFile1.canRead());
      assertTrue(mockFile1.isFile());
      assertTrue(mockFile1.canWrite());
      assertTrue(mockFile1.isAbsolute());
      assertEquals("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/jsoup/3f7d2c71dbbbb289c684f339874eed8ac2747fa0/evosuite_5", mockFile1.getParent());
      assertEquals("/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/jsoup/3f7d2c71dbbbb289c684f339874eed8ac2747fa0/evosuite_5/|xB", mockFile1.toString());
      assertTrue(mockFile1.canExecute());
      assertEquals("|xB", mockFile1.getName());
      
      Connection.Request connection_Request0 = null;
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute(connection_Request0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      
      int int0 = httpConnection_Response0.statusCode();
      assertEquals(0, int0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      
      String string0 = "";
      Map.Entry<String, String> map_Entry0 = httpConnection_Response0.scanHeaders(string0);
      assertNull(map_Entry0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Request httpConnection_Request1 = null;
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      Connection.Request connection_Request0 = null;
      // Undeclared exception!
      try { 
        HttpConnection.Response.serialiseRequestUrl(connection_Request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNotNull(httpConnection_KeyVal0);
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      
      Connection.Method connection_Method0 = Connection.Method.POST;
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.method(connection_Method0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      
      String string0 = null;
      String string1 = HttpConnection.Response.getRequestCookieString(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertEquals("", string1);
      assertNotNull(string1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      String string2 = HttpConnection.Response.getRequestCookieString(httpConnection_Request1);
      assertTrue(string2.equals((Object)string1));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(string2, string1);
      assertEquals("", string2);
      assertNotNull(string2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.serialiseRequestUrl(httpConnection_Request2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      Parser parser0 = null;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      
      String string0 = "~+@l&";
      String string1 = "UTF-8";
      String string2 = httpConnection_Request0.cookie(string1);
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string1, string0);
      assertNull(string2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      int int0 = (-304);
      String string3 = "x=";
      int int1 = 439;
      String string4 = "`|f=Uoo4(Hw";
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL(string3, string0, int1, string4, uRLStreamHandler0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string0));
      assertFalse(int1 == int0);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string3, string1);
      assertNotSame(string3, string4);
      assertNotSame(string3, string0);
      assertNotSame(string4, string0);
      assertNotSame(string4, string3);
      assertNotSame(string4, string1);
      assertNotNull(uRL0);
      assertEquals(0, uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals(439, uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("`|f=Uoo4(Hw", uRL0.getPath());
      assertNull(uRL0.toString());
      assertEquals("~+@l&", uRL0.getHost());
      assertNull(uRL0.toExternalForm());
      assertEquals("`|f=Uoo4(Hw", uRL0.getFile());
      assertNull(uRL0.getQuery());
      assertEquals("~+@l&:439", uRL0.getAuthority());
      assertEquals("x=", uRL0.getProtocol());
      
      httpConnection_Request0.url = uRL0;
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(0, uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals(439, uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("`|f=Uoo4(Hw", uRL0.getPath());
      assertNull(uRL0.toString());
      assertEquals("~+@l&", uRL0.getHost());
      assertNull(uRL0.toExternalForm());
      assertEquals("`|f=Uoo4(Hw", uRL0.getFile());
      assertNull(uRL0.getQuery());
      assertEquals("~+@l&:439", uRL0.getAuthority());
      assertEquals("x=", uRL0.getProtocol());
      assertNull(httpConnection_Request0.url.toString());
      assertEquals("~+@l&", httpConnection_Request0.url.getHost());
      assertNull(httpConnection_Request0.url.toExternalForm());
      assertEquals("~+@l&:439", httpConnection_Request0.url.getAuthority());
      assertEquals("`|f=Uoo4(Hw", httpConnection_Request0.url.getFile());
      assertEquals(439, httpConnection_Request0.url.getPort());
      assertEquals("x=", httpConnection_Request0.url.getProtocol());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals(0, httpConnection_Request0.url.getDefaultPort());
      assertEquals("`|f=Uoo4(Hw", httpConnection_Request0.url.getPath());
      assertNull(httpConnection_Request0.url.getQuery());
      
      httpConnection_Request1.url = httpConnection_Request0.url;
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals(439, uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("`|f=Uoo4(Hw", uRL0.getPath());
      assertNull(uRL0.toString());
      assertEquals("~+@l&", uRL0.getHost());
      assertNull(uRL0.toExternalForm());
      assertEquals("`|f=Uoo4(Hw", uRL0.getFile());
      assertNull(uRL0.getQuery());
      assertEquals("~+@l&:439", uRL0.getAuthority());
      assertEquals("x=", uRL0.getProtocol());
      assertNull(httpConnection_Request0.url.toString());
      assertEquals("~+@l&", httpConnection_Request0.url.getHost());
      assertNull(httpConnection_Request0.url.toExternalForm());
      assertEquals("~+@l&:439", httpConnection_Request0.url.getAuthority());
      assertEquals("`|f=Uoo4(Hw", httpConnection_Request0.url.getFile());
      assertEquals(439, httpConnection_Request0.url.getPort());
      assertEquals("x=", httpConnection_Request0.url.getProtocol());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals(0, httpConnection_Request0.url.getDefaultPort());
      assertEquals("`|f=Uoo4(Hw", httpConnection_Request0.url.getPath());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals(0, httpConnection_Request1.url.getDefaultPort());
      assertNull(httpConnection_Request1.url.getRef());
      assertEquals("`|f=Uoo4(Hw", httpConnection_Request1.url.getPath());
      assertEquals("x=", httpConnection_Request1.url.getProtocol());
      assertNull(httpConnection_Request1.url.getQuery());
      assertEquals("~+@l&:439", httpConnection_Request1.url.getAuthority());
      assertEquals("`|f=Uoo4(Hw", httpConnection_Request1.url.getFile());
      assertNull(httpConnection_Request1.url.toExternalForm());
      assertEquals("~+@l&", httpConnection_Request1.url.getHost());
      assertNull(httpConnection_Request1.url.getUserInfo());
      assertEquals(439, httpConnection_Request1.url.getPort());
      assertNull(httpConnection_Request1.url.toString());
      
      httpConnection_Request1.timeoutMilliseconds = int0;
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals((-304), httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals((-304), httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.removeHeader(string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals((-304), httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals((-304), httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals((-304), httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals((-304), httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals((-304), httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals((-304), httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      
      try { 
        HttpConnection.Response.serialiseRequestUrl(httpConnection_Request1);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: x=://~+@l&:439`|f=Uoo4(Hw?
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      
      Connection.Request connection_Request0 = httpConnection_Response0.req;
      assertNull(connection_Request0);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      
      int int0 = 0;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.ignoreContentType(httpConnection_Request0.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(0, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(0, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      
      HttpConnection.Response httpConnection_Response0 = null;
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      String string0 = httpConnection_Response0.contentType();
      assertNull(string0);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.parse();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before parsing response
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      
      String string0 = "J/q";
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string0);
      assertNotNull(httpConnection_KeyVal0);
      assertEquals("J/q", httpConnection_KeyVal0.value());
      assertEquals("J/q", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("J/q", httpConnection_KeyVal0.value());
      assertEquals("J/q", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      
      int int0 = 54;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(int0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertEquals(54, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("J/q", httpConnection_KeyVal0.value());
      assertEquals("J/q", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(54, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(54, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(54, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(54, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(54, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request2.followRedirects(httpConnection_Request0.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertNotNull(httpConnection_Request3);
      assertEquals(54, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("J/q", httpConnection_KeyVal0.value());
      assertEquals("J/q", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.followRedirects());
      assertEquals(54, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.followRedirects());
      assertEquals(54, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(54, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.followRedirects);
      assertEquals(54, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(54, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(54, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.followRedirects);
      assertEquals(54, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      
      String string1 = HttpConnection.Response.getRequestCookieString(httpConnection_Request3);
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string0, string1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertNotSame(string1, string0);
      assertEquals("", string1);
      assertNotNull(string1);
      assertEquals(54, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("J/q", httpConnection_KeyVal0.value());
      assertEquals("J/q", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.followRedirects());
      assertEquals(54, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.followRedirects());
      assertEquals(54, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(54, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.followRedirects);
      assertEquals(54, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(54, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(54, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.followRedirects);
      assertEquals(54, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      
      boolean boolean0 = false;
      httpConnection_Request2.followRedirects = httpConnection_Request1.ignoreHttpErrors;
      assertEquals(54, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("J/q", httpConnection_KeyVal0.value());
      assertEquals("J/q", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.followRedirects());
      assertEquals(54, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.followRedirects());
      assertEquals(54, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request2.ignoreContentType(boolean0);
      assertFalse(string0.equals((Object)string1));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string0, string1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertNotNull(httpConnection_Request4);
      assertEquals(54, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("J/q", httpConnection_KeyVal0.value());
      assertEquals("J/q", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.followRedirects());
      assertEquals(54, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.followRedirects());
      assertEquals(54, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.followRedirects());
      assertEquals(54, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.followRedirects);
      assertEquals(54, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(54, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(54, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(54, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.followRedirects);
      
      String string2 = HttpConnection.Response.getRequestCookieString(httpConnection_Request4);
      assertFalse(string0.equals((Object)string1));
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertEquals("", string2);
      assertNotNull(string2);
      assertEquals(54, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("J/q", httpConnection_KeyVal0.value());
      assertEquals("J/q", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.followRedirects());
      assertEquals(54, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.followRedirects());
      assertEquals(54, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.followRedirects());
      assertEquals(54, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.followRedirects);
      assertEquals(54, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(54, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(54, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(54, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.followRedirects);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      
      String string3 = httpConnection_Response0.charset();
      assertNull(string3);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      String string0 = "'87";
      boolean boolean0 = httpConnection_Response0.hasHeader(string0);
      assertFalse(boolean0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.parse();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before parsing response
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      
      boolean boolean0 = false;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreContentType(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.serialiseRequestUrl(httpConnection_Request1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      
      int int0 = 1;
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.maxBodySize(int0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.createConnection(httpConnection_Request2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.createConnection(httpConnection_Response0.req);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test33()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = null;
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Response httpConnection_Response2 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertNotNull(httpConnection_Response2);
      assertNull(httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.statusMessage());
      assertEquals(0, httpConnection_Response2.statusCode());
      assertNull(httpConnection_Response2.method());
      assertNull(httpConnection_Response2.charset());
      assertFalse(httpConnection_Response2.executed);
      assertEquals(0, httpConnection_Response2.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response2.numRedirects);
      
      boolean boolean0 = httpConnection_Response1.hasCookie(httpConnection_Response2.charset);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertFalse(boolean0);
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.statusMessage());
      assertEquals(0, httpConnection_Response2.statusCode());
      assertNull(httpConnection_Response2.method());
      assertNull(httpConnection_Response2.charset());
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response2.executed);
      assertEquals(0, httpConnection_Response2.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response2.numRedirects);
      
      Connection.Request connection_Request0 = httpConnection_Response2.req;
      assertNull(connection_Request0);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.createConnection(connection_Request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test34()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      boolean boolean0 = false;
      httpConnection_Response0.executed = boolean0;
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean1 = FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      LinkedList<String> linkedList0 = new LinkedList<String>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      String string0 = "&#x";
      boolean boolean2 = linkedList0.add(string0);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
      assertEquals(1, linkedList0.size());
      assertTrue(linkedList0.contains(string0));
      
      List<String> list0 = hashMap0.put(httpConnection_Response1.contentType, linkedList0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNull(list0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, linkedList0.size());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(linkedList0.contains(string0));
      
      httpConnection_Response1.processResponseHeaders(hashMap0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      String string1 = "basefont";
      boolean boolean3 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string1);
      assertFalse(string1.equals((Object)string0));
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertNotSame(string1, string0);
      assertFalse(boolean3);
      
      // Undeclared exception!
      try { 
        httpConnection_Response1.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test35()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      
      String string0 = "";
      Map.Entry<String, String> map_Entry0 = httpConnection_Response0.scanHeaders(string0);
      assertNull(map_Entry0);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      
      Map<String, String> map0 = httpConnection_Response0.headers();
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotNull(map0);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      
      httpConnection_Response1.headers = map0;
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertTrue(httpConnection_Response1.headers.isEmpty());
      assertEquals(0, httpConnection_Response1.headers.size());
      
      String string1 = "8L.L";
      int int0 = 6072;
      HttpConnection.Response.MAX_REDIRECTS = int0;
      httpConnection_Response0.statusMessage = string1;
      assertNull(httpConnection_Response0.method());
      assertEquals("8L.L", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      
      int int1 = httpConnection_Response1.statusCode();
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(int1 == int0);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals(0, int1);
      assertNull(httpConnection_Response0.method());
      assertEquals("8L.L", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(6072, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(6072, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      
      URL uRL0 = httpConnection_Response1.url();
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNull(uRL0);
      assertNull(httpConnection_Response0.method());
      assertEquals("8L.L", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(6072, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(6072, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      
      httpConnection_Response0.url = uRL0;
      assertNull(httpConnection_Response0.method());
      assertEquals("8L.L", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      
      String string2 = "";
      String string3 = "dfn";
      // Undeclared exception!
      try { 
        httpConnection_Response1.header(string2, string3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Header name must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test36()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      int int0 = 301;
      httpConnection_Response0.statusCode = int0;
      assertEquals(301, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      
      LinkedList<Connection.KeyVal> linkedList0 = new LinkedList<Connection.KeyVal>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNotNull(httpConnection_KeyVal0);
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      
      String string0 = "tr";
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.key(string0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertNotNull(httpConnection_KeyVal1);
      assertNull(httpConnection_KeyVal0.value());
      assertEquals("tr", httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal1.value());
      assertEquals("tr", httpConnection_KeyVal1.key());
      
      boolean boolean0 = linkedList0.add((Connection.KeyVal) httpConnection_KeyVal0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertTrue(boolean0);
      assertEquals(1, linkedList0.size());
      assertNull(httpConnection_KeyVal0.value());
      assertEquals("tr", httpConnection_KeyVal0.key());
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      pipedOutputStream0.close();
      pipedOutputStream0.close();
      // Undeclared exception!
      try { 
        HttpConnection.Response.writePost(linkedList0, pipedOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 11000)
  public void test37()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      LinkedHashSet<Connection.KeyVal> linkedHashSet0 = new LinkedHashSet<Connection.KeyVal>();
      assertNotNull(linkedHashSet0);
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNotNull(httpConnection_KeyVal0);
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      
      String string0 = "";
      boolean boolean0 = linkedHashSet0.contains(string0);
      assertFalse(boolean0);
      assertTrue(linkedHashSet0.isEmpty());
      assertEquals(0, linkedHashSet0.size());
      
      httpConnection_KeyVal0.value = string0;
      assertNull(httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      
      httpConnection_KeyVal0.key = httpConnection_Response0.contentType;
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      
      httpConnection_KeyVal0.key = httpConnection_Response0.contentType;
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      
      boolean boolean1 = linkedHashSet0.add(httpConnection_KeyVal0);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertFalse(linkedHashSet0.isEmpty());
      assertEquals(1, linkedHashSet0.size());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      
      boolean boolean2 = linkedHashSet0.add(httpConnection_KeyVal0);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2);
      assertFalse(linkedHashSet0.isEmpty());
      assertEquals(1, linkedHashSet0.size());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      
      boolean boolean3 = linkedHashSet0.add(httpConnection_KeyVal0);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
      assertFalse(linkedHashSet0.isEmpty());
      assertEquals(1, linkedHashSet0.size());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals("", httpConnection_KeyVal0.value());
      
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      assertNotNull(byteArrayOutputStream0);
      assertEquals(0, byteArrayOutputStream0.size());
      assertEquals("", byteArrayOutputStream0.toString());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.writePost(linkedHashSet0, byteArrayOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 11000)
  public void test38()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      String string0 = httpConnection_Response0.statusMessage();
      assertNull(string0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.createConnection(httpConnection_Response0.req);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test39()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.getRequestCookieString(httpConnection_Response0.req);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test40()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      
      String string0 = "";
      httpConnection_Response0.statusMessage = string0;
      assertEquals("", httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      
      String string1 = "";
      httpConnection_Response0.contentType = string1;
      assertEquals("", httpConnection_Response0.statusMessage());
      assertEquals("", httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test41()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = null;
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      
      String string0 = "org.jsoup.select.Evaluator$AttributeWithValueEnding";
      httpConnection_Response1.statusMessage = string0;
      assertEquals("org.jsoup.select.Evaluator$AttributeWithValueEnding", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      
      String string1 = httpConnection_Response1.statusMessage();
      assertSame(string1, string0);
      assertEquals("org.jsoup.select.Evaluator$AttributeWithValueEnding", string1);
      assertNotNull(string1);
      assertEquals("org.jsoup.select.Evaluator$AttributeWithValueEnding", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      String string2 = "";
      List<Locale.LanguageRange> list0 = null;
      Connection.Request connection_Request0 = null;
      httpConnection_Response1.req = connection_Request0;
      assertEquals("org.jsoup.select.Evaluator$AttributeWithValueEnding", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      
      LinkedList<String> linkedList0 = new LinkedList<String>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      assertFalse(linkedList0.contains(string2));
      
      boolean boolean0 = linkedList0.removeFirstOccurrence(string0);
      assertFalse(string0.equals((Object)string2));
      assertSame(string0, string1);
      assertNotSame(string0, string2);
      assertFalse(boolean0);
      assertEquals(0, linkedList0.size());
      assertFalse(linkedList0.contains(string2));
      
      String string3 = "#\"0{sYMj&]1/zT}";
      // Undeclared exception!
      try { 
        linkedList0.add(httpConnection_Response1.MAX_REDIRECTS, string3);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 20, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 11000)
  public void test42()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      
      URI uRI0 = MockURI.aFileURI;
      assertNotNull(uRI0);
      assertEquals("/tmp/foo.bar", uRI0.getRawPath());
      assertTrue(uRI0.isAbsolute());
      assertNull(uRI0.getRawFragment());
      assertNull(uRI0.getRawAuthority());
      assertFalse(uRI0.isOpaque());
      assertEquals((-1), uRI0.getPort());
      assertEquals("file:///tmp/foo.bar", uRI0.toString());
      assertEquals("file", uRI0.getScheme());
      assertNull(uRI0.getHost());
      assertNull(uRI0.getRawUserInfo());
      assertNull(uRI0.getRawQuery());
      
      URL uRL0 = MockURI.toURL(uRI0);
      assertNotNull(uRL0);
      assertEquals("/tmp/foo.bar", uRI0.getRawPath());
      assertTrue(uRI0.isAbsolute());
      assertNull(uRI0.getRawFragment());
      assertNull(uRI0.getRawAuthority());
      assertFalse(uRI0.isOpaque());
      assertEquals((-1), uRI0.getPort());
      assertEquals("file:///tmp/foo.bar", uRI0.toString());
      assertEquals("file", uRI0.getScheme());
      assertNull(uRI0.getHost());
      assertNull(uRI0.getRawUserInfo());
      assertNull(uRI0.getRawQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("", uRL0.getAuthority());
      
      httpConnection_Request0.url = uRL0;
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("/tmp/foo.bar", uRI0.getRawPath());
      assertTrue(uRI0.isAbsolute());
      assertNull(uRI0.getRawFragment());
      assertNull(uRI0.getRawAuthority());
      assertFalse(uRI0.isOpaque());
      assertEquals((-1), uRI0.getPort());
      assertEquals("file:///tmp/foo.bar", uRI0.toString());
      assertEquals("file", uRI0.getScheme());
      assertNull(uRI0.getHost());
      assertNull(uRI0.getRawUserInfo());
      assertNull(uRI0.getRawQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("file", uRL0.getProtocol());
      assertEquals("", uRL0.getAuthority());
      assertEquals("file", httpConnection_Request0.url.getProtocol());
      assertEquals("", httpConnection_Request0.url.getHost());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertNull(httpConnection_Request0.url.getRef());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertEquals("", httpConnection_Request0.url.getAuthority());
      assertNull(httpConnection_Request0.url.getUserInfo());
      
      boolean boolean0 = false;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreHttpErrors(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.createConnection(httpConnection_Request1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test43()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      String string0 = "#>i@\"x#\\2T'.(";
      httpConnection_Response0.statusMessage = string0;
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals("#>i@\"x#\\2T'.(", httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      String string1 = httpConnection_Response0.contentType();
      assertNull(string1);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertEquals("#>i@\"x#\\2T'.(", httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      try { 
        MockURL.URL(string0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // no protocol: #>i@\"x#\\2T'.(
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 11000)
  public void test44()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "";
      boolean boolean0 = FileSystemHandling.appendStringToFile(evoSuiteFile0, string0);
      assertFalse(boolean0);
      
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(httpConnection_Response0.statusCode);
      assertNotNull(byteBuffer0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, byteBuffer0.arrayOffset());
      assertEquals(0, byteBuffer0.remaining());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]", byteBuffer0.toString());
      assertEquals(0, byteBuffer0.capacity());
      assertFalse(byteBuffer0.hasRemaining());
      assertEquals(0, byteBuffer0.limit());
      assertFalse(byteBuffer0.isDirect());
      assertTrue(byteBuffer0.hasArray());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals(0, byteBuffer0.position());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      
      httpConnection_Response0.byteData = byteBuffer0;
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, byteBuffer0.arrayOffset());
      assertEquals(0, byteBuffer0.remaining());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]", byteBuffer0.toString());
      assertEquals(0, byteBuffer0.capacity());
      assertFalse(byteBuffer0.hasRemaining());
      assertEquals(0, byteBuffer0.limit());
      assertFalse(byteBuffer0.isDirect());
      assertTrue(byteBuffer0.hasArray());
      assertFalse(byteBuffer0.isReadOnly());
      assertEquals(0, byteBuffer0.position());
      assertEquals(0, httpConnection_Response0.byteData.arrayOffset());
      assertEquals(0, httpConnection_Response0.byteData.position());
      assertEquals("java.nio.HeapByteBuffer[pos=0 lim=0 cap=0]", httpConnection_Response0.byteData.toString());
      assertFalse(httpConnection_Response0.byteData.hasRemaining());
      assertEquals(0, httpConnection_Response0.byteData.limit());
      assertFalse(httpConnection_Response0.byteData.isReadOnly());
      assertTrue(httpConnection_Response0.byteData.hasArray());
      assertEquals(0, httpConnection_Response0.byteData.remaining());
      assertEquals(0, httpConnection_Response0.byteData.capacity());
      assertFalse(httpConnection_Response0.byteData.isDirect());
      
      Connection.Method connection_Method0 = Connection.Method.GET;
      String string1 = "9fw]vvidN:";
      HttpConnection.Response httpConnection_Response1 = (HttpConnection.Response)httpConnection_Response0.removeHeader(string1);
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Response httpConnection_Response2 = (HttpConnection.Response)httpConnection_Response0.method(connection_Method0);
      assertSame(httpConnection_Response0, httpConnection_Response2);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Response2, httpConnection_Response1);
      assertSame(httpConnection_Response2, httpConnection_Response0);
      assertNotNull(httpConnection_Response2);
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response2.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.contentType());
      assertEquals(0, httpConnection_Response2.statusCode());
      assertNull(httpConnection_Response2.charset());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response2.numRedirects);
      assertEquals(0, httpConnection_Response2.statusCode);
      assertFalse(httpConnection_Response2.executed);
      
      String string2 = "";
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      httpConnection_Response0.contentType = string2;
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals("", httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      
      String string3 = httpConnection_Response0.charset();
      assertSame(httpConnection_Response0, httpConnection_Response2);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertNull(string3);
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals("", httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.parse();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before parsing response
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test45()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      Parser parser0 = null;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(httpConnection_Request0.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      
      String string0 = "~+@l&";
      String string1 = "UTF-8";
      String string2 = httpConnection_Request0.cookie(string1);
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string1, string0);
      assertNull(string2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      int int0 = (-304);
      String string3 = "x=";
      int int1 = 439;
      String string4 = "`|f=Uoo4(Hw";
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.createFolder(evoSuiteFile0);
      assertFalse(boolean0);
      
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL(string3, string0, int1, string4, uRLStreamHandler0);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(int1 == int0);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertNotSame(string0, string3);
      assertNotSame(string0, string4);
      assertNotSame(string0, string1);
      assertNotSame(string3, string4);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string3);
      assertNotSame(string4, string1);
      assertNotNull(uRL0);
      assertEquals("~+@l&:439", uRL0.getAuthority());
      assertNull(uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals("`|f=Uoo4(Hw", uRL0.getFile());
      assertNull(uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("~+@l&", uRL0.getHost());
      assertEquals("`|f=Uoo4(Hw", uRL0.getPath());
      assertEquals(439, uRL0.getPort());
      assertEquals("x=", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals(0, uRL0.getDefaultPort());
      
      httpConnection_Request0.url = uRL0;
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("~+@l&:439", uRL0.getAuthority());
      assertNull(uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals("`|f=Uoo4(Hw", uRL0.getFile());
      assertNull(uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("~+@l&", uRL0.getHost());
      assertEquals("`|f=Uoo4(Hw", uRL0.getPath());
      assertEquals(439, uRL0.getPort());
      assertEquals("x=", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals(0, uRL0.getDefaultPort());
      assertEquals("x=", httpConnection_Request0.url.getProtocol());
      assertEquals("`|f=Uoo4(Hw", httpConnection_Request0.url.getPath());
      assertEquals("`|f=Uoo4(Hw", httpConnection_Request0.url.getFile());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals("~+@l&:439", httpConnection_Request0.url.getAuthority());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals(0, httpConnection_Request0.url.getDefaultPort());
      assertNull(httpConnection_Request0.url.toExternalForm());
      assertNull(httpConnection_Request0.url.toString());
      assertEquals(439, httpConnection_Request0.url.getPort());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals("~+@l&", httpConnection_Request0.url.getHost());
      
      httpConnection_Request1.url = httpConnection_Request0.url;
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, httpConnection_Request1.url.getDefaultPort());
      assertNull(httpConnection_Request1.url.toExternalForm());
      assertEquals("~+@l&", httpConnection_Request1.url.getHost());
      assertEquals("`|f=Uoo4(Hw", httpConnection_Request1.url.getPath());
      assertNull(httpConnection_Request1.url.getQuery());
      assertNull(httpConnection_Request1.url.getUserInfo());
      assertEquals("~+@l&:439", httpConnection_Request1.url.getAuthority());
      assertEquals("x=", httpConnection_Request1.url.getProtocol());
      assertNull(httpConnection_Request1.url.toString());
      assertNull(httpConnection_Request1.url.getRef());
      assertEquals(439, httpConnection_Request1.url.getPort());
      assertEquals("`|f=Uoo4(Hw", httpConnection_Request1.url.getFile());
      
      httpConnection_Request1.timeoutMilliseconds = int0;
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals((-304), httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals((-304), httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      
      Connection.Request connection_Request0 = null;
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response1);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Only http & https protocols supported
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test46()  throws Throwable  {
      Connection.Request connection_Request0 = null;
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      boolean boolean0 = true;
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      LinkedList<String> linkedList0 = new LinkedList<String>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      List<String> list0 = hashMap0.put(httpConnection_Response0.statusMessage, linkedList0);
      assertNull(list0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertEquals(0, linkedList0.size());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      httpConnection_Response0.executed = boolean0;
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      
      int int0 = (-2839);
      httpConnection_Response0.numRedirects = int0;
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      
      HttpURLConnection httpURLConnection0 = null;
      // Undeclared exception!
      try { 
        httpConnection_Response0.bodyAsBytes();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test47()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = null;
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      
      String string0 = "org.jsoup.select.Evaluator$AttributeWithValueEnding";
      httpConnection_Response1.statusMessage = string0;
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("org.jsoup.select.Evaluator$AttributeWithValueEnding", httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      
      String string1 = httpConnection_Response1.statusMessage();
      assertSame(string1, string0);
      assertEquals("org.jsoup.select.Evaluator$AttributeWithValueEnding", string1);
      assertNotNull(string1);
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("org.jsoup.select.Evaluator$AttributeWithValueEnding", httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      String string2 = "";
      List<Locale.LanguageRange> list0 = null;
      Connection.Request connection_Request0 = null;
      httpConnection_Response1.req = connection_Request0;
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("org.jsoup.select.Evaluator$AttributeWithValueEnding", httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      
      String string3 = "#\"0{sYMj&]1/zT}";
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.EXTENDED_FILTERING;
      String string4 = httpConnection_Response1.charset();
      assertNull(string4);
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("org.jsoup.select.Evaluator$AttributeWithValueEnding", httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      
      String string5 = httpConnection_Response1.charset();
      assertNull(string5);
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("org.jsoup.select.Evaluator$AttributeWithValueEnding", httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.getRequestCookieString(httpConnection_Response1.req);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test48()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      assertFalse(boolean0);
      
      String string0 = "e3hc\"TP6";
      boolean boolean1 = true;
      httpConnection_Response0.executed = boolean1;
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      
      httpConnection_Response0.contentType = string0;
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals("e3hc\"TP6", httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      
      String string1 = httpConnection_Response0.charset();
      assertNull(string1);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals("e3hc\"TP6", httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      String string2 = httpConnection_Response0.contentType();
      assertSame(string2, string0);
      assertEquals("e3hc\"TP6", string2);
      assertNotNull(string2);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals("e3hc\"TP6", httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertTrue(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      boolean boolean2 = true;
      boolean boolean3 = false;
      boolean boolean4 = true;
      boolean boolean5 = FileSystemHandling.setPermissions(evoSuiteFile0, boolean2, boolean3, boolean4);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean3);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean4);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3 == boolean1);
      assertFalse(boolean4 == boolean3);
      assertFalse(boolean4 == boolean0);
      assertTrue(boolean5 == boolean0);
      assertFalse(boolean5 == boolean2);
      assertTrue(boolean5 == boolean3);
      assertFalse(boolean5 == boolean4);
      assertFalse(boolean5 == boolean1);
      assertFalse(boolean5);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.serialiseRequestUrl(httpConnection_Response0.req);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test49()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      
      HttpURLConnection httpURLConnection0 = null;
      Connection.Response connection_Response0 = null;
      // Undeclared exception!
      try { 
        httpConnection_Response0.setupFromConnection(httpURLConnection0, connection_Response0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test50()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = null;
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Map<String, List<String>> map0 = null;
      // Undeclared exception!
      try { 
        httpConnection_Response1.processResponseHeaders(map0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test51()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      
      String string0 = "http";
      String string1 = "https";
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotNull(httpConnection_KeyVal0);
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.ignoreContentType(httpConnection_Request0.ignoreContentType);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      
      URL uRL0 = MockURL.URL(httpConnection_KeyVal0.key, httpConnection_KeyVal0.value, httpConnection_Request0.maxBodySizeBytes, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotNull(uRL0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://https:1048576http", uRL0.toExternalForm());
      assertEquals("https:1048576", uRL0.getAuthority());
      assertEquals(1048576, uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http", uRL0.getFile());
      assertEquals("http://https:1048576http", uRL0.toString());
      assertEquals("https", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getPath());
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      
      httpConnection_Request1.url = uRL0;
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://https:1048576http", uRL0.toExternalForm());
      assertEquals("https:1048576", uRL0.getAuthority());
      assertEquals(1048576, uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http", uRL0.getFile());
      assertEquals("http://https:1048576http", uRL0.toString());
      assertEquals("https", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getPath());
      assertEquals("http", httpConnection_Request1.url.getPath());
      assertNull(httpConnection_Request1.url.getQuery());
      assertEquals("http", httpConnection_Request1.url.getProtocol());
      assertEquals("https:1048576", httpConnection_Request1.url.getAuthority());
      assertEquals("http://https:1048576http", httpConnection_Request1.url.toExternalForm());
      assertEquals("http://https:1048576http", httpConnection_Request1.url.toString());
      assertEquals("https", httpConnection_Request1.url.getHost());
      assertEquals("http", httpConnection_Request1.url.getFile());
      assertEquals(1048576, httpConnection_Request1.url.getPort());
      assertNull(httpConnection_Request1.url.getUserInfo());
      assertNull(httpConnection_Request1.url.getRef());
      assertEquals((-1), httpConnection_Request1.url.getDefaultPort());
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request2);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // For input string: \"1048576http\"
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 11000)
  public void test52()  throws Throwable  {
      String string0 = "";
      Attributes attributes0 = new Attributes();
      assertNotNull(attributes0);
      
      String string1 = "o}V690ziEJ\"/A";
      Document document0 = new Document(string0);
      assertFalse(string0.equals((Object)string1));
      assertNotNull(document0);
      assertEquals("", document0.baseUri());
      assertEquals("", document0.location());
      assertEquals("#root", document0.tagName());
      assertEquals(0, document0.siblingIndex());
      assertEquals("#document", document0.nodeName());
      assertFalse(document0.isBlock());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertEquals(0, document0.childNodeSize());
      
      File file0 = null;
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      
      HttpConnection.Response.MAX_REDIRECTS = httpConnection_Response0.statusCode;
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      
      HttpConnection.Response httpConnection_Response1 = (HttpConnection.Response)httpConnection_Response0.cookie(string1, string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(0, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      
      HttpConnection.Response httpConnection_Response2 = null;
      try {
        httpConnection_Response2 = new HttpConnection.Response(httpConnection_Response0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Too many redirects occurred trying to load URL null
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test53()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      
      String string0 = "http";
      String string1 = "https";
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal(string0, string0);
      assertFalse(string0.equals((Object)string1));
      assertNotNull(httpConnection_KeyVal0);
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("http", httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(httpConnection_Request0.parser);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.ignoreContentType(httpConnection_Request0.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      
      URL uRL0 = MockURL.URL(httpConnection_KeyVal0.key, httpConnection_KeyVal0.value, httpConnection_Request0.maxBodySizeBytes, string0);
      assertFalse(string0.equals((Object)string1));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotNull(uRL0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("http", httpConnection_KeyVal0.value());
      assertEquals("http", uRL0.getFile());
      assertEquals("http://http:1048576http", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals("http", uRL0.getHost());
      assertEquals("http", uRL0.getPath());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(1048576, uRL0.getPort());
      assertEquals("http://http:1048576http", uRL0.toString());
      assertEquals("http:1048576", uRL0.getAuthority());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      
      httpConnection_Request1.url = uRL0;
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("http", httpConnection_KeyVal0.value());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("http", uRL0.getFile());
      assertEquals("http://http:1048576http", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals("http", uRL0.getHost());
      assertEquals("http", uRL0.getPath());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(1048576, uRL0.getPort());
      assertEquals("http://http:1048576http", uRL0.toString());
      assertEquals("http:1048576", uRL0.getAuthority());
      assertEquals("http", httpConnection_Request1.url.getProtocol());
      assertNull(httpConnection_Request1.url.getRef());
      assertEquals((-1), httpConnection_Request1.url.getDefaultPort());
      assertEquals(1048576, httpConnection_Request1.url.getPort());
      assertNull(httpConnection_Request1.url.getUserInfo());
      assertEquals("http://http:1048576http", httpConnection_Request1.url.toString());
      assertEquals("http:1048576", httpConnection_Request1.url.getAuthority());
      assertEquals("http", httpConnection_Request1.url.getFile());
      assertEquals("http://http:1048576http", httpConnection_Request1.url.toExternalForm());
      assertNull(httpConnection_Request1.url.getQuery());
      assertEquals("http", httpConnection_Request1.url.getHost());
      assertEquals("http", httpConnection_Request1.url.getPath());
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request2);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // HTTP error fetching URL
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test54()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.createFolder(evoSuiteFile0);
      assertFalse(boolean0);
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNotNull(httpConnection_KeyVal0);
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      
      String string0 = "?";
      String string1 = "'UC--C*;";
      String string2 = "D])[TF#6E*_r\\Z/Dj";
      URI uRI0 = MockURI.aHttpURI;
      assertNotNull(uRI0);
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals("foo.bar", uRI0.getHost());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertFalse(uRI0.isOpaque());
      assertNull(uRI0.getRawQuery());
      assertNull(uRI0.getRawFragment());
      assertEquals((-1), uRI0.getPort());
      assertEquals("http", uRI0.getScheme());
      assertEquals("", uRI0.getRawPath());
      assertTrue(uRI0.isAbsolute());
      assertNull(uRI0.getRawUserInfo());
      
      URL uRL0 = MockURI.toURL(uRI0);
      assertNotNull(uRL0);
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals("foo.bar", uRI0.getHost());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertFalse(uRI0.isOpaque());
      assertNull(uRI0.getRawQuery());
      assertNull(uRI0.getRawFragment());
      assertEquals((-1), uRI0.getPort());
      assertEquals("http", uRI0.getScheme());
      assertEquals("", uRI0.getRawPath());
      assertTrue(uRI0.isAbsolute());
      assertNull(uRI0.getRawUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("", uRL0.getFile());
      assertNull(uRL0.getUserInfo());
      assertEquals("", uRL0.getPath());
      assertEquals("foo.bar", uRL0.getHost());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      assertEquals("http://foo.bar", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals("foo.bar", uRI0.getHost());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertFalse(uRI0.isOpaque());
      assertNull(uRI0.getRawQuery());
      assertNull(uRI0.getRawFragment());
      assertEquals((-1), uRI0.getPort());
      assertEquals("http", uRI0.getScheme());
      assertEquals("", uRI0.getRawPath());
      assertTrue(uRI0.isAbsolute());
      assertNull(uRI0.getRawUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("", uRL0.getFile());
      assertNull(uRL0.getUserInfo());
      assertEquals("", uRL0.getPath());
      assertEquals("foo.bar", uRL0.getHost());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      assertEquals("http://foo.bar", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.cookie(string1, string2);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertNotNull(httpConnection_Request3);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      
      String string3 = httpConnection_Request0.getHeaderCaseInsensitive(string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNull(string3);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request1.parser(httpConnection_Request0.parser);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertNotNull(httpConnection_Request4);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      
      int int0 = 78;
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request4.maxBodySize(int0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertNotNull(httpConnection_Request5);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(78, httpConnection_Request0.maxBodySize());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(78, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(78, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(3000, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(78, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(78, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(78, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(78, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(78, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request5.timeoutMilliseconds);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.serialiseRequestUrl(httpConnection_Request5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 11000)
  public void test55()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      Parser parser0 = null;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(httpConnection_Request0.parser);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      
      String string0 = "~+@l&";
      String string1 = "x=";
      String string2 = httpConnection_Request0.cookie(string1);
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string1, string0);
      assertNull(string2);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      int int0 = (-304);
      String string3 = "x=";
      int int1 = 439;
      String string4 = "`|fUoa(@w";
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      
      httpConnection_Request0.url = uRL0;
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("some", uRL0.getHost());
      assertEquals("file", uRL0.getProtocol());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertEquals("file", httpConnection_Request0.url.getProtocol());
      assertEquals("some", httpConnection_Request0.url.getAuthority());
      assertEquals("some", httpConnection_Request0.url.getHost());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertNull(httpConnection_Request0.url.getRef());
      
      httpConnection_Request1.url = httpConnection_Request0.url;
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("file", httpConnection_Request1.url.getProtocol());
      assertNull(httpConnection_Request1.url.getRef());
      assertEquals((-1), httpConnection_Request1.url.getDefaultPort());
      assertEquals("some", httpConnection_Request1.url.getAuthority());
      assertNull(httpConnection_Request1.url.getUserInfo());
      assertNull(httpConnection_Request1.url.getQuery());
      assertEquals((-1), httpConnection_Request1.url.getPort());
      assertEquals("some", httpConnection_Request1.url.getHost());
      
      httpConnection_Request1.timeoutMilliseconds = int0;
      assertEquals((-304), httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals((-304), httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.removeHeader(string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals((-304), httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals((-304), httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals((-304), httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals((-304), httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals((-304), httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals((-304), httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals((-304), httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals((-304), httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals((-304), httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals((-304), httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request2, httpConnection_Response1);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Only http & https protocols supported
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test56()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      Parser parser0 = null;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(httpConnection_Request0.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      
      String string0 = "~+@l&";
      String string1 = "x=";
      String string2 = httpConnection_Request0.cookie(string1);
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string1, string0);
      assertNull(string2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      String string3 = "x=";
      int int0 = 439;
      String string4 = "`|f=Uoo4(Hw";
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      
      httpConnection_Request0.url = uRL0;
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      
      httpConnection_Request1.url = httpConnection_Request0.url;
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertNull(httpConnection_Request1.url.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request1.url.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request1.url.getAuthority());
      assertNull(httpConnection_Request1.url.getRef());
      assertEquals((-1), httpConnection_Request1.url.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request1.url.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request1.url.toString());
      assertEquals("http", httpConnection_Request1.url.getProtocol());
      assertEquals((-1), httpConnection_Request1.url.getPort());
      assertNull(httpConnection_Request1.url.getQuery());
      
      httpConnection_Request1.timeoutMilliseconds = httpConnection_Request1.timeoutMilliseconds;
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.removeHeader(string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string4));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request2, httpConnection_Response1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // HTTP error fetching URL
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test57()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      
      String string0 = "http";
      String string1 = "https";
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string1, string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      assertNotNull(httpConnection_KeyVal0);
      assertEquals("https", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(httpConnection_Request0.parser);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.ignoreContentType(httpConnection_Request0.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      
      URL uRL0 = MockURL.URL(httpConnection_KeyVal0.key, httpConnection_KeyVal0.value, httpConnection_Request0.maxBodySizeBytes, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotNull(uRL0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("https", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertNull(uRL0.getQuery());
      assertEquals("http", uRL0.getPath());
      assertNull(uRL0.getUserInfo());
      assertEquals("https", uRL0.getProtocol());
      assertEquals("http", uRL0.getFile());
      assertEquals("https://https:1048576http", uRL0.toString());
      assertEquals("https:1048576", uRL0.getAuthority());
      assertEquals("https", uRL0.getHost());
      assertEquals(1048576, uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("https://https:1048576http", uRL0.toExternalForm());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      
      httpConnection_Request1.url = uRL0;
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("https", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertNull(uRL0.getQuery());
      assertEquals("http", uRL0.getPath());
      assertNull(uRL0.getUserInfo());
      assertEquals("https", uRL0.getProtocol());
      assertEquals("http", uRL0.getFile());
      assertEquals("https://https:1048576http", uRL0.toString());
      assertEquals("https:1048576", uRL0.getAuthority());
      assertEquals("https", uRL0.getHost());
      assertEquals(1048576, uRL0.getPort());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("https://https:1048576http", uRL0.toExternalForm());
      assertEquals("http", httpConnection_Request1.url.getFile());
      assertEquals("https://https:1048576http", httpConnection_Request1.url.toString());
      assertEquals("https", httpConnection_Request1.url.getHost());
      assertNull(httpConnection_Request1.url.getUserInfo());
      assertEquals("https", httpConnection_Request1.url.getProtocol());
      assertEquals("https:1048576", httpConnection_Request1.url.getAuthority());
      assertEquals(1048576, httpConnection_Request1.url.getPort());
      assertNull(httpConnection_Request1.url.getQuery());
      assertEquals("http", httpConnection_Request1.url.getPath());
      assertEquals((-1), httpConnection_Request1.url.getDefaultPort());
      assertEquals("https://https:1048576http", httpConnection_Request1.url.toExternalForm());
      assertNull(httpConnection_Request1.url.getRef());
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request2);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // HTTP error fetching URL
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test58()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      String string0 = "http";
      String string1 = "https";
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotNull(httpConnection_KeyVal0);
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.ignoreContentType(httpConnection_Request0.ignoreContentType);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      
      URL uRL0 = MockURL.URL(httpConnection_KeyVal0.key, httpConnection_KeyVal0.value, httpConnection_Request0.maxBodySizeBytes, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotNull(uRL0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("https", uRL0.getHost());
      assertEquals("https:1048576", uRL0.getAuthority());
      assertEquals(1048576, uRL0.getPort());
      assertEquals("http://https:1048576http", uRL0.toExternalForm());
      assertEquals("http", uRL0.getPath());
      assertEquals("http", uRL0.getFile());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://https:1048576http", uRL0.toString());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.value(string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertNotNull(httpConnection_KeyVal1);
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("http", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal1.key());
      assertEquals("http", httpConnection_KeyVal1.value());
      
      httpConnection_Request1.url = uRL0;
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("http", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("https", uRL0.getHost());
      assertEquals("https:1048576", uRL0.getAuthority());
      assertEquals(1048576, uRL0.getPort());
      assertEquals("http://https:1048576http", uRL0.toExternalForm());
      assertEquals("http", uRL0.getPath());
      assertEquals("http", uRL0.getFile());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://https:1048576http", uRL0.toString());
      assertNull(httpConnection_Request1.url.getUserInfo());
      assertNull(httpConnection_Request1.url.getQuery());
      assertEquals("http", httpConnection_Request1.url.getPath());
      assertEquals("http://https:1048576http", httpConnection_Request1.url.toExternalForm());
      assertEquals("http://https:1048576http", httpConnection_Request1.url.toString());
      assertEquals("https:1048576", httpConnection_Request1.url.getAuthority());
      assertEquals("https", httpConnection_Request1.url.getHost());
      assertEquals("http", httpConnection_Request1.url.getProtocol());
      assertEquals(1048576, httpConnection_Request1.url.getPort());
      assertEquals("http", httpConnection_Request1.url.getFile());
      assertEquals((-1), httpConnection_Request1.url.getDefaultPort());
      assertNull(httpConnection_Request1.url.getRef());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // For input string: \"1048576http\"
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 11000)
  public void test59()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      boolean boolean0 = false;
      httpConnection_Response0.executed = boolean0;
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      EvoSuiteFile evoSuiteFile0 = null;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      String string0 = "&#x";
      boolean boolean1 = linkedList0.add(string0);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(1, linkedList0.size());
      assertTrue(linkedList0.contains(string0));
      
      String string1 = "";
      List<String> list0 = hashMap0.put(string1, linkedList0);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      assertNull(list0);
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertEquals(1, linkedList0.size());
      assertFalse(linkedList0.contains(string1));
      assertTrue(linkedList0.contains(string0));
      
      List<String> list1 = hashMap0.put(httpConnection_Response1.contentType, linkedList0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNull(list1);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertFalse(hashMap0.isEmpty());
      assertEquals(2, hashMap0.size());
      assertEquals(1, linkedList0.size());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(linkedList0.contains(string1));
      assertTrue(linkedList0.contains(string0));
      
      // Undeclared exception!
      try { 
        httpConnection_Response1.processResponseHeaders(hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Header name must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test60()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      int int0 = 301;
      httpConnection_Response0.statusCode = int0;
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(301, httpConnection_Response0.statusCode());
      
      LinkedList<Connection.KeyVal> linkedList0 = new LinkedList<Connection.KeyVal>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNotNull(httpConnection_KeyVal0);
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      
      String string0 = "tr";
      String string1 = "$gZwVn2z/U";
      httpConnection_KeyVal0.value = string1;
      assertNull(httpConnection_KeyVal0.key());
      assertEquals("$gZwVn2z/U", httpConnection_KeyVal0.value());
      
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.key(string0);
      assertFalse(string0.equals((Object)string1));
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string0, string1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertNotNull(httpConnection_KeyVal1);
      assertEquals("tr", httpConnection_KeyVal0.key());
      assertEquals("$gZwVn2z/U", httpConnection_KeyVal0.value());
      assertEquals("$gZwVn2z/U", httpConnection_KeyVal1.value());
      assertEquals("tr", httpConnection_KeyVal1.key());
      
      boolean boolean0 = linkedList0.add((Connection.KeyVal) httpConnection_KeyVal0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertTrue(boolean0);
      assertEquals(1, linkedList0.size());
      assertEquals("tr", httpConnection_KeyVal0.key());
      assertEquals("$gZwVn2z/U", httpConnection_KeyVal0.value());
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      pipedOutputStream0.close();
      String string2 = httpConnection_Response0.statusMessage();
      assertNull(string2);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(301, httpConnection_Response0.statusCode());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(301, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      pipedOutputStream0.close();
      try { 
        HttpConnection.Response.writePost(linkedList0, pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 11000)
  public void test61()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      String string0 = "http";
      String string1 = "https";
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal(string0, string0);
      assertFalse(string0.equals((Object)string1));
      assertNotNull(httpConnection_KeyVal0);
      assertEquals("http", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(httpConnection_Request0.parser);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.ignoreContentType(httpConnection_Request0.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      
      URL uRL0 = MockURL.URL(httpConnection_KeyVal0.key, httpConnection_KeyVal0.value, httpConnection_Request0.maxBodySizeBytes, string0);
      assertFalse(string0.equals((Object)string1));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotNull(uRL0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("http", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals(1048576, uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http:1048576", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://http:1048576http", uRL0.toString());
      assertEquals("http", uRL0.getFile());
      assertEquals("http://http:1048576http", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals("http", uRL0.getPath());
      assertEquals("http", uRL0.getHost());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      httpConnection_Request1.url = uRL0;
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("http", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals(1048576, uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http:1048576", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://http:1048576http", uRL0.toString());
      assertEquals("http", uRL0.getFile());
      assertEquals("http://http:1048576http", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals("http", uRL0.getPath());
      assertEquals("http", uRL0.getHost());
      assertEquals(1048576, httpConnection_Request1.url.getPort());
      assertEquals("http", httpConnection_Request1.url.getProtocol());
      assertNull(httpConnection_Request1.url.getUserInfo());
      assertEquals("http://http:1048576http", httpConnection_Request1.url.toExternalForm());
      assertEquals("http://http:1048576http", httpConnection_Request1.url.toString());
      assertEquals("http:1048576", httpConnection_Request1.url.getAuthority());
      assertEquals("http", httpConnection_Request1.url.getFile());
      assertNull(httpConnection_Request1.url.getQuery());
      assertEquals((-1), httpConnection_Request1.url.getDefaultPort());
      assertEquals("http", httpConnection_Request1.url.getPath());
      assertEquals("http", httpConnection_Request1.url.getHost());
      assertNull(httpConnection_Request1.url.getRef());
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpURLConnection0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals(3000, httpURLConnection0.getConnectTimeout());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertFalse(httpURLConnection0.getDoOutput());
      assertNull(httpURLConnection0.getContentEncoding());
      assertTrue(httpURLConnection0.getDoInput());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertTrue(httpURLConnection0.getUseCaches());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals(3000, httpURLConnection0.getReadTimeout());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.usingProxy());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://http:1048576http", httpURLConnection0.toString());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      
      String string2 = "AfterAttributeName";
      boolean boolean0 = httpConnection_Request0.hasCookie(string2);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertFalse(boolean0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      Connection.Method connection_Method0 = Connection.Method.GET;
      httpConnection_Request1.method = connection_Method0;
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      
      String string3 = HttpConnection.Response.getRequestCookieString(httpConnection_Request1);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertEquals("", string3);
      assertNotNull(string3);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // HTTP error fetching URL
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test62()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      String string0 = "http";
      String string1 = "https";
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal(string0, string0);
      assertFalse(string0.equals((Object)string1));
      assertNotNull(httpConnection_KeyVal0);
      assertEquals("http", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(httpConnection_Request0.parser);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      
      String string2 = null;
      httpConnection_KeyVal0.value = string2;
      assertEquals("http", httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.ignoreContentType(httpConnection_Request0.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      
      URL uRL0 = MockURL.URL(httpConnection_KeyVal0.key, httpConnection_KeyVal0.value, httpConnection_Request0.maxBodySizeBytes, string0);
      assertFalse(string0.equals((Object)string1));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string0, string1);
      assertNotNull(uRL0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertEquals("http", uRL0.getFile());
      assertNull(uRL0.getAuthority());
      assertEquals("http:http", uRL0.toExternalForm());
      assertNull(uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("http:http", uRL0.toString());
      assertEquals("http", uRL0.getPath());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      httpConnection_Request1.url = uRL0;
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("http", uRL0.getFile());
      assertNull(uRL0.getAuthority());
      assertEquals("http:http", uRL0.toExternalForm());
      assertNull(uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertEquals("http:http", uRL0.toString());
      assertEquals("http", uRL0.getPath());
      assertNull(httpConnection_Request1.url.getQuery());
      assertEquals("http", httpConnection_Request1.url.getPath());
      assertNull(httpConnection_Request1.url.getHost());
      assertEquals((-1), httpConnection_Request1.url.getPort());
      assertEquals((-1), httpConnection_Request1.url.getDefaultPort());
      assertEquals("http:http", httpConnection_Request1.url.toString());
      assertNull(httpConnection_Request1.url.getRef());
      assertEquals("http:http", httpConnection_Request1.url.toExternalForm());
      assertEquals("http", httpConnection_Request1.url.getFile());
      assertEquals("http", httpConnection_Request1.url.getProtocol());
      assertNull(httpConnection_Request1.url.getAuthority());
      assertNull(httpConnection_Request1.url.getUserInfo());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 11000)
  public void test63()  throws Throwable  {
      EvoSuiteURL evoSuiteURL0 = null;
      String string0 = null;
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertFalse(boolean0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      String string1 = "file";
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      String string2 = "}hRi^21U.B1d*/](";
      LinkedList<String> linkedList1 = new LinkedList<String>();
      assertNotNull(linkedList1);
      assertEquals(0, linkedList1.size());
      assertFalse(linkedList1.contains(string2));
      
      List<String> list0 = hashMap0.put(string2, linkedList1);
      assertFalse(string2.equals((Object)string1));
      assertNotSame(string2, string1);
      assertNull(list0);
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertEquals(0, linkedList1.size());
      assertFalse(linkedList1.contains(string2));
      
      String string3 = "body";
      LinkedList<String> linkedList2 = new LinkedList<String>();
      assertTrue(linkedList2.equals((Object)linkedList1));
      assertNotNull(linkedList2);
      assertEquals(0, linkedList2.size());
      assertFalse(linkedList2.contains(string1));
      
      List<String> list1 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList2);
      assertTrue(linkedList2.equals((Object)linkedList1));
      assertNotSame(linkedList2, linkedList1);
      assertNotNull(list1);
      assertEquals(0, linkedList0.size());
      assertEquals(0, linkedList2.size());
      assertEquals(0, list1.size());
      assertTrue(list1.isEmpty());
      assertFalse(linkedList2.contains(string1));
      assertFalse(list1.contains(string1));
      
      List<String> list2 = hashMap0.put(string3, list1);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertTrue(linkedList2.equals((Object)linkedList1));
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertNotSame(linkedList2, linkedList1);
      assertNull(list2);
      assertFalse(hashMap0.isEmpty());
      assertEquals(2, hashMap0.size());
      assertEquals(0, linkedList0.size());
      assertEquals(0, linkedList2.size());
      assertEquals(0, list1.size());
      assertTrue(list1.isEmpty());
      assertFalse(linkedList2.contains(string1));
      assertFalse(list1.contains(string1));
      
      Locale.LanguageRange locale_LanguageRange0 = linkedList0.pollLast();
      assertNull(locale_LanguageRange0);
      assertEquals(0, linkedList0.size());
      
      Locale locale0 = Locale.FRENCH;
      assertNotNull(locale0);
      assertEquals("fr", locale0.getLanguage());
      assertEquals("", locale0.getISO3Country());
      assertEquals("fr", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("fra", locale0.getISO3Language());
      assertEquals("", locale0.getCountry());
      
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      assertNotNull(set0);
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertEquals("fr", locale0.getLanguage());
      assertEquals("", locale0.getISO3Country());
      assertEquals("fr", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("fra", locale0.getISO3Language());
      assertEquals("", locale0.getCountry());
      assertFalse(set0.contains(string1));
      
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      boolean boolean1 = linkedList0.add(locale_LanguageRange0);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      assertEquals(1, linkedList0.size());
      
      List<String> list3 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      assertTrue(list3.equals((Object)list1));
      assertNotSame(list3, list1);
      assertNotNull(list3);
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertTrue(list3.isEmpty());
      assertEquals(0, list3.size());
      assertEquals(1, linkedList0.size());
      assertEquals("fr", locale0.getLanguage());
      assertEquals("", locale0.getISO3Country());
      assertEquals("fr", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("fra", locale0.getISO3Language());
      assertEquals("", locale0.getCountry());
      assertFalse(set0.contains(string1));
      assertFalse(list3.contains(string1));
      
      List<String> list4 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) list3);
      assertTrue(list3.equals((Object)list1));
      assertTrue(list4.equals((Object)list3));
      assertTrue(list4.equals((Object)list1));
      assertNotSame(list3, list1);
      assertNotSame(list3, list4);
      assertNotSame(list4, list3);
      assertNotSame(list4, list1);
      assertNotNull(list4);
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertTrue(list3.isEmpty());
      assertEquals(0, list3.size());
      assertTrue(list4.isEmpty());
      assertEquals(0, list4.size());
      assertEquals(1, linkedList0.size());
      assertEquals("fr", locale0.getLanguage());
      assertEquals("", locale0.getISO3Country());
      assertEquals("fr", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("fra", locale0.getISO3Language());
      assertEquals("", locale0.getCountry());
      assertFalse(set0.contains(string1));
      assertFalse(list3.contains(string1));
      assertFalse(list4.contains(string1));
      
      List<String> list5 = hashMap0.put(string1, list4);
      assertTrue(list3.equals((Object)list4));
      assertTrue(list3.equals((Object)list1));
      assertTrue(list4.equals((Object)list3));
      assertTrue(list4.equals((Object)list1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertNotSame(list3, list1);
      assertNotSame(list3, list4);
      assertNotSame(list4, list3);
      assertNotSame(list4, list1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNull(list5);
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertTrue(list3.isEmpty());
      assertEquals(0, list3.size());
      assertTrue(list4.isEmpty());
      assertEquals(0, list4.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(3, hashMap0.size());
      assertEquals(1, linkedList0.size());
      assertEquals("fr", locale0.getLanguage());
      assertEquals("", locale0.getISO3Country());
      assertEquals("fr", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("fra", locale0.getISO3Language());
      assertEquals("", locale0.getCountry());
      assertFalse(set0.contains(string1));
      assertFalse(list3.contains(string1));
      assertFalse(list4.contains(string1));
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertFalse(hashMap0.isEmpty());
      assertEquals(3, hashMap0.size());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      String string4 = httpConnection_Response0.charset();
      assertNull(string4);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      int int0 = httpConnection_Response0.statusCode();
      assertEquals(0, int0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute(httpConnection_Response0.req);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test64()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      String string0 = "(l9jsiZ/r2|@zbB7?0";
      String string1 = "x=";
      String string2 = httpConnection_Request0.cookie(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      assertNull(string2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      String string3 = "UTF-8";
      int int0 = 439;
      String string4 = "`|f=Uoo4(Hw";
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string3);
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertNotSame(string3, string4);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertTrue(boolean0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      
      httpConnection_Request0.url = uRL0;
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Response httpConnection_Response2 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response1);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotNull(httpConnection_Response2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.charset());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(2, httpConnection_Response2.numRedirects);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertTrue(httpConnection_Response2.executed);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Response2.req);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotNull(httpURLConnection0);
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertTrue(httpURLConnection0.getDoInput());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.usingProxy());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals(3000, httpURLConnection0.getConnectTimeout());
      assertEquals(3000, httpURLConnection0.getReadTimeout());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection0.toString());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertFalse(httpURLConnection0.getDoOutput());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.charset());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(2, httpConnection_Response2.numRedirects);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertTrue(httpConnection_Response2.executed);
      
      String string5 = httpConnection_Response2.charset();
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNull(string5);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.charset());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(2, httpConnection_Response2.numRedirects);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertTrue(httpConnection_Response2.executed);
      
      HttpConnection.Response httpConnection_Response3 = (HttpConnection.Response)httpConnection_Response1.removeHeader(httpConnection_Response2.statusMessage);
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response3, httpConnection_Response0);
      assertSame(httpConnection_Response3, httpConnection_Response1);
      assertNotSame(httpConnection_Response3, httpConnection_Response2);
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response0, httpConnection_Response3);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertSame(httpConnection_Response1, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotNull(httpConnection_Response3);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertNull(httpConnection_Response3.contentType());
      assertNull(httpConnection_Response3.method());
      assertNull(httpConnection_Response3.charset());
      assertNull(httpConnection_Response3.statusMessage());
      assertEquals(0, httpConnection_Response3.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.charset());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(0, httpConnection_Response3.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response3.numRedirects);
      assertFalse(httpConnection_Response3.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(2, httpConnection_Response2.numRedirects);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertTrue(httpConnection_Response2.executed);
      
      String string6 = httpConnection_Response2.contentType();
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response0, httpConnection_Response3);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertSame(httpConnection_Response1, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNull(string6);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.charset());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(2, httpConnection_Response2.numRedirects);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertTrue(httpConnection_Response2.executed);
      
      String string7 = httpConnection_Response1.statusMessage();
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response0, httpConnection_Response2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response0, httpConnection_Response3);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertSame(httpConnection_Response1, httpConnection_Response3);
      assertNull(string7);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test65()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      
      Parser parser0 = null;
      String string0 = "(l9jsiZ/r2|@zbB7?0";
      String string1 = "x=";
      String string2 = httpConnection_Request0.cookie(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      assertNull(string2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      
      String string3 = "x=";
      int int0 = 439;
      String string4 = "`|f=Uoo4(Hw";
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      int int1 = (-1097017620);
      httpConnection_Request0.timeoutMilliseconds = int1;
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals((-1097017620), httpConnection_Request0.timeout());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      
      httpConnection_Request0.url = uRL0;
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals((-1097017620), httpConnection_Request0.timeout());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals((-1097017620), httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals((-1097017620), httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response();
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // timeout can not be negative
         //
         verifyException("java.net.URLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test66()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      
      LinkedList<Connection.KeyVal> linkedList0 = new LinkedList<Connection.KeyVal>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNotNull(httpConnection_KeyVal0);
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      
      String string0 = "tr";
      String string1 = "$gZwVn2z/U";
      httpConnection_KeyVal0.value = string1;
      assertNull(httpConnection_KeyVal0.key());
      assertEquals("$gZwVn2z/U", httpConnection_KeyVal0.value());
      
      boolean boolean0 = linkedList0.add((Connection.KeyVal) httpConnection_KeyVal0);
      assertTrue(boolean0);
      assertEquals(1, linkedList0.size());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals("$gZwVn2z/U", httpConnection_KeyVal0.value());
      
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.key(string0);
      assertFalse(string0.equals((Object)string1));
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertNotSame(string0, string1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertNotNull(httpConnection_KeyVal1);
      assertEquals("$gZwVn2z/U", httpConnection_KeyVal0.value());
      assertEquals("tr", httpConnection_KeyVal0.key());
      assertEquals("$gZwVn2z/U", httpConnection_KeyVal1.value());
      assertEquals("tr", httpConnection_KeyVal1.key());
      
      boolean boolean1 = linkedList0.add((Connection.KeyVal) httpConnection_KeyVal0);
      assertTrue(boolean1 == boolean0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertTrue(boolean1);
      assertEquals(2, linkedList0.size());
      assertEquals("$gZwVn2z/U", httpConnection_KeyVal0.value());
      assertEquals("tr", httpConnection_KeyVal0.key());
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      pipedOutputStream0.close();
      String string2 = httpConnection_Response0.statusMessage();
      assertNull(string2);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      
      pipedOutputStream0.close();
      try { 
        HttpConnection.Response.writePost(linkedList0, pipedOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 11000)
  public void test67()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      String string0 = "http";
      String string1 = "https";
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotNull(httpConnection_KeyVal0);
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.ignoreContentType(httpConnection_Request0.ignoreContentType);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      
      Connection.Method connection_Method0 = Connection.Method.POST;
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.method(connection_Method0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNotNull(httpConnection_Request3);
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.POST, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.POST, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      
      URL uRL0 = MockURL.URL(httpConnection_KeyVal0.key, httpConnection_KeyVal0.value, httpConnection_Request0.maxBodySizeBytes, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotNull(uRL0);
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals("https", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http", uRL0.getFile());
      assertEquals("http://https:1048576http", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals(1048576, uRL0.getPort());
      assertEquals("https:1048576", uRL0.getAuthority());
      assertEquals("http://https:1048576http", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getPath());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      httpConnection_Request1.url = uRL0;
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.POST, httpConnection_Request1.method());
      assertEquals("https", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http", uRL0.getFile());
      assertEquals("http://https:1048576http", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals(1048576, uRL0.getPort());
      assertEquals("https:1048576", uRL0.getAuthority());
      assertEquals("http://https:1048576http", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getPath());
      assertEquals("https", httpConnection_Request1.url.getHost());
      assertEquals("http://https:1048576http", httpConnection_Request1.url.toExternalForm());
      assertEquals("http://https:1048576http", httpConnection_Request1.url.toString());
      assertEquals("http", httpConnection_Request1.url.getPath());
      assertNull(httpConnection_Request1.url.getQuery());
      assertEquals((-1), httpConnection_Request1.url.getDefaultPort());
      assertEquals("http", httpConnection_Request1.url.getProtocol());
      assertNull(httpConnection_Request1.url.getRef());
      assertEquals("https:1048576", httpConnection_Request1.url.getAuthority());
      assertEquals("http", httpConnection_Request1.url.getFile());
      assertEquals(1048576, httpConnection_Request1.url.getPort());
      assertNull(httpConnection_Request1.url.getUserInfo());
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request2);
        fail("Expecting exception: UnknownServiceException");
      
      } catch(UnknownServiceException e) {
         //
         // protocol doesn't support output
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test68()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      String string0 = "http";
      String string1 = "https";
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotNull(httpConnection_KeyVal0);
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.ignoreContentType(httpConnection_Request0.ignoreContentType);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      
      int int0 = 3338;
      httpConnection_Request2.maxBodySizeBytes = int0;
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3338, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals(3338, httpConnection_Request1.maxBodySize());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3338, httpConnection_Request2.maxBodySize());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      
      URL uRL0 = MockURL.URL(httpConnection_KeyVal0.key, httpConnection_KeyVal0.value, httpConnection_Request0.maxBodySizeBytes, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotNull(uRL0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3338, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals("https", uRL0.getHost());
      assertEquals(3338, uRL0.getPort());
      assertEquals("http", uRL0.getFile());
      assertNull(uRL0.getQuery());
      assertEquals("http", uRL0.getPath());
      assertEquals("https:3338", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://https:3338http", uRL0.toExternalForm());
      assertEquals("http://https:3338http", uRL0.toString());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3338, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      httpConnection_Request1.url = uRL0;
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3338, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals(3338, httpConnection_Request1.maxBodySize());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("https", uRL0.getHost());
      assertEquals(3338, uRL0.getPort());
      assertEquals("http", uRL0.getFile());
      assertNull(uRL0.getQuery());
      assertEquals("http", uRL0.getPath());
      assertEquals("https:3338", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://https:3338http", uRL0.toExternalForm());
      assertEquals("http://https:3338http", uRL0.toString());
      assertEquals("https", httpConnection_Request1.url.getHost());
      assertEquals("http://https:3338http", httpConnection_Request1.url.toString());
      assertEquals("http", httpConnection_Request1.url.getProtocol());
      assertEquals("https:3338", httpConnection_Request1.url.getAuthority());
      assertEquals("http", httpConnection_Request1.url.getFile());
      assertEquals("http://https:3338http", httpConnection_Request1.url.toExternalForm());
      assertNull(httpConnection_Request1.url.getUserInfo());
      assertNull(httpConnection_Request1.url.getQuery());
      assertEquals((-1), httpConnection_Request1.url.getDefaultPort());
      assertEquals(3338, httpConnection_Request1.url.getPort());
      assertEquals("http", httpConnection_Request1.url.getPath());
      assertNull(httpConnection_Request1.url.getRef());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request1.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNotNull(httpConnection_Request3);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3338, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals(3338, httpConnection_Request1.maxBodySize());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(3338, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3338, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3338, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(3338, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request2);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // For input string: \"3338http\"
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 11000)
  public void test69()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      
      String string0 = "(l9jsiZ/r2|@zbB7?0";
      String string1 = "x=";
      String string2 = httpConnection_Request0.cookie(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      assertNull(string2);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      
      String string3 = "UTF-8";
      int int0 = 439;
      String string4 = "`|f=Uoo4(Hw";
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string3);
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotSame(string3, string4);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertTrue(boolean0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      
      httpConnection_Request0.url = uRL0;
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      
      HttpConnection.Response httpConnection_Response1 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpConnection_Response1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Response httpConnection_Response2 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response1);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotNull(httpConnection_Response2);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.charset());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response2.executed);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Response2.req);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotNull(httpURLConnection0);
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertEquals(3000, httpURLConnection0.getConnectTimeout());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertNull(httpURLConnection0.getContentType());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertEquals(3000, httpURLConnection0.getReadTimeout());
      assertNull(httpURLConnection0.getContentEncoding());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertFalse(httpURLConnection0.getDoOutput());
      assertTrue(httpURLConnection0.getDoInput());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection0.toString());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.charset());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response2.executed);
      
      String string5 = httpConnection_Response2.charset();
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNull(string5);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.charset());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response2.executed);
      
      HttpConnection.Response httpConnection_Response3 = (HttpConnection.Response)httpConnection_Response1.removeHeader(httpConnection_Response2.statusMessage);
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response3, httpConnection_Response2);
      assertSame(httpConnection_Response3, httpConnection_Response1);
      assertNotSame(httpConnection_Response3, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertSame(httpConnection_Response1, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotNull(httpConnection_Response3);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertNull(httpConnection_Response3.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response3.method());
      assertNull(httpConnection_Response3.charset());
      assertEquals("OK", httpConnection_Response3.statusMessage());
      assertEquals(200, httpConnection_Response3.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.charset());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Response3.numRedirects);
      assertTrue(httpConnection_Response3.executed);
      assertEquals(200, httpConnection_Response3.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response2.executed);
      
      String string6 = httpConnection_Response2.contentType();
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertSame(httpConnection_Response1, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNull(string6);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.charset());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response2.executed);
      
      String string7 = httpConnection_Response1.statusMessage();
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string3));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertNotSame(string7, string4);
      assertNotSame(string7, string1);
      assertNotSame(string7, string0);
      assertNotSame(string7, string3);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertSame(httpConnection_Response1, httpConnection_Response3);
      assertEquals("OK", string7);
      assertNotNull(string7);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      Document document0 = httpConnection_Response2.parse();
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertSame(httpConnection_Response1, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotNull(document0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("#root", document0.tagName());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample?", document0.location());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample?", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
      assertFalse(document0.isBlock());
      assertEquals("#document", document0.nodeName());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertEquals(0, document0.siblingIndex());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals("UTF-8", httpConnection_Response2.charset());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response2.executed);
      
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.followRedirects(httpConnection_Response1.executed);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertSame(httpConnection_Response1, httpConnection_Response3);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Response httpConnection_Response4 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request1);
      assertFalse(httpConnection_Response4.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response4.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response4.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response4.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(httpConnection_Response4, httpConnection_Response2);
      assertNotSame(httpConnection_Response4, httpConnection_Response1);
      assertNotSame(httpConnection_Response4, httpConnection_Response0);
      assertNotSame(httpConnection_Response4, httpConnection_Response3);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertSame(httpConnection_Response1, httpConnection_Response3);
      assertNotSame(httpConnection_Response1, httpConnection_Response4);
      assertNotNull(httpConnection_Response4);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Response4.method());
      assertNull(httpConnection_Response4.charset());
      assertEquals("OK", httpConnection_Response4.statusMessage());
      assertNull(httpConnection_Response4.contentType());
      assertEquals(200, httpConnection_Response4.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response4.numRedirects);
      assertEquals(200, httpConnection_Response4.statusCode);
      assertTrue(httpConnection_Response4.executed);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test70()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      String string0 = "(l9JsiZ/r2|@zbB7?0";
      String string1 = "x=";
      String string2 = httpConnection_Request0.cookie(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      assertNull(string2);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      String string3 = "UTF-8";
      int int0 = 420;
      Connection.Method connection_Method0 = Connection.Method.POST;
      httpConnection_Request0.method = connection_Method0;
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      
      String string4 = "`|f=Uoo4(Hw";
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      
      httpConnection_Request0.url = uRL0;
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      
      String string5 = httpConnection_Response0.charset();
      assertNull(string5);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request0);
      assertNotNull(httpURLConnection0);
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals(3000, httpURLConnection0.getConnectTimeout());
      assertTrue(httpURLConnection0.getDoOutput());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.usingProxy());
      assertTrue(httpURLConnection0.getDoInput());
      assertNull(httpURLConnection0.getContentEncoding());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals(3000, httpURLConnection0.getReadTimeout());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection0.toString());
      assertEquals("POST", httpURLConnection0.getRequestMethod());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute(httpConnection_Response1.req);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test71()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      
      String string0 = "(l9jsiZ/r2|@zbB7?0";
      String string1 = "x=";
      String string2 = httpConnection_Request0.cookie(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      assertNull(string2);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      
      String string3 = "UTF-8";
      int int0 = 439;
      String string4 = "`|f=Uoo4(Hw";
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?");
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = false;
      boolean boolean1 = false;
      boolean boolean2 = FileSystemHandling.setPermissions(evoSuiteFile0, boolean0, httpConnection_Request0.followRedirects, boolean1);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      
      boolean boolean3 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string3);
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(boolean3 == boolean0);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3 == boolean1);
      assertNotSame(string3, string4);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertTrue(boolean3);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      
      httpConnection_Request0.url = uRL0;
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertNull(httpConnection_Request0.url.getQuery());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      
      HttpConnection.Response httpConnection_Response1 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpConnection_Response1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      
      HttpConnection.Response httpConnection_Response2 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response1);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotNull(httpConnection_Response2);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response2.charset());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response2.numRedirects);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Response2.req);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotNull(httpURLConnection0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response2.charset());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertTrue(httpURLConnection0.getDoInput());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertTrue(httpURLConnection0.getUseCaches());
      assertNull(httpURLConnection0.getContentType());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection0.toString());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertNull(httpURLConnection0.getContentEncoding());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals(3000, httpURLConnection0.getReadTimeout());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertEquals(3000, httpURLConnection0.getConnectTimeout());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response2.numRedirects);
      
      String string5 = httpConnection_Response2.charset();
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNull(string5);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response2.charset());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response2.numRedirects);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Response2.req);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response2.charset());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response2.numRedirects);
      
      HttpConnection.Response httpConnection_Response3 = (HttpConnection.Response)httpConnection_Response1.removeHeader(httpConnection_Response2.statusMessage);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response2));
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertSame(httpConnection_Response1, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertSame(httpConnection_Response3, httpConnection_Response1);
      assertNotSame(httpConnection_Response3, httpConnection_Response0);
      assertNotSame(httpConnection_Response3, httpConnection_Response2);
      assertNotNull(httpConnection_Response3);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response2.charset());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response3.charset());
      assertEquals(200, httpConnection_Response3.statusCode());
      assertEquals("OK", httpConnection_Response3.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response3.method());
      assertNull(httpConnection_Response3.contentType());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response3.executed);
      assertEquals(200, httpConnection_Response3.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response3.numRedirects);
      
      String string6 = httpConnection_Response2.contentType();
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertSame(httpConnection_Response1, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNull(string6);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response2.charset());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response2.numRedirects);
      
      String string7 = httpConnection_Response1.statusMessage();
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string1));
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertSame(httpConnection_Response1, httpConnection_Response3);
      assertNotSame(string7, string4);
      assertNotSame(string7, string3);
      assertNotSame(string7, string0);
      assertNotSame(string7, string1);
      assertEquals("OK", string7);
      assertNotNull(string7);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test72()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      
      String string0 = "(l9jsiZ/r2|@zbB7?0";
      String string1 = "x=";
      String string2 = httpConnection_Request0.cookie(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      assertNull(string2);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      
      String string3 = "UTF-8";
      int int0 = 439;
      String string4 = "`|f=Uoo4(Hw";
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string3);
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertNotSame(string3, string4);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertTrue(boolean0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(439, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(439, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      
      httpConnection_Request0.url = uRL0;
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      
      HttpConnection.Response httpConnection_Response1 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpConnection_Response1);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Response httpConnection_Response2 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response1);
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpConnection_Response2);
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.charset());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Response2.req);
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpURLConnection0);
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.charset());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertFalse(httpURLConnection0.getDoOutput());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertNull(httpURLConnection0.getContentType());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection0.toString());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertFalse(httpURLConnection0.usingProxy());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals(439, httpURLConnection0.getConnectTimeout());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals(439, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      String string5 = httpConnection_Response2.charset();
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNull(string5);
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.charset());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Response httpConnection_Response3 = (HttpConnection.Response)httpConnection_Response1.removeHeader(httpConnection_Response2.statusMessage);
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response2, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Response3, httpConnection_Response1);
      assertNotSame(httpConnection_Response3, httpConnection_Response2);
      assertNotSame(httpConnection_Response3, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertSame(httpConnection_Response1, httpConnection_Response3);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpConnection_Response3);
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.charset());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response3.charset());
      assertEquals(200, httpConnection_Response3.statusCode());
      assertNull(httpConnection_Response3.contentType());
      assertEquals("OK", httpConnection_Response3.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response3.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Response3.numRedirects);
      assertEquals(200, httpConnection_Response3.statusCode);
      assertTrue(httpConnection_Response3.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      String string6 = httpConnection_Response2.contentType();
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response2, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertSame(httpConnection_Response1, httpConnection_Response3);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNull(string6);
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.charset());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      String string7 = httpConnection_Response1.statusMessage();
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string3));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string7, string1);
      assertNotSame(string7, string4);
      assertNotSame(string7, string0);
      assertNotSame(string7, string3);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertSame(httpConnection_Response1, httpConnection_Response3);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals("OK", string7);
      assertNotNull(string7);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      Document document0 = httpConnection_Response2.parse();
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response2, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertSame(httpConnection_Response1, httpConnection_Response3);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(document0);
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("UTF-8", httpConnection_Response2.charset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1, document0.childNodeSize());
      assertEquals("#document", document0.nodeName());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample?", document0.baseUri());
      assertEquals("#root", document0.tagName());
      assertEquals(0, document0.siblingIndex());
      assertFalse(document0.isBlock());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample?", document0.location());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.followRedirects(httpConnection_Response1.executed);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertSame(httpConnection_Response1, httpConnection_Response3);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpConnection_Request2);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(439, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(439, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Response httpConnection_Response4 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request2);
      assertFalse(httpConnection_Response4.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response4.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response4.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response4.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotSame(httpConnection_Response4, httpConnection_Response2);
      assertNotSame(httpConnection_Response4, httpConnection_Response3);
      assertNotSame(httpConnection_Response4, httpConnection_Response0);
      assertNotSame(httpConnection_Response4, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertSame(httpConnection_Response1, httpConnection_Response3);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response4);
      assertNotNull(httpConnection_Response4);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(439, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(200, httpConnection_Response4.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response4.method());
      assertNull(httpConnection_Response4.charset());
      assertEquals("OK", httpConnection_Response4.statusMessage());
      assertNull(httpConnection_Response4.contentType());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(439, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Response4.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response4.statusCode);
      assertTrue(httpConnection_Response4.executed);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      String string8 = httpConnection_Response3.body();
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response4));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response4));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response0));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string0));
      assertTrue(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response4));
      assertNotSame(httpConnection_Response2, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Response3, httpConnection_Response1);
      assertNotSame(httpConnection_Response3, httpConnection_Response4);
      assertNotSame(httpConnection_Response3, httpConnection_Response2);
      assertNotSame(httpConnection_Response3, httpConnection_Response0);
      assertNotSame(string8, string3);
      assertNotSame(string8, string4);
      assertNotSame(string8, string0);
      assertNotSame(string8, string7);
      assertNotSame(string8, string1);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertSame(httpConnection_Response1, httpConnection_Response3);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response4);
      assertEquals("UTF-8", string8);
      assertNotNull(string8);
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("UTF-8", httpConnection_Response2.charset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response3.charset());
      assertEquals(200, httpConnection_Response3.statusCode());
      assertNull(httpConnection_Response3.contentType());
      assertEquals("OK", httpConnection_Response3.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response3.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Response3.numRedirects);
      assertEquals(200, httpConnection_Response3.statusCode);
      assertTrue(httpConnection_Response3.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test73()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      
      int int0 = (-557);
      httpConnection_Request0.timeoutMilliseconds = int0;
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals((-557), httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      String string0 = "(l9jsiZ/r2|@zbB7?0";
      String string1 = "x=";
      String string2 = httpConnection_Request0.cookie(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      assertNull(string2);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals((-557), httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals((-557), httpConnection_Request0.timeoutMilliseconds);
      
      String string3 = "UTF-8";
      int int1 = 439;
      String string4 = "`|f=Uoo4(Hw";
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string4));
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(string3, string4);
      assertTrue(boolean0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      
      httpConnection_Request0.url = uRL0;
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals((-557), httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      assertNull(httpConnection_Request0.url.getQuery());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals((-557), httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals((-557), httpConnection_Request0.timeoutMilliseconds);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // timeout can not be negative
         //
         verifyException("java.net.URLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test74()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      String string0 = "(l9jsiZ/r2|@zbB7?0";
      String string1 = "x=";
      String string2 = httpConnection_Request0.cookie(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      assertNull(string2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      String string3 = "UTF-8";
      int int0 = 439;
      String string4 = "`|f=Uoo4(Hw";
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string4));
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(string3, string4);
      assertTrue(boolean0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(439, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(439, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(439, httpConnection_Request1.timeoutMilliseconds);
      
      httpConnection_Request0.url = uRL0;
      assertEquals(439, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertEquals(439, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      HttpConnection.Response httpConnection_Response1 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpConnection_Response1);
      assertEquals(439, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      
      HttpConnection.Response httpConnection_Response2 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response1);
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpConnection_Response2);
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.charset());
      assertEquals(439, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Response2.req);
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpURLConnection0);
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.charset());
      assertEquals(439, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals(439, httpURLConnection0.getReadTimeout());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.usingProxy());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertEquals(439, httpURLConnection0.getConnectTimeout());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertNull(httpURLConnection0.getContentType());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection0.toString());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertNull(httpURLConnection0.getContentEncoding());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      
      String string5 = httpConnection_Response2.charset();
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNull(string5);
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.charset());
      assertEquals(439, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      
      String string6 = httpConnection_Response2.contentType();
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNull(string6);
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.charset());
      assertEquals(439, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      
      String string7 = httpConnection_Response1.statusMessage();
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string4));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string7, string3);
      assertNotSame(string7, string1);
      assertNotSame(string7, string0);
      assertNotSame(string7, string4);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals("OK", string7);
      assertNotNull(string7);
      assertEquals(439, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      
      Document document0 = httpConnection_Response2.parse();
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(document0);
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals("UTF-8", httpConnection_Response2.charset());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1, document0.childNodeSize());
      assertEquals("#document", document0.nodeName());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample?", document0.baseUri());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample?", document0.location());
      assertEquals("#root", document0.tagName());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertEquals(0, document0.siblingIndex());
      assertFalse(document0.isBlock());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.followRedirects(httpConnection_Response1.executed);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpConnection_Request2);
      assertEquals(439, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(439, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(439, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      
      HttpConnection.Response httpConnection_Response3 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request2);
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotSame(httpConnection_Response3, httpConnection_Response1);
      assertNotSame(httpConnection_Response3, httpConnection_Response2);
      assertNotSame(httpConnection_Response3, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response3);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpConnection_Response3);
      assertEquals(439, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(439, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("OK", httpConnection_Response3.statusMessage());
      assertEquals(200, httpConnection_Response3.statusCode());
      assertNull(httpConnection_Response3.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response3.method());
      assertNull(httpConnection_Response3.charset());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(439, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Response3.executed);
      assertEquals(200, httpConnection_Response3.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response3.numRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      
      String string8 = httpConnection_Response2.body();
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(string8.equals((Object)string1));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string0));
      assertTrue(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string4));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotSame(httpConnection_Response2, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string8, string3);
      assertNotSame(string8, string1);
      assertNotSame(string8, string7);
      assertNotSame(string8, string0);
      assertNotSame(string8, string4);
      assertNotSame(httpConnection_Response1, httpConnection_Response3);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals("UTF-8", string8);
      assertNotNull(string8);
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals("UTF-8", httpConnection_Response2.charset());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test75()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      int int0 = 1358;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1358, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1358, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1358, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1358, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      
      boolean boolean0 = true;
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.followRedirects(boolean0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1358, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1358, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(1358, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1358, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1358, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1358, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.ignoreContentType(httpConnection_Request0.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertNotNull(httpConnection_Request3);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1358, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1358, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(1358, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1358, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1358, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1358, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      
      String string0 = "value";
      MockPrintStream mockPrintStream0 = new MockPrintStream(string0);
      assertNotNull(mockPrintStream0);
      
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockPrintStream0);
      assertNotNull(objectOutputStream0);
      
      boolean boolean1 = false;
      mockPrintStream0.print(boolean1);
      assertFalse(boolean1 == boolean0);
      
      HttpURLConnection httpURLConnection0 = null;
      int int1 = 303;
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request1.cookie(string0, string0);
      assertFalse(int0 == int1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertNotNull(httpConnection_Request4);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1358, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1358, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1358, httpConnection_Request4.timeout());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1358, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1358, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1358, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.followRedirects);
      
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      URL uRL0 = MockURL.URL(string0, string0, int1, string0, uRLStreamHandler0);
      assertFalse(int1 == int0);
      assertNotNull(uRL0);
      assertEquals("value:303", uRL0.getAuthority());
      assertEquals("value", uRL0.getPath());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.toString());
      assertEquals("value", uRL0.getFile());
      assertEquals(303, uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("value", uRL0.getProtocol());
      assertNull(uRL0.toExternalForm());
      assertEquals("value", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals(0, uRL0.getDefaultPort());
      
      httpConnection_Request0.url = uRL0;
      assertEquals(303, httpConnection_Request0.url.getPort());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals("value:303", httpConnection_Request0.url.getAuthority());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals(0, httpConnection_Request0.url.getDefaultPort());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals("value", httpConnection_Request0.url.getFile());
      assertNull(httpConnection_Request0.url.toExternalForm());
      assertEquals("value", httpConnection_Request0.url.getPath());
      assertEquals("value", httpConnection_Request0.url.getHost());
      assertNull(httpConnection_Request0.url.toString());
      assertEquals("value", httpConnection_Request0.url.getProtocol());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1358, httpConnection_Request0.timeout());
      assertEquals("value:303", uRL0.getAuthority());
      assertEquals("value", uRL0.getPath());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.toString());
      assertEquals("value", uRL0.getFile());
      assertEquals(303, uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("value", uRL0.getProtocol());
      assertNull(uRL0.toExternalForm());
      assertEquals("value", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals(0, uRL0.getDefaultPort());
      
      HttpConnection.Response.writePost(httpConnection_Request0.data, mockPrintStream0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1358, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1358, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      String string1 = HttpConnection.Response.getRequestCookieString(httpConnection_Request0);
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string1, string0);
      assertEquals("value=value", string1);
      assertNotNull(string1);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1358, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1358, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request3);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Only http & https protocols supported
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test76()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      boolean boolean0 = true;
      httpConnection_Response0.executed = boolean0;
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      
      String string0 = "body";
      httpConnection_Response0.charset = string0;
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals("body", httpConnection_Response0.charset());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // body
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 11000)
  public void test77()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      String string0 = "http";
      String string1 = "C6I=';xra$)69";
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.cookie(string0, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      
      String string2 = "https";
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string2);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertNotNull(httpConnection_KeyVal0);
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request2.ignoreContentType(httpConnection_Request0.ignoreContentType);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertNotNull(httpConnection_Request3);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      
      Connection.Method connection_Method0 = Connection.Method.POST;
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request2.method(connection_Method0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertNotNull(httpConnection_Request4);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.POST, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.POST, httpConnection_Request4.method());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      
      URL uRL0 = MockURL.URL(httpConnection_KeyVal0.key, httpConnection_KeyVal0.value, httpConnection_Request0.maxBodySizeBytes, string0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertNotNull(uRL0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("http", uRL0.getFile());
      assertEquals("https", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://https:1048576http", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("http", uRL0.getPath());
      assertNull(uRL0.getUserInfo());
      assertEquals("https:1048576", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(1048576, uRL0.getPort());
      assertEquals("http://https:1048576http", uRL0.toString());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      httpConnection_Request2.url = uRL0;
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.POST, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("http", uRL0.getFile());
      assertEquals("https", uRL0.getHost());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://https:1048576http", uRL0.toExternalForm());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("http", uRL0.getPath());
      assertNull(uRL0.getUserInfo());
      assertEquals("https:1048576", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertEquals(1048576, uRL0.getPort());
      assertEquals("http://https:1048576http", uRL0.toString());
      assertNull(httpConnection_Request2.url.getUserInfo());
      assertNull(httpConnection_Request2.url.getQuery());
      assertEquals(1048576, httpConnection_Request2.url.getPort());
      assertNull(httpConnection_Request2.url.getRef());
      assertEquals((-1), httpConnection_Request2.url.getDefaultPort());
      assertEquals("http://https:1048576http", httpConnection_Request2.url.toString());
      assertEquals("http", httpConnection_Request2.url.getFile());
      assertEquals("http://https:1048576http", httpConnection_Request2.url.toExternalForm());
      assertEquals("http", httpConnection_Request2.url.getProtocol());
      assertEquals("http", httpConnection_Request2.url.getPath());
      assertEquals("https:1048576", httpConnection_Request2.url.getAuthority());
      assertEquals("https", httpConnection_Request2.url.getHost());
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request3);
        fail("Expecting exception: UnknownServiceException");
      
      } catch(UnknownServiceException e) {
         //
         // protocol doesn't support output
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test78()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      
      String string0 = "(l9jsiZ/r2|@zbB7?0";
      String string1 = "x=";
      String string2 = httpConnection_Request0.cookie(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      assertNull(string2);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      
      String string3 = "UTF-8";
      int int0 = 439;
      String string4 = "`|f=Uoo4(Hw";
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string4));
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(string3, string4);
      assertTrue(boolean0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(439, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(439, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      
      httpConnection_Request0.url = uRL0;
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      HttpConnection.Response httpConnection_Response1 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpConnection_Response1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.ignoreContentType(httpConnection_Request1.followRedirects);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertNotNull(httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(439, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(439, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(439, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(439, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(439, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(439, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(439, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(439, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      
      String string5 = "z2 /ed}neC";
      httpConnection_Response0.contentType = string5;
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals("z2 /ed}neC", httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      
      HttpConnection.Response httpConnection_Response2 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response1);
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotNull(httpConnection_Response2);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response2.charset());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Response2.req);
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotNull(httpURLConnection0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response2.charset());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertTrue(httpURLConnection0.getDoInput());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertNull(httpURLConnection0.getContentType());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertNull(httpURLConnection0.getContentEncoding());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection0.toString());
      assertEquals(439, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals(439, httpURLConnection0.getConnectTimeout());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      
      String string6 = httpConnection_Response2.charset();
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNull(string6);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response2.charset());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      
      String string7 = httpConnection_Response2.contentType();
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNull(string7);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response2.charset());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      
      String string8 = httpConnection_Response1.statusMessage();
      assertFalse(string8.equals((Object)string5));
      assertFalse(string8.equals((Object)string1));
      assertFalse(string8.equals((Object)string0));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string3));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string8, string5);
      assertNotSame(string8, string1);
      assertNotSame(string8, string0);
      assertNotSame(string8, string4);
      assertNotSame(string8, string3);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertEquals("OK", string8);
      assertNotNull(string8);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      
      Document document0 = httpConnection_Response2.parse();
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotNull(document0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Response2.charset());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals("#root", document0.tagName());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample?", document0.location());
      assertEquals(0, document0.siblingIndex());
      assertFalse(document0.isBlock());
      assertEquals("#document", document0.nodeName());
      assertEquals(1, document0.childNodeSize());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample?", document0.baseUri());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      
      HttpConnection.Response httpConnection_Response3 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request1);
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response3, httpConnection_Response2);
      assertNotSame(httpConnection_Response3, httpConnection_Response1);
      assertNotSame(httpConnection_Response3, httpConnection_Response0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertNotNull(httpConnection_Response3);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Response3.method());
      assertNull(httpConnection_Response3.charset());
      assertEquals("OK", httpConnection_Response3.statusMessage());
      assertNull(httpConnection_Response3.contentType());
      assertEquals(200, httpConnection_Response3.statusCode());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(439, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Response3.numRedirects);
      assertEquals(200, httpConnection_Response3.statusCode);
      assertTrue(httpConnection_Response3.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(439, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      
      httpConnection_Response3.setupFromConnection(httpURLConnection0, httpConnection_Response1);
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response3));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response3, httpConnection_Response2);
      assertNotSame(httpConnection_Response3, httpConnection_Response1);
      assertNotSame(httpConnection_Response3, httpConnection_Response0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response3);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Response2.charset());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertTrue(httpURLConnection0.getDoInput());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertNull(httpURLConnection0.getContentType());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertNull(httpURLConnection0.getContentEncoding());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection0.toString());
      assertEquals(439, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals(439, httpURLConnection0.getConnectTimeout());
      assertEquals(Connection.Method.GET, httpConnection_Response3.method());
      assertEquals((-1), httpConnection_Response3.statusCode());
      assertNull(httpConnection_Response3.charset());
      assertEquals("OK", httpConnection_Response3.statusMessage());
      assertNull(httpConnection_Response3.contentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(439, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals((-1), httpConnection_Response3.statusCode);
      assertEquals(0, httpConnection_Response3.numRedirects);
      assertTrue(httpConnection_Response3.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(439, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      
      String string9 = httpConnection_Response2.body();
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(string9.equals((Object)string5));
      assertFalse(string9.equals((Object)string1));
      assertFalse(string9.equals((Object)string0));
      assertFalse(string9.equals((Object)string8));
      assertFalse(string9.equals((Object)string4));
      assertTrue(string9.equals((Object)string3));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response3));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(string9, string5);
      assertNotSame(string9, string1);
      assertNotSame(string9, string0);
      assertNotSame(string9, string3);
      assertNotSame(string9, string8);
      assertNotSame(string9, string4);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response3);
      assertEquals("UTF-8", string9);
      assertNotNull(string9);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Response2.charset());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test79()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      String string0 = "(l9jsiZ/r2|@zbB7?0";
      String string1 = "x=";
      String string2 = httpConnection_Request0.cookie(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      assertNull(string2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      String string3 = "UTF-8";
      int int0 = 439;
      String string4 = "`|f=Uoo4(Hw";
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?");
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      
      httpConnection_Request0.url = uRL0;
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request0);
      assertNotNull(httpURLConnection0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.usingProxy());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertTrue(httpURLConnection0.getDoInput());
      assertNull(httpURLConnection0.getContentType());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection0.toString());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertNull(httpURLConnection0.getContentEncoding());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertEquals(3000, httpURLConnection0.getReadTimeout());
      assertEquals(3000, httpURLConnection0.getConnectTimeout());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      
      try { 
        httpConnection_Response0.setupFromConnection(httpURLConnection0, httpConnection_Response1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: www.someFakeButWellFormedURL.org
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test80()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      
      String string0 = "(l9jsiZ/r2|@zbB7?0";
      String string1 = "=";
      String string2 = httpConnection_Request0.cookie(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      assertNull(string2);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      
      String string3 = "UTF-8";
      int int0 = 470;
      Connection.Method connection_Method0 = Connection.Method.POST;
      httpConnection_Request0.method = connection_Method0;
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      String string4 = "ScriptDataEscapeStart";
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      assertFalse(boolean0);
      
      httpConnection_Request0.url = uRL0;
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.POST, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response1);
        fail("Expecting exception: UnknownServiceException");
      
      } catch(UnknownServiceException e) {
         //
         // protocol doesn't support output
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test81()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      String string0 = "http";
      String string1 = "https";
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(string0, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotNull(httpConnection_KeyVal0);
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.followRedirects(httpConnection_Request1.followRedirects);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request1.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertNotNull(httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request1.parser(httpConnection_Request3.parser);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertNotNull(httpConnection_Request4);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      
      URL uRL0 = MockURL.URL(httpConnection_KeyVal0.key, httpConnection_KeyVal0.value, httpConnection_Request0.maxBodySizeBytes, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotNull(uRL0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertEquals("http", uRL0.getFile());
      assertEquals("https", uRL0.getHost());
      assertEquals("http", uRL0.getPath());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("https:1048576", uRL0.getAuthority());
      assertEquals(1048576, uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http://https:1048576http", uRL0.toExternalForm());
      assertEquals("http://https:1048576http", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      httpConnection_Request1.url = uRL0;
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("http", uRL0.getFile());
      assertEquals("https", uRL0.getHost());
      assertEquals("http", uRL0.getPath());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("https:1048576", uRL0.getAuthority());
      assertEquals(1048576, uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http://https:1048576http", uRL0.toExternalForm());
      assertEquals("http://https:1048576http", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http", httpConnection_Request1.url.getProtocol());
      assertNull(httpConnection_Request1.url.getRef());
      assertNull(httpConnection_Request1.url.getUserInfo());
      assertEquals((-1), httpConnection_Request1.url.getDefaultPort());
      assertEquals("https:1048576", httpConnection_Request1.url.getAuthority());
      assertEquals(1048576, httpConnection_Request1.url.getPort());
      assertEquals("http://https:1048576http", httpConnection_Request1.url.toString());
      assertEquals("https", httpConnection_Request1.url.getHost());
      assertEquals("http", httpConnection_Request1.url.getFile());
      assertEquals("http://https:1048576http", httpConnection_Request1.url.toExternalForm());
      assertNull(httpConnection_Request1.url.getQuery());
      assertEquals("http", httpConnection_Request1.url.getPath());
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request2.parser(httpConnection_Request4.parser);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertNotNull(httpConnection_Request5);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("http", httpConnection_KeyVal0.key());
      assertEquals("https", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request5.timeout());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.followRedirects);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertFalse(httpConnection_Request5.ignoreContentType);
      
      try { 
        HttpConnection.Response.serialiseRequestUrl(httpConnection_Request5);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // For input string: \"1048576http\"
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 11000)
  public void test82()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.createFolder(evoSuiteFile0);
      assertFalse(boolean0);
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNotNull(httpConnection_KeyVal0);
      assertNull(httpConnection_KeyVal0.value());
      assertNull(httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(httpConnection_Request0.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      
      String string0 = "?";
      String string1 = "'UC--C*;";
      String string2 = "D])[TF#6E*_r\\Z/Dj";
      URI uRI0 = MockURI.aHttpURI;
      assertNotNull(uRI0);
      assertFalse(uRI0.isOpaque());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals("foo.bar", uRI0.getHost());
      assertTrue(uRI0.isAbsolute());
      assertNull(uRI0.getRawUserInfo());
      assertEquals((-1), uRI0.getPort());
      assertNull(uRI0.getRawFragment());
      assertNull(uRI0.getRawQuery());
      assertEquals("http", uRI0.getScheme());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertEquals("", uRI0.getRawPath());
      
      URL uRL0 = MockURI.toURL(uRI0);
      assertNotNull(uRL0);
      assertFalse(uRI0.isOpaque());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals("foo.bar", uRI0.getHost());
      assertTrue(uRI0.isAbsolute());
      assertNull(uRI0.getRawUserInfo());
      assertEquals((-1), uRI0.getPort());
      assertNull(uRI0.getRawFragment());
      assertNull(uRI0.getRawQuery());
      assertEquals("http", uRI0.getScheme());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertEquals("", uRI0.getRawPath());
      assertEquals("", uRL0.getFile());
      assertNull(uRL0.getUserInfo());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("", uRL0.getPath());
      assertEquals("foo.bar", uRL0.getHost());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://foo.bar", uRL0.toString());
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.url(uRL0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotNull(httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(uRI0.isOpaque());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals("foo.bar", uRI0.getHost());
      assertTrue(uRI0.isAbsolute());
      assertNull(uRI0.getRawUserInfo());
      assertEquals((-1), uRI0.getPort());
      assertNull(uRI0.getRawFragment());
      assertNull(uRI0.getRawQuery());
      assertEquals("http", uRI0.getScheme());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertEquals("", uRI0.getRawPath());
      assertEquals("", uRL0.getFile());
      assertNull(uRL0.getUserInfo());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("", uRL0.getPath());
      assertEquals("foo.bar", uRL0.getHost());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://foo.bar", uRL0.toString());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.timeoutMilliseconds);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.cookie(string1, string2);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertNotNull(httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(1048576, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      
      String string3 = httpConnection_Request0.getHeaderCaseInsensitive(string0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNull(string3);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request1.parser(httpConnection_Request0.parser);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertNotNull(httpConnection_Request4);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      
      int int0 = 78;
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request4.maxBodySize(int0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertNotNull(httpConnection_Request5);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(78, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(78, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(78, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(78, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(1048576, httpConnection_Request5.timeout());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(78, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(78, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(78, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(78, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(1048576, httpConnection_Request5.timeoutMilliseconds);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(78, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(78, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(78, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(78, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.followRedirects());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(1048576, httpConnection_Request5.timeout());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(78, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(78, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(78, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(78, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(1048576, httpConnection_Request5.timeoutMilliseconds);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      int int1 = 200;
      httpConnection_Response0.statusCode = int1;
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      
      String string4 = httpConnection_Response0.statusMessage();
      assertNull(string4);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertNotNull(httpURLConnection0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(78, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(78, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals(1048576, httpURLConnection0.getReadTimeout());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertTrue(httpURLConnection0.getUseCaches());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://foo.bar?", httpURLConnection0.toString());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertEquals(1048576, httpURLConnection0.getConnectTimeout());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.usingProxy());
      assertTrue(httpURLConnection0.getDoInput());
      assertNull(httpURLConnection0.getContentEncoding());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(78, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(78, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      
      HttpConnection.Request httpConnection_Request6 = (HttpConnection.Request)httpConnection_Request4.maxBodySize(httpConnection_Request0.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request6);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertNotNull(httpConnection_Request6);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request6.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertTrue(httpConnection_Request6.followRedirects());
      assertEquals(1048576, httpConnection_Request6.timeout());
      assertFalse(httpConnection_Request6.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request6.followRedirects);
      assertFalse(httpConnection_Request6.ignoreHttpErrors);
      assertFalse(httpConnection_Request6.ignoreContentType);
      assertEquals(1048576, httpConnection_Request6.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request6);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request6.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertTrue(httpConnection_Request6.followRedirects());
      assertEquals(1048576, httpConnection_Request6.timeout());
      assertFalse(httpConnection_Request6.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request6.followRedirects);
      assertFalse(httpConnection_Request6.ignoreHttpErrors);
      assertFalse(httpConnection_Request6.ignoreContentType);
      assertEquals(1048576, httpConnection_Request6.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(200, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(200, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request6);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request6.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertTrue(httpConnection_Request6.followRedirects());
      assertEquals(1048576, httpConnection_Request6.timeout());
      assertFalse(httpConnection_Request6.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request6.followRedirects);
      assertFalse(httpConnection_Request6.ignoreHttpErrors);
      assertFalse(httpConnection_Request6.ignoreContentType);
      assertEquals(1048576, httpConnection_Request6.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test83()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      String string0 = "(l9jsiZ/r2|@zbB7?0";
      String string1 = "x=";
      String string2 = httpConnection_Request0.cookie(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      assertNull(string2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      String string3 = "UTF-8";
      int int0 = 439;
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertTrue(boolean0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(439, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(439, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      
      httpConnection_Request0.url = uRL0;
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Response httpConnection_Response1 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpConnection_Response1);
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.ignoreContentType(httpConnection_Request1.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals(439, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(439, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(439, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(439, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(439, httpConnection_Request2.timeoutMilliseconds);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(439, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(439, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(439, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(439, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(439, httpConnection_Request2.timeoutMilliseconds);
      
      String string4 = "z2 /ed}neC";
      httpConnection_Response0.contentType = string4;
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals("z2 /ed}neC", httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      
      HttpConnection.Response httpConnection_Response2 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response1);
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpConnection_Response2);
      assertEquals(439, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Response2.req);
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpURLConnection0);
      assertEquals(439, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.charset());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals(439, httpURLConnection0.getConnectTimeout());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals(439, httpURLConnection0.getReadTimeout());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection0.toString());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertTrue(httpURLConnection0.getDoInput());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.usingProxy());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      
      httpConnection_Response2.contentType = httpConnection_Response0.contentType;
      assertEquals(439, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals("z2 /ed}neC", httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.charset());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals("z2 /ed}neC", httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      
      String string5 = httpConnection_Response2.charset();
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNull(string5);
      assertEquals(439, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals("z2 /ed}neC", httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      
      String string6 = httpConnection_Response2.contentType();
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(string6, string0);
      assertNotSame(string6, string3);
      assertSame(string6, string4);
      assertNotSame(string6, string1);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals("z2 /ed}neC", string6);
      assertNotNull(string6);
      assertEquals(439, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals("z2 /ed}neC", httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      
      Document document0 = httpConnection_Response2.parse();
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(document0);
      assertEquals(439, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals("UTF-8", httpConnection_Response2.charset());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals("z2 /ed}neC", httpConnection_Response2.contentType());
      assertFalse(document0.isBlock());
      assertEquals(1, document0.childNodeSize());
      assertEquals(0, document0.siblingIndex());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample?", document0.baseUri());
      assertEquals("#document", document0.nodeName());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertEquals("#root", document0.tagName());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample?", document0.location());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request0.followRedirects(httpConnection_Response1.executed);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpConnection_Request3);
      assertEquals(439, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(439, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(439, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      
      HttpConnection.Response httpConnection_Response3 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request3);
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertNotSame(httpConnection_Response3, httpConnection_Response1);
      assertNotSame(httpConnection_Response3, httpConnection_Response2);
      assertNotSame(httpConnection_Response3, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response3);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpConnection_Response3);
      assertEquals(439, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(439, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(200, httpConnection_Response3.statusCode());
      assertNull(httpConnection_Response3.contentType());
      assertNull(httpConnection_Response3.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response3.method());
      assertEquals("OK", httpConnection_Response3.statusMessage());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(439, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response3.statusCode);
      assertEquals(0, httpConnection_Response3.numRedirects);
      assertTrue(httpConnection_Response3.executed);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      
      String string7 = httpConnection_Response2.body();
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertTrue(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string4));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response3);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(string7, string0);
      assertNotSame(string7, string3);
      assertNotSame(string7, string6);
      assertNotSame(string7, string1);
      assertNotSame(string7, string4);
      assertNotSame(httpConnection_Response1, httpConnection_Response3);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals("UTF-8", string7);
      assertNotNull(string7);
      assertEquals(439, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals("UTF-8", httpConnection_Response2.charset());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals("z2 /ed}neC", httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test84()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      String string0 = "http";
      String string1 = "https";
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal(string1, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(httpConnection_KeyVal0);
      assertEquals("https", httpConnection_KeyVal0.key());
      assertEquals("http", httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(httpConnection_Request0.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.timeout(httpConnection_Request0.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      
      URL uRL0 = MockURL.URL(httpConnection_KeyVal0.key, httpConnection_KeyVal0.value, httpConnection_Request0.maxBodySizeBytes, string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotNull(uRL0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("https", httpConnection_KeyVal0.key());
      assertEquals("http", httpConnection_KeyVal0.value());
      assertEquals(1048576, uRL0.getPort());
      assertEquals("https://http:1048576http", uRL0.toExternalForm());
      assertEquals("https://http:1048576http", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals("https", uRL0.getProtocol());
      assertEquals("http", uRL0.getFile());
      assertNull(uRL0.getUserInfo());
      assertEquals("http:1048576", uRL0.getAuthority());
      assertEquals("http", uRL0.getHost());
      assertEquals("http", uRL0.getPath());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      httpConnection_Request1.url = uRL0;
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("https", httpConnection_KeyVal0.key());
      assertEquals("http", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, uRL0.getPort());
      assertEquals("https://http:1048576http", uRL0.toExternalForm());
      assertEquals("https://http:1048576http", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals("https", uRL0.getProtocol());
      assertEquals("http", uRL0.getFile());
      assertNull(uRL0.getUserInfo());
      assertEquals("http:1048576", uRL0.getAuthority());
      assertEquals("http", uRL0.getHost());
      assertEquals("http", uRL0.getPath());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(httpConnection_Request1.url.getRef());
      assertEquals((-1), httpConnection_Request1.url.getDefaultPort());
      assertEquals(1048576, httpConnection_Request1.url.getPort());
      assertEquals("https://http:1048576http", httpConnection_Request1.url.toString());
      assertNull(httpConnection_Request1.url.getQuery());
      assertEquals("http", httpConnection_Request1.url.getPath());
      assertEquals("http", httpConnection_Request1.url.getHost());
      assertEquals("http", httpConnection_Request1.url.getFile());
      assertEquals("http:1048576", httpConnection_Request1.url.getAuthority());
      assertNull(httpConnection_Request1.url.getUserInfo());
      assertEquals("https://http:1048576http", httpConnection_Request1.url.toExternalForm());
      assertEquals("https", httpConnection_Request1.url.getProtocol());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // HTTP error fetching URL
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test85()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      String string0 = "x=";
      String string1 = "UTF-8";
      int int0 = 439;
      String string2 = "`|f=Uoo4(Hw";
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertTrue(boolean0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      
      httpConnection_Request0.url = uRL0;
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      String string3 = "'_fCb s@";
      HttpConnection.Response httpConnection_Response1 = (HttpConnection.Response)httpConnection_Response0.cookie(string3, string0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request0);
      assertNotNull(httpURLConnection0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getUseCaches());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals(3000, httpURLConnection0.getReadTimeout());
      assertEquals(3000, httpURLConnection0.getConnectTimeout());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection0.toString());
      assertNull(httpURLConnection0.getContentType());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      httpConnection_Response0.setupFromConnection(httpURLConnection0, httpConnection_Response0);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals((-1), httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertEquals("OK", httpConnection_Response0.statusMessage());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getUseCaches());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals(3000, httpURLConnection0.getReadTimeout());
      assertEquals(3000, httpURLConnection0.getConnectTimeout());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection0.toString());
      assertNull(httpURLConnection0.getContentType());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals((-1), httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Response httpConnection_Response2 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotNull(httpConnection_Response2);
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(0, httpConnection_Response2.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response2.executed);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      HttpConnection.Response httpConnection_Response3 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response2);
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response2));
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response3);
      assertNotSame(httpConnection_Response3, httpConnection_Response0);
      assertNotSame(httpConnection_Response3, httpConnection_Response1);
      assertNotSame(httpConnection_Response3, httpConnection_Response2);
      assertNotNull(httpConnection_Response3);
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response3.charset());
      assertEquals(200, httpConnection_Response3.statusCode());
      assertNull(httpConnection_Response3.contentType());
      assertEquals("OK", httpConnection_Response3.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response3.method());
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(0, httpConnection_Response2.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response2.executed);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1, httpConnection_Response3.numRedirects);
      assertEquals(200, httpConnection_Response3.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response3.executed);
      
      HttpURLConnection httpURLConnection1 = HttpConnection.Response.createConnection(httpConnection_Response3.req);
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response2));
      assertFalse(httpURLConnection1.equals((Object)httpURLConnection0));
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response3);
      assertNotSame(httpConnection_Response3, httpConnection_Response0);
      assertNotSame(httpConnection_Response3, httpConnection_Response1);
      assertNotSame(httpConnection_Response3, httpConnection_Response2);
      assertNotSame(httpURLConnection1, httpURLConnection0);
      assertNotNull(httpURLConnection1);
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response3.charset());
      assertEquals(200, httpConnection_Response3.statusCode());
      assertNull(httpConnection_Response3.contentType());
      assertEquals("OK", httpConnection_Response3.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response3.method());
      assertFalse(httpURLConnection1.getInstanceFollowRedirects());
      assertTrue(httpURLConnection1.getFollowRedirects());
      assertTrue(httpURLConnection1.getDoInput());
      assertEquals(0L, httpURLConnection1.getIfModifiedSince());
      assertNull(httpURLConnection1.getContentEncoding());
      assertEquals(3000, httpURLConnection1.getReadTimeout());
      assertTrue(httpURLConnection1.getDefaultUseCaches());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection1.toString());
      assertEquals((-1), httpURLConnection1.getContentLength());
      assertEquals("GET", httpURLConnection1.getRequestMethod());
      assertFalse(httpURLConnection1.getDoOutput());
      assertEquals(3000, httpURLConnection1.getConnectTimeout());
      assertTrue(httpURLConnection1.getUseCaches());
      assertFalse(httpURLConnection1.getAllowUserInteraction());
      assertFalse(httpURLConnection1.getDefaultAllowUserInteraction());
      assertNull(httpURLConnection1.getContentType());
      assertFalse(httpURLConnection1.usingProxy());
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(0, httpConnection_Response2.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response2.executed);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1, httpConnection_Response3.numRedirects);
      assertEquals(200, httpConnection_Response3.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response3.executed);
      
      HttpConnection.Response httpConnection_Response4 = (HttpConnection.Response)httpConnection_Response2.removeHeader(httpConnection_Response3.statusMessage);
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response4.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response4.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response4.equals((Object)httpConnection_Response1));
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertSame(httpConnection_Response2, httpConnection_Response4);
      assertNotSame(httpConnection_Response2, httpConnection_Response3);
      assertNotSame(httpConnection_Response3, httpConnection_Response0);
      assertNotSame(httpConnection_Response3, httpConnection_Response1);
      assertNotSame(httpConnection_Response3, httpConnection_Response4);
      assertNotSame(httpConnection_Response3, httpConnection_Response2);
      assertNotSame(httpConnection_Response4, httpConnection_Response3);
      assertNotSame(httpConnection_Response4, httpConnection_Response0);
      assertNotSame(httpConnection_Response4, httpConnection_Response1);
      assertSame(httpConnection_Response4, httpConnection_Response2);
      assertNotNull(httpConnection_Response4);
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response3.charset());
      assertEquals(200, httpConnection_Response3.statusCode());
      assertNull(httpConnection_Response3.contentType());
      assertEquals("OK", httpConnection_Response3.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response3.method());
      assertEquals(Connection.Method.GET, httpConnection_Response4.method());
      assertEquals(200, httpConnection_Response4.statusCode());
      assertNull(httpConnection_Response4.contentType());
      assertEquals("OK", httpConnection_Response4.statusMessage());
      assertNull(httpConnection_Response4.charset());
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(0, httpConnection_Response2.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response2.executed);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1, httpConnection_Response3.numRedirects);
      assertEquals(200, httpConnection_Response3.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response3.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response4.numRedirects);
      assertEquals(200, httpConnection_Response4.statusCode);
      assertTrue(httpConnection_Response4.executed);
      
      String string4 = httpConnection_Response3.contentType();
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response3));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response4));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response2));
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertSame(httpConnection_Response2, httpConnection_Response4);
      assertNotSame(httpConnection_Response2, httpConnection_Response3);
      assertNotSame(httpConnection_Response3, httpConnection_Response0);
      assertNotSame(httpConnection_Response3, httpConnection_Response1);
      assertNotSame(httpConnection_Response3, httpConnection_Response4);
      assertNotSame(httpConnection_Response3, httpConnection_Response2);
      assertNull(string4);
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertNull(httpConnection_Response3.charset());
      assertEquals(200, httpConnection_Response3.statusCode());
      assertNull(httpConnection_Response3.contentType());
      assertEquals("OK", httpConnection_Response3.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response3.method());
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(0, httpConnection_Response2.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response2.executed);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1, httpConnection_Response3.numRedirects);
      assertEquals(200, httpConnection_Response3.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response3.executed);
      
      String string5 = httpConnection_Response2.statusMessage();
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string3));
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertSame(httpConnection_Response2, httpConnection_Response4);
      assertNotSame(httpConnection_Response2, httpConnection_Response3);
      assertNotSame(string5, string2);
      assertNotSame(string5, string1);
      assertNotSame(string5, string0);
      assertNotSame(string5, string3);
      assertEquals("OK", string5);
      assertNotNull(string5);
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.charset());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(0, httpConnection_Response2.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response2.executed);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test86()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      
      String string0 = "(l9jsiZ/r2|@zbB7?0";
      String string1 = "x=";
      String string2 = httpConnection_Request0.cookie(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      assertNull(string2);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      
      String string3 = "UTF-8";
      int int0 = 439;
      URLStreamHandler uRLStreamHandler0 = mock(URLStreamHandler.class, new ViolatedAssumptionAnswer());
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.someFakeButWellFormedURL.org/fooExample?");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertTrue(boolean0);
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotNull(httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(439, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(439, httpConnection_Request1.timeoutMilliseconds);
      
      httpConnection_Request0.url = uRL0;
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertEquals((-1), uRL0.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertNull(uRL0.getQuery());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getHost());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toExternalForm());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertEquals("www.someFakeButWellFormedURL.org", httpConnection_Request0.url.getAuthority());
      assertEquals("http", httpConnection_Request0.url.getProtocol());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertNull(httpConnection_Request0.url.getRef());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", httpConnection_Request0.url.toString());
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      
      HttpConnection.Response httpConnection_Response1 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotNull(httpConnection_Response1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.ignoreContentType(httpConnection_Request1.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotNull(httpConnection_Request2);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(439, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(439, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(439, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(439, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(439, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.ignoreContentType());
      assertEquals(439, httpConnection_Request2.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(439, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(439, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      
      String string4 = "z2 /ed}neC";
      httpConnection_Response0.contentType = string4;
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertEquals("z2 /ed}neC", httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      
      HttpConnection.Response httpConnection_Response2 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response1);
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotNull(httpConnection_Response2);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response2.charset());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Response2.req);
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotNull(httpURLConnection0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response2.charset());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals(439, httpURLConnection0.getConnectTimeout());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertFalse(httpURLConnection0.usingProxy());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertNull(httpURLConnection0.getContentType());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertNull(httpURLConnection0.getContentEncoding());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertTrue(httpURLConnection0.getUseCaches());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://www.someFakeButWellFormedURL.org/fooExample?", httpURLConnection0.toString());
      assertTrue(httpURLConnection0.getDoInput());
      assertEquals(439, httpURLConnection0.getReadTimeout());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      
      HttpConnection.Response.MAX_REDIRECTS = httpConnection_Response0.numRedirects;
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertEquals("z2 /ed}neC", httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      
      String string5 = httpConnection_Response2.charset();
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNull(string5);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response2.charset());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(0, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      
      String string6 = httpConnection_Response2.contentType();
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNull(string6);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response2.charset());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(0, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      
      Document document0 = httpConnection_Response2.parse();
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(httpConnection_Response2, httpConnection_Response1);
      assertNotSame(httpConnection_Response2, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotNull(document0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Response2.charset());
      assertEquals(200, httpConnection_Response2.statusCode());
      assertNull(httpConnection_Response2.contentType());
      assertEquals("OK", httpConnection_Response2.statusMessage());
      assertEquals(Connection.Method.GET, httpConnection_Response2.method());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample?", document0.location());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample?", document0.baseUri());
      assertEquals("#document", document0.nodeName());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertEquals(1, document0.childNodeSize());
      assertFalse(document0.isBlock());
      assertEquals("#root", document0.tagName());
      assertEquals(0, document0.siblingIndex());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(200, httpConnection_Response2.statusCode);
      assertEquals(1, httpConnection_Response2.numRedirects);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(0, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request0.followRedirects(httpConnection_Response1.executed);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotNull(httpConnection_Request3);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertEquals(439, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(439, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(0, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      
      HttpConnection.Response httpConnection_Response3 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request3);
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response2));
      assertFalse(httpConnection_Response3.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response2));
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertNotSame(httpConnection_Response3, httpConnection_Response1);
      assertNotSame(httpConnection_Response3, httpConnection_Response2);
      assertNotSame(httpConnection_Response3, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response1, httpConnection_Response2);
      assertNotSame(httpConnection_Response1, httpConnection_Response3);
      assertNotNull(httpConnection_Response3);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.ignoreContentType());
      assertEquals(439, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertNull(httpConnection_Response3.charset());
      assertEquals(200, httpConnection_Response3.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response3.method());
      assertNull(httpConnection_Response3.contentType());
      assertEquals("OK", httpConnection_Response3.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(439, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(0, httpConnection_Response3.numRedirects);
      assertTrue(httpConnection_Response3.executed);
      assertEquals(200, httpConnection_Response3.statusCode);
      assertEquals(0, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      
      int int1 = 2212;
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request1.maxBodySize(int1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertNotNull(httpConnection_Request4);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(2212, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertEquals(439, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(2212, httpConnection_Request1.maxBodySize());
      assertEquals(439, httpConnection_Request1.timeout());
      assertEquals(439, httpConnection_Request4.timeout());
      assertEquals(2212, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.ignoreContentType());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(2212, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(439, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(2212, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(439, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.ignoreContentType);
      assertEquals(2212, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(439, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request4, httpConnection_Response1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Too many redirects occurred trying to load URL http://www.someFakeButWellFormedURL.org/fooExample?
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }
}
