/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 02 13:49:17 GMT 2021
 */

package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.SequenceInputStream;
import java.net.HttpURLConnection;
import java.net.InetSocketAddress;
import java.net.MalformedURLException;
import java.net.Proxy;
import java.net.SocketAddress;
import java.net.URI;
import java.net.URL;
import java.nio.charset.Charset;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.function.BiFunction;
import javax.net.ssl.HostnameVerifier;
import javax.net.ssl.SSLSocketFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.jsoup.Connection;
import org.jsoup.helper.HttpConnection;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.TextNode;
import org.jsoup.parser.Parser;
import org.junit.runner.RunWith;
import sun.security.ssl.SSLSocketFactoryImpl;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HttpConnection$Response_ESTest extends HttpConnection$Response_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      
      Proxy proxy0 = Proxy.NO_PROXY;
      assertNotNull(proxy0);
      assertEquals(Proxy.Type.DIRECT, proxy0.type());
      assertEquals("DIRECT", proxy0.toString());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.proxy(proxy0);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Proxy.Type.DIRECT, proxy0.type());
      assertEquals("DIRECT", proxy0.toString());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      
      String string0 = "";
      int int0 = 1013;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.proxy(string0, int0);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Proxy.Type.DIRECT, proxy0.type());
      assertEquals("DIRECT", proxy0.toString());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.proxy(httpConnection_Request0.proxy);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertNotNull(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Proxy.Type.DIRECT, proxy0.type());
      assertEquals("DIRECT", proxy0.toString());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request2.ignoreContentType(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertNotNull(httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Proxy.Type.DIRECT, proxy0.type());
      assertEquals("DIRECT", proxy0.toString());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      
      String string1 = HttpConnection.Response.getRequestCookieString(httpConnection_Request2);
      assertTrue(string1.equals((Object)string0));
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals("", string1);
      assertNotNull(string1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertNotSame(string0, string1);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertNotSame(string1, string0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Proxy.Type.DIRECT, proxy0.type());
      assertEquals("DIRECT", proxy0.toString());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      
      String string2 = httpConnection_Response0.statusMessage();
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNull(string2);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      httpConnection_Response1.processResponseHeaders(hashMap0);
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      String string0 = "";
      String string1 = "i4-w=dwZ\"`0!pc4HWB";
      Document document0 = Parser.parseBodyFragmentRelaxed(string0, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(document0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertEquals("#root", document0.tagName());
      assertEquals("i4-w=dwZ\"`0!pc4HWB", document0.location());
      assertEquals("i4-w=dwZ\"`0!pc4HWB", document0.baseUri());
      assertEquals(0, document0.siblingIndex());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertFalse(document0.isBlock());
      assertEquals(1, document0.childNodeSize());
      assertEquals("#document", document0.nodeName());
      assertFalse(document0.updateMetaCharsetElement());
      
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertNotNull(hashMap0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      HostnameVerifier hostnameVerifier1 = HttpConnection.Response.getInsecureVerifier();
      assertFalse(hostnameVerifier1.equals((Object)hostnameVerifier0));
      assertNotNull(hostnameVerifier1);
      assertNotSame(hostnameVerifier1, hostnameVerifier0);
      
      String string2 = "http";
      HttpConnection.Response.initUnSecureTSL();
      HashMap<String, List<String>> hashMap1 = new HashMap<String, List<String>>();
      assertNotNull(hashMap1);
      assertEquals(0, hashMap1.size());
      assertTrue(hashMap1.isEmpty());
      
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      assertNotNull(locale0);
      assertEquals("CN", locale0.getCountry());
      assertEquals("zh", locale0.getLanguage());
      assertEquals("zh_CN", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("CHN", locale0.getISO3Country());
      assertEquals("zho", locale0.getISO3Language());
      
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      assertFalse(set0.contains(string0));
      assertNotNull(set0);
      assertEquals("CN", locale0.getCountry());
      assertEquals("zh", locale0.getLanguage());
      assertEquals("zh_CN", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("CHN", locale0.getISO3Country());
      assertEquals("zho", locale0.getISO3Language());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      assertFalse(set0.contains(string0));
      assertFalse(list0.contains(string0));
      assertNotNull(list0);
      assertEquals(0, linkedList0.size());
      assertEquals("CN", locale0.getCountry());
      assertEquals("zh", locale0.getLanguage());
      assertEquals("zh_CN", locale0.toString());
      assertEquals("", locale0.getVariant());
      assertEquals("CHN", locale0.getISO3Country());
      assertEquals("zho", locale0.getISO3Language());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.maxBodySize(httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(3000, httpConnection_Request1.maxBodySize());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      String string0 = HttpConnection.Response.setOutputContentType(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNull(string0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      
      String string1 = "jdxh>?/E";
      String string2 = httpConnection_Response0.contentType();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(string2);
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      
      String string3 = HttpConnection.Response.getRequestCookieString(httpConnection_Request0);
      assertFalse(string3.equals((Object)string1));
      assertEquals(3000, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals("", string3);
      assertNotNull(string3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string3, string1);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      int int0 = 530;
      OutputStream outputStream0 = null;
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(outputStream0);
      assertNotNull(bufferedOutputStream0);
      
      byte[] byteArray0 = new byte[9];
      HttpConnection.Response.initUnSecureTSL();
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      bufferedOutputStream0.write(byteArray0);
      assertEquals(9, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      
      // Undeclared exception!
      try { 
        bufferedOutputStream0.flush();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.BufferedOutputStream", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      
      URL uRL0 = MockURL.getFtpExample();
      assertNotNull(uRL0);
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.url(uRL0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      
      int int0 = 3176;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.proxy(httpConnection_Request0.proxy);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.parserDefined);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request2);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Only http & https protocols supported
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      
      int int0 = httpConnection_Response0.statusCode();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, int0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute(httpConnection_Response0.req, httpConnection_Response0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      
      int int0 = 4789;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(4789, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.proxy(httpConnection_Request0.proxy);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(4789, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(4789, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(4789, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(4789, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertNotNull(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(4789, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(4789, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(4789, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      String string0 = "h4";
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      int int1 = 2388;
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, int1);
      assertFalse(int1 == int0);
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      assertFalse(int1 == int0);
      assertNotNull(sequenceInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      assertFalse(int1 == int0);
      assertNotNull(dataInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request3.postDataCharset, string0, (InputStream) dataInputStream0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(4789, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertNotNull(httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(4789, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(4789, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(4789, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(0, pipedInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("h4", httpConnection_KeyVal0.value());
      
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.inputStream((InputStream) dataInputStream0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(4789, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertNotNull(httpConnection_KeyVal1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(4789, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(4789, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(4789, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(0, pipedInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("h4", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal1.key());
      assertEquals("h4", httpConnection_KeyVal1.value());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(4789, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(4789, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertNotNull(httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertEquals(4789, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(4789, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(4789, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(4789, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(0, pipedInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("h4", httpConnection_KeyVal0.value());
      
      int int2 = 0;
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request3.proxy(httpConnection_Request0.postDataCharset, int2);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(4789, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(4789, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertNotNull(httpConnection_Request5);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(4789, httpConnection_Request5.timeout());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(4789, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(4789, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(4789, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      
      String string1 = HttpConnection.Response.setOutputContentType(httpConnection_Request5);
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(int0 == int1);
      assertFalse(int0 == int2);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(4789, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(4789, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals("________________________________", string1);
      assertNotNull(string1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(4789, httpConnection_Request5.timeout());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(4789, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(4789, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(4789, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.createConnection(httpConnection_Request1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      
      String string0 = httpConnection_Response1.charset();
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertNull(string0);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      
      HttpURLConnection httpURLConnection0 = null;
      // Undeclared exception!
      try { 
        httpConnection_Response1.setupFromConnection(httpURLConnection0, httpConnection_Response0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(httpConnection_Request0.postDataCharset, httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(mockFileOutputStream0);
      
      MockPrintStream mockPrintStream0 = new MockPrintStream(httpConnection_Request0.postDataCharset, httpConnection_Request0.postDataCharset);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(mockPrintStream0);
      
      mockPrintStream0.write(httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      
      HttpConnection.Response.writePost(httpConnection_Request0, mockPrintStream0, httpConnection_Request0.postDataCharset);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      
      HttpConnection.Response.writePost(httpConnection_Request0, mockFileOutputStream0, httpConnection_Request0.postDataCharset);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      String string0 = "";
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Charset charset0 = Charset.defaultCharset();
      assertNotNull(charset0);
      assertTrue(charset0.isRegistered());
      assertEquals("UTF-8", charset0.toString());
      assertTrue(charset0.canEncode());
      assertEquals("UTF-8", charset0.displayName());
      assertEquals("UTF-8", charset0.name());
      
      Set<String> set0 = charset0.aliases();
      assertFalse(set0.contains(string0));
      assertNotNull(set0);
      assertTrue(charset0.isRegistered());
      assertEquals("UTF-8", charset0.toString());
      assertTrue(charset0.canEncode());
      assertEquals("UTF-8", charset0.displayName());
      assertEquals("UTF-8", charset0.name());
      assertEquals(2, set0.size());
      assertFalse(set0.isEmpty());
      
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      assertFalse(set0.contains(string0));
      assertFalse(list0.contains(string0));
      assertNotNull(list0);
      assertEquals(0, linkedList0.size());
      assertTrue(charset0.isRegistered());
      assertEquals("UTF-8", charset0.toString());
      assertTrue(charset0.canEncode());
      assertEquals("UTF-8", charset0.displayName());
      assertEquals("UTF-8", charset0.name());
      assertEquals(2, set0.size());
      assertFalse(set0.isEmpty());
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      
      List<String> list1 = hashMap0.put(string0, list0);
      assertFalse(set0.contains(string0));
      assertFalse(list0.contains(string0));
      assertNull(list1);
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertEquals(0, linkedList0.size());
      assertTrue(charset0.isRegistered());
      assertEquals("UTF-8", charset0.toString());
      assertTrue(charset0.canEncode());
      assertEquals("UTF-8", charset0.displayName());
      assertEquals("UTF-8", charset0.name());
      assertEquals(2, set0.size());
      assertFalse(set0.isEmpty());
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      
      Connection.Request connection_Request0 = null;
      httpConnection_Response0.req = connection_Request0;
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      httpConnection_Response0.contentType = httpConnection_Response0.contentType;
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.getRequestCookieString(connection_Request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      LinkedList<String> linkedList0 = new LinkedList<String>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      boolean boolean0 = linkedList0.add(httpConnection_Response0.contentType);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(boolean0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(1, linkedList0.size());
      
      List<String> list0 = hashMap0.put(httpConnection_Response0.statusMessage, linkedList0);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(list0);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, linkedList0.size());
      
      boolean boolean1 = linkedList0.add(httpConnection_Response0.LOCATION);
      assertTrue(boolean1 == boolean0);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(boolean1);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(2, linkedList0.size());
      
      String string0 = "";
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      assertNotNull(linkedList1);
      assertEquals(0, linkedList1.size());
      
      Charset charset0 = Charset.defaultCharset();
      assertNotNull(charset0);
      assertEquals("UTF-8", charset0.toString());
      assertTrue(charset0.isRegistered());
      assertTrue(charset0.canEncode());
      assertEquals("UTF-8", charset0.displayName());
      assertEquals("UTF-8", charset0.name());
      
      Set<String> set0 = charset0.aliases();
      assertFalse(set0.contains(string0));
      assertNotNull(set0);
      assertEquals("UTF-8", charset0.toString());
      assertTrue(charset0.isRegistered());
      assertTrue(charset0.canEncode());
      assertEquals("UTF-8", charset0.displayName());
      assertEquals("UTF-8", charset0.name());
      assertEquals(2, set0.size());
      assertFalse(set0.isEmpty());
      
      List<String> list1 = hashMap0.put(string0, linkedList0);
      assertFalse(linkedList0.contains(string0));
      assertNull(list1);
      assertEquals(2, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(2, linkedList0.size());
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(2, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute(httpConnection_Response0.req, httpConnection_Response0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      LinkedList<String> linkedList0 = new LinkedList<String>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      boolean boolean0 = linkedList0.add(httpConnection_Response0.contentType);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(boolean0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals(1, linkedList0.size());
      
      LinkedList<String> linkedList1 = new LinkedList<String>();
      assertFalse(linkedList1.equals((Object)linkedList0));
      assertNotNull(linkedList1);
      assertEquals(0, linkedList1.size());
      
      String string0 = "text/";
      LinkedList<Locale.LanguageRange> linkedList2 = new LinkedList<Locale.LanguageRange>();
      assertNotNull(linkedList2);
      assertEquals(0, linkedList2.size());
      
      Charset charset0 = Charset.defaultCharset();
      assertNotNull(charset0);
      assertEquals("UTF-8", charset0.displayName());
      assertEquals("UTF-8", charset0.name());
      assertTrue(charset0.canEncode());
      assertTrue(charset0.isRegistered());
      assertEquals("UTF-8", charset0.toString());
      
      Set<String> set0 = charset0.aliases();
      assertFalse(set0.contains(string0));
      assertNotNull(set0);
      assertEquals("UTF-8", charset0.displayName());
      assertEquals("UTF-8", charset0.name());
      assertTrue(charset0.canEncode());
      assertTrue(charset0.isRegistered());
      assertEquals("UTF-8", charset0.toString());
      assertFalse(set0.isEmpty());
      assertEquals(2, set0.size());
      
      List<String> list0 = hashMap0.put(string0, linkedList0);
      assertFalse(linkedList0.equals((Object)linkedList1));
      assertFalse(linkedList0.contains(string0));
      assertNull(list0);
      assertNotSame(linkedList0, linkedList1);
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, linkedList0.size());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.processResponseHeaders(hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Header value must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      LinkedList<String> linkedList0 = new LinkedList<String>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      boolean boolean0 = linkedList0.add(httpConnection_Response0.contentType);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(boolean0);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(1, linkedList0.size());
      
      List<String> list0 = hashMap0.put(httpConnection_Response0.statusMessage, linkedList0);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(list0);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, linkedList0.size());
      
      String string0 = "";
      LinkedList<Locale.LanguageRange> linkedList1 = new LinkedList<Locale.LanguageRange>();
      assertNotNull(linkedList1);
      assertEquals(0, linkedList1.size());
      
      Charset charset0 = Charset.defaultCharset();
      assertNotNull(charset0);
      assertTrue(charset0.canEncode());
      assertEquals("UTF-8", charset0.toString());
      assertEquals("UTF-8", charset0.name());
      assertTrue(charset0.isRegistered());
      assertEquals("UTF-8", charset0.displayName());
      
      Set<String> set0 = charset0.aliases();
      assertFalse(set0.contains(string0));
      assertNotNull(set0);
      assertTrue(charset0.canEncode());
      assertEquals("UTF-8", charset0.toString());
      assertEquals("UTF-8", charset0.name());
      assertTrue(charset0.isRegistered());
      assertEquals("UTF-8", charset0.displayName());
      assertFalse(set0.isEmpty());
      assertEquals(2, set0.size());
      
      List<String> list1 = hashMap0.put(string0, linkedList0);
      assertFalse(linkedList0.contains(string0));
      assertNull(list1);
      assertEquals(2, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, linkedList0.size());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.processResponseHeaders(hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Header value must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      String string0 = "\\j9fFouM";
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.createFolder(evoSuiteFile0);
      assertFalse(boolean0);
      
      EvoSuiteFile evoSuiteFile1 = null;
      boolean boolean1 = FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      httpConnection_Response0.contentType = string0;
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals("\\j9fFouM", httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      String string1 = httpConnection_Response0.charset();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNull(string1);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals("\\j9fFouM", httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      String string2 = httpConnection_Response0.contentType();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals("\\j9fFouM", string2);
      assertNotNull(string2);
      assertSame(string2, string0);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals("\\j9fFouM", httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      String string3 = httpConnection_Response0.contentType();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals("\\j9fFouM", string3);
      assertNotNull(string3);
      assertSame(string3, string0);
      assertSame(string3, string2);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals("\\j9fFouM", httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      
      String string0 = "yXmu\\^0T6<1|u:6~1[";
      boolean boolean0 = httpConnection_Response0.hasHeader(string0);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(boolean0);
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      
      URL uRL0 = httpConnection_Response0.url;
      assertNull(uRL0);
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.parse();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before parsing response
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      
      String string0 = "5";
      int int0 = 1;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.proxy(string0, int0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.proxy(httpConnection_Request0.proxy);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.parserDefined);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.parserDefined);
      assertNotNull(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      
      String string1 = "`#&r/zed^:atahem";
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      
      boolean boolean0 = true;
      httpConnection_Request3.validateTLSCertificates(boolean0);
      assertFalse(string0.equals((Object)string1));
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.parserDefined);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string0, string1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      
      URL uRL0 = httpConnection_Response0.url();
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNull(uRL0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.serialiseRequestUrl(httpConnection_Request3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      String string0 = "";
      String string1 = "i4-w=dwZ\"`0!pc4HWB";
      Document document0 = Parser.parseBodyFragmentRelaxed(string0, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(document0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertEquals("i4-w=dwZ\"`0!pc4HWB", document0.location());
      assertEquals(1, document0.childNodeSize());
      assertFalse(document0.isBlock());
      assertEquals("i4-w=dwZ\"`0!pc4HWB", document0.baseUri());
      assertFalse(document0.updateMetaCharsetElement());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertEquals(0, document0.siblingIndex());
      assertEquals("#root", document0.tagName());
      assertEquals("#document", document0.nodeName());
      
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertNotNull(hashMap0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      int int0 = 0;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.parser(httpConnection_Request0.parser);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request2.postDataCharset, httpConnection_Request2.postDataCharset);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertNotNull(httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertNotNull(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(0, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      
      String string2 = "OIP{n.wPIya*I8t)a";
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request3.proxy(string2, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertNotNull(httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(0, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request4.timeout());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(httpConnection_Request3.postDataCharset);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertNotNull(mockFileOutputStream0);
      
      String string3 = "3P[`r/,{iw";
      HttpConnection.Response.writePost(httpConnection_Request4, mockFileOutputStream0, string3);
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(0, httpConnection_Request3.timeout());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request4.timeout());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      
      try { 
        mockFileOutputStream0.write(httpConnection_Request4.timeoutMilliseconds);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      
      int int0 = 36;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(36, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(36, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(36, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(36, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      
      String string0 = "-@j|R2;\"Jl.,~D3j";
      int int1 = 4925;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.proxy(string0, int1);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(36, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(36, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(36, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(36, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(36, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(36, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      String string1 = "Cookie";
      String string2 = null;
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      // Undeclared exception!
      try { 
        HttpConnection.KeyVal.create(string1, string2, (InputStream) pipedInputStream0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Data value must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      Parser parser0 = Parser.xmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.proxy(httpConnection_Request0.proxy);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      
      String string0 = "org.jsoup.helper.HttpConnection$Response$2";
      String string1 = httpConnection_Request2.cookie(string0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertNull(string1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request1.postDataCharset, httpConnection_Request1.postDataCharset, (InputStream) pipedInputStream0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, pipedInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertNotNull(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(0, pipedInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request3.ignoreHttpErrors(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertNotNull(httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(0, pipedInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      
      URI uRI0 = MockURI.aHttpURI;
      assertNotNull(uRI0);
      assertNull(uRI0.getRawQuery());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawUserInfo());
      assertEquals("foo.bar", uRI0.getHost());
      assertEquals("http://foo.bar", uRI0.toString());
      assertFalse(uRI0.isOpaque());
      assertNull(uRI0.getRawFragment());
      assertEquals((-1), uRI0.getPort());
      assertTrue(uRI0.isAbsolute());
      
      URI uRI1 = MockURI.resolve(uRI0, uRI0);
      assertNotNull(uRI1);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertNull(uRI0.getRawQuery());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawUserInfo());
      assertEquals("foo.bar", uRI0.getHost());
      assertEquals("http://foo.bar", uRI0.toString());
      assertFalse(uRI0.isOpaque());
      assertNull(uRI0.getRawFragment());
      assertEquals((-1), uRI0.getPort());
      assertTrue(uRI0.isAbsolute());
      assertNull(uRI1.getRawQuery());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertEquals("http://foo.bar", uRI1.toString());
      assertEquals("", uRI1.getRawPath());
      assertNull(uRI1.getRawFragment());
      assertFalse(uRI1.isOpaque());
      assertNull(uRI1.getRawUserInfo());
      assertTrue(uRI1.isAbsolute());
      assertEquals("foo.bar", uRI1.getHost());
      assertEquals((-1), uRI1.getPort());
      assertEquals("http", uRI1.getScheme());
      
      URL uRL0 = MockURI.toURL(uRI1);
      assertNotNull(uRL0);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertNull(uRI0.getRawQuery());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawUserInfo());
      assertEquals("foo.bar", uRI0.getHost());
      assertEquals("http://foo.bar", uRI0.toString());
      assertFalse(uRI0.isOpaque());
      assertNull(uRI0.getRawFragment());
      assertEquals((-1), uRI0.getPort());
      assertTrue(uRI0.isAbsolute());
      assertNull(uRI1.getRawQuery());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertEquals("http://foo.bar", uRI1.toString());
      assertEquals("", uRI1.getRawPath());
      assertNull(uRI1.getRawFragment());
      assertFalse(uRI1.isOpaque());
      assertNull(uRI1.getRawUserInfo());
      assertTrue(uRI1.isAbsolute());
      assertEquals("foo.bar", uRI1.getHost());
      assertEquals((-1), uRI1.getPort());
      assertEquals("http", uRI1.getScheme());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("", uRL0.getFile());
      assertNull(uRL0.getRef());
      assertEquals("foo.bar", uRL0.getHost());
      assertEquals("", uRL0.getPath());
      assertEquals("http://foo.bar", uRL0.toString());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request4.url(uRL0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.parserDefined);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.ignoreHttpErrors);
      assertNotNull(httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(0, pipedInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertNull(uRI0.getRawQuery());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawUserInfo());
      assertEquals("foo.bar", uRI0.getHost());
      assertEquals("http://foo.bar", uRI0.toString());
      assertFalse(uRI0.isOpaque());
      assertNull(uRI0.getRawFragment());
      assertEquals((-1), uRI0.getPort());
      assertTrue(uRI0.isAbsolute());
      assertNull(uRI1.getRawQuery());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertEquals("http://foo.bar", uRI1.toString());
      assertEquals("", uRI1.getRawPath());
      assertNull(uRI1.getRawFragment());
      assertFalse(uRI1.isOpaque());
      assertNull(uRI1.getRawUserInfo());
      assertTrue(uRI1.isAbsolute());
      assertEquals("foo.bar", uRI1.getHost());
      assertEquals((-1), uRI1.getPort());
      assertEquals("http", uRI1.getScheme());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("", uRL0.getFile());
      assertNull(uRL0.getRef());
      assertEquals("foo.bar", uRL0.getHost());
      assertEquals("", uRL0.getPath());
      assertEquals("http://foo.bar", uRL0.toString());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      assertNull(uRL0.getQuery());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertTrue(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request5.timeout());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.followRedirects());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://foo.bar?UTF-8=UTF-8");
      String string2 = "bx%P+!mt&S";
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string2);
      assertFalse(string2.equals((Object)string0));
      assertTrue(boolean0);
      assertNotSame(string2, string0);
      
      String string3 = null;
      HttpConnection.Response.writePost(httpConnection_Request4, pipedOutputStream0, string3);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(11, pipedInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      
      httpConnection_Response0.charset = httpConnection_Request3.postDataCharset;
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals("UTF-8", httpConnection_Response0.charset());
      assertEquals(11, pipedInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      
      HttpConnection.Response httpConnection_Response1 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertNull(httpConnection_Response1.charset());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request4);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(11, pipedInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.parse();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before parsing response
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      Parser parser0 = Parser.xmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.proxy(httpConnection_Request0.proxy);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(3000, httpConnection_Request2.timeout());
      
      String string0 = "org.jsoup.helper.HttpConnection$Response$2";
      String string1 = httpConnection_Request2.cookie(string0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertNull(string1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(3000, httpConnection_Request2.timeout());
      
      String string2 = "set-cookie";
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request1.cookie(httpConnection_Request0.postDataCharset, string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertNotNull(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(string2, string0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request1.postDataCharset, httpConnection_Request1.postDataCharset, (InputStream) pipedInputStream0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertNotNull(httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request4.ignoreHttpErrors(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertNotNull(httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(3000, httpConnection_Request5.timeout());
      assertTrue(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.followRedirects());
      
      URI uRI0 = MockURI.aHttpURI;
      assertNotNull(uRI0);
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals("foo.bar", uRI0.getHost());
      assertNull(uRI0.getRawUserInfo());
      assertFalse(uRI0.isOpaque());
      assertTrue(uRI0.isAbsolute());
      assertEquals((-1), uRI0.getPort());
      assertNull(uRI0.getRawQuery());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawFragment());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertEquals("", uRI0.getRawPath());
      
      URI uRI1 = MockURI.resolve(uRI0, uRI0);
      assertNotNull(uRI1);
      assertSame(uRI1, uRI0);
      assertSame(uRI0, uRI1);
      assertNull(uRI1.getRawFragment());
      assertTrue(uRI1.isAbsolute());
      assertFalse(uRI1.isOpaque());
      assertNull(uRI1.getRawUserInfo());
      assertEquals("foo.bar", uRI1.getHost());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertEquals((-1), uRI1.getPort());
      assertEquals("http", uRI1.getScheme());
      assertNull(uRI1.getRawQuery());
      assertEquals("http://foo.bar", uRI1.toString());
      assertEquals("", uRI1.getRawPath());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals("foo.bar", uRI0.getHost());
      assertNull(uRI0.getRawUserInfo());
      assertFalse(uRI0.isOpaque());
      assertTrue(uRI0.isAbsolute());
      assertEquals((-1), uRI0.getPort());
      assertNull(uRI0.getRawQuery());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawFragment());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertEquals("", uRI0.getRawPath());
      
      URL uRL0 = MockURI.toURL(uRI1);
      assertNotNull(uRL0);
      assertSame(uRI1, uRI0);
      assertSame(uRI0, uRI1);
      assertNull(uRI1.getRawFragment());
      assertTrue(uRI1.isAbsolute());
      assertFalse(uRI1.isOpaque());
      assertNull(uRI1.getRawUserInfo());
      assertEquals("foo.bar", uRI1.getHost());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertEquals((-1), uRI1.getPort());
      assertEquals("http", uRI1.getScheme());
      assertNull(uRI1.getRawQuery());
      assertEquals("http://foo.bar", uRI1.toString());
      assertEquals("", uRI1.getRawPath());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("", uRL0.getFile());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("http://foo.bar", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      assertEquals("foo.bar", uRL0.getHost());
      assertEquals("", uRL0.getPath());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals("foo.bar", uRI0.getHost());
      assertNull(uRI0.getRawUserInfo());
      assertFalse(uRI0.isOpaque());
      assertTrue(uRI0.isAbsolute());
      assertEquals((-1), uRI0.getPort());
      assertNull(uRI0.getRawQuery());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawFragment());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertEquals("", uRI0.getRawPath());
      
      HttpConnection.Request httpConnection_Request6 = (HttpConnection.Request)httpConnection_Request5.url(uRL0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request6.followRedirects);
      assertTrue(httpConnection_Request6.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request6.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertTrue(httpConnection_Request6.validateTSLCertificates);
      assertFalse(httpConnection_Request6.ignoreContentType);
      assertTrue(httpConnection_Request6.parserDefined);
      assertNotNull(httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request6);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request6);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(3000, httpConnection_Request5.timeout());
      assertTrue(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals("foo.bar", uRI0.getHost());
      assertNull(uRI0.getRawUserInfo());
      assertFalse(uRI0.isOpaque());
      assertTrue(uRI0.isAbsolute());
      assertEquals((-1), uRI0.getPort());
      assertNull(uRI0.getRawQuery());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawFragment());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertEquals("", uRI0.getRawPath());
      assertNull(uRI1.getRawFragment());
      assertTrue(uRI1.isAbsolute());
      assertFalse(uRI1.isOpaque());
      assertNull(uRI1.getRawUserInfo());
      assertEquals("foo.bar", uRI1.getHost());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertEquals((-1), uRI1.getPort());
      assertEquals("http", uRI1.getScheme());
      assertNull(uRI1.getRawQuery());
      assertEquals("http://foo.bar", uRI1.toString());
      assertEquals("", uRI1.getRawPath());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("", uRL0.getFile());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("http://foo.bar", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      assertEquals("foo.bar", uRL0.getHost());
      assertEquals("", uRL0.getPath());
      assertEquals("UTF-8", httpConnection_Request6.postDataCharset());
      assertTrue(httpConnection_Request6.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertEquals(3000, httpConnection_Request6.timeout());
      assertTrue(httpConnection_Request6.ignoreHttpErrors());
      assertTrue(httpConnection_Request6.followRedirects());
      assertFalse(httpConnection_Request6.ignoreContentType());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      
      String string3 = null;
      HttpConnection.Response.writePost(httpConnection_Request5, pipedOutputStream0, string3);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request6);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request6);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(11, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(3000, httpConnection_Request5.timeout());
      assertTrue(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request5.followRedirects());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      httpConnection_Response0.charset = httpConnection_Request4.postDataCharset;
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertNull(httpConnection_Response0.contentType());
      assertEquals("UTF-8", httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(11, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request4.timeout());
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: foo.bar
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNotNull(httpConnection_KeyVal0);
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      
      int int0 = 200;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.proxy(httpConnection_Request0.proxy);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request1.parser);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.parserDefined);
      assertNotNull(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      
      String string0 = HttpConnection.Response.setOutputContentType(httpConnection_Request3);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.parserDefined);
      assertNull(string0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      
      Proxy proxy0 = Proxy.NO_PROXY;
      assertNotNull(proxy0);
      assertEquals("DIRECT", proxy0.toString());
      assertEquals(Proxy.Type.DIRECT, proxy0.type());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.proxy(proxy0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("DIRECT", proxy0.toString());
      assertEquals(Proxy.Type.DIRECT, proxy0.type());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      
      HttpConnection.Request httpConnection_Request2 = new HttpConnection.Request();
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request0));
      assertFalse(httpConnection_Request2.equals((Object)httpConnection_Request1));
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request2);
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request2.timeout());
      
      String string0 = HttpConnection.Response.setOutputContentType(httpConnection_Request0);
      assertFalse(httpConnection_Request0.equals((Object)httpConnection_Request2));
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNull(string0);
      assertNotSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      
      String string1 = "jdxh>?/E";
      String string2 = httpConnection_Response0.contentType();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(string2);
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      
      String string3 = HttpConnection.Response.getRequestCookieString(httpConnection_Request0);
      assertFalse(httpConnection_Request0.equals((Object)httpConnection_Request2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals("", string3);
      assertNotNull(string3);
      assertNotSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(string3, string1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      String string4 = "set-cookie";
      LinkedList<String> linkedList0 = new LinkedList<String>();
      assertFalse(linkedList0.contains(string1));
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      List<String> list0 = hashMap0.put(string4, linkedList0);
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(linkedList0.contains(string1));
      assertNull(list0);
      assertNotSame(string4, string3);
      assertNotSame(string4, string1);
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
      assertEquals(0, linkedList0.size());
      
      LinkedList<String> linkedList1 = new LinkedList<String>();
      assertTrue(linkedList1.equals((Object)linkedList0));
      assertFalse(linkedList1.contains(string1));
      assertNotNull(linkedList1);
      assertEquals(0, linkedList1.size());
      
      List<String> list1 = hashMap0.put(httpConnection_Request0.postDataCharset, linkedList1);
      assertFalse(httpConnection_Request0.equals((Object)httpConnection_Request2));
      assertTrue(linkedList1.equals((Object)linkedList0));
      assertFalse(linkedList1.contains(string1));
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNull(list1);
      assertNotSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertNotSame(linkedList1, linkedList0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(hashMap0.isEmpty());
      assertEquals(2, hashMap0.size());
      assertEquals(0, linkedList1.size());
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertFalse(hashMap0.isEmpty());
      assertEquals(2, hashMap0.size());
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      
      SSLSocketFactoryImpl sSLSocketFactoryImpl0 = (SSLSocketFactoryImpl)HttpConnection.Response.sslSocketFactory;
      assertNotNull(sSLSocketFactoryImpl0);
      
      HttpConnection.Response.sslSocketFactory = (SSLSocketFactory) sSLSocketFactoryImpl0;
      String string0 = httpConnection_Response0.contentType();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(string0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      int int0 = 0;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      
      String string0 = HttpConnection.Response.setOutputContentType(httpConnection_Request1);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNull(string0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      
      HttpConnection.Response httpConnection_Response0 = null;
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      Connection.Request connection_Request0 = null;
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute(connection_Request0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      
      Connection.Request connection_Request0 = httpConnection_Response0.req;
      assertNull(connection_Request0);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.setOutputContentType(connection_Request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      boolean boolean0 = true;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.ignoreContentType(boolean0);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.followRedirects(boolean0);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.ignoreContentType());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.createConnection(httpConnection_Response0.req);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      Connection.Request connection_Request0 = null;
      // Undeclared exception!
      try { 
        HttpConnection.Response.createConnection(connection_Request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      
      String string0 = "Qp^;a";
      int int0 = 0;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.proxy(string0, int0);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.parser(httpConnection_Request0.parser);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      
      MockPrintStream mockPrintStream0 = new MockPrintStream(httpConnection_Request2.postDataCharset);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertNotNull(mockPrintStream0);
      
      HttpConnection.Response.writePost(httpConnection_Request2, mockPrintStream0, httpConnection_Request1.postDataCharset);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
  }

  @Test(timeout = 11000)
  public void test33()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      
      String string0 = httpConnection_Response0.statusMessage();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNull(string0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute(httpConnection_Response0.req, httpConnection_Response0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test34()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      String string0 = httpConnection_Response0.statusMessage();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNull(string0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test35()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      
      HttpConnection.Response httpConnection_Response0 = null;
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0, httpConnection_Response1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test36()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      String string0 = "";
      String string1 = httpConnection_Response0.header(string0);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNull(string1);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      
      // Undeclared exception!
      try { 
        httpConnection_Response1.parse();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before parsing response
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test37()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      
      int int0 = 0;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.maxBodySize(int0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(0, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(0, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(0, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(0, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      int int1 = 0;
      httpConnection_Request0.timeoutMilliseconds = int1;
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(0, httpConnection_Request0.maxBodySize());
      
      String string0 = "/uS.O)";
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.cookie(string0, string0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(0, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(0, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals(0, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request1, httpConnection_Response1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test38()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      
      Parser parser0 = Parser.htmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      
      int int0 = 424;
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.maxBodySize(int0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(424, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(424, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(424, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(424, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(parser0.isTrackErrors());
      assertEquals(424, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(424, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.followRedirects());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.createConnection(httpConnection_Request2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test39()  throws Throwable  {
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      String string0 = "O~Y'T{fND ";
      int int0 = 1;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.proxy(string0, int0);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      boolean boolean0 = false;
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request1.followRedirects(boolean0);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.followRedirects);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      
      String string1 = HttpConnection.Response.getRequestCookieString(httpConnection_Request2);
      assertFalse(string1.equals((Object)string0));
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.followRedirects);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals("", string1);
      assertNotNull(string1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(string0, string1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertNotSame(string1, string0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
  }

  @Test(timeout = 11000)
  public void test40()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      
      String string0 = ",T1";
      boolean boolean0 = httpConnection_Response0.hasHeaderWithValue(string0, string0);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(boolean0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test41()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      HttpConnection.Response.LOCATION = httpConnection_Response0.statusMessage;
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      
      Connection.Method connection_Method0 = Connection.Method.TRACE;
      // Undeclared exception!
      try { 
        httpConnection_Response0.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test42()  throws Throwable  {
      HttpConnection.Response.initUnSecureTSL();
      Connection.Request connection_Request0 = null;
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute(connection_Request0, httpConnection_Response0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test43()  throws Throwable  {
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNotNull(httpConnection_KeyVal0);
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      
      int int0 = 200;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.proxy(httpConnection_Request0.postDataCharset, int0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.proxy(httpConnection_Request0.proxy);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.followRedirects);
      assertNotNull(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request3.parser(httpConnection_Request2.parser);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertNotNull(httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertTrue(httpConnection_Request4.followRedirects());
      
      String string0 = HttpConnection.Response.setOutputContentType(httpConnection_Request4);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertNull(string0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertNull(httpConnection_KeyVal0.value());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertTrue(httpConnection_Request4.followRedirects());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
  }

  @Test(timeout = 11000)
  public void test44()  throws Throwable  {
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertNotNull(httpConnection_Request0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      int int0 = 4789;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(4789, httpConnection_Request0.timeout());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.proxy(httpConnection_Request0.proxy);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(4789, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(4789, httpConnection_Request0.timeout());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(4789, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(4789, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(4789, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertNotNull(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(4789, httpConnection_Request0.timeout());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(4789, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(4789, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      
      String string0 = "h4";
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      int int1 = 2388;
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, int1);
      assertFalse(int1 == int0);
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      assertFalse(int1 == int0);
      assertNotNull(sequenceInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      assertFalse(int1 == int0);
      assertNotNull(dataInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request3.postDataCharset, string0, (InputStream) dataInputStream0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(4789, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(4789, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertNotNull(httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(4789, httpConnection_Request0.timeout());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(4789, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(4789, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(0, pipedInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("h4", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.inputStream((InputStream) dataInputStream0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(4789, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(4789, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertNotNull(httpConnection_KeyVal1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(4789, httpConnection_Request0.timeout());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(4789, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(4789, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(0, pipedInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("h4", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertEquals("h4", httpConnection_KeyVal1.value());
      assertEquals("UTF-8", httpConnection_KeyVal1.key());
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(4789, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(4789, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertEquals(4789, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertNotNull(httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(4789, httpConnection_Request0.timeout());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(4789, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(4789, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(0, pipedInputStream0.available());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("h4", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(4789, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      
      int int2 = 0;
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request3.proxy(httpConnection_Request0.postDataCharset, int2);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(4789, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(4789, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(4789, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertNotNull(httpConnection_Request5);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals(4789, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(4789, httpConnection_Request0.timeout());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(4789, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(4789, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      
      String string1 = HttpConnection.Response.setOutputContentType(httpConnection_Request5);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(4789, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(4789, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(4789, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertEquals("________________________________", string1);
      assertNotNull(string1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals(4789, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(4789, httpConnection_Request0.timeout());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(4789, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(4789, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.createConnection(httpConnection_Request1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 11000)
  public void test45()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      String string0 = "yXmu\\^0T6<1|u:6~1[";
      boolean boolean0 = httpConnection_Response0.hasHeader(string0);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertFalse(boolean0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response();
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      
      URL uRL0 = httpConnection_Response1.url;
      assertNull(uRL0);
      
      httpConnection_Response0.url = uRL0;
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.method());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.parse();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before parsing response
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test46()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      Parser parser0 = Parser.xmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.serialiseRequestUrl(httpConnection_Request1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test47()  throws Throwable  {
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      
      Parser parser0 = Parser.xmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.proxy(httpConnection_Request0.proxy);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      String string0 = "org.jsoup.helper.HttpConnection$Response$2";
      String string1 = httpConnection_Request2.cookie(string0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertNull(string1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request1.postDataCharset, httpConnection_Request1.postDataCharset, (InputStream) pipedInputStream0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.parserDefined);
      assertNotNull(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request3.ignoreHttpErrors(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertNotNull(httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      
      String string2 = null;
      HttpConnection.Response.writePost(httpConnection_Request4, pipedOutputStream0, string2);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(11, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test48()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      
      String string0 = "org.jsoup.select.Evaluator$IndexLessThan";
      boolean boolean0 = httpConnection_Request0.hasCookie(string0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(boolean0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      
      boolean boolean1 = true;
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.followRedirects(boolean1);
      assertFalse(boolean1 == boolean0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      boolean boolean2 = true;
      HttpConnection.Request httpConnection_Request2 = (HttpConnection.Request)httpConnection_Request0.followRedirects(boolean2);
      assertFalse(boolean2 == boolean0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      
      String string1 = HttpConnection.Response.setOutputContentType(httpConnection_Request1);
      assertFalse(boolean1 == boolean0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNull(string1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.serialiseRequestUrl(httpConnection_Request1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test49()  throws Throwable  {
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Response httpConnection_Response0 = null;
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      
      String string0 = httpConnection_Response1.contentType();
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(string0);
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.getRequestCookieString(httpConnection_Response1.req);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test50()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      String string0 = "";
      HttpConnection.FORM_URL_ENCODED = string0;
      String string1 = "";
      Map.Entry<String, String> map_Entry0 = httpConnection_Response0.scanHeaders(string1);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNull(map_Entry0);
      assertSame(string1, string0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      Map<String, String> map0 = httpConnection_Response0.headers;
      assertNotNull(map0);
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      
      httpConnection_Response0.cookies = map0;
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertTrue(map0.isEmpty());
      assertEquals(0, map0.size());
      assertEquals(0, httpConnection_Response0.cookies.size());
      assertTrue(httpConnection_Response0.cookies.isEmpty());
      
      String string2 = httpConnection_Response0.charset();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNull(string2);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test51()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      String string0 = "\"";
      MockPrintStream mockPrintStream0 = new MockPrintStream(string0);
      assertNotNull(mockPrintStream0);
      
      String string1 = "Data collection must not be null";
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) string1;
      char[] charArray0 = new char[9];
      char char0 = 'g';
      charArray0[0] = char0;
      char char1 = 'W';
      charArray0[1] = char1;
      char char2 = ' ';
      charArray0[2] = char2;
      char char3 = '6';
      charArray0[3] = char3;
      char char4 = '3';
      charArray0[4] = char4;
      char char5 = 'l';
      charArray0[5] = char5;
      char char6 = '>';
      charArray0[6] = char6;
      char char7 = 'U';
      charArray0[7] = char7;
      char char8 = 'N';
      charArray0[8] = char8;
      mockPrintStream0.println(charArray0);
      assertEquals(9, charArray0.length);
      assertFalse(string0.equals((Object)string1));
      assertArrayEquals(new char[] {'g', 'W', ' ', '6', '3', 'l', '>', 'U', 'N'}, charArray0);
      assertNotSame(string0, string1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      objectArray0[1] = object0;
      objectArray0[2] = (Object) httpConnection_Response0;
      objectArray0[3] = (Object) string0;
      objectArray0[4] = (Object) mockPrintStream0;
      objectArray0[5] = (Object) httpConnection_Response0;
      PrintStream printStream0 = mockPrintStream0.format(string1, objectArray0);
      assertEquals(6, objectArray0.length);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(printStream0);
      assertSame(printStream0, mockPrintStream0);
      assertNotSame(string0, string1);
      assertSame(mockPrintStream0, printStream0);
      assertNotSame(string1, string0);
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.writePost(httpConnection_Response0.req, printStream0, string1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test52()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-27);
      byteArray0[0] = byte0;
      boolean boolean0 = FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      assertEquals(1, byteArray0.length);
      assertFalse(boolean0);
      assertArrayEquals(new byte[] {(byte) (-27)}, byteArray0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      
      int int0 = httpConnection_Response0.statusCode();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, int0);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute(httpConnection_Response0.req, httpConnection_Response0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test53()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      
      int int0 = 2553;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(2553, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(2553, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(2553, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(2553, httpConnection_Request1.timeout());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.proxy(httpConnection_Request0.proxy);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(2553, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(2553, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertEquals(2553, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(2553, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(2553, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(2553, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request0.postDataCharset(httpConnection_Request2.postDataCharset);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(2553, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(2553, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertEquals(2553, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(2553, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertNotNull(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(2553, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(2553, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(2553, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(2553, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request2.maxBodySize(httpConnection_Request0.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(2553, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(2553, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertEquals(2553, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(2553, httpConnection_Request4.timeoutMilliseconds);
      assertNotNull(httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(2553, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(2553, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(2553, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(2553, httpConnection_Request4.timeout());
      
      boolean boolean0 = true;
      httpConnection_Request2.ignoreHttpErrors = boolean0;
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(2553, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(2553, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(2553, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      String string0 = "small";
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request1.ignoreHttpErrors(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(2553, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(2553, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.parserDefined);
      assertEquals(2553, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertFalse(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertEquals(2553, httpConnection_Request5.timeoutMilliseconds);
      assertNotNull(httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(2553, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(2553, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(2553, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(2553, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      
      HttpConnection.Request httpConnection_Request6 = httpConnection_Request0.proxy(httpConnection_Request1.proxy);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(2553, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(2553, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request6.ignoreContentType);
      assertTrue(httpConnection_Request6.validateTSLCertificates);
      assertFalse(httpConnection_Request6.parserDefined);
      assertTrue(httpConnection_Request6.followRedirects);
      assertEquals(2553, httpConnection_Request6.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertFalse(httpConnection_Request6.ignoreHttpErrors);
      assertNotNull(httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(2553, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(2553, httpConnection_Request1.timeout());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertTrue(httpConnection_Request6.followRedirects());
      assertTrue(httpConnection_Request6.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertEquals(2553, httpConnection_Request6.timeout());
      assertFalse(httpConnection_Request6.ignoreHttpErrors());
      assertFalse(httpConnection_Request6.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request6.postDataCharset());
      
      Map.Entry<String, String> map_Entry0 = httpConnection_Request1.scanHeaders(string0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(2553, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(2553, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNull(map_Entry0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(2553, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(2553, httpConnection_Request1.timeout());
      
      String string1 = "aside";
      boolean boolean1 = false;
      httpConnection_Request0.validateTLSCertificates(boolean1);
      assertFalse(boolean1 == boolean0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(2553, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.validateTLSCertificates());
      assertEquals(2553, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      
      boolean boolean2 = true;
      HttpConnection.Request httpConnection_Request7 = (HttpConnection.Request)httpConnection_Request2.followRedirects(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request7.validateTSLCertificates);
      assertFalse(httpConnection_Request7.ignoreHttpErrors);
      assertFalse(httpConnection_Request7.ignoreContentType);
      assertEquals(2553, httpConnection_Request7.timeoutMilliseconds);
      assertFalse(httpConnection_Request7.parserDefined);
      assertEquals(1048576, httpConnection_Request7.maxBodySizeBytes);
      assertFalse(httpConnection_Request7.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request0.followRedirects);
      assertEquals(2553, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(2553, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.validateTSLCertificates);
      assertEquals(2553, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request7);
      assertSame(httpConnection_Request7, httpConnection_Request6);
      assertSame(httpConnection_Request7, httpConnection_Request5);
      assertSame(httpConnection_Request7, httpConnection_Request0);
      assertSame(httpConnection_Request7, httpConnection_Request1);
      assertSame(httpConnection_Request7, httpConnection_Request2);
      assertSame(httpConnection_Request7, httpConnection_Request3);
      assertSame(httpConnection_Request7, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request7);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request7);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request7);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertEquals("UTF-8", httpConnection_Request7.postDataCharset());
      assertEquals(1048576, httpConnection_Request7.maxBodySize());
      assertFalse(httpConnection_Request7.followRedirects());
      assertFalse(httpConnection_Request7.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request7.method());
      assertFalse(httpConnection_Request7.validateTLSCertificates());
      assertFalse(httpConnection_Request7.ignoreHttpErrors());
      assertEquals(2553, httpConnection_Request7.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.followRedirects());
      assertEquals(2553, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(2553, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request2.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(2553, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.followRedirects());
      
      httpConnection_Request1.validateTSLCertificates = boolean2;
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.followRedirects());
      assertEquals(2553, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(2553, httpConnection_Request1.timeout());
      
      httpConnection_Request1.followRedirects = httpConnection_Request2.validateTSLCertificates;
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(2553, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(2553, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(2553, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(string1);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(mockFileOutputStream0);
      
      mockFileOutputStream0.close();
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      
      mockFileOutputStream0.flush();
      assertFalse(string1.equals((Object)string0));
      assertNotSame(string1, string0);
      
      try { 
        HttpConnection.Response.writePost(httpConnection_Request4, mockFileOutputStream0, httpConnection_Request2.postDataCharset);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 11000)
  public void test54()  throws Throwable  {
      HttpURLConnection httpURLConnection0 = null;
      // Undeclared exception!
      try { 
        HttpConnection.Response.createHeaderMap(httpURLConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test55()  throws Throwable  {
      HttpURLConnection httpURLConnection0 = null;
      // Undeclared exception!
      try { 
        HttpConnection.Response.createHeaderMap(httpURLConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test56()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      
      URL uRL0 = MockURL.getFileExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      
      httpConnection_Request0.url = uRL0;
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("some", uRL0.getHost());
      assertNull(uRL0.getUserInfo());
      assertEquals("some", uRL0.getAuthority());
      assertEquals("file", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("some", httpConnection_Request0.url.getAuthority());
      assertEquals("file", httpConnection_Request0.url.getProtocol());
      assertEquals((-1), httpConnection_Request0.url.getDefaultPort());
      assertNull(httpConnection_Request0.url.getRef());
      assertNull(httpConnection_Request0.url.getUserInfo());
      assertNull(httpConnection_Request0.url.getQuery());
      assertEquals((-1), httpConnection_Request0.url.getPort());
      assertEquals("some", httpConnection_Request0.url.getHost());
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Only http & https protocols supported
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test57()  throws Throwable  {
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      
      String string0 = httpConnection_Response1.charset();
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertNull(string0);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      
      HttpURLConnection httpURLConnection0 = null;
      HttpConnection.Response httpConnection_Response2 = new HttpConnection.Response();
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response2.equals((Object)httpConnection_Response0));
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response2.executed);
      assertEquals(0, httpConnection_Response2.statusCode);
      assertEquals(0, httpConnection_Response2.numRedirects);
      assertNotNull(httpConnection_Response2);
      assertNull(httpConnection_Response2.contentType());
      assertNull(httpConnection_Response2.method());
      assertNull(httpConnection_Response2.charset());
      assertEquals(0, httpConnection_Response2.statusCode());
      assertNull(httpConnection_Response2.statusMessage());
      
      // Undeclared exception!
      try { 
        httpConnection_Response1.setupFromConnection(httpURLConnection0, httpConnection_Response2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test58()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = false;
      boolean boolean1 = false;
      boolean boolean2 = true;
      boolean boolean3 = FileSystemHandling.setPermissions(evoSuiteFile0, boolean0, boolean1, boolean2);
      assertFalse(boolean0 == boolean2);
      assertFalse(boolean1 == boolean2);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertFalse(boolean3);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      
      Map<String, List<String>> map0 = null;
      // Undeclared exception!
      try { 
        httpConnection_Response0.processResponseHeaders(map0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test59()  throws Throwable  {
      int int0 = (-705);
      Random.setNextRandom(int0);
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      assertFalse(boolean0);
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      
      String string0 = "Request must not be null";
      String string1 = httpConnection_Response0.header(string0);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(string1);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      
      boolean boolean1 = FileSystemHandling.createFolder(evoSuiteFile0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = false;
      boolean boolean3 = FileSystemHandling.setPermissions(evoSuiteFile0, boolean0, httpConnection_Response0.executed, boolean2);
      assertTrue(boolean0 == boolean1);
      assertTrue(boolean0 == boolean2);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(boolean3);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      
      boolean boolean4 = FileSystemHandling.appendStringToFile(evoSuiteFile0, httpConnection_Response0.charset);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean0);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(boolean4);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      
      String string2 = "http";
      EvoSuiteFile evoSuiteFile1 = null;
      boolean boolean5 = FileSystemHandling.createFolder(evoSuiteFile1);
      assertTrue(boolean5 == boolean3);
      assertTrue(boolean5 == boolean4);
      assertTrue(boolean5 == boolean2);
      assertTrue(boolean5 == boolean1);
      assertTrue(boolean5 == boolean0);
      assertFalse(boolean5);
      
      String string3 = "Mb:wOFk3#doX\\8 N";
      boolean boolean6 = httpConnection_Response0.hasHeaderWithValue(string0, string3);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertTrue(boolean6 == boolean5);
      assertTrue(boolean6 == boolean1);
      assertTrue(boolean6 == boolean3);
      assertTrue(boolean6 == boolean4);
      assertTrue(boolean6 == boolean2);
      assertTrue(boolean6 == boolean0);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(boolean6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      httpConnection_Response0.contentType = string2;
      assertEquals("http", httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertEquals("http", httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      
      httpConnection_Response1.charset = string2;
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertEquals("http", httpConnection_Response1.charset());
      assertEquals("http", httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      
      String string4 = httpConnection_Response1.statusMessage();
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(string4);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertEquals("http", httpConnection_Response1.charset());
      assertEquals("http", httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      
      // Undeclared exception!
      try { 
        HttpConnection.Response.createConnection(httpConnection_Response1.req);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test60()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      assertNotNull(hashMap0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      LinkedList<String> linkedList1 = new LinkedList<String>();
      assertNotNull(linkedList1);
      assertEquals(0, linkedList1.size());
      
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList1);
      assertNotNull(list0);
      assertEquals(0, linkedList0.size());
      assertEquals(0, linkedList1.size());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      
      List<String> list1 = hashMap0.put(httpConnection_Response0.contentType, list0);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(list1);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      assertEquals(0, linkedList0.size());
      assertEquals(0, linkedList1.size());
      assertEquals(0, list0.size());
      assertTrue(list0.isEmpty());
      
      httpConnection_Response0.processResponseHeaders(hashMap0);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(1, hashMap0.size());
      assertFalse(hashMap0.isEmpty());
      
      Connection.Request connection_Request0 = null;
      httpConnection_Response0.req = connection_Request0;
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      
      HttpConnection.CONTENT_TYPE = httpConnection_Response0.contentType;
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      
      String string0 = httpConnection_Response0.contentType();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(string0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      
      int int0 = httpConnection_Response0.statusCode();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, int0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      
      String string1 = httpConnection_Response0.charset();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(string1);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      Parser parser0 = null;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      
      Proxy.Type proxy_Type0 = Proxy.Type.HTTP;
      String string2 = "file";
      int int1 = (-3748);
      // Undeclared exception!
      try { 
        MockInetSocketAddress.createUnresolved(string2, int1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-3748
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 11000)
  public void test61()  throws Throwable  {
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      
      int int0 = 4789;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(4789, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.proxy(httpConnection_Request0.proxy);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.parserDefined);
      assertEquals(4789, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(4789, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(4789, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.parser(httpConnection_Request0.parser);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(4789, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertNotNull(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertEquals(4789, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(4789, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(4789, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      
      String string0 = "h4";
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      int int1 = 2388;
      String string1 = httpConnection_Request2.getHeaderCaseInsensitive(httpConnection_Request3.postDataCharset);
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(4789, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertNull(string1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertEquals(4789, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(4789, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(4789, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, int1);
      assertFalse(int1 == int0);
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      URL uRL0 = MockURL.getHttpExample();
      assertNotNull(uRL0);
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request2.url(uRL0);
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.parserDefined);
      assertNotNull(httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertEquals(4789, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(4789, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertEquals("http://www.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("www.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(4789, httpConnection_Request4.timeout());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      assertFalse(int1 == int0);
      assertNotNull(sequenceInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      DataInputStream dataInputStream0 = new DataInputStream(sequenceInputStream0);
      assertFalse(int1 == int0);
      assertNotNull(dataInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request3.postDataCharset, string0, (InputStream) dataInputStream0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(4789, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertNotNull(httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("h4", httpConnection_KeyVal0.value());
      assertEquals(4789, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(4789, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(4789, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(0, pipedInputStream0.available());
      
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.inputStream((InputStream) dataInputStream0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(4789, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertNotNull(httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("h4", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal1.key());
      assertEquals("h4", httpConnection_KeyVal1.value());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertEquals(4789, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(4789, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(4789, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(0, pipedInputStream0.available());
      
      HttpConnection.Request httpConnection_Request5 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(4789, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertFalse(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.parserDefined);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(4789, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertNotNull(httpConnection_Request5);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("h4", httpConnection_KeyVal0.value());
      assertEquals(4789, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.ignoreHttpErrors());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(4789, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(4789, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(4789, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(0, pipedInputStream0.available());
      
      int int2 = 0;
      HttpConnection.Request httpConnection_Request6 = httpConnection_Request3.proxy(httpConnection_Request0.postDataCharset, int2);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request6.followRedirects);
      assertFalse(httpConnection_Request6.ignoreContentType);
      assertTrue(httpConnection_Request6.parserDefined);
      assertFalse(httpConnection_Request6.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertEquals(4789, httpConnection_Request6.timeoutMilliseconds);
      assertTrue(httpConnection_Request6.validateTSLCertificates);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(4789, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertNotNull(httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request6);
      assertEquals(4789, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request6.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertFalse(httpConnection_Request6.ignoreHttpErrors());
      assertTrue(httpConnection_Request6.followRedirects());
      assertFalse(httpConnection_Request6.ignoreContentType());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertEquals(4789, httpConnection_Request6.timeout());
      assertTrue(httpConnection_Request6.validateTLSCertificates());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(4789, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(4789, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      
      String string2 = HttpConnection.Response.setOutputContentType(httpConnection_Request6);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertFalse(int0 == int2);
      assertFalse(int0 == int1);
      assertFalse(string2.equals((Object)string0));
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request6.followRedirects);
      assertFalse(httpConnection_Request6.ignoreContentType);
      assertTrue(httpConnection_Request6.parserDefined);
      assertFalse(httpConnection_Request6.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request6.maxBodySizeBytes);
      assertEquals(4789, httpConnection_Request6.timeoutMilliseconds);
      assertTrue(httpConnection_Request6.validateTSLCertificates);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(4789, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(4789, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(4789, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals("________________________________", string2);
      assertNotNull(string2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertNotSame(string2, string0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request6);
      assertEquals(4789, httpConnection_Request0.timeout());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request6.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertFalse(httpConnection_Request6.ignoreHttpErrors());
      assertTrue(httpConnection_Request6.followRedirects());
      assertFalse(httpConnection_Request6.ignoreContentType());
      assertEquals(1048576, httpConnection_Request6.maxBodySize());
      assertEquals(4789, httpConnection_Request6.timeout());
      assertTrue(httpConnection_Request6.validateTLSCertificates());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(4789, httpConnection_Request1.timeout());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(4789, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(4789, httpConnection_Request3.timeout());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      
      try { 
        HttpConnection.Response.createConnection(httpConnection_Request1);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // java.lang.UnsupportedOperationException: Method not implemented.
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test62()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertNotNull(httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      URL uRL0 = MockURL.getFtpExample();
      assertNotNull(uRL0);
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      
      HttpConnection.Request httpConnection_Request1 = (HttpConnection.Request)httpConnection_Request0.url(uRL0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getQuery());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getHost());
      assertNull(uRL0.getRef());
      assertEquals("ftp", uRL0.getProtocol());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("ftp.someFakeButWellFormedURL.org", uRL0.getAuthority());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toExternalForm());
      assertEquals("ftp://ftp.someFakeButWellFormedURL.org/fooExample", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      int int0 = 3176;
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.proxy(httpConnection_Request0.proxy);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      
      HttpConnection.Response httpConnection_Response0 = null;
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request2, httpConnection_Response0);
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Only http & https protocols supported
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test63()  throws Throwable  {
      String string0 = "";
      String string1 = "i4-w=dwZ\"`0!pc4HWB";
      Document document0 = Parser.parseBodyFragmentRelaxed(string0, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(document0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertEquals("i4-w=dwZ\"`0!pc4HWB", document0.location());
      assertEquals(1, document0.childNodeSize());
      assertEquals("#document", document0.nodeName());
      assertFalse(document0.updateMetaCharsetElement());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertEquals(0, document0.siblingIndex());
      assertEquals("#root", document0.tagName());
      assertEquals("i4-w=dwZ\"`0!pc4HWB", document0.baseUri());
      assertFalse(document0.isBlock());
      
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertNotNull(hashMap0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      
      int int0 = 0;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.parser(httpConnection_Request0.parser);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = new HttpConnection.KeyVal();
      assertNotNull(httpConnection_KeyVal0);
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertTrue(httpConnection_Request3.followRedirects());
      
      String string2 = "OIP{n.wPIya*I8t)a";
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request3.proxy(string2, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(0, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertNotNull(httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertNull(httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertNull(httpConnection_KeyVal0.key());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(0, httpConnection_Request3.timeout());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(0, httpConnection_Request4.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(httpConnection_Request3.postDataCharset);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(mockFileOutputStream0);
      
      String string3 = "3P[`r/,{iw";
      // Undeclared exception!
      try { 
        HttpConnection.Response.writePost(httpConnection_Request4, mockFileOutputStream0, string3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Writer", e);
      }
  }

  @Test(timeout = 11000)
  public void test64()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      
      boolean boolean0 = true;
      String string0 = "])/_Zv7\\`@%JFSX_x.6";
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean1 = FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      HttpConnection.Response httpConnection_Response1 = (HttpConnection.Response)httpConnection_Response0.cookie(string0, string0);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response1);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Response1, httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response1.method());
      assertNull(httpConnection_Response1.charset());
      assertNull(httpConnection_Response1.statusMessage());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      
      String string1 = httpConnection_Response0.getHeaderCaseInsensitive(string0);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(string1);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      
      httpConnection_Response0.executed = boolean0;
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      
      Connection.Method connection_Method0 = Connection.Method.TRACE;
      HttpConnection.Response httpConnection_Response2 = (HttpConnection.Response)httpConnection_Response0.method(connection_Method0);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertTrue(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response2.executed);
      assertEquals(0, httpConnection_Response2.numRedirects);
      assertEquals(0, httpConnection_Response2.statusCode);
      assertNotNull(httpConnection_Response2);
      assertSame(httpConnection_Response0, httpConnection_Response2);
      assertSame(httpConnection_Response0, httpConnection_Response1);
      assertSame(httpConnection_Response2, httpConnection_Response0);
      assertSame(httpConnection_Response2, httpConnection_Response1);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertEquals(Connection.Method.TRACE, httpConnection_Response0.method());
      assertNull(httpConnection_Response2.charset());
      assertEquals(Connection.Method.TRACE, httpConnection_Response2.method());
      assertNull(httpConnection_Response2.statusMessage());
      assertNull(httpConnection_Response2.contentType());
      assertEquals(0, httpConnection_Response2.statusCode());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.parse();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  @Test(timeout = 11000)
  public void test65()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      
      String string0 = "\\j9fouM";
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.createFolder(evoSuiteFile0);
      assertFalse(boolean0);
      
      EvoSuiteFile evoSuiteFile1 = null;
      boolean boolean1 = FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      httpConnection_Response0.charset = string0;
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals("\\j9fouM", httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      
      String string1 = httpConnection_Response0.charset();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals("\\j9fouM", string1);
      assertNotNull(string1);
      assertSame(string1, string0);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals("\\j9fouM", httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      
      String string2 = HttpConnection.Response.LOCATION;
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("Location", string2);
      assertNotNull(string2);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      
      String string3 = httpConnection_Response0.header(httpConnection_Response0.charset);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertNull(string3);
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals("\\j9fouM", httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.contentType());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test66()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      HttpConnection.Response httpConnection_Response1 = new HttpConnection.Response(httpConnection_Response0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response1);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      
      int int0 = httpConnection_Response1.statusCode();
      assertFalse(httpConnection_Response0.equals((Object)httpConnection_Response1));
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response1.statusCode);
      assertEquals(1, httpConnection_Response1.numRedirects);
      assertFalse(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, int0);
      assertNotSame(httpConnection_Response0, httpConnection_Response1);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      assertEquals(0, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertNull(httpConnection_Response1.method());
      
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[4];
      // Undeclared exception!
      try { 
        HttpConnection.Response.execute(httpConnection_Response1.req, httpConnection_Response0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test67()  throws Throwable  {
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      
      HttpConnection.Response.initUnSecureTSL();
      String string0 = "\\j9fFouM";
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.createFolder(evoSuiteFile0);
      assertFalse(boolean0);
      
      EvoSuiteFile evoSuiteFile1 = null;
      boolean boolean1 = FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      httpConnection_Response0.contentType = string0;
      assertEquals("\\j9fFouM", httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      
      String string1 = httpConnection_Response0.charset();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(string1);
      assertEquals("\\j9fFouM", httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      
      String string2 = httpConnection_Response0.contentType();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals("\\j9fFouM", string2);
      assertNotNull(string2);
      assertSame(string2, string0);
      assertEquals("\\j9fFouM", httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      
      String string3 = httpConnection_Response0.contentType();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals("\\j9fFouM", string3);
      assertNotNull(string3);
      assertSame(string3, string0);
      assertSame(string3, string2);
      assertEquals("\\j9fFouM", httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      
      String string4 = httpConnection_Response0.statusMessage();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNull(string4);
      assertEquals("\\j9fFouM", httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      
      // Undeclared exception!
      try { 
        httpConnection_Response0.bodyAsBytes();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test68()  throws Throwable  {
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      Parser parser0 = Parser.xmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.proxy(httpConnection_Request0.proxy);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      
      String string0 = "org.jsoup.helper.HttpConnection$Response$2";
      String string1 = httpConnection_Request2.cookie(string0);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertNull(string1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request1.postDataCharset, httpConnection_Request1.postDataCharset, (InputStream) pipedInputStream0);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertNotNull(httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertNotNull(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request3.ignoreHttpErrors(httpConnection_Request0.followRedirects);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.parserDefined);
      assertNotNull(httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      
      URI uRI0 = MockURI.aHttpURI;
      assertNotNull(uRI0);
      assertNull(uRI0.getRawFragment());
      assertNull(uRI0.getRawUserInfo());
      assertTrue(uRI0.isAbsolute());
      assertFalse(uRI0.isOpaque());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals((-1), uRI0.getPort());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertEquals("http", uRI0.getScheme());
      assertEquals("foo.bar", uRI0.getHost());
      assertNull(uRI0.getRawQuery());
      
      URI uRI1 = MockURI.resolve(uRI0, uRI0);
      assertNotNull(uRI1);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertNull(uRI0.getRawFragment());
      assertNull(uRI0.getRawUserInfo());
      assertTrue(uRI0.isAbsolute());
      assertFalse(uRI0.isOpaque());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals((-1), uRI0.getPort());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertEquals("http", uRI0.getScheme());
      assertEquals("foo.bar", uRI0.getHost());
      assertNull(uRI0.getRawQuery());
      assertNull(uRI1.getRawUserInfo());
      assertFalse(uRI1.isOpaque());
      assertNull(uRI1.getRawFragment());
      assertTrue(uRI1.isAbsolute());
      assertEquals("", uRI1.getRawPath());
      assertEquals("http://foo.bar", uRI1.toString());
      assertNull(uRI1.getRawQuery());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertEquals((-1), uRI1.getPort());
      assertEquals("http", uRI1.getScheme());
      assertEquals("foo.bar", uRI1.getHost());
      
      URL uRL0 = MockURI.toURL(uRI1);
      assertNotNull(uRL0);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertNull(uRI0.getRawFragment());
      assertNull(uRI0.getRawUserInfo());
      assertTrue(uRI0.isAbsolute());
      assertFalse(uRI0.isOpaque());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals((-1), uRI0.getPort());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertEquals("http", uRI0.getScheme());
      assertEquals("foo.bar", uRI0.getHost());
      assertNull(uRI0.getRawQuery());
      assertNull(uRI1.getRawUserInfo());
      assertFalse(uRI1.isOpaque());
      assertNull(uRI1.getRawFragment());
      assertTrue(uRI1.isAbsolute());
      assertEquals("", uRI1.getRawPath());
      assertEquals("http://foo.bar", uRI1.toString());
      assertNull(uRI1.getRawQuery());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertEquals((-1), uRI1.getPort());
      assertEquals("http", uRI1.getScheme());
      assertEquals("foo.bar", uRI1.getHost());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("foo.bar", uRL0.getHost());
      assertEquals("", uRL0.getPath());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://foo.bar", uRL0.toString());
      assertEquals("", uRL0.getFile());
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request4.url(uRL0);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertNotNull(httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertNull(uRI0.getRawFragment());
      assertNull(uRI0.getRawUserInfo());
      assertTrue(uRI0.isAbsolute());
      assertFalse(uRI0.isOpaque());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals((-1), uRI0.getPort());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertEquals("http", uRI0.getScheme());
      assertEquals("foo.bar", uRI0.getHost());
      assertNull(uRI0.getRawQuery());
      assertNull(uRI1.getRawUserInfo());
      assertFalse(uRI1.isOpaque());
      assertNull(uRI1.getRawFragment());
      assertTrue(uRI1.isAbsolute());
      assertEquals("", uRI1.getRawPath());
      assertEquals("http://foo.bar", uRI1.toString());
      assertNull(uRI1.getRawQuery());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertEquals((-1), uRI1.getPort());
      assertEquals("http", uRI1.getScheme());
      assertEquals("foo.bar", uRI1.getHost());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getPort());
      assertEquals("foo.bar", uRL0.getHost());
      assertEquals("", uRL0.getPath());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://foo.bar", uRL0.toString());
      assertEquals("", uRL0.getFile());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(3000, httpConnection_Request5.timeout());
      assertTrue(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.followRedirects());
      
      String string2 = null;
      HttpConnection.Response.writePost(httpConnection_Request4, pipedOutputStream0, string2);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.parserDefined);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.parserDefined);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(11, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      
      httpConnection_Response0.charset = httpConnection_Request3.postDataCharset;
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals("UTF-8", httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(11, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: foo.bar
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }

  @Test(timeout = 11000)
  public void test69()  throws Throwable  {
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      Parser parser0 = Parser.xmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.proxy(httpConnection_Request0.proxy);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      String string0 = "org.jsoup.helper.HttpConnection$Response$2";
      String string1 = httpConnection_Request2.cookie(string0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNull(string1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://foo.bar?UTF-8=UTF-8");
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string0);
      assertTrue(boolean0);
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request1.postDataCharset, httpConnection_Request1.postDataCharset, (InputStream) pipedInputStream0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertNotNull(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request3.ignoreHttpErrors(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertNotNull(httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      
      URI uRI0 = MockURI.aHttpURI;
      assertNotNull(uRI0);
      assertNull(uRI0.getRawUserInfo());
      assertFalse(uRI0.isOpaque());
      assertNull(uRI0.getRawFragment());
      assertTrue(uRI0.isAbsolute());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals("foo.bar", uRI0.getHost());
      assertEquals("", uRI0.getRawPath());
      assertNull(uRI0.getRawQuery());
      assertEquals("http", uRI0.getScheme());
      assertEquals((-1), uRI0.getPort());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      
      URI uRI1 = MockURI.resolve(uRI0, uRI0);
      assertNotNull(uRI1);
      assertSame(uRI1, uRI0);
      assertSame(uRI0, uRI1);
      assertEquals("foo.bar", uRI1.getHost());
      assertEquals("http://foo.bar", uRI1.toString());
      assertNull(uRI1.getRawFragment());
      assertTrue(uRI1.isAbsolute());
      assertEquals((-1), uRI1.getPort());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertFalse(uRI1.isOpaque());
      assertNull(uRI1.getRawQuery());
      assertEquals("", uRI1.getRawPath());
      assertEquals("http", uRI1.getScheme());
      assertNull(uRI1.getRawUserInfo());
      assertNull(uRI0.getRawUserInfo());
      assertFalse(uRI0.isOpaque());
      assertNull(uRI0.getRawFragment());
      assertTrue(uRI0.isAbsolute());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals("foo.bar", uRI0.getHost());
      assertEquals("", uRI0.getRawPath());
      assertNull(uRI0.getRawQuery());
      assertEquals("http", uRI0.getScheme());
      assertEquals((-1), uRI0.getPort());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      
      URL uRL0 = MockURI.toURL(uRI1);
      assertNotNull(uRL0);
      assertSame(uRI1, uRI0);
      assertSame(uRI0, uRI1);
      assertEquals("foo.bar", uRI1.getHost());
      assertEquals("http://foo.bar", uRI1.toString());
      assertNull(uRI1.getRawFragment());
      assertTrue(uRI1.isAbsolute());
      assertEquals((-1), uRI1.getPort());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertFalse(uRI1.isOpaque());
      assertNull(uRI1.getRawQuery());
      assertEquals("", uRI1.getRawPath());
      assertEquals("http", uRI1.getScheme());
      assertNull(uRI1.getRawUserInfo());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals("foo.bar", uRL0.getHost());
      assertEquals("", uRL0.getPath());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("http://foo.bar", uRL0.toString());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      assertEquals("", uRL0.getFile());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRI0.getRawUserInfo());
      assertFalse(uRI0.isOpaque());
      assertNull(uRI0.getRawFragment());
      assertTrue(uRI0.isAbsolute());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals("foo.bar", uRI0.getHost());
      assertEquals("", uRI0.getRawPath());
      assertNull(uRI0.getRawQuery());
      assertEquals("http", uRI0.getScheme());
      assertEquals((-1), uRI0.getPort());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request4.url(uRL0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request5.timeoutMilliseconds);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertNotNull(httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertNull(uRI0.getRawUserInfo());
      assertFalse(uRI0.isOpaque());
      assertNull(uRI0.getRawFragment());
      assertTrue(uRI0.isAbsolute());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals("foo.bar", uRI0.getHost());
      assertEquals("", uRI0.getRawPath());
      assertNull(uRI0.getRawQuery());
      assertEquals("http", uRI0.getScheme());
      assertEquals((-1), uRI0.getPort());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertEquals("foo.bar", uRI1.getHost());
      assertEquals("http://foo.bar", uRI1.toString());
      assertNull(uRI1.getRawFragment());
      assertTrue(uRI1.isAbsolute());
      assertEquals((-1), uRI1.getPort());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertFalse(uRI1.isOpaque());
      assertNull(uRI1.getRawQuery());
      assertEquals("", uRI1.getRawPath());
      assertEquals("http", uRI1.getScheme());
      assertNull(uRI1.getRawUserInfo());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertNull(uRL0.getRef());
      assertEquals("foo.bar", uRL0.getHost());
      assertEquals("", uRL0.getPath());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("http://foo.bar", uRL0.toString());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      assertEquals("", uRL0.getFile());
      assertEquals((-1), uRL0.getDefaultPort());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(3000, httpConnection_Request5.timeout());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      
      String string2 = null;
      HttpConnection.Response.writePost(httpConnection_Request4, pipedOutputStream0, string2);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(11, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      httpConnection_Response0.charset = httpConnection_Request3.postDataCharset;
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertEquals("UTF-8", httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(11, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      
      HttpConnection.Response httpConnection_Response1 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertNotNull(httpConnection_Response1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
  }

  @Test(timeout = 11000)
  public void test70()  throws Throwable  {
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertNotNull(httpConnection_Request0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      
      Parser parser0 = Parser.xmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.proxy(httpConnection_Request0.proxy);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      String string0 = "org.jsoup.helper.HttpConnection$Response$2";
      String string1 = httpConnection_Request2.cookie(string0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertNull(string1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request1.postDataCharset, httpConnection_Request1.postDataCharset, (InputStream) pipedInputStream0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertNotNull(httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertNotNull(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request3.ignoreHttpErrors(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertNotNull(httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(3000, httpConnection_Request4.timeout());
      
      URI uRI0 = MockURI.aHttpURI;
      assertNotNull(uRI0);
      assertEquals((-1), uRI0.getPort());
      assertEquals("foo.bar", uRI0.getHost());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertFalse(uRI0.isOpaque());
      assertTrue(uRI0.isAbsolute());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawFragment());
      assertNull(uRI0.getRawQuery());
      assertNull(uRI0.getRawUserInfo());
      
      URI uRI1 = MockURI.resolve(uRI0, uRI0);
      assertNotNull(uRI1);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertEquals((-1), uRI0.getPort());
      assertEquals("foo.bar", uRI0.getHost());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertFalse(uRI0.isOpaque());
      assertTrue(uRI0.isAbsolute());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawFragment());
      assertNull(uRI0.getRawQuery());
      assertNull(uRI0.getRawUserInfo());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertEquals("", uRI1.getRawPath());
      assertEquals("http", uRI1.getScheme());
      assertTrue(uRI1.isAbsolute());
      assertFalse(uRI1.isOpaque());
      assertEquals("foo.bar", uRI1.getHost());
      assertEquals("http://foo.bar", uRI1.toString());
      assertEquals((-1), uRI1.getPort());
      assertNull(uRI1.getRawFragment());
      assertNull(uRI1.getRawQuery());
      assertNull(uRI1.getRawUserInfo());
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request4.maxBodySize(httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(3000, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(3000, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request5.timeoutMilliseconds);
      assertTrue(httpConnection_Request5.ignoreHttpErrors);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertEquals(3000, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.parserDefined);
      assertNotNull(httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.maxBodySize());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(3000, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(3000, httpConnection_Request4.maxBodySize());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request5.followRedirects());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request5.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(3000, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      
      URL uRL0 = MockURI.toURL(uRI1);
      assertNotNull(uRL0);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertEquals("http://foo.bar", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("", uRL0.getFile());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("foo.bar", uRL0.getHost());
      assertEquals("", uRL0.getPath());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      assertEquals((-1), uRI0.getPort());
      assertEquals("foo.bar", uRI0.getHost());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertFalse(uRI0.isOpaque());
      assertTrue(uRI0.isAbsolute());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawFragment());
      assertNull(uRI0.getRawQuery());
      assertNull(uRI0.getRawUserInfo());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertEquals("", uRI1.getRawPath());
      assertEquals("http", uRI1.getScheme());
      assertTrue(uRI1.isAbsolute());
      assertFalse(uRI1.isOpaque());
      assertEquals("foo.bar", uRI1.getHost());
      assertEquals("http://foo.bar", uRI1.toString());
      assertEquals((-1), uRI1.getPort());
      assertNull(uRI1.getRawFragment());
      assertNull(uRI1.getRawQuery());
      assertNull(uRI1.getRawUserInfo());
      
      HttpConnection.Request httpConnection_Request6 = (HttpConnection.Request)httpConnection_Request4.url(uRL0);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(3000, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request1.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(3000, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(3000, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(3000, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request6.followRedirects);
      assertFalse(httpConnection_Request6.ignoreContentType);
      assertEquals(3000, httpConnection_Request6.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request6.timeoutMilliseconds);
      assertTrue(httpConnection_Request6.ignoreHttpErrors);
      assertTrue(httpConnection_Request6.validateTSLCertificates);
      assertTrue(httpConnection_Request6.parserDefined);
      assertNotNull(httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request6);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request6);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request6);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request6);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request6);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertSame(httpConnection_Request6, httpConnection_Request4);
      assertSame(httpConnection_Request6, httpConnection_Request5);
      assertSame(httpConnection_Request6, httpConnection_Request1);
      assertSame(httpConnection_Request6, httpConnection_Request2);
      assertSame(httpConnection_Request6, httpConnection_Request3);
      assertSame(httpConnection_Request6, httpConnection_Request0);
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.maxBodySize());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(3000, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(3000, httpConnection_Request4.maxBodySize());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals((-1), uRI0.getPort());
      assertEquals("foo.bar", uRI0.getHost());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertFalse(uRI0.isOpaque());
      assertTrue(uRI0.isAbsolute());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawFragment());
      assertNull(uRI0.getRawQuery());
      assertNull(uRI0.getRawUserInfo());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertEquals("", uRI1.getRawPath());
      assertEquals("http", uRI1.getScheme());
      assertTrue(uRI1.isAbsolute());
      assertFalse(uRI1.isOpaque());
      assertEquals("foo.bar", uRI1.getHost());
      assertEquals("http://foo.bar", uRI1.toString());
      assertEquals((-1), uRI1.getPort());
      assertNull(uRI1.getRawFragment());
      assertNull(uRI1.getRawQuery());
      assertNull(uRI1.getRawUserInfo());
      assertEquals("http://foo.bar", uRL0.toString());
      assertNull(uRL0.getQuery());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertEquals("", uRL0.getFile());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getRef());
      assertEquals("foo.bar", uRL0.getHost());
      assertEquals("", uRL0.getPath());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      assertTrue(httpConnection_Request6.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request6.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request6.method());
      assertTrue(httpConnection_Request6.validateTLSCertificates());
      assertTrue(httpConnection_Request6.followRedirects());
      assertEquals(3000, httpConnection_Request6.timeout());
      assertEquals("UTF-8", httpConnection_Request6.postDataCharset());
      assertFalse(httpConnection_Request6.ignoreContentType());
      
      // Undeclared exception!
      HttpConnection.Response.writePost(httpConnection_Request4, pipedOutputStream0, httpConnection_Request3.postDataCharset);
  }

  @Test(timeout = 11000)
  public void test71()  throws Throwable  {
      String string0 = "";
      String string1 = "i4-w=dwZ:`'!pc4HWB";
      Document document0 = Parser.parseBodyFragmentRelaxed(string0, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(document0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertEquals("i4-w=dwZ:`'!pc4HWB", document0.baseUri());
      assertEquals(1, document0.childNodeSize());
      assertEquals("#document", document0.nodeName());
      assertEquals("i4-w=dwZ:`'!pc4HWB", document0.location());
      assertFalse(document0.updateMetaCharsetElement());
      assertEquals("#root", document0.tagName());
      assertEquals(0, document0.siblingIndex());
      assertFalse(document0.isBlock());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertNotNull(hashMap0);
      assertTrue(hashMap0.isEmpty());
      assertEquals(0, hashMap0.size());
      
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertNotNull(httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      
      int int0 = 0;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request0.parser(httpConnection_Request1.parser);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request2.postDataCharset, string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_KeyVal0);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("i4-w=dwZ:`'!pc4HWB", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertNotNull(httpConnection_Request3);
      assertNotSame(string1, string0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("i4-w=dwZ:`'!pc4HWB", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(0, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      
      String string2 = "OIP{n.wPIya*I8t)a";
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request3.proxy(string2, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(0, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertNotNull(httpConnection_Request4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("i4-w=dwZ:`'!pc4HWB", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(0, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(0, httpConnection_Request4.timeout());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(httpConnection_Request3.postDataCharset);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertNotNull(mockFileOutputStream0);
      
      String string3 = "3P[`r/,{iw";
      HttpConnection.Response.writePost(httpConnection_Request4, mockFileOutputStream0, string3);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(0, httpConnection_Request4.timeoutMilliseconds);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertEquals(0, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("i4-w=dwZ:`'!pc4HWB", httpConnection_KeyVal0.value());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(0, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(0, httpConnection_Request4.timeout());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      
      String string4 = "http";
      HttpConnection.Response.initUnSecureTSL();
      HashMap<String, List<String>> hashMap1 = new HashMap<String, List<String>>();
      assertNotNull(hashMap1);
      assertEquals(0, hashMap1.size());
      assertTrue(hashMap1.isEmpty());
      
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      assertNotNull(linkedList0);
      assertEquals(0, linkedList0.size());
      
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      assertNotNull(locale0);
      assertEquals("zh", locale0.getLanguage());
      assertEquals("zh_CN", locale0.toString());
      assertEquals("CN", locale0.getCountry());
      assertEquals("", locale0.getVariant());
      assertEquals("zho", locale0.getISO3Language());
      assertEquals("CHN", locale0.getISO3Country());
      
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      assertFalse(set0.contains(string3));
      assertNotNull(set0);
      assertEquals("zh", locale0.getLanguage());
      assertEquals("zh_CN", locale0.toString());
      assertEquals("CN", locale0.getCountry());
      assertEquals("", locale0.getVariant());
      assertEquals("zho", locale0.getISO3Language());
      assertEquals("CHN", locale0.getISO3Country());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0, locale_FilteringMode0);
      assertFalse(set0.contains(string3));
      assertFalse(list0.contains(string3));
      assertNotNull(list0);
      assertEquals(0, linkedList0.size());
      assertEquals("zh", locale0.getLanguage());
      assertEquals("zh_CN", locale0.toString());
      assertEquals("CN", locale0.getCountry());
      assertEquals("", locale0.getVariant());
      assertEquals("zho", locale0.getISO3Language());
      assertEquals("CHN", locale0.getISO3Country());
      assertEquals(0, set0.size());
      assertTrue(set0.isEmpty());
      assertTrue(list0.isEmpty());
      assertEquals(0, list0.size());
  }

  @Test(timeout = 11000)
  public void test72()  throws Throwable  {
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNotNull(httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      
      Parser parser0 = Parser.xmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      String string0 = "org.jsoup.helper.HttpConnection$Response$2";
      String string1 = httpConnection_Request0.cookie(string0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertNull(string1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request1.postDataCharset, httpConnection_Request1.postDataCharset, (InputStream) pipedInputStream0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertNotNull(httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      
      URI uRI0 = MockURI.aHttpURI;
      assertNotNull(uRI0);
      assertEquals((-1), uRI0.getPort());
      assertNull(uRI0.getRawQuery());
      assertNull(uRI0.getRawUserInfo());
      assertNull(uRI0.getRawFragment());
      assertEquals("foo.bar", uRI0.getHost());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http", uRI0.getScheme());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertFalse(uRI0.isOpaque());
      assertEquals("http://foo.bar", uRI0.toString());
      assertTrue(uRI0.isAbsolute());
      
      URI uRI1 = MockURI.resolve(uRI0, uRI0);
      assertNotNull(uRI1);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertEquals((-1), uRI0.getPort());
      assertNull(uRI0.getRawQuery());
      assertNull(uRI0.getRawUserInfo());
      assertNull(uRI0.getRawFragment());
      assertEquals("foo.bar", uRI0.getHost());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http", uRI0.getScheme());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertFalse(uRI0.isOpaque());
      assertEquals("http://foo.bar", uRI0.toString());
      assertTrue(uRI0.isAbsolute());
      assertNull(uRI1.getRawQuery());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertEquals("http://foo.bar", uRI1.toString());
      assertEquals("", uRI1.getRawPath());
      assertNull(uRI1.getRawFragment());
      assertTrue(uRI1.isAbsolute());
      assertFalse(uRI1.isOpaque());
      assertNull(uRI1.getRawUserInfo());
      assertEquals("foo.bar", uRI1.getHost());
      assertEquals((-1), uRI1.getPort());
      assertEquals("http", uRI1.getScheme());
      
      URL uRL0 = MockURI.toURL(uRI1);
      assertNotNull(uRL0);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertEquals((-1), uRI0.getPort());
      assertNull(uRI0.getRawQuery());
      assertNull(uRI0.getRawUserInfo());
      assertNull(uRI0.getRawFragment());
      assertEquals("foo.bar", uRI0.getHost());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http", uRI0.getScheme());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertFalse(uRI0.isOpaque());
      assertEquals("http://foo.bar", uRI0.toString());
      assertTrue(uRI0.isAbsolute());
      assertNull(uRI1.getRawQuery());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertEquals("http://foo.bar", uRI1.toString());
      assertEquals("", uRI1.getRawPath());
      assertNull(uRI1.getRawFragment());
      assertTrue(uRI1.isAbsolute());
      assertFalse(uRI1.isOpaque());
      assertNull(uRI1.getRawUserInfo());
      assertEquals("foo.bar", uRI1.getHost());
      assertEquals((-1), uRI1.getPort());
      assertEquals("http", uRI1.getScheme());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("foo.bar", uRL0.getHost());
      assertEquals("", uRL0.getPath());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://foo.bar", uRL0.toString());
      assertEquals("", uRL0.getFile());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request0.url(uRL0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.followRedirects);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertNotNull(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals((-1), uRI0.getPort());
      assertNull(uRI0.getRawQuery());
      assertNull(uRI0.getRawUserInfo());
      assertNull(uRI0.getRawFragment());
      assertEquals("foo.bar", uRI0.getHost());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http", uRI0.getScheme());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertFalse(uRI0.isOpaque());
      assertEquals("http://foo.bar", uRI0.toString());
      assertTrue(uRI0.isAbsolute());
      assertNull(uRI1.getRawQuery());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertEquals("http://foo.bar", uRI1.toString());
      assertEquals("", uRI1.getRawPath());
      assertNull(uRI1.getRawFragment());
      assertTrue(uRI1.isAbsolute());
      assertFalse(uRI1.isOpaque());
      assertNull(uRI1.getRawUserInfo());
      assertEquals("foo.bar", uRI1.getHost());
      assertEquals((-1), uRI1.getPort());
      assertEquals("http", uRI1.getScheme());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("foo.bar", uRL0.getHost());
      assertEquals("", uRL0.getPath());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("http://foo.bar", uRL0.toString());
      assertEquals("", uRL0.getFile());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertTrue(httpConnection_Request3.followRedirects());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      
      String string2 = null;
      HttpConnection.Response.writePost(httpConnection_Request0, pipedOutputStream0, string2);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      
      httpConnection_Response0.charset = httpConnection_Request2.postDataCharset;
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertEquals("UTF-8", httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertFalse(parser0.isTrackErrors());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(11, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // HTTP error fetching URL
         //
         verifyException("org.jsoup.helper.HttpConnection$Response", e);
      }
  }

  @Test(timeout = 11000)
  public void test73()  throws Throwable  {
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      
      Parser parser0 = Parser.xmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(3000, httpConnection_Request1.timeout());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.proxy(httpConnection_Request0.proxy);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      
      String string0 = "org.jsoup.helper.HttpConnection$Response$2";
      String string1 = httpConnection_Request2.cookie(string0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertNull(string1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request1.postDataCharset, httpConnection_Request1.postDataCharset, (InputStream) pipedInputStream0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertNotNull(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request3.ignoreHttpErrors(httpConnection_Request0.followRedirects);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertNotNull(httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(3000, httpConnection_Request4.timeout());
      
      URI uRI0 = MockURI.aHttpURI;
      assertNotNull(uRI0);
      assertEquals("", uRI0.getRawPath());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawQuery());
      assertNull(uRI0.getRawFragment());
      assertTrue(uRI0.isAbsolute());
      assertEquals((-1), uRI0.getPort());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertFalse(uRI0.isOpaque());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals("foo.bar", uRI0.getHost());
      assertNull(uRI0.getRawUserInfo());
      
      URI uRI1 = MockURI.resolve(uRI0, uRI0);
      assertNotNull(uRI1);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertEquals("", uRI0.getRawPath());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawQuery());
      assertNull(uRI0.getRawFragment());
      assertTrue(uRI0.isAbsolute());
      assertEquals((-1), uRI0.getPort());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertFalse(uRI0.isOpaque());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals("foo.bar", uRI0.getHost());
      assertNull(uRI0.getRawUserInfo());
      assertNull(uRI1.getRawUserInfo());
      assertFalse(uRI1.isOpaque());
      assertNull(uRI1.getRawFragment());
      assertEquals("foo.bar", uRI1.getHost());
      assertEquals("http://foo.bar", uRI1.toString());
      assertTrue(uRI1.isAbsolute());
      assertEquals("", uRI1.getRawPath());
      assertNull(uRI1.getRawQuery());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertEquals("http", uRI1.getScheme());
      assertEquals((-1), uRI1.getPort());
      
      URL uRL0 = MockURI.toURL(uRI1);
      assertNotNull(uRL0);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertEquals("", uRI0.getRawPath());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawQuery());
      assertNull(uRI0.getRawFragment());
      assertTrue(uRI0.isAbsolute());
      assertEquals((-1), uRI0.getPort());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertFalse(uRI0.isOpaque());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals("foo.bar", uRI0.getHost());
      assertNull(uRI0.getRawUserInfo());
      assertNull(uRI1.getRawUserInfo());
      assertFalse(uRI1.isOpaque());
      assertNull(uRI1.getRawFragment());
      assertEquals("foo.bar", uRI1.getHost());
      assertEquals("http://foo.bar", uRI1.toString());
      assertTrue(uRI1.isAbsolute());
      assertEquals("", uRI1.getRawPath());
      assertNull(uRI1.getRawQuery());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertEquals("http", uRI1.getScheme());
      assertEquals((-1), uRI1.getPort());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("http://foo.bar", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("", uRL0.getFile());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", uRL0.getPath());
      assertEquals("foo.bar", uRL0.getHost());
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request4.url(uRL0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertTrue(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request5.timeoutMilliseconds);
      assertNotNull(httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawQuery());
      assertNull(uRI0.getRawFragment());
      assertTrue(uRI0.isAbsolute());
      assertEquals((-1), uRI0.getPort());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertFalse(uRI0.isOpaque());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals("foo.bar", uRI0.getHost());
      assertNull(uRI0.getRawUserInfo());
      assertNull(uRI1.getRawUserInfo());
      assertFalse(uRI1.isOpaque());
      assertNull(uRI1.getRawFragment());
      assertEquals("foo.bar", uRI1.getHost());
      assertEquals("http://foo.bar", uRI1.toString());
      assertTrue(uRI1.isAbsolute());
      assertEquals("", uRI1.getRawPath());
      assertNull(uRI1.getRawQuery());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertEquals("http", uRI1.getScheme());
      assertEquals((-1), uRI1.getPort());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("http://foo.bar", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertNull(uRL0.getUserInfo());
      assertEquals("", uRL0.getFile());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("", uRL0.getPath());
      assertEquals("foo.bar", uRL0.getHost());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(3000, httpConnection_Request5.timeout());
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://foo.bar?UTF-8=UTF-8");
      String string2 = "bx%P+!mt&S";
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string2);
      assertFalse(string2.equals((Object)string0));
      assertTrue(boolean0);
      assertNotSame(string2, string0);
      
      String string3 = null;
      HttpConnection.Response.writePost(httpConnection_Request4, pipedOutputStream0, string3);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(11, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(3000, httpConnection_Request4.timeout());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      
      httpConnection_Response0.charset = httpConnection_Request3.postDataCharset;
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertNull(httpConnection_Response0.contentType());
      assertEquals("UTF-8", httpConnection_Response0.charset());
      assertNull(httpConnection_Response0.method());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(11, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      
      HttpConnection.Response httpConnection_Response1 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertNotNull(httpConnection_Response1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertNull(httpConnection_Response1.charset());
      
      HttpConnection.Response.serialiseRequestUrl(httpConnection_Request4);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.parserDefined);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.parserDefined);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request2.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.followRedirects);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertTrue(httpConnection_Request1.followRedirects());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(11, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals(3000, httpConnection_Request4.timeout());
      
      Document document0 = httpConnection_Response1.parse();
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertNotNull(document0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals("UTF-8", httpConnection_Response1.charset());
      assertEquals("#root", document0.tagName());
      assertEquals("http://foo.bar?UTF-8=UTF-8", document0.location());
      assertEquals("http://foo.bar?UTF-8=UTF-8", document0.baseUri());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertFalse(document0.isBlock());
      assertEquals(1, document0.childNodeSize());
      assertEquals(0, document0.siblingIndex());
      assertFalse(document0.updateMetaCharsetElement());
      assertEquals("#document", document0.nodeName());
  }

  @Test(timeout = 11000)
  public void test74()  throws Throwable  {
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertFalse(httpConnection_Request0.parserDefined);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      
      Parser parser0 = Parser.xmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.proxy(httpConnection_Request0.proxy);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      
      String string0 = "org.jsoup.helper.HttpConnection$Response$2";
      String string1 = httpConnection_Request2.cookie(string0);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertNull(string1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request1.postDataCharset, httpConnection_Request1.postDataCharset, (InputStream) pipedInputStream0);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertNotNull(httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertNotNull(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertFalse(parser0.isTrackErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request3.ignoreHttpErrors(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertNotNull(httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.followRedirects());
      
      URI uRI0 = MockURI.aHttpURI;
      assertNotNull(uRI0);
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertTrue(uRI0.isAbsolute());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http://foo.bar", uRI0.toString());
      assertNull(uRI0.getRawUserInfo());
      assertFalse(uRI0.isOpaque());
      assertEquals((-1), uRI0.getPort());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawFragment());
      assertEquals("foo.bar", uRI0.getHost());
      assertNull(uRI0.getRawQuery());
      
      URI uRI1 = MockURI.resolve(uRI0, uRI0);
      assertNotNull(uRI1);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertTrue(uRI0.isAbsolute());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http://foo.bar", uRI0.toString());
      assertNull(uRI0.getRawUserInfo());
      assertFalse(uRI0.isOpaque());
      assertEquals((-1), uRI0.getPort());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawFragment());
      assertEquals("foo.bar", uRI0.getHost());
      assertNull(uRI0.getRawQuery());
      assertEquals("", uRI1.getRawPath());
      assertEquals("http", uRI1.getScheme());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertTrue(uRI1.isAbsolute());
      assertEquals("http://foo.bar", uRI1.toString());
      assertEquals((-1), uRI1.getPort());
      assertFalse(uRI1.isOpaque());
      assertNull(uRI1.getRawFragment());
      assertNull(uRI1.getRawUserInfo());
      assertEquals("foo.bar", uRI1.getHost());
      assertNull(uRI1.getRawQuery());
      
      URL uRL0 = MockURI.toURL(uRI1);
      assertNotNull(uRL0);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertTrue(uRI0.isAbsolute());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http://foo.bar", uRI0.toString());
      assertNull(uRI0.getRawUserInfo());
      assertFalse(uRI0.isOpaque());
      assertEquals((-1), uRI0.getPort());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawFragment());
      assertEquals("foo.bar", uRI0.getHost());
      assertNull(uRI0.getRawQuery());
      assertEquals("", uRI1.getRawPath());
      assertEquals("http", uRI1.getScheme());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertTrue(uRI1.isAbsolute());
      assertEquals("http://foo.bar", uRI1.toString());
      assertEquals((-1), uRI1.getPort());
      assertFalse(uRI1.isOpaque());
      assertNull(uRI1.getRawFragment());
      assertNull(uRI1.getRawUserInfo());
      assertEquals("foo.bar", uRI1.getHost());
      assertNull(uRI1.getRawQuery());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("", uRL0.getFile());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("http://foo.bar", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals("foo.bar", uRL0.getHost());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      assertEquals("", uRL0.getPath());
      
      HttpConnection.Request httpConnection_Request5 = (HttpConnection.Request)httpConnection_Request4.url(uRL0);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertNotNull(httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertTrue(uRI0.isAbsolute());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http://foo.bar", uRI0.toString());
      assertNull(uRI0.getRawUserInfo());
      assertFalse(uRI0.isOpaque());
      assertEquals((-1), uRI0.getPort());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawFragment());
      assertEquals("foo.bar", uRI0.getHost());
      assertNull(uRI0.getRawQuery());
      assertEquals("", uRI1.getRawPath());
      assertEquals("http", uRI1.getScheme());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertTrue(uRI1.isAbsolute());
      assertEquals("http://foo.bar", uRI1.toString());
      assertEquals((-1), uRI1.getPort());
      assertFalse(uRI1.isOpaque());
      assertNull(uRI1.getRawFragment());
      assertNull(uRI1.getRawUserInfo());
      assertEquals("foo.bar", uRI1.getHost());
      assertNull(uRI1.getRawQuery());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("", uRL0.getFile());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("http://foo.bar", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals("foo.bar", uRL0.getHost());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      assertEquals("", uRL0.getPath());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertTrue(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(3000, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://foo.bar?UTF-8=UTF-8");
      String string2 = "bx%P+!mt&S";
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string2);
      assertFalse(string2.equals((Object)string0));
      assertTrue(boolean0);
      assertNotSame(string2, string0);
      
      String string3 = null;
      HttpConnection.Response.writePost(httpConnection_Request4, pipedOutputStream0, string3);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(11, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.followRedirects());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertNull(httpConnection_Response0.charset());
      
      HttpURLConnection httpURLConnection0 = HttpConnection.Response.createConnection(httpConnection_Request5);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertNotNull(httpURLConnection0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(11, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertTrue(uRI0.isAbsolute());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http://foo.bar", uRI0.toString());
      assertNull(uRI0.getRawUserInfo());
      assertFalse(uRI0.isOpaque());
      assertEquals((-1), uRI0.getPort());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawFragment());
      assertEquals("foo.bar", uRI0.getHost());
      assertNull(uRI0.getRawQuery());
      assertEquals("", uRI1.getRawPath());
      assertEquals("http", uRI1.getScheme());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertTrue(uRI1.isAbsolute());
      assertEquals("http://foo.bar", uRI1.toString());
      assertEquals((-1), uRI1.getPort());
      assertFalse(uRI1.isOpaque());
      assertNull(uRI1.getRawFragment());
      assertNull(uRI1.getRawUserInfo());
      assertEquals("foo.bar", uRI1.getHost());
      assertNull(uRI1.getRawQuery());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("", uRL0.getFile());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("http://foo.bar", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals("foo.bar", uRL0.getHost());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      assertEquals("", uRL0.getPath());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertTrue(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(3000, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertTrue(httpURLConnection0.getDoInput());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals(3000, httpURLConnection0.getReadTimeout());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://foo.bar", httpURLConnection0.toString());
      assertTrue(httpURLConnection0.getUseCaches());
      assertEquals(3000, httpURLConnection0.getConnectTimeout());
      assertFalse(httpURLConnection0.usingProxy());
      
      LinkedHashMap<String, List<String>> linkedHashMap0 = HttpConnection.Response.createHeaderMap(httpURLConnection0);
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.followRedirects);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.parserDefined);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request5.parserDefined);
      assertFalse(httpConnection_Request5.ignoreContentType);
      assertTrue(httpConnection_Request5.followRedirects);
      assertTrue(httpConnection_Request5.validateTSLCertificates);
      assertTrue(httpConnection_Request5.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request5.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request5.maxBodySizeBytes);
      assertNotNull(linkedHashMap0);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request5);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request5);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request5);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertSame(httpConnection_Request5, httpConnection_Request4);
      assertSame(httpConnection_Request5, httpConnection_Request0);
      assertSame(httpConnection_Request5, httpConnection_Request3);
      assertSame(httpConnection_Request5, httpConnection_Request2);
      assertSame(httpConnection_Request5, httpConnection_Request1);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(11, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertTrue(uRI0.isAbsolute());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http://foo.bar", uRI0.toString());
      assertNull(uRI0.getRawUserInfo());
      assertFalse(uRI0.isOpaque());
      assertEquals((-1), uRI0.getPort());
      assertEquals("http", uRI0.getScheme());
      assertNull(uRI0.getRawFragment());
      assertEquals("foo.bar", uRI0.getHost());
      assertNull(uRI0.getRawQuery());
      assertEquals("", uRI1.getRawPath());
      assertEquals("http", uRI1.getScheme());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertTrue(uRI1.isAbsolute());
      assertEquals("http://foo.bar", uRI1.toString());
      assertEquals((-1), uRI1.getPort());
      assertFalse(uRI1.isOpaque());
      assertNull(uRI1.getRawFragment());
      assertNull(uRI1.getRawUserInfo());
      assertEquals("foo.bar", uRI1.getHost());
      assertNull(uRI1.getRawQuery());
      assertEquals("http", uRL0.getProtocol());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertNull(uRL0.getUserInfo());
      assertEquals((-1), uRL0.getDefaultPort());
      assertEquals("", uRL0.getFile());
      assertNull(uRL0.getRef());
      assertNull(uRL0.getQuery());
      assertEquals("http://foo.bar", uRL0.toString());
      assertEquals((-1), uRL0.getPort());
      assertEquals("foo.bar", uRL0.getHost());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      assertEquals("", uRL0.getPath());
      assertEquals(1048576, httpConnection_Request5.maxBodySize());
      assertTrue(httpConnection_Request5.validateTLSCertificates());
      assertTrue(httpConnection_Request5.followRedirects());
      assertTrue(httpConnection_Request5.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request5.method());
      assertEquals(3000, httpConnection_Request5.timeout());
      assertFalse(httpConnection_Request5.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request5.postDataCharset());
      assertNull(httpURLConnection0.getContentType());
      assertFalse(httpURLConnection0.getInstanceFollowRedirects());
      assertEquals(0L, httpURLConnection0.getIfModifiedSince());
      assertTrue(httpURLConnection0.getDoInput());
      assertTrue(httpURLConnection0.getFollowRedirects());
      assertNull(httpURLConnection0.getContentEncoding());
      assertEquals((-1), httpURLConnection0.getContentLength());
      assertTrue(httpURLConnection0.getDefaultUseCaches());
      assertEquals("GET", httpURLConnection0.getRequestMethod());
      assertFalse(httpURLConnection0.getDoOutput());
      assertFalse(httpURLConnection0.getDefaultAllowUserInteraction());
      assertEquals(3000, httpURLConnection0.getReadTimeout());
      assertFalse(httpURLConnection0.getAllowUserInteraction());
      assertEquals("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection:http://foo.bar", httpURLConnection0.toString());
      assertTrue(httpURLConnection0.getUseCaches());
      assertEquals(3000, httpURLConnection0.getConnectTimeout());
      assertFalse(httpURLConnection0.usingProxy());
      assertTrue(linkedHashMap0.isEmpty());
      assertEquals(0, linkedHashMap0.size());
      
      httpConnection_Response0.charset = httpConnection_Request3.postDataCharset;
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertTrue(httpConnection_Request2.followRedirects());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertNull(httpConnection_Response0.statusMessage());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.contentType());
      assertEquals("UTF-8", httpConnection_Response0.charset());
      assertEquals(11, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request3.timeout());
      
      HttpConnection.Response httpConnection_Response1 = HttpConnection.Response.execute((Connection.Request) httpConnection_Request0);
      assertFalse(httpConnection_Response1.equals((Object)httpConnection_Response0));
      assertTrue(httpConnection_Request0.parserDefined);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertTrue(httpConnection_Response1.executed);
      assertEquals(200, httpConnection_Response1.statusCode);
      assertEquals(0, httpConnection_Response1.numRedirects);
      assertNotNull(httpConnection_Response1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request5);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertNotSame(httpConnection_Response1, httpConnection_Response0);
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertNull(httpConnection_Response1.contentType());
      assertEquals(Connection.Method.GET, httpConnection_Response1.method());
      assertEquals(200, httpConnection_Response1.statusCode());
      assertEquals("OK", httpConnection_Response1.statusMessage());
      assertNull(httpConnection_Response1.charset());
      
      HttpConnection.Response.initUnSecureTSL();
      // Undeclared exception!
      try { 
        httpConnection_Response0.body();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Request must be executed (with .execute(), .get(), or .post() before getting response body
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 11000)
  public void test75()  throws Throwable  {
      String string0 = "";
      String string1 = "i4-w=dwZ\"`0!pc4HWB";
      Document document0 = Parser.parseBodyFragmentRelaxed(string0, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertNotNull(document0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertFalse(document0.updateMetaCharsetElement());
      assertEquals(Document.QuirksMode.noQuirks, document0.quirksMode());
      assertEquals(0, document0.siblingIndex());
      assertEquals("#root", document0.tagName());
      assertEquals("#document", document0.nodeName());
      assertEquals("i4-w=dwZ\"`0!pc4HWB", document0.location());
      assertEquals(1, document0.childNodeSize());
      assertFalse(document0.isBlock());
      assertEquals("i4-w=dwZ\"`0!pc4HWB", document0.baseUri());
      
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      assertNotNull(hashMap0);
      assertEquals(0, hashMap0.size());
      assertTrue(hashMap0.isEmpty());
      
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertNotNull(httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      
      int int0 = 0;
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.timeout(int0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.parserDefined);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.parser(httpConnection_Request0.parser);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(0, httpConnection_Request2.timeout());
      
      Map.Entry<String, String> map_Entry0 = httpConnection_Request0.scanHeaders(httpConnection_Request1.postDataCharset);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertNull(map_Entry0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request2.postDataCharset, httpConnection_Request2.postDataCharset);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertNotNull(httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      
      HttpConnection.Request httpConnection_Request3 = httpConnection_Request2.data((Connection.KeyVal) httpConnection_KeyVal0);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertNotNull(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertFalse(httpConnection_KeyVal0.hasInputStream());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(0, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      
      String string2 = "OIP{n.wPIya*I8t)a";
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)107;
      byteArray0[0] = byte0;
      byte byte1 = (byte)6;
      byteArray0[1] = byte1;
      byte byte2 = (byte)85;
      byteArray0[2] = byte2;
      byte byte3 = (byte)40;
      byteArray0[3] = byte3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, byteArray0[3], httpConnection_Request0.maxBodySizeBytes);
      assertEquals(4, byteArray0.length);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertArrayEquals(new byte[] {(byte)107, (byte)6, (byte)85, (byte)40}, byteArray0);
      assertNotNull(byteArrayInputStream0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals((-36), byteArrayInputStream0.available());
      
      HttpConnection.KeyVal httpConnection_KeyVal1 = httpConnection_KeyVal0.inputStream((InputStream) byteArrayInputStream0);
      assertEquals(4, byteArray0.length);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertArrayEquals(new byte[] {(byte)107, (byte)6, (byte)85, (byte)40}, byteArray0);
      assertNotNull(httpConnection_KeyVal1);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_KeyVal1, httpConnection_KeyVal0);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals((-36), byteArrayInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal1.value());
      assertEquals("UTF-8", httpConnection_KeyVal1.key());
      assertTrue(httpConnection_KeyVal1.hasInputStream());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      
      HttpConnection.Request httpConnection_Request4 = httpConnection_Request3.proxy(string2, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(0, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertNotNull(httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(0, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(0, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(httpConnection_Request3.postDataCharset);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertNotNull(mockFileOutputStream0);
      
      String string3 = "3P[`r/,{iw";
      HttpConnection.Response.writePost(httpConnection_Request4, mockFileOutputStream0, string3);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(0, httpConnection_Request0.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertTrue(httpConnection_Request1.followRedirects);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertEquals(0, httpConnection_Request1.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.parserDefined);
      assertFalse(httpConnection_Request4.ignoreHttpErrors);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertEquals(0, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertTrue(httpConnection_Request2.parserDefined);
      assertEquals(0, httpConnection_Request2.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(0, httpConnection_Request3.timeoutMilliseconds);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertFalse(httpConnection_Request3.ignoreHttpErrors);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertSame(httpConnection_KeyVal0, httpConnection_KeyVal1);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertEquals(0, httpConnection_Request0.timeout());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertEquals(0, httpConnection_Request1.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreHttpErrors());
      assertTrue(httpConnection_Request4.followRedirects());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertEquals(0, httpConnection_Request4.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(0, httpConnection_Request2.timeout());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertFalse(httpConnection_Request3.ignoreHttpErrors());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertEquals(0, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      
      try { 
        mockFileOutputStream0.write(httpConnection_Request4.timeoutMilliseconds);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 11000)
  public void test76()  throws Throwable  {
      HostnameVerifier hostnameVerifier0 = HttpConnection.Response.getInsecureVerifier();
      assertNotNull(hostnameVerifier0);
      
      HttpConnection.Response.initUnSecureTSL();
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      assertTrue(httpConnection_Request0.followRedirects);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertNotNull(httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      
      Parser parser0 = Parser.xmlParser();
      assertNotNull(parser0);
      assertFalse(parser0.isTrackErrors());
      
      HttpConnection.Request httpConnection_Request1 = httpConnection_Request0.parser(parser0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      
      HttpConnection.Request httpConnection_Request2 = httpConnection_Request1.proxy(httpConnection_Request0.proxy);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNotNull(httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      
      String string0 = "org.jsoup.helper.HttpConnection$Response$2";
      String string1 = httpConnection_Request2.cookie(string0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreHttpErrors);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertNull(string1);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertFalse(httpConnection_Request2.ignoreHttpErrors());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      assertNotNull(pipedOutputStream0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      assertNotNull(pipedInputStream0);
      assertEquals(0, pipedInputStream0.available());
      
      HttpConnection.KeyVal httpConnection_KeyVal0 = HttpConnection.KeyVal.create(httpConnection_Request1.postDataCharset, httpConnection_Request1.postDataCharset, (InputStream) pipedInputStream0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreHttpErrors);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertFalse(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertNotNull(httpConnection_KeyVal0);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertFalse(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertFalse(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(0, pipedInputStream0.available());
      assertEquals("UTF-8", httpConnection_KeyVal0.value());
      assertEquals("UTF-8", httpConnection_KeyVal0.key());
      assertTrue(httpConnection_KeyVal0.hasInputStream());
      
      HttpConnection.Request httpConnection_Request3 = (HttpConnection.Request)httpConnection_Request2.ignoreHttpErrors(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.parserDefined);
      assertNotNull(httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      
      URI uRI0 = MockURI.aHttpURI;
      assertNotNull(uRI0);
      assertNull(uRI0.getRawFragment());
      assertTrue(uRI0.isAbsolute());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http", uRI0.getScheme());
      assertFalse(uRI0.isOpaque());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals((-1), uRI0.getPort());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertNull(uRI0.getRawQuery());
      assertNull(uRI0.getRawUserInfo());
      assertEquals("foo.bar", uRI0.getHost());
      
      URI uRI1 = MockURI.resolve(uRI0, uRI0);
      assertNotNull(uRI1);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertNull(uRI0.getRawFragment());
      assertTrue(uRI0.isAbsolute());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http", uRI0.getScheme());
      assertFalse(uRI0.isOpaque());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals((-1), uRI0.getPort());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertNull(uRI0.getRawQuery());
      assertNull(uRI0.getRawUserInfo());
      assertEquals("foo.bar", uRI0.getHost());
      assertEquals((-1), uRI1.getPort());
      assertNull(uRI1.getRawQuery());
      assertEquals("http://foo.bar", uRI1.toString());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertFalse(uRI1.isOpaque());
      assertTrue(uRI1.isAbsolute());
      assertEquals("http", uRI1.getScheme());
      assertNull(uRI1.getRawFragment());
      assertEquals("", uRI1.getRawPath());
      assertEquals("foo.bar", uRI1.getHost());
      assertNull(uRI1.getRawUserInfo());
      
      URL uRL0 = MockURI.toURL(uRI1);
      assertNotNull(uRL0);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertNull(uRI0.getRawFragment());
      assertTrue(uRI0.isAbsolute());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http", uRI0.getScheme());
      assertFalse(uRI0.isOpaque());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals((-1), uRI0.getPort());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertNull(uRI0.getRawQuery());
      assertNull(uRI0.getRawUserInfo());
      assertEquals("foo.bar", uRI0.getHost());
      assertEquals((-1), uRI1.getPort());
      assertNull(uRI1.getRawQuery());
      assertEquals("http://foo.bar", uRI1.toString());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertFalse(uRI1.isOpaque());
      assertTrue(uRI1.isAbsolute());
      assertEquals("http", uRI1.getScheme());
      assertNull(uRI1.getRawFragment());
      assertEquals("", uRI1.getRawPath());
      assertEquals("foo.bar", uRI1.getHost());
      assertNull(uRI1.getRawUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("", uRL0.getFile());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      assertEquals("foo.bar", uRL0.getHost());
      assertEquals("", uRL0.getPath());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://foo.bar", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      
      HttpConnection.Request httpConnection_Request4 = (HttpConnection.Request)httpConnection_Request3.url(uRL0);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.parserDefined);
      assertFalse(httpConnection_Request4.ignoreContentType);
      assertTrue(httpConnection_Request4.parserDefined);
      assertEquals(3000, httpConnection_Request4.timeoutMilliseconds);
      assertEquals(1048576, httpConnection_Request4.maxBodySizeBytes);
      assertTrue(httpConnection_Request4.validateTSLCertificates);
      assertTrue(httpConnection_Request4.followRedirects);
      assertTrue(httpConnection_Request4.ignoreHttpErrors);
      assertNotNull(httpConnection_Request4);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertSame(uRI0, uRI1);
      assertSame(uRI1, uRI0);
      assertSame(httpConnection_Request4, httpConnection_Request3);
      assertSame(httpConnection_Request4, httpConnection_Request0);
      assertSame(httpConnection_Request4, httpConnection_Request1);
      assertSame(httpConnection_Request4, httpConnection_Request2);
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      assertNull(uRI0.getRawFragment());
      assertTrue(uRI0.isAbsolute());
      assertEquals("", uRI0.getRawPath());
      assertEquals("http", uRI0.getScheme());
      assertFalse(uRI0.isOpaque());
      assertEquals("http://foo.bar", uRI0.toString());
      assertEquals((-1), uRI0.getPort());
      assertEquals("foo.bar", uRI0.getRawAuthority());
      assertNull(uRI0.getRawQuery());
      assertNull(uRI0.getRawUserInfo());
      assertEquals("foo.bar", uRI0.getHost());
      assertEquals((-1), uRI1.getPort());
      assertNull(uRI1.getRawQuery());
      assertEquals("http://foo.bar", uRI1.toString());
      assertEquals("foo.bar", uRI1.getRawAuthority());
      assertFalse(uRI1.isOpaque());
      assertTrue(uRI1.isAbsolute());
      assertEquals("http", uRI1.getScheme());
      assertNull(uRI1.getRawFragment());
      assertEquals("", uRI1.getRawPath());
      assertEquals("foo.bar", uRI1.getHost());
      assertNull(uRI1.getRawUserInfo());
      assertNull(uRL0.getQuery());
      assertEquals("", uRL0.getFile());
      assertEquals("http://foo.bar", uRL0.toExternalForm());
      assertEquals("foo.bar", uRL0.getHost());
      assertEquals("", uRL0.getPath());
      assertEquals((-1), uRL0.getDefaultPort());
      assertNull(uRL0.getRef());
      assertEquals("http://foo.bar", uRL0.toString());
      assertNull(uRL0.getUserInfo());
      assertEquals("foo.bar", uRL0.getAuthority());
      assertEquals("http", uRL0.getProtocol());
      assertEquals((-1), uRL0.getPort());
      assertTrue(httpConnection_Request4.validateTLSCertificates());
      assertTrue(httpConnection_Request4.followRedirects());
      assertEquals(1048576, httpConnection_Request4.maxBodySize());
      assertEquals("UTF-8", httpConnection_Request4.postDataCharset());
      assertFalse(httpConnection_Request4.ignoreContentType());
      assertEquals(3000, httpConnection_Request4.timeout());
      assertTrue(httpConnection_Request4.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request4.method());
      
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://foo.bar?UTF-8=UTF-8");
      String string2 = "bx%P+!mt&S";
      boolean boolean0 = NetworkHandling.createRemoteTextFile(evoSuiteURL0, string2);
      assertFalse(string2.equals((Object)string0));
      assertTrue(boolean0);
      assertNotSame(string2, string0);
      
      String string3 = null;
      HttpConnection.Response.writePost(httpConnection_Request3, pipedOutputStream0, string3);
      assertTrue(httpConnection_Request0.followRedirects);
      assertTrue(httpConnection_Request0.parserDefined);
      assertFalse(httpConnection_Request0.ignoreContentType);
      assertTrue(httpConnection_Request0.ignoreHttpErrors);
      assertEquals(1048576, httpConnection_Request0.maxBodySizeBytes);
      assertTrue(httpConnection_Request0.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request0.timeoutMilliseconds);
      assertEquals(3000, httpConnection_Request1.timeoutMilliseconds);
      assertFalse(httpConnection_Request1.ignoreContentType);
      assertEquals(1048576, httpConnection_Request1.maxBodySizeBytes);
      assertTrue(httpConnection_Request1.parserDefined);
      assertTrue(httpConnection_Request1.ignoreHttpErrors);
      assertTrue(httpConnection_Request1.validateTSLCertificates);
      assertTrue(httpConnection_Request1.followRedirects);
      assertEquals(1048576, httpConnection_Request2.maxBodySizeBytes);
      assertTrue(httpConnection_Request2.validateTSLCertificates);
      assertTrue(httpConnection_Request2.ignoreHttpErrors);
      assertEquals(3000, httpConnection_Request2.timeoutMilliseconds);
      assertTrue(httpConnection_Request2.parserDefined);
      assertTrue(httpConnection_Request2.followRedirects);
      assertFalse(httpConnection_Request2.ignoreContentType);
      assertTrue(httpConnection_Request3.followRedirects);
      assertTrue(httpConnection_Request3.ignoreHttpErrors);
      assertTrue(httpConnection_Request3.validateTSLCertificates);
      assertEquals(3000, httpConnection_Request3.timeoutMilliseconds);
      assertFalse(httpConnection_Request3.ignoreContentType);
      assertEquals(1048576, httpConnection_Request3.maxBodySizeBytes);
      assertTrue(httpConnection_Request3.parserDefined);
      assertSame(httpConnection_Request0, httpConnection_Request3);
      assertSame(httpConnection_Request0, httpConnection_Request2);
      assertSame(httpConnection_Request0, httpConnection_Request1);
      assertSame(httpConnection_Request0, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request3);
      assertSame(httpConnection_Request1, httpConnection_Request4);
      assertSame(httpConnection_Request1, httpConnection_Request2);
      assertSame(httpConnection_Request1, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request1);
      assertSame(httpConnection_Request2, httpConnection_Request0);
      assertSame(httpConnection_Request2, httpConnection_Request4);
      assertSame(httpConnection_Request2, httpConnection_Request3);
      assertSame(httpConnection_Request3, httpConnection_Request4);
      assertSame(httpConnection_Request3, httpConnection_Request1);
      assertSame(httpConnection_Request3, httpConnection_Request2);
      assertSame(httpConnection_Request3, httpConnection_Request0);
      assertTrue(httpConnection_Request0.ignoreHttpErrors());
      assertEquals(1048576, httpConnection_Request0.maxBodySize());
      assertTrue(httpConnection_Request0.validateTLSCertificates());
      assertTrue(httpConnection_Request0.followRedirects());
      assertFalse(httpConnection_Request0.ignoreContentType());
      assertEquals("UTF-8", httpConnection_Request0.postDataCharset());
      assertEquals(Connection.Method.GET, httpConnection_Request0.method());
      assertEquals(3000, httpConnection_Request0.timeout());
      assertFalse(parser0.isTrackErrors());
      assertTrue(httpConnection_Request1.ignoreHttpErrors());
      assertEquals(3000, httpConnection_Request1.timeout());
      assertEquals("UTF-8", httpConnection_Request1.postDataCharset());
      assertFalse(httpConnection_Request1.ignoreContentType());
      assertEquals(1048576, httpConnection_Request1.maxBodySize());
      assertTrue(httpConnection_Request1.validateTLSCertificates());
      assertTrue(httpConnection_Request1.followRedirects());
      assertEquals(Connection.Method.GET, httpConnection_Request1.method());
      assertEquals(3000, httpConnection_Request2.timeout());
      assertEquals(Connection.Method.GET, httpConnection_Request2.method());
      assertEquals("UTF-8", httpConnection_Request2.postDataCharset());
      assertTrue(httpConnection_Request2.ignoreHttpErrors());
      assertTrue(httpConnection_Request2.followRedirects());
      assertFalse(httpConnection_Request2.ignoreContentType());
      assertTrue(httpConnection_Request2.validateTLSCertificates());
      assertEquals(1048576, httpConnection_Request2.maxBodySize());
      assertEquals(1048576, httpConnection_Request3.maxBodySize());
      assertTrue(httpConnection_Request3.validateTLSCertificates());
      assertTrue(httpConnection_Request3.followRedirects());
      assertTrue(httpConnection_Request3.ignoreHttpErrors());
      assertEquals(Connection.Method.GET, httpConnection_Request3.method());
      assertEquals(3000, httpConnection_Request3.timeout());
      assertEquals("UTF-8", httpConnection_Request3.postDataCharset());
      assertFalse(httpConnection_Request3.ignoreContentType());
      
      HttpConnection.Response httpConnection_Response0 = new HttpConnection.Response();
      assertEquals(0, httpConnection_Response0.statusCode);
      assertFalse(httpConnection_Response0.executed);
      assertEquals(0, httpConnection_Response0.numRedirects);
      assertEquals(20, HttpConnection.Response.MAX_REDIRECTS);
      assertNotNull(httpConnection_Response0);
      assertNull(httpConnection_Response0.method());
      assertNull(httpConnection_Response0.statusMessage());
      assertNull(httpConnection_Response0.charset());
      assertEquals(0, httpConnection_Response0.statusCode());
      assertNull(httpConnection_Response0.contentType());
      
      try { 
        HttpConnection.Response.execute((Connection.Request) httpConnection_Request4, httpConnection_Response0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Could not find: foo.bar
         //
         verifyException("org.evosuite.runtime.mock.java.net.EvoHttpURLConnection", e);
      }
  }
}
